{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u7b14\u8bb0\u672c \u00b6 \u8fd9\u4e2a\u7b14\u8bb0\u672c\u662f\u7531MkDocs\u5de5\u5177\u751f\u6210\u7684\u3002 \u6211\u5b8c\u5168\u4e0d\u61c2\u524d\u7aef\u77e5\u8bc6\uff0c\u53ea\u662f\u627e\u4e00\u4e2a\u5730\u65b9\u653e\u6211\u7684\u7b14\u8bb0\u3002 \u6211\u7528\u4e86\u597d\u591a\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff1aJekyll, Hexo \u548c Hugo\uff0c \u5b83\u4eec\u7684\u4e3b\u9898\u90fd\u4e0d\u5408\u6211\u610f\uff0c\u800c\u4e14\u751f\u6210\u7684\u9879\u76ee\u7ed3\u6784\u590d\u6742\uff08\u8d85\u8fc7\u4e24\u4e2a\u6587\u4ef6\u5939\uff09\uff0c\u8ba9\u6211\u5fc3\u70e6\u610f\u4e71\u3002 \u770b\u6765\u770b\u53bb\uff0c\u53d1\u73b0\u8fd8\u662f McDocs \u6700\u5408\u6211\u610f: \u5982\u679c\u6211\u8981\u5199\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u6211\u5c31\u5199\u6210\u8fd9\u4e2a\u6837\u5b50\u3002 \u8fd9\u672c\u7b14\u8bb0\u6b63\u5904\u4e8e\u524d\u671f\u9ad8\u901f\u65bd\u5de5\u4e2d\uff0c\u6211\u51c6\u5907\u628a\u6211\u7814\u7a76\u751f\u9636\u6bb5\u5404\u79cd\u5f62\u5f0f\u7684\u7b14\u8bb0\u6574\u7406\u90fd\u653e\u5230\u8fd9\u91cc\u6765\u3002 \u6211\u5c3d\u91cf\u505a\u5230\u4e0d\u4eba\u4e91\u4ea6\u4e91\uff0c\u5176\u4e2d\u6b63\u5728\u65bd\u5de5\u4e2d\u7684 \u673a\u5668\u5b66\u4e60 \u7248\u5757\u548c\u51c6\u5907\u8981\u4e0a\u7684 \u5f3a\u5316\u5b66\u4e60 \u7248\u5757 \u5305\u542b\u4e86\u6211\u4e3b\u8981\u7684\u601d\u8003\uff0c\u6709\u4e00\u4e9b\u6bd4\u8f83\u72ec\u7279\u7684\u7406\u89e3\uff0c\u8fd9\u4e9b\u7406\u89e3\u6709\u4e9b\u751a\u81f3\u662f\u6846\u67b6\u6027\u7684\u3002 \u6211\u628a\u5f3a\u5316\u5b66\u4e60\u7684\u57fa\u672c\u7b14\u8bb0\u6574\u7406\u6210pdf\u7684\u94fe\u63a5\u653e\u5728 \u5f3a\u5316\u5b66\u4e60/\u57fa\u7840/RLNotes \u4e2d\u3002 \u91cd\u65b0\u542f\u7528\u4e00\u4e0b\u8fd9\u4e2aNote\u5427\u3002","title":"\u4ecb\u7ecd"},{"location":"#_1","text":"\u8fd9\u4e2a\u7b14\u8bb0\u672c\u662f\u7531MkDocs\u5de5\u5177\u751f\u6210\u7684\u3002 \u6211\u5b8c\u5168\u4e0d\u61c2\u524d\u7aef\u77e5\u8bc6\uff0c\u53ea\u662f\u627e\u4e00\u4e2a\u5730\u65b9\u653e\u6211\u7684\u7b14\u8bb0\u3002 \u6211\u7528\u4e86\u597d\u591a\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff1aJekyll, Hexo \u548c Hugo\uff0c \u5b83\u4eec\u7684\u4e3b\u9898\u90fd\u4e0d\u5408\u6211\u610f\uff0c\u800c\u4e14\u751f\u6210\u7684\u9879\u76ee\u7ed3\u6784\u590d\u6742\uff08\u8d85\u8fc7\u4e24\u4e2a\u6587\u4ef6\u5939\uff09\uff0c\u8ba9\u6211\u5fc3\u70e6\u610f\u4e71\u3002 \u770b\u6765\u770b\u53bb\uff0c\u53d1\u73b0\u8fd8\u662f McDocs \u6700\u5408\u6211\u610f: \u5982\u679c\u6211\u8981\u5199\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u6211\u5c31\u5199\u6210\u8fd9\u4e2a\u6837\u5b50\u3002 \u8fd9\u672c\u7b14\u8bb0\u6b63\u5904\u4e8e\u524d\u671f\u9ad8\u901f\u65bd\u5de5\u4e2d\uff0c\u6211\u51c6\u5907\u628a\u6211\u7814\u7a76\u751f\u9636\u6bb5\u5404\u79cd\u5f62\u5f0f\u7684\u7b14\u8bb0\u6574\u7406\u90fd\u653e\u5230\u8fd9\u91cc\u6765\u3002 \u6211\u5c3d\u91cf\u505a\u5230\u4e0d\u4eba\u4e91\u4ea6\u4e91\uff0c\u5176\u4e2d\u6b63\u5728\u65bd\u5de5\u4e2d\u7684 \u673a\u5668\u5b66\u4e60 \u7248\u5757\u548c\u51c6\u5907\u8981\u4e0a\u7684 \u5f3a\u5316\u5b66\u4e60 \u7248\u5757 \u5305\u542b\u4e86\u6211\u4e3b\u8981\u7684\u601d\u8003\uff0c\u6709\u4e00\u4e9b\u6bd4\u8f83\u72ec\u7279\u7684\u7406\u89e3\uff0c\u8fd9\u4e9b\u7406\u89e3\u6709\u4e9b\u751a\u81f3\u662f\u6846\u67b6\u6027\u7684\u3002 \u6211\u628a\u5f3a\u5316\u5b66\u4e60\u7684\u57fa\u672c\u7b14\u8bb0\u6574\u7406\u6210pdf\u7684\u94fe\u63a5\u653e\u5728 \u5f3a\u5316\u5b66\u4e60/\u57fa\u7840/RLNotes \u4e2d\u3002 \u91cd\u65b0\u542f\u7528\u4e00\u4e0b\u8fd9\u4e2aNote\u5427\u3002","title":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u7b14\u8bb0\u672c"},{"location":"6.S081/Lab00-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/","text":"\u73af\u5883\u51c6\u5907 \u00b6 \u524d\u8a00 \u00b6 \u7ffb\u8bd1\u81ea 6.S081(Learning by doing) \u8fd9\u662f\u4e00\u95e8MIT\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u8bfe\uff0c\u5305\u542b\uff1a\u8bbe\u8ba1\u548c\u5b9e\u73b0\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4ee5\u53ca\u7cfb\u7edf\u7f16\u7a0b\u7684\u57fa\u7840\u3002\u4e3b\u8981\u5305\u542b\u7684\u5185 \u5bb9\u6709\uff1a\u865a\u62df\u5185\u5b58\uff1b\u6587\u4ef6\u7cfb\u7edf\uff1b\u7ebf\u7a0b\uff1b\u8fdb\u7a0b\u5207\u6362\uff1b\u5185\u6838\uff1b\u7ec8\u7aef\uff1b\u7cfb\u7edf\u8c03\u7528\uff1b\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff1b\u8f6f\u4ef6\u548c\u786c\u4ef6\u4ea4\u4e92\u3002 \u901a\u8fc7\u4e00\u4e2a\u5c0f\u578b\u7684\u57fa\u4e8eRISC-V\u6307\u4ee4\u96c6\u7684\u64cd\u4f5c\u7cfb\u7edf xv6 \u6765\u89e3\u91ca\u8fd9\u4e9b\u5185\u5bb9\u3002\u540c\u65f6\uff0c\u5c06\u901a\u8fc7\u4e00\u7cfb\u5217\u72ec\u7acb\u7684\u5b9e\u9a8c \u6765\u6269\u5c55 xv6\uff0c\u4f8b\u5982\u652f\u6301\u66f4\u590d\u6742\u7684\u865a\u62df\u5185\u5b58\u6280\u672f\u548c\u7f51\u7edc\u6280\u672f\u3002 \u6211\u4eec\u4f1a\u597d\u5947\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60 xv6 \u5462\uff1f\u8981\u5b66\u4e60\u4e00\u4e2a\u91cd\u5199\u7684 Unix v6 \u800c\u4e0d\u662f\u6700\u65b0\u7684\u6700\u68d2\u7684Linux\uff0c Windows\uff0c\u6216\u8005BSD Unix\u5462\uff1f\u56e0\u4e3a xv6 \u8db3\u591f\u5927\uff0c\u8db3\u4ee5\u89e3\u91ca\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u57fa\u672c\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u7406\u5ff5\uff0c \u540c\u65f6\u53c8\u8db3\u591f\u7684\u5c0f\uff08\u6bd4\u73b0\u4ee3\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5c0f\u5f97\u591a\uff09\u6240\u4ee5\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u3002xv6 \u6709\u7740\u4e0e\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u975e\u5e38 \u7c7b\u4f3c\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u4eec\u5b66\u4e60 xv6\uff0c\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u5176\u4ed6\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff0c\u4f8b\u5982\uff1aLinux\u3002 \u6211\u4e3a\u4ec0\u4e48\u8981\u521b\u5efa\u8fd9\u4e2a\u7b14\u8bb0\u7cfb\u5217\u5462\uff1f\u53bb\u5e74\u6211\u4e5f\u505a\u8fc7\u4e00\u4e9b\u8fd9\u4e2a\u8bfe\u7684\u5b9e\u9a8c\uff0c\u6700\u540e\u4e5f\u534a\u9014\u800c\u5e9f\u4e86\u3002 \u8fd9\u6bb5\u65f6\u95f4\u6211\u56de\u8fc7\u5934\u6765\u770b\uff0c\u4e4b\u524d\u505a\u5b9e\u9a8c\u76f4\u63a5\u770b\u522b\u4eba\u7684\u7b14\u8bb0\uff0c\u5bfc\u81f4\u6211\u624e\u8fdb\u4e86\u592a\u591a\u7684\u7ec6\u8282\u91cc\uff0c\u8fd9\u4e9b\u7ec6\u8282\u5b8c\u5168 \u6ca1\u6709\u5fc5\u8981\u4e86\u89e3\uff0c\u800c\u4e14\u8fd9\u4e9b\u7ec6\u8282\u975e\u5e38\u5bb9\u6613\u4f7f\u5f97\u521d\u5b66\u8005\u671b\u800c\u751f\u754f\u3002\u73b0\u5728\u8fd9\u95e8\u8bfe\u4ece 6.828 \u6539\u540d\u53eb 6.S081 \u4e86\uff0c\u4e5f\u5c5e\u4e8e\u8fdb\u5165\u4e86\u65b0\u7684\u9636\u6bb5\uff0c\u6211\u4e5f\u5e94\u8be5\u914d\u5408\u7740\u505a\u4e00\u4e2a\u65b0\u7684\u7b14\u8bb0\u3002 \u6211\u5e0c\u671b\u8fd9\u4e2a\u7b14\u8bb0\uff1a \u5c3d\u91cf\u9075\u5faa\u8bb2\u4e49\u7684\u8981\u6c42\uff0c\u800c\u4e14\u5305\u542b\u7684\u5185\u5bb9\u8d8a\u7b80\u5355\u8d8a\u597d\uff0c\u4f7f\u5f97\u77e5\u8bc6\u70b9\u662f\u80fd\u591f\u88ab take away\u3002 \u6240\u9700\u8981\u4f7f\u7528\u5230\u7684\u5de5\u5177 \u00b6 \u53c2\u8003\uff1a Tools Used in 6.S081 \u6211\u4eec\u9700\u8981\u4e00\u7cfb\u5217 RISC-V \u7248\u672c\u7684\u5de5\u5177\uff1aQEMU 5.1\uff0c GDB 8.3\uff0c GCC \u548c Binutils\u3002 \u6211\u662f\u4e00\u70b9\u90fd\u4e0d\u614c\uff0c\u540e\u9762\u7684\u80af\u5b9a\u6709\u8bb2\u8be5\u600e\u4e48\u5b89\u88c5\u3002\u6211\u8fd9\u91cc\u4f7f\u7528 Ubuntu \u7cfb\u7edf\uff0c\u6240\u4ee5\u6211\u5c31\u6458\u8bb0\u4e00\u4e0b\u6211\u7684 \u5b89\u88c5\u8fc7\u7a0b\u3002\u53ef\u4ee5\u8bf4\u65b0\u7684\u8bfe\u7a0b\u6240\u9700\u8981\u7684\u5de5\u5177\u5b89\u88c5\u8d77\u6765\u6bd4\u4e4b\u524d\u8981\u65b9\u4fbf\u591a\u4e86\u3002 \u9996\u5148\u6211\u4eec\u8981\u786e\u5b9a debian \u7248\u672c\u662f bullseye \u6216\u8005 sid \uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u68c0\u67e5\uff1a cat /etc/debian_version \u6ce8\u610f \uff1a Ubuntu 18.04 \u5bf9\u5e94\u7684debian\u7248\u672c\u662f buster/sid \u592a\u8001\u4e86\uff0c \u800c Ubuntu 20.04 \u5bf9\u5e94 \u7684debian\u7248\u672c\u662f bullseye/sid \u7b26\u5408\u8981\u6c42\u3002 \u63a5\u7740\u6211\u4eec\u6267\u884c\uff1a sudo apt-get install git build-essential gdb-multiarch qemu-system-misc gcc-riscv64-linux-gnu binutils-riscv64-linux-gnu \u6839\u636e\u8bb2\u4e49\u8bf4\u7684\uff0c\u65b0\u7248\u7684 qemu-system-misc \u4f1a\u548c\u5b9e\u9a8c\u7684\u5185\u6838\u6709\u51b2\u7a81\uff0c\u6240\u4ee5\u9700\u8981\u56de\u9000\u7248\u672c\u3002\u6211\u8fd9\u91cc \u6d4b\u8bd5\u4e86\u4e00\u4e0b\u597d\u50cf\u6ca1\u6709\u95ee\u9898\u3002\u8bb2\u4e49\u5efa\u8bae\u5b89\u88c5\u65e7\u7684\u7248\u672c\uff1a sudo apt-get remove qemu-system-misc sudo apt-get install qemu-system-misc = 1 :4.2-3ubuntu6 \u6ce8\u610f \uff1a \u6211\u5728 Ubuntu 18.04 \u5c1d\u8bd5\u8fd9\u4e2a\u547d\u4ee4\u597d\u50cf\u6ca1\u627e\u5230\u8fd9\u4e2a\u5305\uff0c\u800c Ubuntu 20.04 \u597d\u50cf\u4e0d\u9700 \u8981\u56de\u9000\u7248\u672c\uff0c\u53ef\u4ee5\u76f4\u63a5\u542f\u52a8 xv6 \u3002 \u6211\u4eec\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u6d4b\u8bd5\u5b89\u88c5\u60c5\u51b5\uff1a $ riscv64-linux-gnu-gcc --version riscv64-linux-gnu-gcc ( Ubuntu 9 .3.0-17ubuntu1~20.04 ) 9 .3.0 Copyright ( C ) 2019 Free Software Foundation, Inc. This is free software ; see the source for copying conditions. There is NO warranty ; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. $ qemu-system-riscv64 --version QEMU emulator version 4 .2.1 ( Debian 1 :4.2-3ubuntu6.7 ) Copyright ( c ) 2003 -2019 Fabrice Bellard and the QEMU Project developers \u6211\u7684\u7406\u89e3\u662f\uff0c\u8fd9\u4e9b\u547d\u4ee4\u6709\u5c31\u884c\u4e86\uff0c\u4e0d\u4e00\u5b9a\u9700\u8981\u5bf9\u5e94\u4e0a\u7248\u672c\u53f7\u3002 \u540c\u6837\u6211\u4eec\u53ef\u4ee5\u7f16\u8bd1\u8fd0\u884c xv6 \u6765\u6d4b\u8bd5\u73af\u5883\u662f\u5426\u642d\u5efa\u6210\u529f\uff1a $ git clone git://github.com/mit-pdos/xv6-riscv.git $ cd xv6-riscv $ make qemu qemu-system-riscv64 -machine virt -bios none -kernel kernel/kernel -m 128M -smp 3 -nographic -drive file = fs.img,if = none,format = raw,id = x0 -device virtio-blk-device, drive = x0,bus = virtio-mmio-bus.0 xv6 kernel is booting hart 2 starting hart 1 starting init: starting sh $ \u6309 ctrl+a x \u6765\u9000\u51fa qemu \u3002\u6ce8\u610f\u662f\uff1a\u6309\u4e0b ctrl+a \u540e\u677e\u5f00\uff0c\u518d\u6309\u4e0b x \u3002 \u73af\u5883\u914d\u7f6e\u7684\u66f4\u65b0 \u00b6 \u8fd9\u91cc\u6211\u5728\u5c1d\u8bd5\u6784\u5efa\u4e00\u4e2aDocker\u955c\u50cf\u3002\u53ef\u4ee5\u4f7f\u7528 docker pull penglingwei/xv6-labs-2020 \u6765 \u76f4\u63a5\u62c9\u53bb\u955c\u50cf\uff0c\u4e5f\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u521b\u5efa\u81ea\u5df1\u7684\u955c\u50cf\u3002 \u9996\u5148\u662f\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1a \u521b\u5efa Dockerfile \uff0c\u5f00\u5934\u662f\u7528\u6765\u89e3\u51b3 tzdata \u5728Docker\u955c\u50cf\u521b\u5efa\u65f6\u4f1a\u5361\u6b7b\u7684\uff0c\u540e\u9762\u662f\u53c2\u8003\u5b98\u65b9\u5206\u6863 \u5b89\u88c5\u6240\u9700\u8981\u7684\u4f9d\u8d56\u3002 Dockerfile FROM ubuntu:latest RUN export DEBIAN_FRONTEND = noninteractive \\ && apt-get update \\ && apt-get install -y tzdata \\ && ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\ && dpkg-reconfigure --frontend noninteractive tzdata \\ && apt-get install -y git \\ build-essential \\ gdb-multiarch \\ qemu-system-misc = 1 :4.2-3ubuntu6 \\ gcc-riscv64-linux-gnu \\ binutils-riscv64-linux-gnu \\ \u521b\u5efa .dockerignore \u6587\u4ef6\uff0c\u7528\u6765\u5ffd\u7565\u5176\u4ed6\u6587\u4ef6\uff0c\u6211\u8fd9\u91cc\u4f1a\u5ffd\u7565 .vscode \u548c xv6-labs-2020 \u4e24\u4e2a \u6587\u4ef6\u5939\u3002\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0cDocker\u4f1a\u628a Dockerfile \u6240\u5728\u6587\u4ef6\u5939\u4e2d\u7684\u5176\u4ed6\u6240\u6709\u6587\u4ef6\u90fd\u63d0\u524d\u6253\u5305\u5230\u955c\u50cf\u91cc\u3002 \u521b\u5efa\u955c\u50cf\uff1a docker build -t xv6-labs-2020 . \uff0c\u8fd9\u4e2a\u955c\u50cf\u7684\u540d\u5b57\u662f xv6-labs-2020 \u3002 \u5173\u4e8e\u4f7f\u7528Docker\u6765\u8fdb\u884c\u8c03\u8bd5 \u00b6 \u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u5728 Makefile \u4e2d\u6dfb\u52a0\u4e86\u76f8\u5173\u6307\u4ee4\uff08\u8fd9\u91cc\u7684\u7f29\u8fdb\u6709\u4e9b\u95ee\u9898\uff0c\u6211\u8c03\u6574\u4e86\u534a\u5929\u4e5f\u6ca1\u6210\u3002\u89e3\u51b3\u529e\u6cd5\u662f\u5728\u590d\u5236\u5230Makefile\u4e2d\u8981\u6ce8\u610f\u8c03\u6574\u4e00\u4e0b\u7f29\u8fdb\u3002\uff09\uff1a ## ==================Docker Commands Start====================================== docker: -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash docker-grade: -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make grade\" docker-qemu: -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make qemu\" docker-qemu-gdb: -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make qemu-gdb\" docker-gdb: .gdbinit docker exec -it xv6-labs-2020 /bin/bash -c \"gdb-multiarch --command .gdbinit\" docker-rm: docker rm -f xv6-labs-2020 ## ==================Docker Commands End======================================== make docker : \u521b\u5efa\u5e76\u8fdb\u5165\u5bb9\u5668\uff1b make docker-grade : \u521b\u5efa\u5bb9\u5668\uff0c\u5e76\u4e14\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c make grade ; make docker-qemu : \u521b\u5efa\u5bb9\u5668 xv6-labs-2020 \uff0c\u5e76\u4e14\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c make qemu ; make docker-qemu-gdb : \u521b\u5efa\u5bb9\u5668 xv6-labs-2020 \uff0c\u5e76\u4e14\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c make qemu-gdb ; make docker-gdb : \u5728\u5bb9\u5668 xv6-labs-2020 \u4e2d\u8fdb\u884c gdb \u8c03\u8bd5\uff0c\u9700\u8981\u8fd0\u884c\u8fc7 make docker-qemu-gdb ; make docker-rm : \u5220\u9664\u5bb9\u5668 xv6-labs-2020 \u3002 \u5176\u4e2d\u5728\u547d\u4ee4\u524d\u9762\u52a0 - \u53f7\u8868\u793a\u5ffd\u7565\u5bf9\u5e94\u6307\u4ee4\u7684\u62a5\u9519\u4fe1\u53f7\u3002 \u8c03\u8bd5\u7528\u6237\u7a7a\u95f4\u7684\u7a0b\u5e8f \u00b6 \u8fd9\u91cc\u6211\u60f3\u4e86\u89e3\u4e00\u4e0b\u5982\u679c\u5bf9\u7528\u6237\u7a0b\u5e8f\u8fdb\u884c\u8c03\u8bd5\uff0c\u6298\u817e\u4e86\u5927\u534a\u5929\u3002\u5982\u679c\u914d\u7f6e \u7b2c\u4e00\u6b65\uff1a\u8fd0\u884c make docker-qemu-gdb \u548c make docker-gdb ; \u7b2c\u4e8c\u6b65\uff1a\u5728gdb\u7684\u5f00\u59cb\u5c31\u8fd0\u884c file user/_<program name> \uff1b \u6253\u65ad\u70b9\u8c03\u8bd5\u3002 \u5982\u679c\u6ca1\u6709\u5728 gdb \u7684\u5f00\u5934\u5c31\u8f7d\u5165 file user/_<program name> \u4f1a\u62a5\u9519\u3002","title":"Lab01 \u73af\u5883\u51c6\u5907"},{"location":"6.S081/Lab00-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#_1","text":"","title":"\u73af\u5883\u51c6\u5907"},{"location":"6.S081/Lab00-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#_2","text":"\u7ffb\u8bd1\u81ea 6.S081(Learning by doing) \u8fd9\u662f\u4e00\u95e8MIT\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u8bfe\uff0c\u5305\u542b\uff1a\u8bbe\u8ba1\u548c\u5b9e\u73b0\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4ee5\u53ca\u7cfb\u7edf\u7f16\u7a0b\u7684\u57fa\u7840\u3002\u4e3b\u8981\u5305\u542b\u7684\u5185 \u5bb9\u6709\uff1a\u865a\u62df\u5185\u5b58\uff1b\u6587\u4ef6\u7cfb\u7edf\uff1b\u7ebf\u7a0b\uff1b\u8fdb\u7a0b\u5207\u6362\uff1b\u5185\u6838\uff1b\u7ec8\u7aef\uff1b\u7cfb\u7edf\u8c03\u7528\uff1b\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff1b\u8f6f\u4ef6\u548c\u786c\u4ef6\u4ea4\u4e92\u3002 \u901a\u8fc7\u4e00\u4e2a\u5c0f\u578b\u7684\u57fa\u4e8eRISC-V\u6307\u4ee4\u96c6\u7684\u64cd\u4f5c\u7cfb\u7edf xv6 \u6765\u89e3\u91ca\u8fd9\u4e9b\u5185\u5bb9\u3002\u540c\u65f6\uff0c\u5c06\u901a\u8fc7\u4e00\u7cfb\u5217\u72ec\u7acb\u7684\u5b9e\u9a8c \u6765\u6269\u5c55 xv6\uff0c\u4f8b\u5982\u652f\u6301\u66f4\u590d\u6742\u7684\u865a\u62df\u5185\u5b58\u6280\u672f\u548c\u7f51\u7edc\u6280\u672f\u3002 \u6211\u4eec\u4f1a\u597d\u5947\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60 xv6 \u5462\uff1f\u8981\u5b66\u4e60\u4e00\u4e2a\u91cd\u5199\u7684 Unix v6 \u800c\u4e0d\u662f\u6700\u65b0\u7684\u6700\u68d2\u7684Linux\uff0c Windows\uff0c\u6216\u8005BSD Unix\u5462\uff1f\u56e0\u4e3a xv6 \u8db3\u591f\u5927\uff0c\u8db3\u4ee5\u89e3\u91ca\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u57fa\u672c\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u7406\u5ff5\uff0c \u540c\u65f6\u53c8\u8db3\u591f\u7684\u5c0f\uff08\u6bd4\u73b0\u4ee3\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5c0f\u5f97\u591a\uff09\u6240\u4ee5\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u3002xv6 \u6709\u7740\u4e0e\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u975e\u5e38 \u7c7b\u4f3c\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u4eec\u5b66\u4e60 xv6\uff0c\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u5176\u4ed6\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff0c\u4f8b\u5982\uff1aLinux\u3002 \u6211\u4e3a\u4ec0\u4e48\u8981\u521b\u5efa\u8fd9\u4e2a\u7b14\u8bb0\u7cfb\u5217\u5462\uff1f\u53bb\u5e74\u6211\u4e5f\u505a\u8fc7\u4e00\u4e9b\u8fd9\u4e2a\u8bfe\u7684\u5b9e\u9a8c\uff0c\u6700\u540e\u4e5f\u534a\u9014\u800c\u5e9f\u4e86\u3002 \u8fd9\u6bb5\u65f6\u95f4\u6211\u56de\u8fc7\u5934\u6765\u770b\uff0c\u4e4b\u524d\u505a\u5b9e\u9a8c\u76f4\u63a5\u770b\u522b\u4eba\u7684\u7b14\u8bb0\uff0c\u5bfc\u81f4\u6211\u624e\u8fdb\u4e86\u592a\u591a\u7684\u7ec6\u8282\u91cc\uff0c\u8fd9\u4e9b\u7ec6\u8282\u5b8c\u5168 \u6ca1\u6709\u5fc5\u8981\u4e86\u89e3\uff0c\u800c\u4e14\u8fd9\u4e9b\u7ec6\u8282\u975e\u5e38\u5bb9\u6613\u4f7f\u5f97\u521d\u5b66\u8005\u671b\u800c\u751f\u754f\u3002\u73b0\u5728\u8fd9\u95e8\u8bfe\u4ece 6.828 \u6539\u540d\u53eb 6.S081 \u4e86\uff0c\u4e5f\u5c5e\u4e8e\u8fdb\u5165\u4e86\u65b0\u7684\u9636\u6bb5\uff0c\u6211\u4e5f\u5e94\u8be5\u914d\u5408\u7740\u505a\u4e00\u4e2a\u65b0\u7684\u7b14\u8bb0\u3002 \u6211\u5e0c\u671b\u8fd9\u4e2a\u7b14\u8bb0\uff1a \u5c3d\u91cf\u9075\u5faa\u8bb2\u4e49\u7684\u8981\u6c42\uff0c\u800c\u4e14\u5305\u542b\u7684\u5185\u5bb9\u8d8a\u7b80\u5355\u8d8a\u597d\uff0c\u4f7f\u5f97\u77e5\u8bc6\u70b9\u662f\u80fd\u591f\u88ab take away\u3002","title":"\u524d\u8a00"},{"location":"6.S081/Lab00-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#_3","text":"\u53c2\u8003\uff1a Tools Used in 6.S081 \u6211\u4eec\u9700\u8981\u4e00\u7cfb\u5217 RISC-V \u7248\u672c\u7684\u5de5\u5177\uff1aQEMU 5.1\uff0c GDB 8.3\uff0c GCC \u548c Binutils\u3002 \u6211\u662f\u4e00\u70b9\u90fd\u4e0d\u614c\uff0c\u540e\u9762\u7684\u80af\u5b9a\u6709\u8bb2\u8be5\u600e\u4e48\u5b89\u88c5\u3002\u6211\u8fd9\u91cc\u4f7f\u7528 Ubuntu \u7cfb\u7edf\uff0c\u6240\u4ee5\u6211\u5c31\u6458\u8bb0\u4e00\u4e0b\u6211\u7684 \u5b89\u88c5\u8fc7\u7a0b\u3002\u53ef\u4ee5\u8bf4\u65b0\u7684\u8bfe\u7a0b\u6240\u9700\u8981\u7684\u5de5\u5177\u5b89\u88c5\u8d77\u6765\u6bd4\u4e4b\u524d\u8981\u65b9\u4fbf\u591a\u4e86\u3002 \u9996\u5148\u6211\u4eec\u8981\u786e\u5b9a debian \u7248\u672c\u662f bullseye \u6216\u8005 sid \uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u68c0\u67e5\uff1a cat /etc/debian_version \u6ce8\u610f \uff1a Ubuntu 18.04 \u5bf9\u5e94\u7684debian\u7248\u672c\u662f buster/sid \u592a\u8001\u4e86\uff0c \u800c Ubuntu 20.04 \u5bf9\u5e94 \u7684debian\u7248\u672c\u662f bullseye/sid \u7b26\u5408\u8981\u6c42\u3002 \u63a5\u7740\u6211\u4eec\u6267\u884c\uff1a sudo apt-get install git build-essential gdb-multiarch qemu-system-misc gcc-riscv64-linux-gnu binutils-riscv64-linux-gnu \u6839\u636e\u8bb2\u4e49\u8bf4\u7684\uff0c\u65b0\u7248\u7684 qemu-system-misc \u4f1a\u548c\u5b9e\u9a8c\u7684\u5185\u6838\u6709\u51b2\u7a81\uff0c\u6240\u4ee5\u9700\u8981\u56de\u9000\u7248\u672c\u3002\u6211\u8fd9\u91cc \u6d4b\u8bd5\u4e86\u4e00\u4e0b\u597d\u50cf\u6ca1\u6709\u95ee\u9898\u3002\u8bb2\u4e49\u5efa\u8bae\u5b89\u88c5\u65e7\u7684\u7248\u672c\uff1a sudo apt-get remove qemu-system-misc sudo apt-get install qemu-system-misc = 1 :4.2-3ubuntu6 \u6ce8\u610f \uff1a \u6211\u5728 Ubuntu 18.04 \u5c1d\u8bd5\u8fd9\u4e2a\u547d\u4ee4\u597d\u50cf\u6ca1\u627e\u5230\u8fd9\u4e2a\u5305\uff0c\u800c Ubuntu 20.04 \u597d\u50cf\u4e0d\u9700 \u8981\u56de\u9000\u7248\u672c\uff0c\u53ef\u4ee5\u76f4\u63a5\u542f\u52a8 xv6 \u3002 \u6211\u4eec\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u6d4b\u8bd5\u5b89\u88c5\u60c5\u51b5\uff1a $ riscv64-linux-gnu-gcc --version riscv64-linux-gnu-gcc ( Ubuntu 9 .3.0-17ubuntu1~20.04 ) 9 .3.0 Copyright ( C ) 2019 Free Software Foundation, Inc. This is free software ; see the source for copying conditions. There is NO warranty ; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. $ qemu-system-riscv64 --version QEMU emulator version 4 .2.1 ( Debian 1 :4.2-3ubuntu6.7 ) Copyright ( c ) 2003 -2019 Fabrice Bellard and the QEMU Project developers \u6211\u7684\u7406\u89e3\u662f\uff0c\u8fd9\u4e9b\u547d\u4ee4\u6709\u5c31\u884c\u4e86\uff0c\u4e0d\u4e00\u5b9a\u9700\u8981\u5bf9\u5e94\u4e0a\u7248\u672c\u53f7\u3002 \u540c\u6837\u6211\u4eec\u53ef\u4ee5\u7f16\u8bd1\u8fd0\u884c xv6 \u6765\u6d4b\u8bd5\u73af\u5883\u662f\u5426\u642d\u5efa\u6210\u529f\uff1a $ git clone git://github.com/mit-pdos/xv6-riscv.git $ cd xv6-riscv $ make qemu qemu-system-riscv64 -machine virt -bios none -kernel kernel/kernel -m 128M -smp 3 -nographic -drive file = fs.img,if = none,format = raw,id = x0 -device virtio-blk-device, drive = x0,bus = virtio-mmio-bus.0 xv6 kernel is booting hart 2 starting hart 1 starting init: starting sh $ \u6309 ctrl+a x \u6765\u9000\u51fa qemu \u3002\u6ce8\u610f\u662f\uff1a\u6309\u4e0b ctrl+a \u540e\u677e\u5f00\uff0c\u518d\u6309\u4e0b x \u3002","title":"\u6240\u9700\u8981\u4f7f\u7528\u5230\u7684\u5de5\u5177"},{"location":"6.S081/Lab00-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#_4","text":"\u8fd9\u91cc\u6211\u5728\u5c1d\u8bd5\u6784\u5efa\u4e00\u4e2aDocker\u955c\u50cf\u3002\u53ef\u4ee5\u4f7f\u7528 docker pull penglingwei/xv6-labs-2020 \u6765 \u76f4\u63a5\u62c9\u53bb\u955c\u50cf\uff0c\u4e5f\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u521b\u5efa\u81ea\u5df1\u7684\u955c\u50cf\u3002 \u9996\u5148\u662f\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1a \u521b\u5efa Dockerfile \uff0c\u5f00\u5934\u662f\u7528\u6765\u89e3\u51b3 tzdata \u5728Docker\u955c\u50cf\u521b\u5efa\u65f6\u4f1a\u5361\u6b7b\u7684\uff0c\u540e\u9762\u662f\u53c2\u8003\u5b98\u65b9\u5206\u6863 \u5b89\u88c5\u6240\u9700\u8981\u7684\u4f9d\u8d56\u3002 Dockerfile FROM ubuntu:latest RUN export DEBIAN_FRONTEND = noninteractive \\ && apt-get update \\ && apt-get install -y tzdata \\ && ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\ && dpkg-reconfigure --frontend noninteractive tzdata \\ && apt-get install -y git \\ build-essential \\ gdb-multiarch \\ qemu-system-misc = 1 :4.2-3ubuntu6 \\ gcc-riscv64-linux-gnu \\ binutils-riscv64-linux-gnu \\ \u521b\u5efa .dockerignore \u6587\u4ef6\uff0c\u7528\u6765\u5ffd\u7565\u5176\u4ed6\u6587\u4ef6\uff0c\u6211\u8fd9\u91cc\u4f1a\u5ffd\u7565 .vscode \u548c xv6-labs-2020 \u4e24\u4e2a \u6587\u4ef6\u5939\u3002\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0cDocker\u4f1a\u628a Dockerfile \u6240\u5728\u6587\u4ef6\u5939\u4e2d\u7684\u5176\u4ed6\u6240\u6709\u6587\u4ef6\u90fd\u63d0\u524d\u6253\u5305\u5230\u955c\u50cf\u91cc\u3002 \u521b\u5efa\u955c\u50cf\uff1a docker build -t xv6-labs-2020 . \uff0c\u8fd9\u4e2a\u955c\u50cf\u7684\u540d\u5b57\u662f xv6-labs-2020 \u3002","title":"\u73af\u5883\u914d\u7f6e\u7684\u66f4\u65b0"},{"location":"6.S081/Lab00-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#docker","text":"\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u5728 Makefile \u4e2d\u6dfb\u52a0\u4e86\u76f8\u5173\u6307\u4ee4\uff08\u8fd9\u91cc\u7684\u7f29\u8fdb\u6709\u4e9b\u95ee\u9898\uff0c\u6211\u8c03\u6574\u4e86\u534a\u5929\u4e5f\u6ca1\u6210\u3002\u89e3\u51b3\u529e\u6cd5\u662f\u5728\u590d\u5236\u5230Makefile\u4e2d\u8981\u6ce8\u610f\u8c03\u6574\u4e00\u4e0b\u7f29\u8fdb\u3002\uff09\uff1a ## ==================Docker Commands Start====================================== docker: -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash docker-grade: -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make grade\" docker-qemu: -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make qemu\" docker-qemu-gdb: -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make qemu-gdb\" docker-gdb: .gdbinit docker exec -it xv6-labs-2020 /bin/bash -c \"gdb-multiarch --command .gdbinit\" docker-rm: docker rm -f xv6-labs-2020 ## ==================Docker Commands End======================================== make docker : \u521b\u5efa\u5e76\u8fdb\u5165\u5bb9\u5668\uff1b make docker-grade : \u521b\u5efa\u5bb9\u5668\uff0c\u5e76\u4e14\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c make grade ; make docker-qemu : \u521b\u5efa\u5bb9\u5668 xv6-labs-2020 \uff0c\u5e76\u4e14\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c make qemu ; make docker-qemu-gdb : \u521b\u5efa\u5bb9\u5668 xv6-labs-2020 \uff0c\u5e76\u4e14\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c make qemu-gdb ; make docker-gdb : \u5728\u5bb9\u5668 xv6-labs-2020 \u4e2d\u8fdb\u884c gdb \u8c03\u8bd5\uff0c\u9700\u8981\u8fd0\u884c\u8fc7 make docker-qemu-gdb ; make docker-rm : \u5220\u9664\u5bb9\u5668 xv6-labs-2020 \u3002 \u5176\u4e2d\u5728\u547d\u4ee4\u524d\u9762\u52a0 - \u53f7\u8868\u793a\u5ffd\u7565\u5bf9\u5e94\u6307\u4ee4\u7684\u62a5\u9519\u4fe1\u53f7\u3002","title":"\u5173\u4e8e\u4f7f\u7528Docker\u6765\u8fdb\u884c\u8c03\u8bd5"},{"location":"6.S081/Lab00-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#_5","text":"\u8fd9\u91cc\u6211\u60f3\u4e86\u89e3\u4e00\u4e0b\u5982\u679c\u5bf9\u7528\u6237\u7a0b\u5e8f\u8fdb\u884c\u8c03\u8bd5\uff0c\u6298\u817e\u4e86\u5927\u534a\u5929\u3002\u5982\u679c\u914d\u7f6e \u7b2c\u4e00\u6b65\uff1a\u8fd0\u884c make docker-qemu-gdb \u548c make docker-gdb ; \u7b2c\u4e8c\u6b65\uff1a\u5728gdb\u7684\u5f00\u59cb\u5c31\u8fd0\u884c file user/_<program name> \uff1b \u6253\u65ad\u70b9\u8c03\u8bd5\u3002 \u5982\u679c\u6ca1\u6709\u5728 gdb \u7684\u5f00\u5934\u5c31\u8f7d\u5165 file user/_<program name> \u4f1a\u62a5\u9519\u3002","title":"\u8c03\u8bd5\u7528\u6237\u7a7a\u95f4\u7684\u7a0b\u5e8f"},{"location":"6.S081/Lab01-Xv6-and-Unix-utilities/","text":"Lab1: Xv6 and Unix utilities \u00b6 \u8fd9\u4e2a\u5b9e\u9a8c\u662f\u8981\u719f\u6089\u4e00\u4e0b xv6 \u548c\u5b83\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \u542f\u52a8 xv6 \u00b6 \u6211\u4eec\u9700\u8981\u4e0b\u8f7d\u5b9e\u9a8c\u7528\u7684\u4ee3\u7801 xv6-labs-2020 \uff0c\u7136\u540e\u5207\u6362\u5230 util \u5206\u652f\uff1a $ git clone git://g.csail.mit.edu/xv6-labs-2020 Cloning into 'xv6-labs-2020' ... ... $ cd xv6-labs-2020 $ git checkout util Branch 'util' set up to track remote branch 'util' from 'origin' . Switched to a new branch 'util' $ \u7136\u540e\u4f7f\u7528\u547d\u4ee4 make qemu \u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\u3002 \u6211\u4eec\u5148\u4f7f\u7528\u7b2c\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528 ls \uff0c\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u7cfb\u5217\u6587\u4ef6\u3002\u5728\u6700\u521d\u7684\u6587\u4ef6\u7cfb\u7edf\u91cc\uff0c\u4ed6\u4eec\u88ab\u5305\u542b\u5728 user \u6587\u4ef6\u5939\u91cc\uff0c\u5f88\u591a\u7a0b\u5e8f\u90fd\u80fd\u4f7f\u7528\u3002 . 1 1 1024 .. 1 1 1024 README 2 2 2059 xargstest.sh 2 3 93 cat 2 4 24256 echo 2 5 23080 forktest 2 6 13272 grep 2 7 27560 init 2 8 23816 kill 2 9 23024 ln 2 10 22880 ls 2 11 26448 mkdir 2 12 23176 rm 2 13 23160 sh 2 14 41976 stressfs 2 15 24016 usertests 2 16 148456 grind 2 17 38144 wc 2 18 25344 zombie 2 19 22408 console 3 20 0 xv6 \u6ca1\u6709\u5b9e\u73b0 ps \u547d\u4ee4\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528 ctrl+p \u6765\u6253\u5370\u73b0\u5728\u7684\u8fdb\u7a0b\u4fe1\u606f\u3002 $ 1 sleep init 2 sleep sh \u6309 ctrl+a x \u9000\u51fa qemu \u3002 \u6253\u5206 \u00b6 \u53ef\u4ee5\u4f7f\u7528 make grade \u6765\u6d4b\u8bd5\u7b54\u6848\u3002 \u6216\u8005\u4f7f\u7528 ./grade-lab-util [problem] \u6765\u5206\u522b\u6d4b\u8bd5\u6bcf\u9053\u9898\u76ee\u3002 sleep \u00b6 \u5b9e\u73b0 user/sleep.c \u7684\u529f\u80fd\u3002 \u8981\u9605\u8bfb xv6 book \u7684\u7b2c\u4e00\u7ae0\uff1b \u67e5\u770b user/echo.c , user/grep.c \u548c user/rm.c \u6e90\u6587\u4ef6\uff0c\u770b\u770b\u600e\u4e48\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\uff0c\u5176\u5b9e\u5c31\u662f\u770b\u770bC\u8bed\u8a00\u600e\u4e48\u83b7\u53d6\u547d\u4ee4\u884c\u53c2\u6570\uff1b \u5fd8\u8bb0\u8f93\u5165\u53c2\u6570\u7684\u65f6\u5019\u9700\u8981\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff1b \u8f93\u5165\u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528 atoi \u6765\u8f6c\u6362\u7c7b\u578b\uff08\u67e5\u770b user/ulib.c ); \u4f7f\u7528\u7cfb\u7edf\u8c03\u7528 sleep ; \u67e5\u770b kernel/sysproc.c \u770b\u770b\u7cfb\u7edf\u8c03\u7528 sleep \u662f\u5982\u4f55\u5b9e\u73b0\u7684(\u770b sys_sleep \u90e8\u5206)\uff0c user/user.h \u770bC\u7248\u672c\u7684 sleep \u5982\u4f55\u5b9a\u4e49\uff0c\u7136\u540e\u770b user/usys.pl \u770b\u7528\u6237\u8c03\u7528\u5982\u4f55\u8fdb\u5165\u7cfb\u7edf\u8c03\u7528 sleep \u7684\u3002 \u786e\u5b9a exit() \u8fd4\u56de\u6b63\u786e\u7684\u503c\uff1b \u5c06 sleep \u52a0\u5165\u5230 Makefile \u7684 UPROGS \u91cc\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5728 shell \u91cc\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\u4e86\u3002 \u51e0\u4e4e\u7167\u7740\u63d0\u793a\u505a\u5c31\u597d\u4e86\uff0c\u6211\u4eec\u4f7f\u7528 ./grade-lab-util sleep \u6216\u8005 make GRADEFLAGS=sleep grade \u6765\u505a\u6d4b\u8bd5\u3002\u7b80\u5355\u7684\u7b54\u6848\uff1a \u53c2\u8003\u7b54\u6848 #include \"kernel/types.h\" #include \"kernel/stat.h\" #include \"user/user.h\" int main ( int argc , char * argv []) { int time ; if ( argc < 2 ){ fprintf ( 2 , \"Usage: sleep NUMBER \\n \" ); exit ( 1 ); } time = atoi ( argv [ 1 ]); sleep ( time ); exit ( 0 ); } pingpong \u00b6 \u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u4e00\u4e2a\u6587\u4ef6 user/pingpong.c : \u8981\u6c42\u7236\u7a0b\u5e8f\u7ed9\u5b50\u7a0b\u5e8f\u53d1\u9001\u4e00\u4e2a\u5b57\u8282\uff0c\u5b50\u7a0b\u5e8f\u6253\u5370 <pid>:received ping \uff0c\u5176\u4e2d <pid> \u662f\u5b50\u7a0b\u5e8f \u7684\u8fdb\u7a0b\u53f7\u3002\u7136\u540e\u5b50\u7a0b\u5e8f\u53d1\u9001\u7ed9\u7236\u7a0b\u5e8f\u4e00\u4e2a\u5b57\u8282\uff0c\u5e76\u9000\u51fa\u3002\u7236\u7a0b\u5e8f\u8bfb\u5230\u5b50\u7a0b\u5e8f\u53d1\u9001\u7684\u5b57\u8282\u540e\uff0c\u6253\u5370 <pid>: received pong \u5e76\u9000\u51fa\u3002 \u63d0\u793a\uff1a \u4f7f\u7528 pipe \u521b\u5efa\u7ba1\u9053\uff1b \u4f7f\u7528 fork \u521b\u5efa\u5b50\u8fdb\u7a0b\uff1b \u4f7f\u7528 read \u4ece\u7ba1\u9053\u8bfb\u53d6\u6570\u636e\uff1b \u4f7f\u7528 write \u5411\u7ba1\u9053\u5199\u6570\u636e\uff1b \u4f7f\u7528 getpid \u4ece\u8fdb\u7a0b\u8bfb\u53d6\u8fdb\u7a0b\u53f7\uff1b \u5c06 pingpong.c \u52a0\u5165\u5230 Makefile \u7684 UPROGS \u4e2d\uff1b \u7cfb\u7edf\u8c03\u7528\u90fd\u5728 user/user.h \u4e2d\uff0c\u5177\u4f53\u600e\u4e48\u8c03\u7528\u7684\u8fd8\u9700\u8981\u518d\u5206\u6790\u3002 \u8fd9\u9053\u9898\u76ee\u51e0\u4e4e\u662f xv6-book \u7b2c\u4e00\u7ae0pipe\u4f8b\u7a0b\u7684\u7ffb\u7248\uff0c\u53ea\u8981\u770b\u61c2\u4e86\u8fd9\u4e00\u8282\u5185\u5bb9\u5c31\u80fd\u591f\u505a\u6210\u8fd9\u9053\u9898\u76ee\uff0c\u5176\u5b9e\u662f\u6bd4\u8f83\u53cb\u597d\u7684\u3002 \u53c2\u8003\u7b54\u6848 #include \"kernel/types.h\" #include \"kernel/stat.h\" #include \"user/user.h\" #define PIPE_IN 1 #define PIPE_OUT 0 int main ( int argc , char * argv []) { int p [ 2 ], forkflag ; char buffer [ 2 ]; if ( pipe ( p ) < 0 ) { fprintf ( 2 , \"Create pipe failed. \\n \" ); exit ( 1 ); } forkflag = fork (); if ( forkflag < 0 ) { fprintf ( 2 , \"fork() failed. \\n \" ); exit ( 1 ); } else if ( forkflag == 0 ) { //child proc read ( p [ PIPE_OUT ], buffer , 1 ); printf ( \"%d: received p%sng \\n \" , getpid (), buffer ); write ( p [ PIPE_IN ], \"o\" , 1 ); } else { // parent proc write ( p [ PIPE_IN ], \"i\" , 1 ); read ( p [ PIPE_OUT ], buffer , 1 ); printf ( \"%d: received p%sng \\n \" , getpid (), buffer ); close ( p [ PIPE_IN ]); close ( p [ PIPE_OUT ]); } exit ( 0 ); } primes \u00b6 \u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u6587\u4ef6 user/primes.c \uff1a\u4f7f\u7528pipes\u6765\u7f16\u5199\u4e00\u4e2a\u7d20\u6570\u7a0b\u5e8f\u3002\u7a0b\u5e8f\u7684\u601d\u8def\u6765\u81eaUnix\u7684\u521b\u59cb\u8005 Doug McIlroy\uff0c\u53ef\u4ee5\u53c2\u8003 \u8fd9\u4e2a\u7f51\u9875 \u3002 \u6211\u4eec\u7684\u76ee\u6807\u662f\u4f7f\u7528 pipe \u548c fork \u6765\u521b\u5efapipeline\u3002\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u53d1\u9001 2 \u5230 35 \u5230\u7ba1\u9053\u4e2d\u3002 \u6bcf\u4e00\u4e2a\u7d20\u6570\u5bf9\u5e94\u4e00\u4e2a\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u4ece\u5de6\u8fb9\u90bb\u5c45\u8bfb\u5165\u6570\u636e\uff0c\u4ece\u53f3\u8fb9\u7ba1\u9053\u53d1\u9001\u6570\u636e\u3002\u56e0\u4e3a xv6 \u7684 \u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u8fdb\u7a0b\u6570\u6709\u9650\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u5230 35 \u5c31\u7ed3\u675f\u3002 \u63d0\u793a\uff1a \u6ce8\u610f\u8981\u53ca\u65f6\u5173\u95ed\u8fdb\u7a0b\u4e0d\u9700\u8981\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5426\u5219 xv6 \u5c06\u8fde 35 \u90fd\u8ba1\u7b97\u4e0d\u5230\uff1b \u5f00\u59cb\u7684\u4e3b\u8fdb\u7a0b\u9700\u8981\u5728\u6240\u6709\u5b50\u8fdb\u7a0b\u7ed3\u675f\u540e\u624d\u80fd\u9000\u51fa\uff1b read \u5728 write \u5173\u95ed\u65f6\u4f1a\u8fd4\u56de 0\uff1b \u53ef\u4ee5\u76f4\u63a5\u5c06 32-bit \u7684 int \u5199\u5230 pipes \u91cc\uff0c \u800c\u4e0d\u9700\u8981\u8f6c\u6362\u4e3aASCII \u7801\u518d\u8f93\u5165\u8f93\u51fa\uff1b \u4ec5\u5f53\u6709\u9700\u8981\u65f6\u521b\u5efa\u8fdb\u7a0b\u3002 \u53c2\u8003\u7b54\u6848 #include \"kernel/types.h\" #include \"kernel/stat.h\" #include \"user/user.h\" int main ( int argc , char * argv []) { int i , p [ 2 ], p_close [ 2 ]; pipe ( p ); pipe ( p_close ); if ( fork () == 0 ) { //child process int p2 [ 2 ], base_prime , num , flag = 0 ; close ( p [ 1 ]); close ( p_close [ 0 ]); read ( p [ 0 ], & base_prime , 4 ); printf ( \"prime %d \\n \" , base_prime ); while ( read ( p [ 0 ], & num , 4 ) == 4 ) { if ( num % base_prime != 0 ) { if ( ! flag ) { pipe ( p2 ); if ( fork () == 0 ) { close ( p [ 0 ]); close ( p2 [ 1 ]); p [ 0 ] = p2 [ 0 ]; read ( p [ 0 ], & base_prime , 4 ); printf ( \"prime %d \\n \" , base_prime ); } else { flag = 1 ; close ( p2 [ 0 ]); write ( p2 [ 1 ], & num , 4 ); } } else { write ( p2 [ 1 ], & num , 4 ); } } } close ( p2 [ 1 ]); close ( p [ 0 ]); close ( p_close [ 1 ]); } else { //parent process close ( p [ 0 ]); close ( p_close [ 1 ]); for ( i = 2 ; i <= 35 ; ++ i ) { write ( p [ 1 ], & i , 4 ); } close ( p [ 1 ]); // wait for all child process. // when p_close[1] is closed, read will get 0x00. read ( p_close [ 0 ], & i , 1 ); close ( p_close [ 0 ]); } exit ( 0 ); } \u5982\u679c\u6700\u521d\u7684\u4e3b\u7a0b\u5e8f\u4e0d\u7b49\u5f85\u6240\u6709\u5b50\u8fdb\u7a0b\u7ed3\u675f\uff0c\u90a3\u4e48 shell \u4f1a\u51fa\u73b0bug\u3002\u6bd4\u5982\uff0c\u5c06 read(p_close[0], &i, 1) \u6ce8\u91ca\u6389\uff0c\u6700\u521d\u7684\u4e3b\u8fdb\u7a0b\u63d0\u524d\u7ed3\u675f\uff0c\u8f93\u51fa\u5c06\u4f1a\u5982\u4e0b\uff1a xv6 kernel is booting hart 1 starting hart 2 starting init: starting sh $ primes pri $m e 2 prime 3 prime 5 prime 7 prime 11 prime 13 prime 17 prime 19 prime 23 prime 29 prime 31 x x \u8868\u793a\u5149\u6807\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u8bf4 shell \u4f1a\u63d0\u524d\u8f93\u51fa $ \u7136\u540e\u5361\u4f4f\uff0c\u5fc5\u987b\u8981\u624b\u52a8\u6309\u4e0b\u56de\u8f66\u952e\u624d\u884c\u3002 \u53e6\u5916\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684bug\u5bfc\u81f4\u6253\u5206\u7a0b\u5e8f grade-lab-util \u4f1a\u6b7b\u5faa\u73af\u3002 find \u00b6 \u95ee\u9898\u63cf\u8ff0 \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7248\u672c\u7684 UNIX \u7684 find \u7a0b\u5e8f user/find.c \uff1a \u627e\u5230\u6240\u6709\u76ee\u5f55\u6811\u4e0b\u7684\u6587\u4ef6\u3002 \u63d0\u793a\uff1a \u53c2\u8003 user/ls.c \u6765\u67e5\u770b\u5982\u4f55\u8bfb\u53d6\u76ee\u5f55\uff1b \u4f7f\u7528\u9012\u5f52\u5f62\u5f0f\u4e0d\u65ad\u5411\u5b50\u76ee\u5f55\u67e5\u627e\uff1b \u4e0d\u8981\u67e5\u627e \".\" \u548c \"..\" \u6587\u4ef6\u5939\uff1b \u5bf9\u6587\u4ef6\u7cfb\u7edf\u7684\u66f4\u6539\u4f1a\u4e00\u76f4\u4fdd\u5b58\u5728 qemu \u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff1b\u4f7f\u7528 make clean \u6765\u6e05\u9664\u7cfb\u7edf\u6587\u4ef6\uff0c\u7136\u540e\u518d \u4f7f\u7528 make qemu ; \u4f7f\u7528 C\u8bed\u8a00 \u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff0c\u540c\u65f6\u4f7f\u7528 strcmp() \u6765\u5bf9\u6bd4\u5b57\u7b26\u4e32\uff1b \u4e0d\u8981\u5fd8\u8bb0\u628a\u7a0b\u5e8f\u6dfb\u52a0\u5230 Makefile \u7684 UPROGS \u91cc\u3002 \u8fd9\u9053\u9898\u51e0\u4e4e\u53ef\u4ee5\u53c2\u8003 user/ls.c \uff0c\u800c\u4e14\u4e0d\u9700\u8981\u5b8c\u5168\u4e86\u89e3\u6240\u6709\u7ec6\u8282\uff0c\u731c\u6d4b\u4e2a\u5927\u6982\uff0c\u7167\u732b\u753b\u864e\u5c31\u80fd\u5b8c\u6210\u3002 \u53c2\u8003\u7b54\u6848 #include \"kernel/types.h\" #include \"kernel/stat.h\" #include \"user/user.h\" #include \"kernel/fs.h\" char * getFilename ( char * path ) { char * p ; // Find first character after last slash. for ( p = path + strlen ( path ); p >= path && * p != '/' ; p -- ) ; p ++ ; return p ; } void find ( char * filename , char * path ) { char buf [ 512 ], * p ; int fd ; struct dirent de ; struct stat st ; if (( fd = open ( path , 0 )) < 0 ){ fprintf ( 2 , \"ls: cannot open %s \\n \" , buf ); return ; } if ( fstat ( fd , & st ) < 0 ){ fprintf ( 2 , \"ls: cannot stat %s \\n \" , buf ); close ( fd ); return ; } switch ( st . type ){ case T_FILE : p = getFilename ( path ); if ( strcmp ( filename , p ) == 0 ) { printf ( \"%s \\n \" , path ); } break ; case T_DIR : if ( strlen ( path ) + 1 + DIRSIZ + 1 > sizeof buf ){ printf ( \"ls: path too long \\n \" ); break ; } strcpy ( buf , path ); p = buf + strlen ( buf ); * p ++ = '/' ; while ( read ( fd , & de , sizeof ( de )) == sizeof ( de )){ if ( de . inum == 0 || strcmp ( de . name , \".\" ) == 0 || strcmp ( de . name , \"..\" ) == 0 ) continue ; memmove ( p , de . name , strlen ( de . name )); p [ strlen ( de . name )] = 0 ; find ( filename , buf ); } break ; } close ( fd ); return ; } int main ( int argc , char * argv []) { if ( argc <= 2 ){ fprintf ( 2 , \"Usage: find DIRPATH FILENAME \\n \" ); exit ( 1 ); } find ( argv [ 2 ], argv [ 1 ]); exit ( 0 ); } xargs \u00b6 \u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684UNIX\u7684 xargs \u7a0b\u5e8f\uff1a\u8bfb\u53d6\u51e0\u884c\u6807\u51c6\u8f93\u51fa\uff0c\u8fd0\u884c\u4e00\u4e2a\u547d\u4ee4\uff0c\u63a5\u53d7\u7684\u53c2\u6570\u5206\u522b\u662f\u6bcf\u4e00\u884c \u7684\u5185\u5bb9\u3002 \u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b xargs \u7684\u529f\u80fd\uff1a $ echo hello too | xargs echo bye bye hello too $ \u8fd9\u6761\u6307\u4ee4\u662f\u5728 echo bye \u540e\u9762\u8ffd\u52a0 hello too \u7684\u5185\u5bb9\uff0c\u5f62\u6210 echo bye hello too \u547d\u4ee4\u3002 \u8fd9\u91cc\u53ea\u9700\u8981\u5b8c\u6210\u4e0a\u9762\u529f\u80fd\u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u5728\u540e\u9762\u7684\u547d\u4ee4\u91cc\u8ffd\u52a0\u65b0\u7684\u53c2\u6570\u3002 UNIX \u7248\u672c\u7684 xargs \u80fd\u591f\u6267\u884c\u66f4\u590d\u6742\u7684\u529f\u80fd\uff0c\u5c06\u5de6\u8fb9\u7684\u5185\u5bb9\u505a\u66f4\u591a\u89e3\u6790\uff0c\u7136\u540e\u6309\u8981\u6c42\u8d4b\u503c\u7ed9\u540e\u9762\u7684\u547d\u4ee4\u4f5c \u4e3a\u53c2\u6570, \u4f8b\u5982\uff1a\u4e00\u6b21\u53ef\u4ee5\u4e3a\u547d\u4ee4\u63d0\u4f9b\u591a\u4e2a\u53c2\u6570\u3002\u6211\u4eec\u8fd9\u91cc\u53ea\u9700\u8981\u5b9e\u73b0\u4e00\u6b21\u8d4b\u503c\u4e00\u4e2a\u53c2\u6570\u7684\u529f\u80fd\u5373\u53ef\u3002 \u5982\u679c\u60f3\u8ba9\u5176\u4ed6UNIX\u4e0a\u7684 find \u547d\u4ee4\u50cf\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u5b9e\u73b0\u7684 find \u4e00\u6837\uff0c\u90a3\u4e48\u9700\u8981\u5728\u90a3\u4e9b find \u547d\u4ee4\u4e0a\u6dfb\u52a0 \u53d8\u91cf -n 1 \u3002 $ echo \"1\\n2\" | xargs -n 1 echo line line 1 line 2 $ \u4e0a\u9762\u7684\u4ee3\u7801\u524d\u63d0\u662f echo \u4e5f\u662fUNIX\u4e0a\u7684 echo \u547d\u4ee4\u3002 \u800c xv6 \u4e0a\u7684 echo \u547d\u4ee4\u4e0d\u4f1a\u5904\u7406 \" \u548c\u8f6c\u4e49\u7b26\u53f7 \\ \u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0a\u9762\u7684\u547d\u4ee4\u8981\u662f\u5728 xv6 \u4e0a\u8fd0\u884c\uff0c echo \u4f1a\u5f97\u5230 5 \u4e2a\u5b57\u7b26 1 \\ n 2 \\n ( \\n \u662f xv6 \u4e0a\u7684 echo \u81ea\u52a8\u6dfb\u52a0\u7684\u7b26\u53f7)\u3002 \u63d0\u793a\uff1a \u4f7f\u7528 fork \u548c exec \u6765\u6267\u884c\u547d\u4ee4\uff0c\u4f7f\u7528 wait \u6765\u4f7f\u5f97\u7236\u7a0b\u5e8f\u7b49\u5f85\u5b50\u7a0b\u5e8f\u7ed3\u675f\u8fd0\u884c\uff1b \u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u7528 \\n \u6765\u5224\u65ad\u662f\u5426\u662f\u53e6\u4e00\u4e2a\u53c2\u6570\uff1b kernel/param.h \u58f0\u660e\u4e86 MAXARG \u5b8f\u5b9a\u4e49\uff0c\u6216\u8bb8\u6709\u7528\uff1b \u4e0d\u8981\u5fd8\u8bb0\u5c06\u7a0b\u5e8f\u52a0\u5165\u5230 UPROGS \u3002 \u53c2\u8003\u7b54\u6848 #include \"kernel/types.h\" #include \"kernel/stat.h\" #include \"kernel/param.h\" #include \"user/user.h\" int main ( int argc , char * argv []) { char buf [ MAXARG + 1 ], tmp ; int index = 0 , i ; if ( argc < 2 ) { fprintf ( 2 , \"Usage: xargs COMMAND [arg1 arg2 ...] \\n \" ); exit ( 1 ); } for ( i = 0 ; i < argc -1 ; i ++ ) { argv [ i ] = argv [ i + 1 ]; } argv [ argc -1 ] = buf ; while ( read ( 0 , & tmp , 1 )) { if ( tmp == '\\n' ) { buf [ index ] = 0 ; if ( fork () == 0 ) { exec ( argv [ 0 ], argv ); exit ( 0 ); } else { wait ( 0 ); } index = 0 ; } else { buf [ index ++ ] = tmp ; } } if ( index > 0 ) { buf [ index ++ ] = 0 ; exec ( argv [ 0 ], argv ); } exit ( 0 ); }","title":"Lab01 Xv6 and Unix utilities"},{"location":"6.S081/Lab01-Xv6-and-Unix-utilities/#lab1-xv6-and-unix-utilities","text":"\u8fd9\u4e2a\u5b9e\u9a8c\u662f\u8981\u719f\u6089\u4e00\u4e0b xv6 \u548c\u5b83\u7684\u7cfb\u7edf\u8c03\u7528\u3002","title":"Lab1: Xv6 and Unix utilities"},{"location":"6.S081/Lab01-Xv6-and-Unix-utilities/#xv6","text":"\u6211\u4eec\u9700\u8981\u4e0b\u8f7d\u5b9e\u9a8c\u7528\u7684\u4ee3\u7801 xv6-labs-2020 \uff0c\u7136\u540e\u5207\u6362\u5230 util \u5206\u652f\uff1a $ git clone git://g.csail.mit.edu/xv6-labs-2020 Cloning into 'xv6-labs-2020' ... ... $ cd xv6-labs-2020 $ git checkout util Branch 'util' set up to track remote branch 'util' from 'origin' . Switched to a new branch 'util' $ \u7136\u540e\u4f7f\u7528\u547d\u4ee4 make qemu \u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\u3002 \u6211\u4eec\u5148\u4f7f\u7528\u7b2c\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528 ls \uff0c\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u7cfb\u5217\u6587\u4ef6\u3002\u5728\u6700\u521d\u7684\u6587\u4ef6\u7cfb\u7edf\u91cc\uff0c\u4ed6\u4eec\u88ab\u5305\u542b\u5728 user \u6587\u4ef6\u5939\u91cc\uff0c\u5f88\u591a\u7a0b\u5e8f\u90fd\u80fd\u4f7f\u7528\u3002 . 1 1 1024 .. 1 1 1024 README 2 2 2059 xargstest.sh 2 3 93 cat 2 4 24256 echo 2 5 23080 forktest 2 6 13272 grep 2 7 27560 init 2 8 23816 kill 2 9 23024 ln 2 10 22880 ls 2 11 26448 mkdir 2 12 23176 rm 2 13 23160 sh 2 14 41976 stressfs 2 15 24016 usertests 2 16 148456 grind 2 17 38144 wc 2 18 25344 zombie 2 19 22408 console 3 20 0 xv6 \u6ca1\u6709\u5b9e\u73b0 ps \u547d\u4ee4\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528 ctrl+p \u6765\u6253\u5370\u73b0\u5728\u7684\u8fdb\u7a0b\u4fe1\u606f\u3002 $ 1 sleep init 2 sleep sh \u6309 ctrl+a x \u9000\u51fa qemu \u3002","title":"\u542f\u52a8 xv6"},{"location":"6.S081/Lab01-Xv6-and-Unix-utilities/#_1","text":"\u53ef\u4ee5\u4f7f\u7528 make grade \u6765\u6d4b\u8bd5\u7b54\u6848\u3002 \u6216\u8005\u4f7f\u7528 ./grade-lab-util [problem] \u6765\u5206\u522b\u6d4b\u8bd5\u6bcf\u9053\u9898\u76ee\u3002","title":"\u6253\u5206"},{"location":"6.S081/Lab01-Xv6-and-Unix-utilities/#sleep","text":"\u5b9e\u73b0 user/sleep.c \u7684\u529f\u80fd\u3002 \u8981\u9605\u8bfb xv6 book \u7684\u7b2c\u4e00\u7ae0\uff1b \u67e5\u770b user/echo.c , user/grep.c \u548c user/rm.c \u6e90\u6587\u4ef6\uff0c\u770b\u770b\u600e\u4e48\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\uff0c\u5176\u5b9e\u5c31\u662f\u770b\u770bC\u8bed\u8a00\u600e\u4e48\u83b7\u53d6\u547d\u4ee4\u884c\u53c2\u6570\uff1b \u5fd8\u8bb0\u8f93\u5165\u53c2\u6570\u7684\u65f6\u5019\u9700\u8981\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff1b \u8f93\u5165\u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528 atoi \u6765\u8f6c\u6362\u7c7b\u578b\uff08\u67e5\u770b user/ulib.c ); \u4f7f\u7528\u7cfb\u7edf\u8c03\u7528 sleep ; \u67e5\u770b kernel/sysproc.c \u770b\u770b\u7cfb\u7edf\u8c03\u7528 sleep \u662f\u5982\u4f55\u5b9e\u73b0\u7684(\u770b sys_sleep \u90e8\u5206)\uff0c user/user.h \u770bC\u7248\u672c\u7684 sleep \u5982\u4f55\u5b9a\u4e49\uff0c\u7136\u540e\u770b user/usys.pl \u770b\u7528\u6237\u8c03\u7528\u5982\u4f55\u8fdb\u5165\u7cfb\u7edf\u8c03\u7528 sleep \u7684\u3002 \u786e\u5b9a exit() \u8fd4\u56de\u6b63\u786e\u7684\u503c\uff1b \u5c06 sleep \u52a0\u5165\u5230 Makefile \u7684 UPROGS \u91cc\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5728 shell \u91cc\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\u4e86\u3002 \u51e0\u4e4e\u7167\u7740\u63d0\u793a\u505a\u5c31\u597d\u4e86\uff0c\u6211\u4eec\u4f7f\u7528 ./grade-lab-util sleep \u6216\u8005 make GRADEFLAGS=sleep grade \u6765\u505a\u6d4b\u8bd5\u3002\u7b80\u5355\u7684\u7b54\u6848\uff1a \u53c2\u8003\u7b54\u6848 #include \"kernel/types.h\" #include \"kernel/stat.h\" #include \"user/user.h\" int main ( int argc , char * argv []) { int time ; if ( argc < 2 ){ fprintf ( 2 , \"Usage: sleep NUMBER \\n \" ); exit ( 1 ); } time = atoi ( argv [ 1 ]); sleep ( time ); exit ( 0 ); }","title":"sleep"},{"location":"6.S081/Lab01-Xv6-and-Unix-utilities/#pingpong","text":"\u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u4e00\u4e2a\u6587\u4ef6 user/pingpong.c : \u8981\u6c42\u7236\u7a0b\u5e8f\u7ed9\u5b50\u7a0b\u5e8f\u53d1\u9001\u4e00\u4e2a\u5b57\u8282\uff0c\u5b50\u7a0b\u5e8f\u6253\u5370 <pid>:received ping \uff0c\u5176\u4e2d <pid> \u662f\u5b50\u7a0b\u5e8f \u7684\u8fdb\u7a0b\u53f7\u3002\u7136\u540e\u5b50\u7a0b\u5e8f\u53d1\u9001\u7ed9\u7236\u7a0b\u5e8f\u4e00\u4e2a\u5b57\u8282\uff0c\u5e76\u9000\u51fa\u3002\u7236\u7a0b\u5e8f\u8bfb\u5230\u5b50\u7a0b\u5e8f\u53d1\u9001\u7684\u5b57\u8282\u540e\uff0c\u6253\u5370 <pid>: received pong \u5e76\u9000\u51fa\u3002 \u63d0\u793a\uff1a \u4f7f\u7528 pipe \u521b\u5efa\u7ba1\u9053\uff1b \u4f7f\u7528 fork \u521b\u5efa\u5b50\u8fdb\u7a0b\uff1b \u4f7f\u7528 read \u4ece\u7ba1\u9053\u8bfb\u53d6\u6570\u636e\uff1b \u4f7f\u7528 write \u5411\u7ba1\u9053\u5199\u6570\u636e\uff1b \u4f7f\u7528 getpid \u4ece\u8fdb\u7a0b\u8bfb\u53d6\u8fdb\u7a0b\u53f7\uff1b \u5c06 pingpong.c \u52a0\u5165\u5230 Makefile \u7684 UPROGS \u4e2d\uff1b \u7cfb\u7edf\u8c03\u7528\u90fd\u5728 user/user.h \u4e2d\uff0c\u5177\u4f53\u600e\u4e48\u8c03\u7528\u7684\u8fd8\u9700\u8981\u518d\u5206\u6790\u3002 \u8fd9\u9053\u9898\u76ee\u51e0\u4e4e\u662f xv6-book \u7b2c\u4e00\u7ae0pipe\u4f8b\u7a0b\u7684\u7ffb\u7248\uff0c\u53ea\u8981\u770b\u61c2\u4e86\u8fd9\u4e00\u8282\u5185\u5bb9\u5c31\u80fd\u591f\u505a\u6210\u8fd9\u9053\u9898\u76ee\uff0c\u5176\u5b9e\u662f\u6bd4\u8f83\u53cb\u597d\u7684\u3002 \u53c2\u8003\u7b54\u6848 #include \"kernel/types.h\" #include \"kernel/stat.h\" #include \"user/user.h\" #define PIPE_IN 1 #define PIPE_OUT 0 int main ( int argc , char * argv []) { int p [ 2 ], forkflag ; char buffer [ 2 ]; if ( pipe ( p ) < 0 ) { fprintf ( 2 , \"Create pipe failed. \\n \" ); exit ( 1 ); } forkflag = fork (); if ( forkflag < 0 ) { fprintf ( 2 , \"fork() failed. \\n \" ); exit ( 1 ); } else if ( forkflag == 0 ) { //child proc read ( p [ PIPE_OUT ], buffer , 1 ); printf ( \"%d: received p%sng \\n \" , getpid (), buffer ); write ( p [ PIPE_IN ], \"o\" , 1 ); } else { // parent proc write ( p [ PIPE_IN ], \"i\" , 1 ); read ( p [ PIPE_OUT ], buffer , 1 ); printf ( \"%d: received p%sng \\n \" , getpid (), buffer ); close ( p [ PIPE_IN ]); close ( p [ PIPE_OUT ]); } exit ( 0 ); }","title":"pingpong"},{"location":"6.S081/Lab01-Xv6-and-Unix-utilities/#primes","text":"\u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u6587\u4ef6 user/primes.c \uff1a\u4f7f\u7528pipes\u6765\u7f16\u5199\u4e00\u4e2a\u7d20\u6570\u7a0b\u5e8f\u3002\u7a0b\u5e8f\u7684\u601d\u8def\u6765\u81eaUnix\u7684\u521b\u59cb\u8005 Doug McIlroy\uff0c\u53ef\u4ee5\u53c2\u8003 \u8fd9\u4e2a\u7f51\u9875 \u3002 \u6211\u4eec\u7684\u76ee\u6807\u662f\u4f7f\u7528 pipe \u548c fork \u6765\u521b\u5efapipeline\u3002\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u53d1\u9001 2 \u5230 35 \u5230\u7ba1\u9053\u4e2d\u3002 \u6bcf\u4e00\u4e2a\u7d20\u6570\u5bf9\u5e94\u4e00\u4e2a\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u4ece\u5de6\u8fb9\u90bb\u5c45\u8bfb\u5165\u6570\u636e\uff0c\u4ece\u53f3\u8fb9\u7ba1\u9053\u53d1\u9001\u6570\u636e\u3002\u56e0\u4e3a xv6 \u7684 \u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u8fdb\u7a0b\u6570\u6709\u9650\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u5230 35 \u5c31\u7ed3\u675f\u3002 \u63d0\u793a\uff1a \u6ce8\u610f\u8981\u53ca\u65f6\u5173\u95ed\u8fdb\u7a0b\u4e0d\u9700\u8981\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5426\u5219 xv6 \u5c06\u8fde 35 \u90fd\u8ba1\u7b97\u4e0d\u5230\uff1b \u5f00\u59cb\u7684\u4e3b\u8fdb\u7a0b\u9700\u8981\u5728\u6240\u6709\u5b50\u8fdb\u7a0b\u7ed3\u675f\u540e\u624d\u80fd\u9000\u51fa\uff1b read \u5728 write \u5173\u95ed\u65f6\u4f1a\u8fd4\u56de 0\uff1b \u53ef\u4ee5\u76f4\u63a5\u5c06 32-bit \u7684 int \u5199\u5230 pipes \u91cc\uff0c \u800c\u4e0d\u9700\u8981\u8f6c\u6362\u4e3aASCII \u7801\u518d\u8f93\u5165\u8f93\u51fa\uff1b \u4ec5\u5f53\u6709\u9700\u8981\u65f6\u521b\u5efa\u8fdb\u7a0b\u3002 \u53c2\u8003\u7b54\u6848 #include \"kernel/types.h\" #include \"kernel/stat.h\" #include \"user/user.h\" int main ( int argc , char * argv []) { int i , p [ 2 ], p_close [ 2 ]; pipe ( p ); pipe ( p_close ); if ( fork () == 0 ) { //child process int p2 [ 2 ], base_prime , num , flag = 0 ; close ( p [ 1 ]); close ( p_close [ 0 ]); read ( p [ 0 ], & base_prime , 4 ); printf ( \"prime %d \\n \" , base_prime ); while ( read ( p [ 0 ], & num , 4 ) == 4 ) { if ( num % base_prime != 0 ) { if ( ! flag ) { pipe ( p2 ); if ( fork () == 0 ) { close ( p [ 0 ]); close ( p2 [ 1 ]); p [ 0 ] = p2 [ 0 ]; read ( p [ 0 ], & base_prime , 4 ); printf ( \"prime %d \\n \" , base_prime ); } else { flag = 1 ; close ( p2 [ 0 ]); write ( p2 [ 1 ], & num , 4 ); } } else { write ( p2 [ 1 ], & num , 4 ); } } } close ( p2 [ 1 ]); close ( p [ 0 ]); close ( p_close [ 1 ]); } else { //parent process close ( p [ 0 ]); close ( p_close [ 1 ]); for ( i = 2 ; i <= 35 ; ++ i ) { write ( p [ 1 ], & i , 4 ); } close ( p [ 1 ]); // wait for all child process. // when p_close[1] is closed, read will get 0x00. read ( p_close [ 0 ], & i , 1 ); close ( p_close [ 0 ]); } exit ( 0 ); } \u5982\u679c\u6700\u521d\u7684\u4e3b\u7a0b\u5e8f\u4e0d\u7b49\u5f85\u6240\u6709\u5b50\u8fdb\u7a0b\u7ed3\u675f\uff0c\u90a3\u4e48 shell \u4f1a\u51fa\u73b0bug\u3002\u6bd4\u5982\uff0c\u5c06 read(p_close[0], &i, 1) \u6ce8\u91ca\u6389\uff0c\u6700\u521d\u7684\u4e3b\u8fdb\u7a0b\u63d0\u524d\u7ed3\u675f\uff0c\u8f93\u51fa\u5c06\u4f1a\u5982\u4e0b\uff1a xv6 kernel is booting hart 1 starting hart 2 starting init: starting sh $ primes pri $m e 2 prime 3 prime 5 prime 7 prime 11 prime 13 prime 17 prime 19 prime 23 prime 29 prime 31 x x \u8868\u793a\u5149\u6807\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u8bf4 shell \u4f1a\u63d0\u524d\u8f93\u51fa $ \u7136\u540e\u5361\u4f4f\uff0c\u5fc5\u987b\u8981\u624b\u52a8\u6309\u4e0b\u56de\u8f66\u952e\u624d\u884c\u3002 \u53e6\u5916\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684bug\u5bfc\u81f4\u6253\u5206\u7a0b\u5e8f grade-lab-util \u4f1a\u6b7b\u5faa\u73af\u3002","title":"primes"},{"location":"6.S081/Lab01-Xv6-and-Unix-utilities/#find","text":"\u95ee\u9898\u63cf\u8ff0 \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7248\u672c\u7684 UNIX \u7684 find \u7a0b\u5e8f user/find.c \uff1a \u627e\u5230\u6240\u6709\u76ee\u5f55\u6811\u4e0b\u7684\u6587\u4ef6\u3002 \u63d0\u793a\uff1a \u53c2\u8003 user/ls.c \u6765\u67e5\u770b\u5982\u4f55\u8bfb\u53d6\u76ee\u5f55\uff1b \u4f7f\u7528\u9012\u5f52\u5f62\u5f0f\u4e0d\u65ad\u5411\u5b50\u76ee\u5f55\u67e5\u627e\uff1b \u4e0d\u8981\u67e5\u627e \".\" \u548c \"..\" \u6587\u4ef6\u5939\uff1b \u5bf9\u6587\u4ef6\u7cfb\u7edf\u7684\u66f4\u6539\u4f1a\u4e00\u76f4\u4fdd\u5b58\u5728 qemu \u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff1b\u4f7f\u7528 make clean \u6765\u6e05\u9664\u7cfb\u7edf\u6587\u4ef6\uff0c\u7136\u540e\u518d \u4f7f\u7528 make qemu ; \u4f7f\u7528 C\u8bed\u8a00 \u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff0c\u540c\u65f6\u4f7f\u7528 strcmp() \u6765\u5bf9\u6bd4\u5b57\u7b26\u4e32\uff1b \u4e0d\u8981\u5fd8\u8bb0\u628a\u7a0b\u5e8f\u6dfb\u52a0\u5230 Makefile \u7684 UPROGS \u91cc\u3002 \u8fd9\u9053\u9898\u51e0\u4e4e\u53ef\u4ee5\u53c2\u8003 user/ls.c \uff0c\u800c\u4e14\u4e0d\u9700\u8981\u5b8c\u5168\u4e86\u89e3\u6240\u6709\u7ec6\u8282\uff0c\u731c\u6d4b\u4e2a\u5927\u6982\uff0c\u7167\u732b\u753b\u864e\u5c31\u80fd\u5b8c\u6210\u3002 \u53c2\u8003\u7b54\u6848 #include \"kernel/types.h\" #include \"kernel/stat.h\" #include \"user/user.h\" #include \"kernel/fs.h\" char * getFilename ( char * path ) { char * p ; // Find first character after last slash. for ( p = path + strlen ( path ); p >= path && * p != '/' ; p -- ) ; p ++ ; return p ; } void find ( char * filename , char * path ) { char buf [ 512 ], * p ; int fd ; struct dirent de ; struct stat st ; if (( fd = open ( path , 0 )) < 0 ){ fprintf ( 2 , \"ls: cannot open %s \\n \" , buf ); return ; } if ( fstat ( fd , & st ) < 0 ){ fprintf ( 2 , \"ls: cannot stat %s \\n \" , buf ); close ( fd ); return ; } switch ( st . type ){ case T_FILE : p = getFilename ( path ); if ( strcmp ( filename , p ) == 0 ) { printf ( \"%s \\n \" , path ); } break ; case T_DIR : if ( strlen ( path ) + 1 + DIRSIZ + 1 > sizeof buf ){ printf ( \"ls: path too long \\n \" ); break ; } strcpy ( buf , path ); p = buf + strlen ( buf ); * p ++ = '/' ; while ( read ( fd , & de , sizeof ( de )) == sizeof ( de )){ if ( de . inum == 0 || strcmp ( de . name , \".\" ) == 0 || strcmp ( de . name , \"..\" ) == 0 ) continue ; memmove ( p , de . name , strlen ( de . name )); p [ strlen ( de . name )] = 0 ; find ( filename , buf ); } break ; } close ( fd ); return ; } int main ( int argc , char * argv []) { if ( argc <= 2 ){ fprintf ( 2 , \"Usage: find DIRPATH FILENAME \\n \" ); exit ( 1 ); } find ( argv [ 2 ], argv [ 1 ]); exit ( 0 ); }","title":"find"},{"location":"6.S081/Lab01-Xv6-and-Unix-utilities/#xargs","text":"\u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684UNIX\u7684 xargs \u7a0b\u5e8f\uff1a\u8bfb\u53d6\u51e0\u884c\u6807\u51c6\u8f93\u51fa\uff0c\u8fd0\u884c\u4e00\u4e2a\u547d\u4ee4\uff0c\u63a5\u53d7\u7684\u53c2\u6570\u5206\u522b\u662f\u6bcf\u4e00\u884c \u7684\u5185\u5bb9\u3002 \u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b xargs \u7684\u529f\u80fd\uff1a $ echo hello too | xargs echo bye bye hello too $ \u8fd9\u6761\u6307\u4ee4\u662f\u5728 echo bye \u540e\u9762\u8ffd\u52a0 hello too \u7684\u5185\u5bb9\uff0c\u5f62\u6210 echo bye hello too \u547d\u4ee4\u3002 \u8fd9\u91cc\u53ea\u9700\u8981\u5b8c\u6210\u4e0a\u9762\u529f\u80fd\u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u5728\u540e\u9762\u7684\u547d\u4ee4\u91cc\u8ffd\u52a0\u65b0\u7684\u53c2\u6570\u3002 UNIX \u7248\u672c\u7684 xargs \u80fd\u591f\u6267\u884c\u66f4\u590d\u6742\u7684\u529f\u80fd\uff0c\u5c06\u5de6\u8fb9\u7684\u5185\u5bb9\u505a\u66f4\u591a\u89e3\u6790\uff0c\u7136\u540e\u6309\u8981\u6c42\u8d4b\u503c\u7ed9\u540e\u9762\u7684\u547d\u4ee4\u4f5c \u4e3a\u53c2\u6570, \u4f8b\u5982\uff1a\u4e00\u6b21\u53ef\u4ee5\u4e3a\u547d\u4ee4\u63d0\u4f9b\u591a\u4e2a\u53c2\u6570\u3002\u6211\u4eec\u8fd9\u91cc\u53ea\u9700\u8981\u5b9e\u73b0\u4e00\u6b21\u8d4b\u503c\u4e00\u4e2a\u53c2\u6570\u7684\u529f\u80fd\u5373\u53ef\u3002 \u5982\u679c\u60f3\u8ba9\u5176\u4ed6UNIX\u4e0a\u7684 find \u547d\u4ee4\u50cf\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u5b9e\u73b0\u7684 find \u4e00\u6837\uff0c\u90a3\u4e48\u9700\u8981\u5728\u90a3\u4e9b find \u547d\u4ee4\u4e0a\u6dfb\u52a0 \u53d8\u91cf -n 1 \u3002 $ echo \"1\\n2\" | xargs -n 1 echo line line 1 line 2 $ \u4e0a\u9762\u7684\u4ee3\u7801\u524d\u63d0\u662f echo \u4e5f\u662fUNIX\u4e0a\u7684 echo \u547d\u4ee4\u3002 \u800c xv6 \u4e0a\u7684 echo \u547d\u4ee4\u4e0d\u4f1a\u5904\u7406 \" \u548c\u8f6c\u4e49\u7b26\u53f7 \\ \u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0a\u9762\u7684\u547d\u4ee4\u8981\u662f\u5728 xv6 \u4e0a\u8fd0\u884c\uff0c echo \u4f1a\u5f97\u5230 5 \u4e2a\u5b57\u7b26 1 \\ n 2 \\n ( \\n \u662f xv6 \u4e0a\u7684 echo \u81ea\u52a8\u6dfb\u52a0\u7684\u7b26\u53f7)\u3002 \u63d0\u793a\uff1a \u4f7f\u7528 fork \u548c exec \u6765\u6267\u884c\u547d\u4ee4\uff0c\u4f7f\u7528 wait \u6765\u4f7f\u5f97\u7236\u7a0b\u5e8f\u7b49\u5f85\u5b50\u7a0b\u5e8f\u7ed3\u675f\u8fd0\u884c\uff1b \u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u7528 \\n \u6765\u5224\u65ad\u662f\u5426\u662f\u53e6\u4e00\u4e2a\u53c2\u6570\uff1b kernel/param.h \u58f0\u660e\u4e86 MAXARG \u5b8f\u5b9a\u4e49\uff0c\u6216\u8bb8\u6709\u7528\uff1b \u4e0d\u8981\u5fd8\u8bb0\u5c06\u7a0b\u5e8f\u52a0\u5165\u5230 UPROGS \u3002 \u53c2\u8003\u7b54\u6848 #include \"kernel/types.h\" #include \"kernel/stat.h\" #include \"kernel/param.h\" #include \"user/user.h\" int main ( int argc , char * argv []) { char buf [ MAXARG + 1 ], tmp ; int index = 0 , i ; if ( argc < 2 ) { fprintf ( 2 , \"Usage: xargs COMMAND [arg1 arg2 ...] \\n \" ); exit ( 1 ); } for ( i = 0 ; i < argc -1 ; i ++ ) { argv [ i ] = argv [ i + 1 ]; } argv [ argc -1 ] = buf ; while ( read ( 0 , & tmp , 1 )) { if ( tmp == '\\n' ) { buf [ index ] = 0 ; if ( fork () == 0 ) { exec ( argv [ 0 ], argv ); exit ( 0 ); } else { wait ( 0 ); } index = 0 ; } else { buf [ index ++ ] = tmp ; } } if ( index > 0 ) { buf [ index ++ ] = 0 ; exec ( argv [ 0 ], argv ); } exit ( 0 ); }","title":"xargs"},{"location":"6.S081/Lab02-System-Calls/","text":"Lab2: System Calls \u00b6 \u9605\u8bfb\u8d44\u6599 \u00b6 \u5b9e\u9a8c\u6307\u5bfc\u5efa\u8bae\u9605\u8bfb xv6-book \u7684\u7b2c\u4e8c\u7ae0\u548c\u7b2c\u56db\u7ae0\u7684\u90e8\u5206\u5185\u5bb9\u3002\u6211\u89c9\u5f97\u5173\u4e8e xv6 \u7684\u542f\u52a8\u548c\u8fd0\u884c\u975e\u5e38\u91cd\u8981\uff0c \u8fd9\u91cc\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u3002\u73b0\u5728\u7684 xv6 \u662f\u5728 RISC-V \u4f53\u7cfb\u6846\u67b6\u4e0b\u5b9e\u73b0\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e95\u5c42\u7684\u6c47\u7f16\u4ee3\u7801\u5b8c\u5168\u53ef\u4ee5 \u4e0d\u6c42\u751a\u89e3\uff0c\u8fd9\u6837\u4f1a\u8ff7\u5931\u5728\u4ee3\u7801\u91cc\u3002\u6211\u4eec\u5c31\u50cf\u4e66\u91cc\u4ecb\u7ecd\u7684\u4e00\u6837\uff0c\u5927\u6982\u4e86\u89e3\u5373\u53ef\u3002 \u83b7\u53d6\u5b9e\u9a8c\u4ee3\u7801\uff1a $ git fetch $ git checkout syscall $ make clean \u542f\u52a8\u8fc7\u7a0b \u00b6 \u9996\u5148\u662f\u4e00\u4e2a\u5bf9\u542f\u52a8\u8fc7\u7a0b\u7684\u603b\u4f53\u63cf\u8ff0\uff0c\u8fd9\u91cc\u7ffb\u8bd1\u81ea xv6-book/chapter2 \u3002 \u4f7f\u7528 RISC-V \u7684CPU\u5206\u4e3a\u4e09\u4e2a\u6a21\u5f0f\uff1a machine mode \u3001 supervisor mode \u548c user mode \u3002 \u5f53 RISC-V \u8ba1\u7b97\u673a\u542f\u52a8\u7684\u65f6\u5019\uff0c\u5b83\u8fd0\u884c\u4e00\u4e2a\u5b58\u50a8\u5728\u53ea\u8bfb\u5b58\u50a8\u5668\u7684 boot loader \u542f\u52a8\u7a0b\u5e8f\u3002\u542f\u52a8 \u52a0\u8f7d\u7a0b\u5e8f\u52a0\u8f7d xv6 \u7684\u5185\u6838\u7a0b\u5e8f\u5230\u5185\u5b58\u4e2d\u3002\u518d machine mode \uff0cCPU \u6267\u884c xv6 \u542f\u52a8\u7a0b\u5e8f\u5230 _entry (kernel/entry.S:6)\u3002 RISC-V \u542f\u52a8\u7684\u65f6\u5019\u9875\u9762\u786c\u4ef6\u529f\u80fd\u8fd8\u65e0\u6cd5\u4f7f\u7528\uff1a\u865a\u62df\u5730\u5740\u76f4\u63a5 \u6620\u5c04\u5230\u7269\u7406\u5730\u5740\u3002 RISC-V \u5c06 xv6 \u5185\u6838\u52a0\u8f7d\u5230\u7269\u7406\u5730\u5740 0x80000000 \uff0c\u56e0\u4e3a 0x0 \u5230 0x80000000 \u5305\u542b\u4e00\u4e9b I/O \u8bbe\u5907\u3002 _entry \u5904\u7684\u6307\u4ee4\u5148\u8bbe\u5b9a\u4e86\u4e00\u4e2a\u6808\uff0c\u4f7f xv6 \u80fd\u591f\u8fd0\u884cC\u8bed\u8a00\u7684\u7a0b\u5e8f\u3002 xv6 \u58f0\u660e\u8fd9\u4e2a\u521d\u59cb\u6808\u7684 \u5730\u65b9\u662f stack0 (kernel/start.c:11)\u3002\u800c _entry \u52a0\u8f7d\u5230\u6808\u6307\u9488\u5bc4\u5b58\u5668 sp \u7684\u5730\u5740\u662f stack0+4096 \uff0c\u6808\u9876\u5730\u5740\uff0c\u56e0\u4e3a RISC-V \u91cc\u4f7f\u7528\u7684\u6808\u7684\u66f4\u65b0\u65b9\u5411\u662f\u4e0b\u964d\u7684\u3002\u63a5\u7740\u5185\u6838\u8c03\u7528C\u8bed\u8a00\u51fd \u6570 start (kernel/start.c:21)\u3002 \u51fd\u6570 start \u4f1a\u6ce8\u518c\u4e00\u4e9b\u914d\u7f6e\uff0c\u8fd9\u4e9b\u6307\u4ee4\u53ea\u80fd\u5728 machine mode \u4e2d\u8fd0\u884c\uff0c\u7136\u540e\u5c31\u4f1a\u5207\u6362\u5230 supervisor mode \u3002\u4e3a\u4e86\u8fdb\u5165 supervisor mode , RISC-V \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6307\u4ee4 mret \u3002 \u8fd9\u4e2a\u6307\u4ee4\u901a\u5e38\u662f\u4ece machine mode \u7684\u6307\u4ee4\u8fd4\u56de\u5230 supervisor mode \u3002\u4f46\u662f start \u5e76\u6ca1\u6709\u4ece \u8fd9\u4e2a\u6307\u4ee4\u8fd4\u56de\uff0c\u53ea\u662f\u8bbe\u5b9a\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u8ba9CPU\u8ba4\u4e3a\u6267\u884c\u8fc7\u7c7b\u4f3c\u7684\u6307\u4ee4\uff1a\u5c06\u4fdd\u5b58\u524d\u4e00\u4e2a\u8fd0\u884c\u6a21\u5f0f\u7684\u5bc4\u5b58 \u5668 mstatus \u8bbe\u5b9a\u6210 supervisor \u6a21\u5f0f\uff0c\u5e76\u4e14\u628a\u8fd4\u56de\u5730\u5740\u8bbe\u5b9a\u6210 main (\u628a main \u5730\u5740\u4fdd \u5b58\u5230\u5bc4\u5b58\u5668 mepc \u4e2d)\uff0c\u5728 supervisor mode \u4e2d\u7981\u7528\u865a\u62df\u5185\u5b58(\u5411\u9875\u8868\u5bc4\u5b58\u5668 satp \u5199\u51650), \u6700\u540e\u5c06\u6240\u6709\u7684\u4e2d\u65ad\u548c\u5f02\u5e38\u90fd\u6388\u6743\u7ed9 supervisor mode \u3002 \u5728\u771f\u6b63\u8df3\u5230 supervisor mode \u524d\uff0c start \u8fd8\u4f1a\u518d\u591a\u505a\u4e00\u4ef6\u4e8b\u60c5\uff1a\u8ba9\u65f6\u949f\u82af\u7247\u4ea7\u751f\u65f6\u949f\u4e2d\u65ad\u3002 \u7ecf\u8fc7\u8fd9\u4e9b\u7410\u788e\u7684\u4e8b\u60c5\uff0c start \u8c03\u7528 mret \u8fd4\u56de\u5230 supervisor mode \u3002 \u5185\u6838\u8fdb\u5165\u5230 main \u51fd\u6570(kernel/main.c:11)\u3002 main \u51fd\u6570\u542f\u52a8\u4e00\u4e9b\u8bbe\u5907\u548c\u5b50\u7a0b\u5e8f\u540e\uff0c\u521b\u5efa\u5b83\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b userinit (kernel/proc.c:219)\u3002 \u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u4e00\u4e9b\u7528 RISC-V \u6c47\u7f16\u6307\u4ee4\u7f16\u5199\u7684\u7a0b\u5e8f\uff0c initcode.S (user/initcode.S:1), \u5b83\u4f1a\u901a\u8fc7\u8fd0\u884c exec \u7cfb\u7edf\u8c03\u7528\uff0c\u91cd\u65b0\u8fd4\u56de\u5185\u6838\u3002\u4e00\u65e6\u5185\u6838\u5b8c\u6210 initcode.S \u8c03\u7528\u7684\u7cfb\u7edf\u8c03\u7528\uff0c \u5c31\u4f1a\u8fd4\u56de\u5230\u7528\u6237\u7a7a\u95f4\u3002 \u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c Init (user/init.c:15) \u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 console \u8bbe\u5907\u6587\u4ef6\uff0c\u7136\u540e\u6253\u5f00\u5b83\u4f5c\u4e3a 0 \u3001 1 \u548c 2 \u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u6700\u540e\u5728 console \u4e2d\u8fd0\u884c\u4e00\u4e2a shell \u7a0b\u3002\u7cfb\u7edf\u542f\u52a8\u5b8c\u6210\u3002 \u7cfb\u7edf\u8c03\u7528 \u00b6 \u63a5\u7740\u6211\u4eec\u770b\u770b\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u7ffb\u8bd1\u81ea xv6/chapter4.3,4.4 \u3002 \u5728\u4e0a\u6587 initcode.S \u6d89\u53ca\u7b2c\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528 exec \u3002\u6211\u4eec\u5c31\u6765\u770b\u770b exec \u5728\u5185\u6838\u4e2d\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5427\u3002 \u5728 user mode \uff0c\u7a0b\u5e8f\u5c06 exec \u4f7f\u7528\u7684\u53c2\u6570\u653e\u5728\u5bc4\u5b58\u5668 a0 \u548c a1 \u4e2d\uff0c\u7136\u540e\u628a\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\u653e\u5728 a7 \u4e2d\u3002\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\u5bf9\u5e94\u5728 syscalls \u6570\u7ec4\u91cc\uff0c\u4fdd\u5b58\u7740\u4e00\u7cfb\u5217\u51fd\u6570\u7684\u6307\u9488(kernel/syscall.c:108)\u3002 \u6307\u4ee4 ecall \u5c06\u9677\u5165\u5185\u6838\uff0c\u7136\u540e\u6267\u884c uservec \u548c usertrap \u548c syscall \u4e09\u6761\u6307\u4ee4\u3002 (\u6700\u540e\u8fd9\u53e5\u8bdd\u6211\u4e5f\u4e0d\u77e5\u9053\u4ec0\u4e48\u610f\u601d\uff0c\u5e94\u8be5\u662f\u7b2c\u56db\u7ae0\u524d\u9762\u90e8\u5206\u7684\u5185\u5bb9\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u5148\u653e\u4e00\u8fb9\u3002) syscall (kernel/syscal.c:133) \u4ece trapframe \u4e2d \u7684 a7 \u4e2d\u83b7\u5f97\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\uff0c\u4f5c\u4e3a syscalls \u4e2d\u7684\u4e0b\u6807\u3002 \u8fd9\u91cc\u6d89\u53ca\u7684\u7b2c\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\u662f SYS_exec (kernel/syscal.h:8)\uff0c\u4e5f \u5c31\u662f\u4f1a\u8c03\u7528\u7cfb\u7edf\u8c03\u7528\u51fd\u6570 sys_exec \u3002 \u5f53\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u8fd4\u56de\u65f6\uff0c syscall \u4f1a\u8bb0\u5f55\u5b83\u7684\u4e00\u4e2a\u8fd4\u56de\u503c\u5230 p->trapframe->a0 \u4e2d\uff08RISC-V \u8fd4 \u56de\u503c\u5c31\u4fdd\u5b58\u5728 a0 \u4e2d\uff09\u3002\u8fd9\u65f6\uff0c\u7528\u6237\u7a7a\u95f4\u8c03\u7528\u7684 exec() \u5c06\u4f1a\u8fd4\u56de\u8fd9\u4e2a\u503c\u3002\u901a\u5e38\uff0c\u7cfb\u7edf\u8c03\u7528\u901a\u8fc7\u8fd4\u56de \u8d1f\u503c\u6765\u8868\u793a\u9519\u8bef\uff0c0\u6216\u6b63\u6570\u8868\u793a\u6210\u529f\u3002\u5982\u679c\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\u9519\u8bef\uff0c syscall \u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u503c -1 \u3002 \u8fd9\u91cc trapframe \u9677\u9631\u5230\u5e95\u662f\u4ec0\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u653e\u4e00\u8fb9\uff0c\u540e\u9762\u7684\u5b9e\u9a8c\u5e94\u8be5\u4f1a\u6d89\u53ca\u5230\u3002 \u63a5\u7740\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0b\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u662f\u5982\u4f55\u83b7\u53d6\u7684\u3002RISC-V \u5c06\u53c2\u6570\u653e\u7f6e\u5728\u5bc4\u5b58\u5668\u91cc\uff0c\u800c kernel trap \u673a\u5236 \u5c06\u4f1a\u628a\u7528\u6237\u7a0b\u5e8f\u7684\u5bc4\u5b58\u5668\u653e\u5728\u5f53\u524d\u8fdb\u7a0b\u7684 trapframe \u91cc\uff0c\u4f9b\u5185\u6838\u4f7f\u7528\u3002\u51fd\u6570 argint \uff0c argaddr \u548c argfd \u7528\u4e8e\u4ece trapframe \u91cc\u83b7\u5f97\u76f8\u5e94\u7684\u53c2\u6570\u4ee5\u53ca\u6587\u4ef6\u63cf\u8ff0\u7b26\u8868\u3002\u8fd9\u4e9b\u51fd\u6570\u90fd\u4f7f\u7528 argraw \u6765 \u83b7\u5f97\u7528\u6237\u7a0b\u5e8f\u5bc4\u5b58\u5668\u7684\u5185\u5bb9(kernel/syscall.c:35) \u4e00\u4e9b\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u662f\u6307\u9488\uff0c\u5185\u6838\u9700\u8981\u7528\u8fd9\u4e9b\u6307\u9488\u5728\u7528\u6237\u5185\u5b58\u4e2d\u8bfb\u53d6\u6216\u8005\u5199\u5165\u5185\u5bb9\u3002\u4f8b\u5982\uff0c exec \u7cfb\u7edf\u8c03\u7528 \u5c31\u5411\u5185\u6838\u4f20\u9012\u4e86\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u6765\u53ea\u60f3\u7528\u6237\u7a7a\u95f4\u7684\u5b57\u7b26\u4e32\u53d8\u91cf\u3002\u8fd9\u4e2a\u9762\u4e34\u4e24\u4e2a\u6311\u6218\uff1a\u7528\u6237\u7a0b\u5e8f\u6709\u53ef\u80fd\u662f\u6709bug \u6216\u8005\u6709\u5bb3\u7684\uff0c\u4f1a\u7ed9\u5185\u6838\u7a7f\u7b2c\u4e00\u4e2a\u9519\u8bef\u7684\u6307\u9488\uff0c\u4f7f\u5f97\u5185\u6838\u6765\u8bbf\u95ee\u5230\u4e86\u4e0d\u8be5\u8bbf\u95ee\u7684\u5185\u5b58\uff1b\u7b2c\u4e8c\u4e2a\u662f\u5185\u6838\u7684\u5730\u5740\u6620\u5c04 \u8868\u548c\u7528\u6237\u7a0b\u5e8f\u4e0d\u540c\uff0c\u6240\u4ee5\u5185\u6838\u4e0d\u80fd\u4f7f\u7528\u6b63\u5e38\u7684\u64cd\u4f5c\u6765\u8bbf\u95ee\u7528\u6237\u7a0b\u5e8f\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u5185\u6838\u5b9e\u73b0\u4e86\u4e00\u7cfb\u5217\u7684\u51fd\u6570\u6765\u5c06 \u7528\u6237\u7684\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u5b89\u5168\u5730\u8f6c\u79fb\u5230\u5185\u6838\u7a7a\u95f4\u3002 fetchstr \u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50(kernel/syscall.c:25)\u3002 \u6587\u4ef6\u7cfb\u7edf\u8c03\u7528 exec \u4f7f\u7528 fetchstr \u6765\u83b7\u53d6\u7528\u6237\u7a7a\u95f4\u7684\u6587\u4ef6\u540d\u3002 fetchstr \u548c copyinstr \u6765\u505a\u8fd9\u4e2a\u56f0\u96be\u7684\u4e8b\u60c5\u3002 copyinstr (kernel/vm.c:406) \u4ece\u7528\u6237\u9875\u8868 pagetable \u7684\u865a\u62df\u5730\u5740 srcva \u590d\u5236\u4e86 max \u6bd4\u7279\u548c dst \u3002 \u5b83\u4f7f\u7528\u4e86 walkaddr (\u8c03\u7528\u4e86 walk ) \u6765\u4e3a srcva \u67e5\u627e\u7269\u7406\u5730\u5740 pa0 \u3002 \u5185\u6838\u5c06\u7269\u7406\u5185\u5b58\u5730\u5740\u5168\u90e8\u6620\u5c04\u5230\u4e86\u4e00\u4e2a\u76f8\u540c\u7684\u5185\u6838\u865a\u62df\u5730\u5740\uff0c copyinstr \u80fd\u591f\u76f4\u63a5\u4ece pa0 \u590d\u5236\u5b57\u7b26 \u5230 dst.walkaddr (kernel/vm.c:95)\u3002\u5b83\u5728\u4f1a\u68c0\u67e5\u7528\u6237\u63d0\u4f9b\u7684\u865a\u62df\u5730\u5740\u662f\u5c5e\u4e8e\u8fd9\u4e2a\u8fdb\u7a0b\u7528\u6237\u5730\u5740\u7a7a\u95f4\u7684, \u56e0\u6b64\uff0c\u7a0b\u5e8f\u4e0d\u53ef\u80fd\u8ba9\u5185\u6838\u8bfb\u53d6\u5176\u4ed6\u5730\u5740\u7684\u5185\u5b58\u3002\u7c7b\u4f3c\u7684\u7a0b\u5e8f copyout \u5219\u662f\u5c06\u6570\u636e\u4ece\u5185\u6838\u7a7a\u95f4\u590d\u5236\u5230\u8fd9\u4e2a\u7a0b\u5e8f \u7684\u7528\u6237\u5730\u5740\u7a7a\u95f4\u3002 \u5177\u4f53\u5728\u9875\u8868\u4e0a\u505a\u4e86\u4ec0\u4e48\u4e8b\u60c5\u4e5f\u53ef\u4ee5\u5148\u653e\u4e00\u8fb9\uff0c\u540e\u9762\u7684\u5b9e\u9a8c\u4f1a\u6d89\u53ca\u5230\u3002 System call tracing \u00b6 \u9898\u76ee\u63cf\u8ff0 \u589e\u52a0\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528 trace \u5e2e\u52a9\u6211\u4eec\u505a\u540e\u9762\u7684debug\u3002\u5b83\u63a5\u6536\u4e00\u4e2a\u6574\u6570\uff0c\u6765\u786e\u5b9a\u8ffd\u8e2a\u54ea\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002 \u4e0d\u8fc7\u7279\u522b\u7684\u662f\uff0c\u8fd9\u4e2a\u6574\u6570\u5e94\u8be5\u662f\u4e2a mask \uff0c\u4f8b\u5982\uff0c\u8ffd\u8e2a fork \u9700\u8981\u8f93\u5165 trace(1 << SYS_fork) \uff08\u5b9a\u4e49\u5728 kernel/syscall.h \u4e2d\uff09\u3002\u9700\u8981\u4fee\u6539 xv6 \u5185\u6838\uff0c\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u88ab\u8ffd\u8e2a\u7684\u7cfb\u7edf\u8c03\u7528\u5c06\u8981 \u8fd4\u56de\u65f6\uff0c\u8f93\u51fa\u4e00\u884c\u5185\u5bb9\uff1a\u8fdb\u7a0b\u7684id\uff0c\u7cfb\u7edf\u8c03\u7528\u7684\u540d\u5b57\u548c\u8fd4\u56de\u503c\u3002 trace \u5e94\u8be5\u53ea\u9700\u8981\u8ffd\u8e2a\u8c03\u7528\u5b83\u7684\u8fdb\u7a0b \u4e0e\u5b50\u8fdb\u7a0b\u3002 \u5b9e\u9a8c\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u7684\u7a0b\u5e8f trace \uff08user/trace.c)\u3002\u5f53\u7cfb\u7edf\u8c03\u7528 trace \u5b8c\u6210\u540e\uff0c \u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7a0b\u5e8f\u4e86\u3002 \u63d0\u793a\uff1a \u5c06 $U/_trace \u52a0\u5165\u5230 Makefile \u7684 UPROGS \u91cc\uff1b \u5728 user/user.h \u4e2d\u52a0\u5165\u7cfb\u7edf\u8c03\u7528\u7684\u58f0\u660e\uff1b\u5728 user/usys.pl \u4e2d\u52a0\u5165 stub ;\u5728 kernel/syscall.h \u4e2d\u52a0\u5165\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7;\u5728 kernel/sysproc.c \u4e2d\u6dfb\u52a0\u51fd\u6570\u5b9a\u4e49\u3002 Makefile \u5c06\u4f7f\u7528perl\u811a\u672c\u6765\u521b \u5efa user/usys.S , \u4e00\u4e2a\u771f\u6b63\u7684\u7cfb\u7edf\u8c03\u7528 stubs \uff0c\u5b83\u4f7f\u7528\u4e86 RISC-V \u7684\u6307\u4ee4 ecall \u6765\u8f6c\u6362\u5230\u5185\u6838\u91cc\u3002 \u8fd9\u65f6\u5e94\u8be5\u80fd\u901a\u8fc7\u4e86\u7f16\u8bd1\uff0c\u4f46\u662f\u65e0\u6cd5\u4f7f\u7528 trace \uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u5728\u5185\u6838\u4e2d\u5b9e\u73b0\u5b83\uff1b \u5c06 sys_trace() \u52a0\u5165\u5230 kernel/sysproc.c \u4e2d\uff0c\u5c06\u5b83\u7684\u53c2\u6570\u4fdd\u5b58\u5230 proc \u7ed3\u6784\u4f53\u4e2d \uff08kernel/proc.h)\u3002\u4f7f\u7528 kernel/syscall.c \u4e2d\u7684\u51fd\u6570\u6765\u4ece\u7528\u6237\u7a7a\u95f4\u83b7\u53d6\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\uff0c\u5b83\u4eec\u7684\u4f7f \u7528\u4f8b\u7a0b\u5728 kernel/sysproc.c \u4e2d\uff1b \u4fee\u6539 fork() \uff08kernel/proc.c) \u5c06 trace \u7684 mask \u4ece\u7236\u7a0b\u5e8f\u590d\u5236\u5230\u5b50\u7a0b\u5e8f\uff1b \u4fee\u6539 syscall() \uff08kernel/syscall.c) \u6253\u5370 trace \u7684\u8f93\u51fa\u3002\u9700\u8981\u4e00\u4e2a\u4fdd\u5b58\u7cfb\u7edf\u8c03\u7528\u540d\u5b57\u7684\u6570\u7ec4\u3002 \u53c2\u8003\u7b54\u6848 \u5177\u4f53\u4fee\u6539\u7684\u5730\u65b9\u5f88\u7410\u788e\uff0c\u5927\u90e8\u5206\u4e0d\u9700\u8981\u77e5\u9053\u7ec6\u8282\uff0c\u6839\u636e\u63d0\u793a\u5b8c\u5168\u53ef\u4ee5\u731c\u6d4b\u51fa\u6765\u8be5\u600e\u4e48\u505a\u3002 Makefile \u6dfb\u52a0 $U/_trace \u5230152\u884c\uff1b user/user.h \u6dfb\u52a0 int trace(int) \u523026\u884c; user/usys.pl \u6dfb\u52a0 entry(\"trace\") \u5230 39\u884c\uff1b \u5728 sysproc.c \u4e2d\u6dfb\u52a0\u51fd\u6570\u7684\u5b9a\u4e49 uint64 sys_trace ( void ) { int n ; if ( argint ( 0 , & n ) < 0 ) return -1 ; myproc () -> trace_mask = n ; return 0 ; } \u5bf9\u5e94\u8981\u4fee\u6539 proc.h \u7684\u7ed3\u6784\u4f53 proc \uff0c\u6dfb\u52a0\u53d8\u91cf int trace_mask \u5230\u72ec\u5360\u533a\u57df \uff08\u4e0d\u9700\u8981\u52a0\u9501\uff09\u3002 \u8fd9\u91cc\u7ed3\u6784\u4f53 proc \u5b9e\u4f8b\u5316\u4e86\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u7528\u4e8e\u5185\u6838\u7a0b\u5e8f\u7684\u901a\u4fe1\u3002 syscall.h \u4e2d\u6dfb\u52a0\u58f0\u660e #define SYS_trace 22 \uff1b syscall.c \u4e2d\u6dfb\u52a0 extern uint64 sys_trace(void); \u4ee5\u53ca\u8865\u5145 syscalls ; \u4fee\u6539 syscall.c \u4e2d\u7684 syscall \u51fd\u6570\uff1a void syscall ( void ) { int num ; struct proc * p = myproc (); num = p -> trapframe -> a7 ; if ( num > 0 && num < NELEM ( syscalls ) && syscalls [ num ]) { p -> trapframe -> a0 = syscalls [ num ](); if ( p -> trace_mask & ( 1 << num )) { printf ( \"%d: syscall %s -> %d \\n \" , p -> pid , syscalls_name [ num ], p -> trapframe -> a0 ); } } else { printf ( \"%d %s: unknown sys call %d \\n \" , p -> pid , p -> name , num ); p -> trapframe -> a0 = -1 ; } } \u5bf9\u5e94\u8981\u521b\u5efa\u4e00\u4e2a\u4fdd\u5b58\u7cfb\u7edf\u8c03\u7528\u540d\u5b57\u7684\u6570\u7ec4 syscalls_name \u3002 \u6700\u540e\u8981\u4fee\u6539 proc.c \u4e2d\u7684 fork \u51fd\u6570\u6765\u4f7f\u5f97\u5b50\u8fdb\u7a0b\u4e5f\u80fd\u8ffd\u8e2a\uff1a \u6dfb\u52a0 np->trace_mask = p->trace_mask; \u3002 Sysinfo \u00b6 \u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528 sysinfo \u6765\u6536\u96c6\u4e00\u4e9b\u7cfb\u7edf\u7684\u8fd0\u884c\u72b6\u6001\u4fe1\u606f\u3002 sysinfo \u63a5\u6536\u4e00\u4e2a\u6307\u5411 sysinfo \u7ed3\u6784\u4f53\u7684\u6307\u9488(kernel/sysinfo.h)\u3002\u5185\u6838\u9700\u8981\u586b\u6ee1\u8fd9\u4e2a\u7ed3\u6784\u4f53\uff1a freemem \u586b\u5165\u5269\u4f59\u7a7a\u95f2\u5185\u5b58\uff1b nproc \u586b\u5165\u9664\u4e86\u72b6\u6001\u4e3a UNUSED \u7684\u8fdb\u7a0b\u6570\u91cf\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7a0b\u5e8f sysinfotest \uff0c\u5f53 sysinfo \u6b63\u786e\u5b9e\u73b0\u540e\uff0c\u8fd0\u884c sysinfotest \u4f1a\u8f93\u51fa sysinfotest: OK \u3002 \u63d0\u793a\uff1a \u5c06 $U/_sysinfotest \u52a0\u5165\u5230 Makefile \u7684 UPROGS \u91cc\uff1b \u53c2\u8003\u4e0a\u4e00\u9053\u9898\u76ee\uff0c\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528\u7684\u58f0\u660e\uff0c\u5148\u901a\u8fc7\u7f16\u8bd1\u3002\u5728 user/user.h \u4e2d\u6dfb\u52a0 sysinfo() \u65f6\uff0c \u53ef\u80fd\u9700\u8981\u663e\u793a\u58f0\u660e\u7ed3\u6784\u4f53 sysinfo \u3002\u8fd9\u4e00\u6b65\u5148\u505a\u5230\u7f16\u8bd1\u4e0d\u62a5\u9519; sysinfo \u9700\u8981\u62f7\u8d1d struct sysinfo \u5230\u7528\u6237\u7a7a\u95f4\uff1b\u53c2\u8003 sys_fstat() (kernel/sysfile.c) \u548c filestat() (kernel/file.c) \u6765\u770b\u4e00\u4e0b\u5982\u4f55\u4f7f\u7528 copyout() ; \u5411 kernel/kalloc.c \u91cc\u6dfb\u52a0\u4e00\u4e2a\u51fd\u6570\uff0c\u6765\u83b7\u53d6\u5f53\u524d\u7a7a\u95f2\u5185\u5b58\u7684\u5927\u5c0f\uff1b \u5411 kernel/proc.c \u6dfb\u52a0\u4e00\u4e2a\u51fd\u6570\uff0c\u6765\u83b7\u53d6\u8fdb\u7a0b\u6570\u91cf\u3002 \u53c2\u8003\u7b54\u6848 \u5728 Makefile \u4e2d\u6dfb\u52a0 $U/_sysinfotest \u5230 UPROGS \u4e2d\uff1b \u5728 user/usys.pl \u4e2d\u6dfb\u52a0 entry(\"sysinfo\") ; \u5728 user/user.h \u4e2d\u6dfb\u52a0 struct sysinfo \u7684\u58f0\u660e\uff0c\u4ee5\u53ca\u7cfb\u7edf\u8c03\u7528 int sysinfo(struct sysinfo*) ; \u5728 kernel/syscall.h \u4e2d\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7 #define SYS_trace 23 ; \u5728 kernel/syscall.c \u4e2d\u6dfb\u52a0 extern uint64 sys_sysinfo(void) \uff0c \u5e76\u4e14\u8865\u5145 syscalls \u548c syscalls_name \u4e24\u4e2a\u6570\u7ec4\uff1b \u5728 kernel/sysproc.c \u4e2d\u5b9e\u73b0 uint64 sys_sysinfo(void) \u51fd\u6570\u3002 \u53ef\u4ee5\u5148\u662f\u4e00\u4e2a\u7a7a\u51fd\u6570\uff0c\u8fd9\u6837\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u4e86\u3002\u5b9e\u9645\u7684\u53c2\u8003\u5b9e\u73b0\u5982\u4e0b\uff1a uint64 sys_sysinfo ( void ) { struct sysinfo info ; struct proc * p = myproc (); uint64 addr ; info . freemem = getfreemem (); info . nproc = getnproc (); if ( argaddr ( 0 , & addr ) < 0 || copyout ( p -> pagetable , addr , ( char * ) & info , sizeof ( info )) < 0 ) return -1 ; return 0 ; } sys_sysinfo \u8c03\u7528\u4e86\u4e24\u4e2a\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u3002 \u5728 kernel/kalloc.c \u4e2d\u5b9e\u73b0\u8bfb\u53d6\u7a7a\u95f2\u5185\u5b58\u7684\u51fd\u6570 getfreemem : uint64 getfreemem ( void ) { uint64 freemem = 0 ; struct run * r ; acquire ( & kmem . lock ); r = kmem . freelist ; for ( r = kmem . freelist ; r ; r = r -> next ) freemem += PGSIZE ; release ( & kmem . lock ); return freemem ; } \u5e76\u4e14\u5728 defs.h:66 \u4e2d\u58f0\u660e\u51fd\u6570\u3002 \u5728 proc.h \u548c proc.c \u4e2d\u5b9e\u73b0\u51fd\u6570 getnproc \u83b7\u53d6\u8fdb\u7a0b\u6570\uff1a uint64 getnproc ( void ) { struct proc * p ; uint64 nproc = 0 ; for ( p = proc ; p < & proc [ NPROC ]; p ++ ) { if ( p -> state != UNUSED ) { nproc ++ ; } } return nproc ; } \u603b\u7ed3 \u00b6 \u5982\u679c\u5e72\u5df4\u5df4\u5730\u6284\u7b54\u6848\uff0c\u6309\u7167\u7b54\u6848\u6765\u505a\uff0c\u90a3\u5c31\u57fa\u672c\u4e0a\u4ec0\u4e48\u4e5f\u6ca1\u641e\u660e\u767d\u3002\u8fd9\u4e2a\u5b9e\u9a8c\u901a\u8fc7\u63d0\u793a\uff0c\u6765\u4fc3\u4f7f\u6211\u4eec\u6765\u9605\u8bfb\u5173\u4e8e \u7cfb\u7edf\u8c03\u7528\u7684\u4ee3\u7801\uff0c\u901a\u8fc7\u4ee3\u7801\u5927\u6982\u63a8\u65ad\u51fa\u7b54\u6848\u7684\u8fc7\u7a0b\u4e5f\u5c31\u662f\u641e\u660e\u767d\u6bcf\u4e2a\u6587\u4ef6\u7684\u4f5c\u7528\u4ee5\u53ca\u7cfb\u7edf\u8c03\u7528\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002","title":"Lab02 System Calls"},{"location":"6.S081/Lab02-System-Calls/#lab2-system-calls","text":"","title":"Lab2: System Calls"},{"location":"6.S081/Lab02-System-Calls/#_1","text":"\u5b9e\u9a8c\u6307\u5bfc\u5efa\u8bae\u9605\u8bfb xv6-book \u7684\u7b2c\u4e8c\u7ae0\u548c\u7b2c\u56db\u7ae0\u7684\u90e8\u5206\u5185\u5bb9\u3002\u6211\u89c9\u5f97\u5173\u4e8e xv6 \u7684\u542f\u52a8\u548c\u8fd0\u884c\u975e\u5e38\u91cd\u8981\uff0c \u8fd9\u91cc\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u3002\u73b0\u5728\u7684 xv6 \u662f\u5728 RISC-V \u4f53\u7cfb\u6846\u67b6\u4e0b\u5b9e\u73b0\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e95\u5c42\u7684\u6c47\u7f16\u4ee3\u7801\u5b8c\u5168\u53ef\u4ee5 \u4e0d\u6c42\u751a\u89e3\uff0c\u8fd9\u6837\u4f1a\u8ff7\u5931\u5728\u4ee3\u7801\u91cc\u3002\u6211\u4eec\u5c31\u50cf\u4e66\u91cc\u4ecb\u7ecd\u7684\u4e00\u6837\uff0c\u5927\u6982\u4e86\u89e3\u5373\u53ef\u3002 \u83b7\u53d6\u5b9e\u9a8c\u4ee3\u7801\uff1a $ git fetch $ git checkout syscall $ make clean","title":"\u9605\u8bfb\u8d44\u6599"},{"location":"6.S081/Lab02-System-Calls/#_2","text":"\u9996\u5148\u662f\u4e00\u4e2a\u5bf9\u542f\u52a8\u8fc7\u7a0b\u7684\u603b\u4f53\u63cf\u8ff0\uff0c\u8fd9\u91cc\u7ffb\u8bd1\u81ea xv6-book/chapter2 \u3002 \u4f7f\u7528 RISC-V \u7684CPU\u5206\u4e3a\u4e09\u4e2a\u6a21\u5f0f\uff1a machine mode \u3001 supervisor mode \u548c user mode \u3002 \u5f53 RISC-V \u8ba1\u7b97\u673a\u542f\u52a8\u7684\u65f6\u5019\uff0c\u5b83\u8fd0\u884c\u4e00\u4e2a\u5b58\u50a8\u5728\u53ea\u8bfb\u5b58\u50a8\u5668\u7684 boot loader \u542f\u52a8\u7a0b\u5e8f\u3002\u542f\u52a8 \u52a0\u8f7d\u7a0b\u5e8f\u52a0\u8f7d xv6 \u7684\u5185\u6838\u7a0b\u5e8f\u5230\u5185\u5b58\u4e2d\u3002\u518d machine mode \uff0cCPU \u6267\u884c xv6 \u542f\u52a8\u7a0b\u5e8f\u5230 _entry (kernel/entry.S:6)\u3002 RISC-V \u542f\u52a8\u7684\u65f6\u5019\u9875\u9762\u786c\u4ef6\u529f\u80fd\u8fd8\u65e0\u6cd5\u4f7f\u7528\uff1a\u865a\u62df\u5730\u5740\u76f4\u63a5 \u6620\u5c04\u5230\u7269\u7406\u5730\u5740\u3002 RISC-V \u5c06 xv6 \u5185\u6838\u52a0\u8f7d\u5230\u7269\u7406\u5730\u5740 0x80000000 \uff0c\u56e0\u4e3a 0x0 \u5230 0x80000000 \u5305\u542b\u4e00\u4e9b I/O \u8bbe\u5907\u3002 _entry \u5904\u7684\u6307\u4ee4\u5148\u8bbe\u5b9a\u4e86\u4e00\u4e2a\u6808\uff0c\u4f7f xv6 \u80fd\u591f\u8fd0\u884cC\u8bed\u8a00\u7684\u7a0b\u5e8f\u3002 xv6 \u58f0\u660e\u8fd9\u4e2a\u521d\u59cb\u6808\u7684 \u5730\u65b9\u662f stack0 (kernel/start.c:11)\u3002\u800c _entry \u52a0\u8f7d\u5230\u6808\u6307\u9488\u5bc4\u5b58\u5668 sp \u7684\u5730\u5740\u662f stack0+4096 \uff0c\u6808\u9876\u5730\u5740\uff0c\u56e0\u4e3a RISC-V \u91cc\u4f7f\u7528\u7684\u6808\u7684\u66f4\u65b0\u65b9\u5411\u662f\u4e0b\u964d\u7684\u3002\u63a5\u7740\u5185\u6838\u8c03\u7528C\u8bed\u8a00\u51fd \u6570 start (kernel/start.c:21)\u3002 \u51fd\u6570 start \u4f1a\u6ce8\u518c\u4e00\u4e9b\u914d\u7f6e\uff0c\u8fd9\u4e9b\u6307\u4ee4\u53ea\u80fd\u5728 machine mode \u4e2d\u8fd0\u884c\uff0c\u7136\u540e\u5c31\u4f1a\u5207\u6362\u5230 supervisor mode \u3002\u4e3a\u4e86\u8fdb\u5165 supervisor mode , RISC-V \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6307\u4ee4 mret \u3002 \u8fd9\u4e2a\u6307\u4ee4\u901a\u5e38\u662f\u4ece machine mode \u7684\u6307\u4ee4\u8fd4\u56de\u5230 supervisor mode \u3002\u4f46\u662f start \u5e76\u6ca1\u6709\u4ece \u8fd9\u4e2a\u6307\u4ee4\u8fd4\u56de\uff0c\u53ea\u662f\u8bbe\u5b9a\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u8ba9CPU\u8ba4\u4e3a\u6267\u884c\u8fc7\u7c7b\u4f3c\u7684\u6307\u4ee4\uff1a\u5c06\u4fdd\u5b58\u524d\u4e00\u4e2a\u8fd0\u884c\u6a21\u5f0f\u7684\u5bc4\u5b58 \u5668 mstatus \u8bbe\u5b9a\u6210 supervisor \u6a21\u5f0f\uff0c\u5e76\u4e14\u628a\u8fd4\u56de\u5730\u5740\u8bbe\u5b9a\u6210 main (\u628a main \u5730\u5740\u4fdd \u5b58\u5230\u5bc4\u5b58\u5668 mepc \u4e2d)\uff0c\u5728 supervisor mode \u4e2d\u7981\u7528\u865a\u62df\u5185\u5b58(\u5411\u9875\u8868\u5bc4\u5b58\u5668 satp \u5199\u51650), \u6700\u540e\u5c06\u6240\u6709\u7684\u4e2d\u65ad\u548c\u5f02\u5e38\u90fd\u6388\u6743\u7ed9 supervisor mode \u3002 \u5728\u771f\u6b63\u8df3\u5230 supervisor mode \u524d\uff0c start \u8fd8\u4f1a\u518d\u591a\u505a\u4e00\u4ef6\u4e8b\u60c5\uff1a\u8ba9\u65f6\u949f\u82af\u7247\u4ea7\u751f\u65f6\u949f\u4e2d\u65ad\u3002 \u7ecf\u8fc7\u8fd9\u4e9b\u7410\u788e\u7684\u4e8b\u60c5\uff0c start \u8c03\u7528 mret \u8fd4\u56de\u5230 supervisor mode \u3002 \u5185\u6838\u8fdb\u5165\u5230 main \u51fd\u6570(kernel/main.c:11)\u3002 main \u51fd\u6570\u542f\u52a8\u4e00\u4e9b\u8bbe\u5907\u548c\u5b50\u7a0b\u5e8f\u540e\uff0c\u521b\u5efa\u5b83\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b userinit (kernel/proc.c:219)\u3002 \u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u4e00\u4e9b\u7528 RISC-V \u6c47\u7f16\u6307\u4ee4\u7f16\u5199\u7684\u7a0b\u5e8f\uff0c initcode.S (user/initcode.S:1), \u5b83\u4f1a\u901a\u8fc7\u8fd0\u884c exec \u7cfb\u7edf\u8c03\u7528\uff0c\u91cd\u65b0\u8fd4\u56de\u5185\u6838\u3002\u4e00\u65e6\u5185\u6838\u5b8c\u6210 initcode.S \u8c03\u7528\u7684\u7cfb\u7edf\u8c03\u7528\uff0c \u5c31\u4f1a\u8fd4\u56de\u5230\u7528\u6237\u7a7a\u95f4\u3002 \u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c Init (user/init.c:15) \u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 console \u8bbe\u5907\u6587\u4ef6\uff0c\u7136\u540e\u6253\u5f00\u5b83\u4f5c\u4e3a 0 \u3001 1 \u548c 2 \u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u6700\u540e\u5728 console \u4e2d\u8fd0\u884c\u4e00\u4e2a shell \u7a0b\u3002\u7cfb\u7edf\u542f\u52a8\u5b8c\u6210\u3002","title":"\u542f\u52a8\u8fc7\u7a0b"},{"location":"6.S081/Lab02-System-Calls/#_3","text":"\u63a5\u7740\u6211\u4eec\u770b\u770b\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u7ffb\u8bd1\u81ea xv6/chapter4.3,4.4 \u3002 \u5728\u4e0a\u6587 initcode.S \u6d89\u53ca\u7b2c\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528 exec \u3002\u6211\u4eec\u5c31\u6765\u770b\u770b exec \u5728\u5185\u6838\u4e2d\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5427\u3002 \u5728 user mode \uff0c\u7a0b\u5e8f\u5c06 exec \u4f7f\u7528\u7684\u53c2\u6570\u653e\u5728\u5bc4\u5b58\u5668 a0 \u548c a1 \u4e2d\uff0c\u7136\u540e\u628a\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\u653e\u5728 a7 \u4e2d\u3002\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\u5bf9\u5e94\u5728 syscalls \u6570\u7ec4\u91cc\uff0c\u4fdd\u5b58\u7740\u4e00\u7cfb\u5217\u51fd\u6570\u7684\u6307\u9488(kernel/syscall.c:108)\u3002 \u6307\u4ee4 ecall \u5c06\u9677\u5165\u5185\u6838\uff0c\u7136\u540e\u6267\u884c uservec \u548c usertrap \u548c syscall \u4e09\u6761\u6307\u4ee4\u3002 (\u6700\u540e\u8fd9\u53e5\u8bdd\u6211\u4e5f\u4e0d\u77e5\u9053\u4ec0\u4e48\u610f\u601d\uff0c\u5e94\u8be5\u662f\u7b2c\u56db\u7ae0\u524d\u9762\u90e8\u5206\u7684\u5185\u5bb9\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u5148\u653e\u4e00\u8fb9\u3002) syscall (kernel/syscal.c:133) \u4ece trapframe \u4e2d \u7684 a7 \u4e2d\u83b7\u5f97\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\uff0c\u4f5c\u4e3a syscalls \u4e2d\u7684\u4e0b\u6807\u3002 \u8fd9\u91cc\u6d89\u53ca\u7684\u7b2c\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\u662f SYS_exec (kernel/syscal.h:8)\uff0c\u4e5f \u5c31\u662f\u4f1a\u8c03\u7528\u7cfb\u7edf\u8c03\u7528\u51fd\u6570 sys_exec \u3002 \u5f53\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u8fd4\u56de\u65f6\uff0c syscall \u4f1a\u8bb0\u5f55\u5b83\u7684\u4e00\u4e2a\u8fd4\u56de\u503c\u5230 p->trapframe->a0 \u4e2d\uff08RISC-V \u8fd4 \u56de\u503c\u5c31\u4fdd\u5b58\u5728 a0 \u4e2d\uff09\u3002\u8fd9\u65f6\uff0c\u7528\u6237\u7a7a\u95f4\u8c03\u7528\u7684 exec() \u5c06\u4f1a\u8fd4\u56de\u8fd9\u4e2a\u503c\u3002\u901a\u5e38\uff0c\u7cfb\u7edf\u8c03\u7528\u901a\u8fc7\u8fd4\u56de \u8d1f\u503c\u6765\u8868\u793a\u9519\u8bef\uff0c0\u6216\u6b63\u6570\u8868\u793a\u6210\u529f\u3002\u5982\u679c\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\u9519\u8bef\uff0c syscall \u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u503c -1 \u3002 \u8fd9\u91cc trapframe \u9677\u9631\u5230\u5e95\u662f\u4ec0\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u653e\u4e00\u8fb9\uff0c\u540e\u9762\u7684\u5b9e\u9a8c\u5e94\u8be5\u4f1a\u6d89\u53ca\u5230\u3002 \u63a5\u7740\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0b\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u662f\u5982\u4f55\u83b7\u53d6\u7684\u3002RISC-V \u5c06\u53c2\u6570\u653e\u7f6e\u5728\u5bc4\u5b58\u5668\u91cc\uff0c\u800c kernel trap \u673a\u5236 \u5c06\u4f1a\u628a\u7528\u6237\u7a0b\u5e8f\u7684\u5bc4\u5b58\u5668\u653e\u5728\u5f53\u524d\u8fdb\u7a0b\u7684 trapframe \u91cc\uff0c\u4f9b\u5185\u6838\u4f7f\u7528\u3002\u51fd\u6570 argint \uff0c argaddr \u548c argfd \u7528\u4e8e\u4ece trapframe \u91cc\u83b7\u5f97\u76f8\u5e94\u7684\u53c2\u6570\u4ee5\u53ca\u6587\u4ef6\u63cf\u8ff0\u7b26\u8868\u3002\u8fd9\u4e9b\u51fd\u6570\u90fd\u4f7f\u7528 argraw \u6765 \u83b7\u5f97\u7528\u6237\u7a0b\u5e8f\u5bc4\u5b58\u5668\u7684\u5185\u5bb9(kernel/syscall.c:35) \u4e00\u4e9b\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u662f\u6307\u9488\uff0c\u5185\u6838\u9700\u8981\u7528\u8fd9\u4e9b\u6307\u9488\u5728\u7528\u6237\u5185\u5b58\u4e2d\u8bfb\u53d6\u6216\u8005\u5199\u5165\u5185\u5bb9\u3002\u4f8b\u5982\uff0c exec \u7cfb\u7edf\u8c03\u7528 \u5c31\u5411\u5185\u6838\u4f20\u9012\u4e86\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u6765\u53ea\u60f3\u7528\u6237\u7a7a\u95f4\u7684\u5b57\u7b26\u4e32\u53d8\u91cf\u3002\u8fd9\u4e2a\u9762\u4e34\u4e24\u4e2a\u6311\u6218\uff1a\u7528\u6237\u7a0b\u5e8f\u6709\u53ef\u80fd\u662f\u6709bug \u6216\u8005\u6709\u5bb3\u7684\uff0c\u4f1a\u7ed9\u5185\u6838\u7a7f\u7b2c\u4e00\u4e2a\u9519\u8bef\u7684\u6307\u9488\uff0c\u4f7f\u5f97\u5185\u6838\u6765\u8bbf\u95ee\u5230\u4e86\u4e0d\u8be5\u8bbf\u95ee\u7684\u5185\u5b58\uff1b\u7b2c\u4e8c\u4e2a\u662f\u5185\u6838\u7684\u5730\u5740\u6620\u5c04 \u8868\u548c\u7528\u6237\u7a0b\u5e8f\u4e0d\u540c\uff0c\u6240\u4ee5\u5185\u6838\u4e0d\u80fd\u4f7f\u7528\u6b63\u5e38\u7684\u64cd\u4f5c\u6765\u8bbf\u95ee\u7528\u6237\u7a0b\u5e8f\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u5185\u6838\u5b9e\u73b0\u4e86\u4e00\u7cfb\u5217\u7684\u51fd\u6570\u6765\u5c06 \u7528\u6237\u7684\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u5b89\u5168\u5730\u8f6c\u79fb\u5230\u5185\u6838\u7a7a\u95f4\u3002 fetchstr \u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50(kernel/syscall.c:25)\u3002 \u6587\u4ef6\u7cfb\u7edf\u8c03\u7528 exec \u4f7f\u7528 fetchstr \u6765\u83b7\u53d6\u7528\u6237\u7a7a\u95f4\u7684\u6587\u4ef6\u540d\u3002 fetchstr \u548c copyinstr \u6765\u505a\u8fd9\u4e2a\u56f0\u96be\u7684\u4e8b\u60c5\u3002 copyinstr (kernel/vm.c:406) \u4ece\u7528\u6237\u9875\u8868 pagetable \u7684\u865a\u62df\u5730\u5740 srcva \u590d\u5236\u4e86 max \u6bd4\u7279\u548c dst \u3002 \u5b83\u4f7f\u7528\u4e86 walkaddr (\u8c03\u7528\u4e86 walk ) \u6765\u4e3a srcva \u67e5\u627e\u7269\u7406\u5730\u5740 pa0 \u3002 \u5185\u6838\u5c06\u7269\u7406\u5185\u5b58\u5730\u5740\u5168\u90e8\u6620\u5c04\u5230\u4e86\u4e00\u4e2a\u76f8\u540c\u7684\u5185\u6838\u865a\u62df\u5730\u5740\uff0c copyinstr \u80fd\u591f\u76f4\u63a5\u4ece pa0 \u590d\u5236\u5b57\u7b26 \u5230 dst.walkaddr (kernel/vm.c:95)\u3002\u5b83\u5728\u4f1a\u68c0\u67e5\u7528\u6237\u63d0\u4f9b\u7684\u865a\u62df\u5730\u5740\u662f\u5c5e\u4e8e\u8fd9\u4e2a\u8fdb\u7a0b\u7528\u6237\u5730\u5740\u7a7a\u95f4\u7684, \u56e0\u6b64\uff0c\u7a0b\u5e8f\u4e0d\u53ef\u80fd\u8ba9\u5185\u6838\u8bfb\u53d6\u5176\u4ed6\u5730\u5740\u7684\u5185\u5b58\u3002\u7c7b\u4f3c\u7684\u7a0b\u5e8f copyout \u5219\u662f\u5c06\u6570\u636e\u4ece\u5185\u6838\u7a7a\u95f4\u590d\u5236\u5230\u8fd9\u4e2a\u7a0b\u5e8f \u7684\u7528\u6237\u5730\u5740\u7a7a\u95f4\u3002 \u5177\u4f53\u5728\u9875\u8868\u4e0a\u505a\u4e86\u4ec0\u4e48\u4e8b\u60c5\u4e5f\u53ef\u4ee5\u5148\u653e\u4e00\u8fb9\uff0c\u540e\u9762\u7684\u5b9e\u9a8c\u4f1a\u6d89\u53ca\u5230\u3002","title":"\u7cfb\u7edf\u8c03\u7528"},{"location":"6.S081/Lab02-System-Calls/#system-call-tracing","text":"\u9898\u76ee\u63cf\u8ff0 \u589e\u52a0\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528 trace \u5e2e\u52a9\u6211\u4eec\u505a\u540e\u9762\u7684debug\u3002\u5b83\u63a5\u6536\u4e00\u4e2a\u6574\u6570\uff0c\u6765\u786e\u5b9a\u8ffd\u8e2a\u54ea\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002 \u4e0d\u8fc7\u7279\u522b\u7684\u662f\uff0c\u8fd9\u4e2a\u6574\u6570\u5e94\u8be5\u662f\u4e2a mask \uff0c\u4f8b\u5982\uff0c\u8ffd\u8e2a fork \u9700\u8981\u8f93\u5165 trace(1 << SYS_fork) \uff08\u5b9a\u4e49\u5728 kernel/syscall.h \u4e2d\uff09\u3002\u9700\u8981\u4fee\u6539 xv6 \u5185\u6838\uff0c\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u88ab\u8ffd\u8e2a\u7684\u7cfb\u7edf\u8c03\u7528\u5c06\u8981 \u8fd4\u56de\u65f6\uff0c\u8f93\u51fa\u4e00\u884c\u5185\u5bb9\uff1a\u8fdb\u7a0b\u7684id\uff0c\u7cfb\u7edf\u8c03\u7528\u7684\u540d\u5b57\u548c\u8fd4\u56de\u503c\u3002 trace \u5e94\u8be5\u53ea\u9700\u8981\u8ffd\u8e2a\u8c03\u7528\u5b83\u7684\u8fdb\u7a0b \u4e0e\u5b50\u8fdb\u7a0b\u3002 \u5b9e\u9a8c\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u7684\u7a0b\u5e8f trace \uff08user/trace.c)\u3002\u5f53\u7cfb\u7edf\u8c03\u7528 trace \u5b8c\u6210\u540e\uff0c \u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7a0b\u5e8f\u4e86\u3002 \u63d0\u793a\uff1a \u5c06 $U/_trace \u52a0\u5165\u5230 Makefile \u7684 UPROGS \u91cc\uff1b \u5728 user/user.h \u4e2d\u52a0\u5165\u7cfb\u7edf\u8c03\u7528\u7684\u58f0\u660e\uff1b\u5728 user/usys.pl \u4e2d\u52a0\u5165 stub ;\u5728 kernel/syscall.h \u4e2d\u52a0\u5165\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7;\u5728 kernel/sysproc.c \u4e2d\u6dfb\u52a0\u51fd\u6570\u5b9a\u4e49\u3002 Makefile \u5c06\u4f7f\u7528perl\u811a\u672c\u6765\u521b \u5efa user/usys.S , \u4e00\u4e2a\u771f\u6b63\u7684\u7cfb\u7edf\u8c03\u7528 stubs \uff0c\u5b83\u4f7f\u7528\u4e86 RISC-V \u7684\u6307\u4ee4 ecall \u6765\u8f6c\u6362\u5230\u5185\u6838\u91cc\u3002 \u8fd9\u65f6\u5e94\u8be5\u80fd\u901a\u8fc7\u4e86\u7f16\u8bd1\uff0c\u4f46\u662f\u65e0\u6cd5\u4f7f\u7528 trace \uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u5728\u5185\u6838\u4e2d\u5b9e\u73b0\u5b83\uff1b \u5c06 sys_trace() \u52a0\u5165\u5230 kernel/sysproc.c \u4e2d\uff0c\u5c06\u5b83\u7684\u53c2\u6570\u4fdd\u5b58\u5230 proc \u7ed3\u6784\u4f53\u4e2d \uff08kernel/proc.h)\u3002\u4f7f\u7528 kernel/syscall.c \u4e2d\u7684\u51fd\u6570\u6765\u4ece\u7528\u6237\u7a7a\u95f4\u83b7\u53d6\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\uff0c\u5b83\u4eec\u7684\u4f7f \u7528\u4f8b\u7a0b\u5728 kernel/sysproc.c \u4e2d\uff1b \u4fee\u6539 fork() \uff08kernel/proc.c) \u5c06 trace \u7684 mask \u4ece\u7236\u7a0b\u5e8f\u590d\u5236\u5230\u5b50\u7a0b\u5e8f\uff1b \u4fee\u6539 syscall() \uff08kernel/syscall.c) \u6253\u5370 trace \u7684\u8f93\u51fa\u3002\u9700\u8981\u4e00\u4e2a\u4fdd\u5b58\u7cfb\u7edf\u8c03\u7528\u540d\u5b57\u7684\u6570\u7ec4\u3002 \u53c2\u8003\u7b54\u6848 \u5177\u4f53\u4fee\u6539\u7684\u5730\u65b9\u5f88\u7410\u788e\uff0c\u5927\u90e8\u5206\u4e0d\u9700\u8981\u77e5\u9053\u7ec6\u8282\uff0c\u6839\u636e\u63d0\u793a\u5b8c\u5168\u53ef\u4ee5\u731c\u6d4b\u51fa\u6765\u8be5\u600e\u4e48\u505a\u3002 Makefile \u6dfb\u52a0 $U/_trace \u5230152\u884c\uff1b user/user.h \u6dfb\u52a0 int trace(int) \u523026\u884c; user/usys.pl \u6dfb\u52a0 entry(\"trace\") \u5230 39\u884c\uff1b \u5728 sysproc.c \u4e2d\u6dfb\u52a0\u51fd\u6570\u7684\u5b9a\u4e49 uint64 sys_trace ( void ) { int n ; if ( argint ( 0 , & n ) < 0 ) return -1 ; myproc () -> trace_mask = n ; return 0 ; } \u5bf9\u5e94\u8981\u4fee\u6539 proc.h \u7684\u7ed3\u6784\u4f53 proc \uff0c\u6dfb\u52a0\u53d8\u91cf int trace_mask \u5230\u72ec\u5360\u533a\u57df \uff08\u4e0d\u9700\u8981\u52a0\u9501\uff09\u3002 \u8fd9\u91cc\u7ed3\u6784\u4f53 proc \u5b9e\u4f8b\u5316\u4e86\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u7528\u4e8e\u5185\u6838\u7a0b\u5e8f\u7684\u901a\u4fe1\u3002 syscall.h \u4e2d\u6dfb\u52a0\u58f0\u660e #define SYS_trace 22 \uff1b syscall.c \u4e2d\u6dfb\u52a0 extern uint64 sys_trace(void); \u4ee5\u53ca\u8865\u5145 syscalls ; \u4fee\u6539 syscall.c \u4e2d\u7684 syscall \u51fd\u6570\uff1a void syscall ( void ) { int num ; struct proc * p = myproc (); num = p -> trapframe -> a7 ; if ( num > 0 && num < NELEM ( syscalls ) && syscalls [ num ]) { p -> trapframe -> a0 = syscalls [ num ](); if ( p -> trace_mask & ( 1 << num )) { printf ( \"%d: syscall %s -> %d \\n \" , p -> pid , syscalls_name [ num ], p -> trapframe -> a0 ); } } else { printf ( \"%d %s: unknown sys call %d \\n \" , p -> pid , p -> name , num ); p -> trapframe -> a0 = -1 ; } } \u5bf9\u5e94\u8981\u521b\u5efa\u4e00\u4e2a\u4fdd\u5b58\u7cfb\u7edf\u8c03\u7528\u540d\u5b57\u7684\u6570\u7ec4 syscalls_name \u3002 \u6700\u540e\u8981\u4fee\u6539 proc.c \u4e2d\u7684 fork \u51fd\u6570\u6765\u4f7f\u5f97\u5b50\u8fdb\u7a0b\u4e5f\u80fd\u8ffd\u8e2a\uff1a \u6dfb\u52a0 np->trace_mask = p->trace_mask; \u3002","title":"System call tracing"},{"location":"6.S081/Lab02-System-Calls/#sysinfo","text":"\u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528 sysinfo \u6765\u6536\u96c6\u4e00\u4e9b\u7cfb\u7edf\u7684\u8fd0\u884c\u72b6\u6001\u4fe1\u606f\u3002 sysinfo \u63a5\u6536\u4e00\u4e2a\u6307\u5411 sysinfo \u7ed3\u6784\u4f53\u7684\u6307\u9488(kernel/sysinfo.h)\u3002\u5185\u6838\u9700\u8981\u586b\u6ee1\u8fd9\u4e2a\u7ed3\u6784\u4f53\uff1a freemem \u586b\u5165\u5269\u4f59\u7a7a\u95f2\u5185\u5b58\uff1b nproc \u586b\u5165\u9664\u4e86\u72b6\u6001\u4e3a UNUSED \u7684\u8fdb\u7a0b\u6570\u91cf\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7a0b\u5e8f sysinfotest \uff0c\u5f53 sysinfo \u6b63\u786e\u5b9e\u73b0\u540e\uff0c\u8fd0\u884c sysinfotest \u4f1a\u8f93\u51fa sysinfotest: OK \u3002 \u63d0\u793a\uff1a \u5c06 $U/_sysinfotest \u52a0\u5165\u5230 Makefile \u7684 UPROGS \u91cc\uff1b \u53c2\u8003\u4e0a\u4e00\u9053\u9898\u76ee\uff0c\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528\u7684\u58f0\u660e\uff0c\u5148\u901a\u8fc7\u7f16\u8bd1\u3002\u5728 user/user.h \u4e2d\u6dfb\u52a0 sysinfo() \u65f6\uff0c \u53ef\u80fd\u9700\u8981\u663e\u793a\u58f0\u660e\u7ed3\u6784\u4f53 sysinfo \u3002\u8fd9\u4e00\u6b65\u5148\u505a\u5230\u7f16\u8bd1\u4e0d\u62a5\u9519; sysinfo \u9700\u8981\u62f7\u8d1d struct sysinfo \u5230\u7528\u6237\u7a7a\u95f4\uff1b\u53c2\u8003 sys_fstat() (kernel/sysfile.c) \u548c filestat() (kernel/file.c) \u6765\u770b\u4e00\u4e0b\u5982\u4f55\u4f7f\u7528 copyout() ; \u5411 kernel/kalloc.c \u91cc\u6dfb\u52a0\u4e00\u4e2a\u51fd\u6570\uff0c\u6765\u83b7\u53d6\u5f53\u524d\u7a7a\u95f2\u5185\u5b58\u7684\u5927\u5c0f\uff1b \u5411 kernel/proc.c \u6dfb\u52a0\u4e00\u4e2a\u51fd\u6570\uff0c\u6765\u83b7\u53d6\u8fdb\u7a0b\u6570\u91cf\u3002 \u53c2\u8003\u7b54\u6848 \u5728 Makefile \u4e2d\u6dfb\u52a0 $U/_sysinfotest \u5230 UPROGS \u4e2d\uff1b \u5728 user/usys.pl \u4e2d\u6dfb\u52a0 entry(\"sysinfo\") ; \u5728 user/user.h \u4e2d\u6dfb\u52a0 struct sysinfo \u7684\u58f0\u660e\uff0c\u4ee5\u53ca\u7cfb\u7edf\u8c03\u7528 int sysinfo(struct sysinfo*) ; \u5728 kernel/syscall.h \u4e2d\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7 #define SYS_trace 23 ; \u5728 kernel/syscall.c \u4e2d\u6dfb\u52a0 extern uint64 sys_sysinfo(void) \uff0c \u5e76\u4e14\u8865\u5145 syscalls \u548c syscalls_name \u4e24\u4e2a\u6570\u7ec4\uff1b \u5728 kernel/sysproc.c \u4e2d\u5b9e\u73b0 uint64 sys_sysinfo(void) \u51fd\u6570\u3002 \u53ef\u4ee5\u5148\u662f\u4e00\u4e2a\u7a7a\u51fd\u6570\uff0c\u8fd9\u6837\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u4e86\u3002\u5b9e\u9645\u7684\u53c2\u8003\u5b9e\u73b0\u5982\u4e0b\uff1a uint64 sys_sysinfo ( void ) { struct sysinfo info ; struct proc * p = myproc (); uint64 addr ; info . freemem = getfreemem (); info . nproc = getnproc (); if ( argaddr ( 0 , & addr ) < 0 || copyout ( p -> pagetable , addr , ( char * ) & info , sizeof ( info )) < 0 ) return -1 ; return 0 ; } sys_sysinfo \u8c03\u7528\u4e86\u4e24\u4e2a\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u3002 \u5728 kernel/kalloc.c \u4e2d\u5b9e\u73b0\u8bfb\u53d6\u7a7a\u95f2\u5185\u5b58\u7684\u51fd\u6570 getfreemem : uint64 getfreemem ( void ) { uint64 freemem = 0 ; struct run * r ; acquire ( & kmem . lock ); r = kmem . freelist ; for ( r = kmem . freelist ; r ; r = r -> next ) freemem += PGSIZE ; release ( & kmem . lock ); return freemem ; } \u5e76\u4e14\u5728 defs.h:66 \u4e2d\u58f0\u660e\u51fd\u6570\u3002 \u5728 proc.h \u548c proc.c \u4e2d\u5b9e\u73b0\u51fd\u6570 getnproc \u83b7\u53d6\u8fdb\u7a0b\u6570\uff1a uint64 getnproc ( void ) { struct proc * p ; uint64 nproc = 0 ; for ( p = proc ; p < & proc [ NPROC ]; p ++ ) { if ( p -> state != UNUSED ) { nproc ++ ; } } return nproc ; }","title":"Sysinfo"},{"location":"6.S081/Lab02-System-Calls/#_4","text":"\u5982\u679c\u5e72\u5df4\u5df4\u5730\u6284\u7b54\u6848\uff0c\u6309\u7167\u7b54\u6848\u6765\u505a\uff0c\u90a3\u5c31\u57fa\u672c\u4e0a\u4ec0\u4e48\u4e5f\u6ca1\u641e\u660e\u767d\u3002\u8fd9\u4e2a\u5b9e\u9a8c\u901a\u8fc7\u63d0\u793a\uff0c\u6765\u4fc3\u4f7f\u6211\u4eec\u6765\u9605\u8bfb\u5173\u4e8e \u7cfb\u7edf\u8c03\u7528\u7684\u4ee3\u7801\uff0c\u901a\u8fc7\u4ee3\u7801\u5927\u6982\u63a8\u65ad\u51fa\u7b54\u6848\u7684\u8fc7\u7a0b\u4e5f\u5c31\u662f\u641e\u660e\u767d\u6bcf\u4e2a\u6587\u4ef6\u7684\u4f5c\u7528\u4ee5\u53ca\u7cfb\u7edf\u8c03\u7528\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002","title":"\u603b\u7ed3"},{"location":"6.S081/Lab03-Page-Tables/","text":"Lab3: Page Tables \u00b6 \u8fd9\u4e00\u8282\u5b9e\u9a8c\u6d89\u53ca\u7684\u662f\u8ba1\u7b97\u673a\u7684\u9875\u8868\uff0c\u4e5f\u5c31\u662f\u865a\u62df\u5185\u5b58\u3002\u6211\u9605\u8bfb\u4e86 xv6-book \u7684\u7b2c\u4e09\u7ae0\u5185\u5bb9\uff0c\u5199\u5f97 \u975e\u5e38\u597d\uff0c\u5f88\u6e05\u695a\u4e5f\u7b80\u6d01\uff0c\u6d89\u53ca\u5176\u4ed6\u7ae0\u8282\u7684\u590d\u6742\u5185\u5bb9\u90fd\u4f1a\u7701\u7565\uff0c\u589e\u52a0\u4e86\u9605\u8bfb\u7406\u89e3\u7684\u8fde\u8d2f\u6027\uff0c\u975e\u5e38\u5efa\u8bae \u8ddf\u7740\u8bb2\u4e49\u9605\u8bfb\u6e90\u7801\uff1a kern/memlayout.h \u3001 kern/vm.c \u548c kernel/kalloc.c \u3002 \u6211\u540c\u65f6\u8fd8\u5efa\u8bae\u63d0\u524d\u9605\u8bfb\u7b2c\u56db\u7ae0\u548c\u7b2c\u4e03\u7ae0\u7684\u90e8\u5206\u5185\u5bb9\uff0c\u5bf9\u7b2c\u4e8c\u9898\u548c\u7b2c\u4e09\u9898\u6709\u5f88\u597d\u7684\u5e2e\u52a9\u4f5c\u7528\u3002 \u83b7\u53d6\u5b9e\u9a8c\u4ee3\u7801\uff1a $ git fetch $ git checkout pgtbl $ make clean \u6253\u5370\u9875\u8868 \u00b6 \u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570 vmprint(pagetable_t) \u63a5\u53d7\u4e00\u4e2a pagetable_t \u6253\u5370\u5b83\u7684\u503c\u3002 \u540c\u65f6\u5728 exec \u51fd\u6570\u7684 return argc \u524d\u6dfb\u52a0 if(p->pid==1) vmprint(p->pagetable) \uff0c \u6765\u6253\u5370\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684 pagetable \u3002\u7a0b\u5e8f\u9700\u8981\u901a\u8fc7 make grade \u4e2d\u7684 pte printout \u6d4b\u8bd5\u3002 \u5f53 xv6 \u542f\u52a8\u65f6\u9700\u8981\u6253\u5370\u7c7b\u4f3c\u5982\u4e0b\u7684\u4fe1\u606f\uff1a page table 0x0000000087f6e000 ..0: pte 0x0000000021fda801 pa 0x0000000087f6a000 .. ..0: pte 0x0000000021fda401 pa 0x0000000087f69000 .. .. ..0: pte 0x0000000021fdac1f pa 0x0000000087f6b000 .. .. ..1: pte 0x0000000021fda00f pa 0x0000000087f68000 .. .. ..2: pte 0x0000000021fd9c1f pa 0x0000000087f67000 ..255: pte 0x0000000021fdb401 pa 0x0000000087f6d000 .. ..511: pte 0x0000000021fdb001 pa 0x0000000087f6c000 .. .. ..510: pte 0x0000000021fdd807 pa 0x0000000087f76000 .. .. ..511: pte 0x0000000020001c0b pa 0x0000000080007000 \u7b2c\u4e00\u884c\u662f vmprint \u7684\u53c2\u6570\u3002\u63a5\u4e0b\u6765\u6bcf\u4e00\u884c\u7f29\u8fdb\u4ee3\u8868PTE\u7684\u6df1\u5ea6\uff0c\u63a5\u7740\u662f\u8be5PTE\u5728\u8868\u4e2d\u7684\u4e0b\u6807\u3001PTE \u7684\u5730\u5740\u4ee5\u53ca\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u3002\u4e0d\u8981\u6253\u5370\u4e0d\u5141\u8bb8\u8bbf\u95ee\u7684PTE\u3002 \u63d0\u793a\uff1a \u53ef\u4ee5\u5728 kernel/vm.c \u4e2d\u5b9e\u73b0\uff1b \u9700\u8981\u7528\u5230 kernel/riscv.h \u6700\u540e\u7684\u5b8f\u5b9a\u4e49\uff1b \u53ef\u4ee5\u53c2\u8003 freewalk \uff1b \u5728 kernel/defs.h \u4e2d\u58f0\u660e vmprint \u5c31\u53ef\u4ee5\u5728 exec \u4e2d\u4f7f\u7528\u5b83\u4e86\uff1b \u4f7f\u7528 %p \u6765\u6253\u5370\u5730\u5740\u3002 \u53c2\u8003\u7b54\u6848 \u63d0\u793a\u5df2\u7ecf\u628a\u4e00\u4e9b\u7410\u788e\u7684\u4fee\u6539\u70b9\u544a\u8bc9\u4e86\u6211\u4eec\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u5355\u7eaf\u5217\u51fa\u4e00\u4e2a vmprint \u7684\u53c2\u8003\u4ee3\u7801\u5427\uff1a // Recursively print page-table pages information. void vmprint ( pagetable_t pagetable , int deepth ) { if ( deepth == 0 ) printf ( \"page table %p \\n \" , pagetable ); // there are 2^9 = 512 PTEs in a page table. for ( int i = 0 ; i < 512 ; i ++ ){ pte_t pte = pagetable [ i ]; if ( pte & PTE_V ){ uint64 child = PTE2PA ( pte ); for ( int j = 0 ; j < deepth ; ++ j ) printf ( \".. \" ); printf ( \"..%d: pte %p pa %p \\n \" , i , pte , child ); if (( pte & ( PTE_R | PTE_W | PTE_X )) == 0 ) // this PTE points to a lower-level page table. vmprint (( pagetable_t ) child , deepth + 1 ); } } } \u601d\u8003\u9898 \u6839\u636e xv6-book \u4e2d\u5173\u4e8e\u7528\u6237\u5185\u5b58\u7a7a\u95f4\u7684\u56fe3-4\u6765\u89e3\u91ca\u7b2c0\u9875\u4e0e\u7b2c2\u9875\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u7528\u6237\u6a21\u5f0f (user mode) \u4e0b\u80fd\u5426\u8bfb\u5199\u7b2c1\u9875\u7684\u5185\u5bb9\u3002 \u53c2\u8003\u7b54\u6848 exec \u4f1a\u5148\u628a\u9700\u8981\u8c03\u7528\u7684\u7a0b\u5e8f\u590d\u5236\u5230\u8fdb\u7a0b\u7a7a\u95f4\u7684\u5f00\u5934\uff08kernel/exec.c:42:59)\uff0c\u6240\u4ee5\u524d\u51e0\u9875 \u4e00\u5b9a\u90fd\u662f\u7a0b\u5e8f\u7684\u4ee3\u7801\u3002\u4f46\u662f\u7a76\u7adf\u6709\u51e0\u9875\uff0c\u6211\u4eec\u8fd8\u662f\u9700\u8981\u7ee7\u7eed\u63a8\u7406\u4e00\u4e0b\u3002 exec \u4f1a\u7d27\u63a5\u7740\u4ee3\u7801\u540e \u9762\u5206\u914d\u4e24\u9875\u5185\u5b58\uff0c\u5206\u522b\u5bf9\u5e94\u7528\u6237\u7a7a\u95f4\u7684 guard page \u548c stack (kernel/exec.c:69:76)\u3002 \u5176\u4e2d guard page \u662f\u7528\u6765\u628a\u7a0b\u5e8f\u7684\u5185\u5bb9\u548c\u6808\u5206\u9694\u5f00\u7684\u5b89\u5168\u9875\uff0c\u4f1a\u5728 PTE_U \u4f4d\u88ab\u6807\u8bb0\u4e3a\u4e0d\u53ef\u7528 (kernel/vim.c:348)\uff0c\u800c PTE_V \u8fd8\u662f1\u3002\u6240\u4ee5 vmprint \u4f1a\u6253\u5370\u4e00\u4e2a\u8fde\u7eed\u7684n\u9875\u7a0b\u5e8f\u4ee3\u7801 \u6570\u636e\u6709\u5173\u7684PTE\uff0c\u7d27\u8ddf\u7740\u4e24\u9875 guard page \u548c stack \u3002\u4ece\u5b9e\u9a8c\u7ed3\u679c\u6765\u770b\uff0c\u7b2c\u4e00\u4e2a vmprint \u5f00\u5934\u8f93\u51fa\u4e86\u8fde\u7eed\u7684\u4e09\u9875PTE\uff0c\u6240\u4ee5\u6211\u4eec\u77e5\u9053\u5f00\u59cb\u7684\u7a0b\u5e8f\u4ee3\u7801\u5360\u7528\u7b2c0\u9875\u5185\u5bb9\uff0c\u7b2c1\u9875\u662f guard page \uff0c \u7b2c2\u9875\u662f stack \u3002\u90a3\u4e48\uff0c\u7528\u6237\u6a21\u5f0f\u4e0b\u662f\u4e0d\u53ef\u4ee5\u8bfb\u5199\u7b2c1\u9875\u7684 guard page \u5185\u5bb9\u7684\u3002 A kernel page table per process \u00b6 Xv6 \u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u5185\u6838\u9875\u8868\u7528\u4e8e\u8fd0\u884c\u5185\u6838\u7a0b\u5e8f\u3002\u800c\u5185\u6838\u9875\u8868\u76f4\u63a5\u548c\u7269\u7406\u5185\u5b58\u5730\u5740\u76f4\u63a5\u5bf9\u5e94\uff0c\u5185\u6838 \u865a\u62df\u5730\u5740\u5c31\u7b49\u4e8e\u7269\u7406\u5730\u5740\u3002 Xv6 \u540c\u65f6\u4e5f\u4e3a\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u5206\u914d\u72ec\u7acb\u7684\u7528\u6237\u7a7a\u95f4\uff0c\u53ea\u5305\u542b\u8fdb\u7a0b\u7684\u7528\u6237\u5185\u5b58\uff0c \u5b83\u4ece0\u5f00\u59cb\u3002\u56e0\u4e3a\u5185\u6838\u9875\u8868\u4e0d\u5305\u542b\u8fd9\u4e9b\u8fdb\u7a0b\u9875\u8868\u7684\u6620\u5c04\uff0c\u7528\u6237\u5730\u5740\u4e0d\u80fd\u88ab\u5185\u6838\u76f4\u63a5\u4f7f\u7528\u3002\u5185\u6838\u9700\u8981\u4f7f\u7528 \u7528\u6237\u7a7a\u95f4\u7684\u5730\u5740\u65f6\uff0c\u5c31\u5fc5\u987b\u5148\u628a\u5b83\u8f6c\u6362\u6210\u7269\u7406\u5730\u5740\u3002\u8fd9\u8282\u7684\u76ee\u6807\u5c31\u662f\u8ba9\u5185\u6838\u76f4\u63a5\u4f7f\u7528\u7528\u6237\u6307\u9488\u3002 \u95ee\u9898\u63cf\u8ff0 \u9996\u5148\u4fee\u6539\u5185\u6838\uff0c\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u5b83\u5b50\u96c6\u7684\u62f7\u8d1d\u540e\u7684\u5185\u6838\u9875\u8868\uff0c\u5f53\u8be5\u8fdb\u7a0b\u8fdb\u5165\u5185\u6838\u6001\u65f6\u4f7f\u7528 \u8fd9\u4e2a\u79c1\u4eba\u7684\u5185\u6838\u9875\u8868\u3002\u4fee\u6539 struct proc \u6765\u4e3a\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u6dfb\u52a0\u4e00\u4e2a\u5185\u6838\u9875\u8868\uff0c\u5e76\u4e14\u4fee\u6539 \u8c03\u5ea6\u5668\uff0c\u5f53\u5207\u6362\u8fdb\u7a0b\u65f6\u4e5f\u4fee\u6539\u5185\u6838\u5730\u5740\u3002\u5f53\u7136\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u5e94\u8be5\u548c\u5168\u5c40\u7684\u5185\u6838\u9875\u8868\u76f8\u540c\u3002 \u5982\u679c usertests \u8fd0\u884c\u901a\u8fc7\uff0c\u5c31\u901a\u8fc7\u4e86\u8fd9\u4e2a\u5b9e\u9a8c\u3002 \u63d0\u793a\uff1a \u4fee\u6539\u7ed3\u6784\u4f53 struct proc \u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u6dfb\u52a0\u5185\u6838\u9875\u8868\uff1b \u4e00\u79cd\u5408\u7406\u7684\u4ea7\u751f\u5185\u6838\u9875\u8868\u7684\u65b9\u5f0f\u662f\uff1a\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u4f3c kvminit \u7684\u51fd\u6570\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u9875\u8868\u800c\u4e0d\u662f\u4fee\u6539 kernel_pagetable \u3002\u4f1a\u5728 allocproc \u4e2d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002 \u786e\u5b9a\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u4e2d\u6620\u5c04\u4e86\u8fd9\u4e2a\u51fd\u6570\u7684\u5185\u6838\u6808\u3002\u5728\u672a\u4fee\u6539\u7684\u4ee3\u7801\u91cc\uff0c\u5b9e\u73b0\u5728 procinit , \u8fd9\u91cc\u5e0c\u671b\u79fb\u52a8\u5230 allocproc \u51fd\u6570\u91cc\u3002 \u4fee\u6539\u8c03\u5ea6\u5668 scheduler() \u6765\u4fee\u6539\u5185\u6838\u9875\u8868\u5728\u5bc4\u5b58\u5668 satp \u91cc\u7684\u5730\u5740\uff08\u53c2\u8003 kvminithart )\u3002 \u4e0d\u8981\u5fd8\u8bb0\u5728\u8c03\u7528 w_satp() \u540e\u8c03\u7528 sfence_vma() \u3002 \u5728 freeproc \u91cc\u91ca\u653e\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u3002 \u6211\u4eec\u5728\u91ca\u653e\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u65f6\uff0c\u4e0d\u8981\u91ca\u653e\u5bf9\u5e94\u7269\u7406\u5185\u5b58\u9875\u7684\u53f6\u5b50\u8282\u70b9\u3002 vmprint \u80fd\u5e2e\u52a9\u6211\u4eec debug \u8fdb\u7a0b\u9875\u8868\u3002 \u53ef\u80fd\u9700\u8981\u5728 kernel/vm.c \u548c kernel/proc.c \u91cc\u6dfb\u52a0\u65b0\u7684\u51fd\u6570\u3002 \u5982\u679c\u9875\u8868\u7f3a\u5931\uff0c\u5c06\u4f1a\u5f15\u8d77\u9875\u8868\u9519\u8bef\u3002\u9519\u8bef\u4fe1\u606f\u5305\u542b sepc=0x00000000xxxxxxxx \u3002 \u5728 kernel/kernel.asm \u91cc\u67e5\u770b xxxxxxxx \u5bf9\u5e94\u54ea\u4e00\u6bb5\u7684\u4ee3\u7801\u3002 \u8fd9\u4e00\u9898\u8981\u6c42\u6211\u4eec\u4e3a\u5b50\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u5185\u6838\u9875\u8868\uff0c\u4e0d\u8981\u6c42\u5185\u6838\u9875\u8868\u5b58\u5728\u7a0b\u5e8f\u9875\u8868\u7684\u6620\u5c04\u3002\u5bf9\u5185\u6838\u9875\u8868\u6dfb\u52a0\u7a0b\u5e8f\u9875\u8868 \u7684\u529f\u80fd\u5728\u4e0b\u4e00\u9898\u5b8c\u6210\u3002\u8fd9\u9053\u9898\u76ee\u7684\u4e3b\u8981\u96be\u70b9\u662f\u8981\u91ca\u653e\u5185\u6838\u9875\u8868\u7684\u65f6\u5019\uff0c\u5148\u91ca\u653e\u8fdb\u7a0b\u7684\u5185\u6838\u6808\uff1b \u4ee5\u53ca\u5982\u4f55\u4fee\u6539 scheduler \u3002\u9488\u5bf9\u5982\u4f55\u4fee\u6539 scheduler \uff0c \u8fd9\u91cc\u53ef\u4ee5\u7b80\u5355\u9605\u8bfb\u4e00\u4e0b\u7b2c\u4e03\u7ae0\u7684\u5185\u5bb9\uff0c scheduler \u91cc\u8c03\u7528\u4e86\u4e00\u4e2a swtch \u6267\u884c\u4e86\u53bb\u8fd0\u884c\u67d0\u4e2a\u5bf9\u5e94\u8fdb\u7a0b\uff0c \u6240\u4ee5\u8fd9\u4e2a\u6307\u4ee4\u524d\u540e\u5b8c\u6210\u5185\u6838\u9875\u8868\u5bc4\u5b58\u5668 satp \u7684\u4fee\u6539\u3002 \u6211\u7684\u7406\u89e3\u662f\uff0c scheduler \u4f3c\u4e4e\u8fd0\u884c\u4e2d\u5168\u5c40\u7684\u5185\u6838\u9875\u8868\u4e0b\u3002 vm.c \u7b49\u7a0b\u5e8f\u4e2d\u7684\u53d8\u91cf\u4e5f\u58f0\u660e\u5728\u5168\u5c40 \u7684\u5185\u6838\u9875\u8868\u4e0b\u3002 \u6211\u518d\u6b21\u63d0\u9192\uff0c\u4e0b\u9762\u8fd9\u4e2a\u7b54\u6848\u53ea\u80fd\u4f5c\u4e3a\u601d\u8def\u5361\u58f3\u65f6\u5019\u7684\u63d0\u793a\uff0c\u751f\u642c\u786c\u770b\u662f\u641e\u4e0d\u61c2\u7684\u3002 \u53c2\u8003\u7b54\u6848 \u5728 def.h \u5bf9\u5e94 vm.c \u7684\u680f\u4e2d\u58f0\u660e\u51fd\u6570 kvmcreate \u548c kvmfree \uff0c\u5206\u522b\u7528\u4e8e\u521b\u5efa\u548c\u91ca\u653e \u5185\u6838\u9875\u8868\uff1b // Create a kernel page table. pagetable_t kvmcreate ( void ) { pagetable_t kptbl = uvmcreate (); if ( kptbl == 0 ) return 0 ; // uart registers if ( mappages ( kptbl , UART0 , PGSIZE , UART0 , PTE_R | PTE_W ) != 0 ){ return 0 ; } // virtio mmio disk interface if ( mappages ( kptbl , VIRTIO0 , PGSIZE , VIRTIO0 , PTE_R | PTE_W ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); return 0 ; } // CLINT if ( mappages ( kptbl , CLINT , 0x10000 , CLINT , PTE_R | PTE_W ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); return 0 ; } // PLIC if ( mappages ( kptbl , PLIC , 0x400000 , PLIC , PTE_R | PTE_W ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); uvmunmap ( kptbl , CLINT , PGROUNDUP ( 0x10000 ) / PGSIZE , 0 ); return 0 ; } // map kernel text executable and read-only. if ( mappages ( kptbl , KERNBASE , ( uint64 ) etext - KERNBASE , KERNBASE , PTE_R | PTE_X ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); uvmunmap ( kptbl , CLINT , PGROUNDUP ( 0x10000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , PLIC , PGROUNDUP ( 0x400000 ) / PGSIZE , 0 ); return 0 ; } // map kernel data and the physical RAM we'll make use of. if ( mappages ( kptbl , ( uint64 ) etext , PHYSTOP - ( uint64 ) etext , ( uint64 ) etext , PTE_R | PTE_W ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); uvmunmap ( kptbl , CLINT , PGROUNDUP ( 0x10000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , PLIC , PGROUNDUP ( 0x400000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , KERNBASE , PGROUNDUP (( uint64 ) etext - KERNBASE ) / PGSIZE , 0 ); return 0 ; } // map the trampoline for trap entry/exit to // the highest virtual address in the kernel. if ( mappages ( kptbl , TRAMPOLINE , PGSIZE , ( uint64 ) trampoline , PTE_R | PTE_X ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); uvmunmap ( kptbl , CLINT , PGROUNDUP ( 0x10000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , PLIC , PGROUNDUP ( 0x400000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , KERNBASE , PGROUNDUP (( uint64 ) etext - KERNBASE ) / PGSIZE , 0 ); uvmunmap ( kptbl , ( uint64 ) etext , PGROUNDUP ( PHYSTOP - ( uint64 ) etext ) / PGSIZE , 0 ); }; return kptbl ; } // Free a kernel page table. void kvmfree ( pagetable_t kptbl ) { uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); uvmunmap ( kptbl , CLINT , PGROUNDUP ( 0x10000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , PLIC , PGROUNDUP ( 0x400000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , KERNBASE , PGROUNDUP (( uint64 ) etext - KERNBASE ) / PGSIZE , 0 ); uvmunmap ( kptbl , ( uint64 ) etext , PGROUNDUP ( PHYSTOP - ( uint64 ) etext ) / PGSIZE , 0 ); uvmunmap ( kptbl , TRAMPOLINE , 1 , 0 ); uvmfree ( kptbl , 0 ); } \u4fee\u6539 kernel/proc.h \u7684\u7ed3\u6784\u4f53\uff0c\u6dfb\u52a0 kptbl \u4ee5\u53ca\u5185\u6838\u9875\u8868\u5bf9\u5e94\u7684\u7a0b\u5e8f\u6808 kptbl_kstack \u3002 \u5176\u4e2d kptbl_kstack \u662f\u7528\u6765\u8868\u793a\u5185\u6838\u9875\u8868\u5bf9\u5e94\u7684\u7a0b\u5e8f\u6808\u662f\u5426\u5206\u914d\u6210\u529f\u7684\uff0c\u5b9e\u9645\u4e0a\u548c kstack \u5185\u5bb9\u4e00\u6a21\u4e00\u6837\u3002 \u5728 kernel/proc.c \u4e2d\u5b9a\u4e49 kstackset \u548c kstackfree \u4e24\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u6620\u5c04\u5185\u6838\u9875 \u8868\u7684\u7a0b\u5e8f\u6808\uff0c\u4ee5\u53ca\u91ca\u653e\u7a0b\u5e8f\u6808\u3002\u5206\u522b\u5728 p->kptbl \u521b\u5efa\u540e \u4ee5\u53ca \u91ca\u653e\u524d\u5b8c\u6210\u3002 // Set kernel stack uint64 kstackset ( struct proc * p ){ if ( mappages ( p -> kptbl , p -> kstack , PGSIZE , kvmpa ( p -> kstack ), PTE_R | PTE_W ) != 0 ) return 0 ; return p -> kstack ; } // Free kernel stack void kstackfree ( struct proc * p ){ uvmunmap ( p -> kptbl , p -> kptbl_kstack , 1 , 0 ); } \u4fee\u6539 kernel/proc.c \u4e2d\u7684\u4e24\u4e2a\u51fd\u6570 allocproc \u548c freeproc \uff0c\u5b8c\u6210\u7b2c\u4e8c\u9898\u3002 // Look in the process table for an UNUSED proc. // If found, initialize state required to run in the kernel, // and return with p->lock held. // If there are no free procs, or a memory allocation fails, return 0. static struct proc * allocproc ( void ) { //... p -> kptbl = kvmcreate (); if ( p -> kptbl == 0 ){ freeproc ( p ); release ( & p -> lock ); return 0 ; } p -> kptbl_kstack = kstackset ( p ); if ( p -> kptbl_kstack == 0 ){ freeproc ( p ); release ( & p -> lock ); return 0 ; } //... } // free a proc structure and the data hanging from it, // including user pages. // p->lock must be held. static void freeproc ( struct proc * p ) { //... if ( p -> kptbl_kstack ) kstackfree ( p ); p -> kptbl_kstack = 0 ; if ( p -> kptbl ) kvmfree ( p -> kptbl ); p -> kptbl = 0 ; //... } \u4fee\u6539 scheduler \u51fd\u6570 void scheduler ( void ) { //... if ( p -> state == RUNNABLE ) { kvminithart1 ( p -> kptbl ); // Switch to chosen process. It is the process's job // to release its lock and then reacquire it // before jumping back to us. p -> state = RUNNING ; c -> proc = p ; swtch ( & c -> context , & p -> context ); // Process is done running for now. // It should have changed its p->state before coming back. c -> proc = 0 ; found = 1 ; kvminithart (); } //... } \u7b80\u5316 copyin/copyinstr \u00b6 \u5185\u6838\u4e2d\u7684\u51fd\u6570 copyin \u8bfb\u53d6\u7528\u6237\u7a7a\u95f4\u7684\u6307\u9488\u3002\u5b83\u5148\u628a\u6307\u9488\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\uff0c\u7136\u540e\u53c8\u56e0\u4e3a\u5185\u6838\u5730\u5740\u548c \u7269\u7406\u5730\u5740\u76f4\u63a5\u5bf9\u5e94\uff0c\u7136\u540e\u5185\u6838\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u5730\u5740\u4e86\u3002\u8f6c\u6362\u8fc7\u7a0b\u5c31\u662f\u67e5\u627e\u8fdb\u7a0b\u9875\u8868\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u9700\u8981 \u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u521b\u5efa\u4e00\u4e2a\u6620\u5c04\uff0c\u6765\u5141\u8bb8 copyin \u76f4\u63a5\u4f7f\u7528\u7528\u6237\u6307\u9488\u3002 \u95ee\u9898\u63cf\u8ff0 \u66ff\u6362 kernel/vm.c:copyin() \u7684\u5b9e\u73b0\uff1a\u95f4\u63a5\u8c03\u7528 kernel/vmcopyin.c\uff1acopyin_new() ; \u66ff\u6362 kernel/vm.c:copyinstr() \u7684\u5b9e\u73b0\uff1a\u95f4\u63a5\u8c03\u7528 kernel/vmcopy.c:copyinstr_new ; \u6620\u5c04\u7528\u6237\u5730\u5740\u5230\u8fdb\u7a0b\u5185\u6838\u9875\u8868\uff0c\u4f7f\u5f97 copyin() \u548c copyinstr() \u53ef\u7528\u3002 \u5982\u679c usertests \u80fd\u591f\u6b63\u786e\u8fd0\u884c\uff0c\u90a3\u4e48\u5c31\u901a\u8fc7\u4e86\u8fd9\u4e2a\u9898\u76ee\u3002 \u8fd9\u4e2a\u5b9e\u9a8c\u4f9d\u8d56\u4e8e\u524d\u63d0\uff1a\u7528\u6237\u865a\u62df\u5730\u5740\u548c\u5185\u6838\u7684\u4ee3\u7801\u548c\u6570\u636e\u5730\u5740\u4e0d\u91cd\u53e0\u3002\u7528\u6237\u7a7a\u95f4\u865a\u62df\u5730\u5740\u7684\u8d77\u59cb\u5730\u5740 \u662f0\uff0c\u5185\u6838\u7684\u7a7a\u95f2\u7a7a\u95f4\u8981\u9ad8\u5f97\u591a\u3002\u4f46\u662f\uff0c\u8fd9\u91cc\u6ca1\u6709\u9650\u5236\u7528\u6237\u7a0b\u5e8f\u4e00\u5b9a\u8981\u6bd4\u5185\u6838\u7684\u6700\u5c0f\u865a\u62df\u5730\u5740\u4f4e\u3002 \u5728 xv6 \u4e2d\uff0c\u5185\u6838\u542f\u52a8\u540e\u7684\u5730\u5740\u662f 0xC000000 \uff0c\u4e5f\u5c31\u662f PLIC \u5bc4\u5b58\u5668\u7684\u5730\u5740\uff1b\u5177\u4f53\u53ef\u4ee5\u770b kernel/vm.c:kvminit() \u548c kernel/memlayout.h \uff0c\u4ee5\u53ca xv6-book \u7684\u56fe3-4\u3002\u6211\u4eec\u9700\u8981 \u8c03\u6574 xv6 \u6765\u907f\u514d\u7528\u6237\u8fdb\u7a0b\u8d85\u8fc7 PLIC \u5730\u5740\u3002\u5b9e\u9645\u4e0a\uff0c\u5185\u6838\u7684\u6700\u4f4e\u865a\u62df\u5730\u5740\u662f 0x2000000 \uff0c \u4fdd\u5b58\u7740 CLINT \u5bc4\u5b58\u5668\u7684\u503c\u3002\u4f46\u662f xv6 \u53ea\u662f\u5728\u542f\u52a8\u521d\u671f\u4f1a\u7528\u5230\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684\uff0c\u6240\u4ee5\u5b8c\u5168\u53ef\u4ee5\u8986\u76d6\u5b83\u3002 \u63d0\u793a\uff1a \u5148\u5b9e\u73b0 copyin() \uff0c\u7b49\u6210\u529f\u4e4b\u540e\uff0c\u518d\u5b9e\u73b0 copyinstr \uff1b \u5f53\u5185\u6838\u4fee\u6539\u8fdb\u7a0b\u7684\u7528\u6237\u6620\u5c04\u65f6\uff0c\u4e5f\u5e94\u8be5\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u4fee\u6539\u8fdb\u7a0b\u5185\u6838\u9875\u8868\u3002\u5bf9\u5e94\u8981\u4fee\u6539 fork() \uff0c exec() \u548c sbrk() ; \u4e0d\u8981\u5fd8\u8bb0\u5305\u542b\u7b2c\u4e00\u4e2a\u8fdb\u7a0b userinit \u7684\u7528\u6237\u9875\u8868\u5230\u5b83\u7684\u5185\u6838\u9875\u8868\u4e2d\uff1b \u6ce8\u610f\u7528\u6237\u6307\u9488\u9700\u8981\u7684\u5141\u8bb8\u6807\u8bb0\u3002 \u88ab\u6807\u8bb0\u4e0a PTE_U \u7684\u9875\u4e0d\u80fd\u5728\u5185\u6838\u6001\u88ab\u8bbf\u95ee\uff1b \u4e0d\u8981\u5fd8\u8bb0 PLIC \u7684\u9650\u5236\u3002 Linux\u4f7f\u7528\u7c7b\u4f3c\u7684\u9875\u8868\u673a\u5236\u3002\u51e0\u5e74\u524d\u5185\u6838\u5728\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u8fdb\u7a0b\u9875\u8868\uff0c\u540c\u65f6\u5177\u6709 \u7528\u6237\u548c\u5185\u6838\u5730\u5740\u6620\u5c04\uff0c\u4ee5\u907f\u514d\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u4e4b\u95f4\u5207\u6362\u65f6\u5fc5\u987b\u5207\u6362\u9875\u8868\u3002\u4f46\u662f\u4e5f\u5bfc\u81f4\u4e86 side-channel \u653b\u51fb\uff0c\u4f8b\u5982 Meltdown \u548c Specture \u3002 \u4e0b\u9762\u7684\u53c2\u8003\u7b54\u6848\u53ea\u80fd\u4fdd\u8bc1\u6d4b\u8bd5\u901a\u8fc7\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u7b97\u6cd5\u7684\u6548\u7387\u3002 \u6211\u9700\u8981\u5c06 grade-lab-pgtbl:65 \u5173\u4e8e\u6d4b\u8bd5\u65f6\u95f4\u7684\u9650\u5b9a\u589e\u52a0\u5230 350 \u624d\u80fd\u901a\u8fc7\u6d4b\u8bd5\uff0c\u4e0d\u77e5\u9053\u662f\u7a0b\u5e8f\u6548\u7387 \u7684\u95ee\u9898\uff0c\u8fd8\u662f\u7535\u8111\u4e0d\u592a\u884c\u3002 \u53c2\u8003\u7b54\u6848 \u9996\u5148\u5728 vm.c \u4e2d\u5b9a\u4e49\u4e24\u4e2a\u51fd\u6570\uff08\u4e0d\u8981\u5fd8\u8bb0\u5728 def.h \u4e2d\u58f0\u660e\uff09\u3002 \u4e00\u4e2a\u51fd\u6570\u53eb kvmdealloc \u7528\u4e8e\u5220\u9664\u5185\u6838\u9875\u8868\u4e2d\u5bf9\u5e94\u7684\u67d0\u4e9b\u8fdb\u7a0b\u9875\uff0c\u53e6\u4e00\u4e2a\u53eb kvmcopy \u7528\u4e8e\u4ece \u8fdb\u7a0b\u9875\u8868\u4e2d\u590d\u5236\u67d0\u4e9b\u9875\u5230\u5185\u8377\u9875\u8868\u4e2d\u3002 // Remove process's page in process's kernel pagetable. uint64 kvmdealloc ( pagetable_t pagetable , uint64 oldsz , uint64 newsz ) { if ( newsz >= oldsz ) return oldsz ; if ( PGROUNDUP ( newsz ) < PGROUNDUP ( oldsz )){ int npages = ( PGROUNDUP ( oldsz ) - PGROUNDUP ( newsz )) / PGSIZE ; uvmunmap ( pagetable , PGROUNDUP ( newsz ), npages , 0 ); } return newsz ; } // Copy process's pagetable to process's kernel pagetable. int kvmcopy ( pagetable_t kptbl , pagetable_t pagetable , uint64 start , uint64 end ) { pte_t * pte ; uint64 pa , i ; // uint flags; start = PGROUNDUP ( start ); if ( start >= PLIC || end > PLIC ) return -1 ; for ( i = start ; i < end ; i += PGSIZE ){ if (( pte = walk ( pagetable , i , 0 )) == 0 ) panic ( \"kvmcopy: pte should exist\" ); if (( * pte & PTE_V ) == 0 ) panic ( \"kvmcopy: page not present\" ); pa = PTE2PA ( * pte ); // flags = PTE_FLAGS(*pte); if ( mappages ( kptbl , i , PGSIZE , pa , PTE_R ) != 0 ){ goto err ; } } return 0 ; err : uvmunmap ( kptbl , start , ( end - start ) / PGSIZE , 0 ); return -1 ; } \u4fee\u6539 proc.c:fork() \uff0c\u6dfb\u52a0\uff08\u5982\u679c\u8fde\u6dfb\u52a0\u5230\u54ea\u91cc\u90fd\u4e0d\u77e5\u9053\uff0c\u5176\u5b9e\u5148\u4e0d\u8981\u770b\u7b54\u6848\uff09\uff1a if ( kvmcopy ( np -> kptbl , np -> pagetable , 0 , np -> sz ) < 0 ){ freeproc ( np ); release ( & np -> lock ); return -1 ; } \u4e3a\u7cfb\u7edf\u8c03\u7528 sbrk() \u4fee\u6539\u51fd\u6570 proc.c:growproc() : int growproc ( int n ) { uint sz ; struct proc * p = myproc (); sz = p -> sz ; if ( n > 0 ){ if (( sz = uvmalloc ( p -> pagetable , sz , sz + n )) == 0 ) { return -1 ; } if ( kvmcopy ( p -> kptbl , p -> pagetable , p -> sz , sz ) < 0 ) { return -1 ; } } else if ( n < 0 ){ sz = uvmdealloc ( p -> pagetable , sz , sz + n ); kvmdealloc ( p -> kptbl , p -> sz , sz ); } p -> sz = sz ; return 0 ; } \u4fee\u6539 proc.c:userinit() \uff1a // allocate one user page and copy init's instructions // and data into it. uvminit(p->pagetable, initcode, sizeof(initcode)); p->sz = PGSIZE; kvmcopy(p->kptbl, p->pagetable, 0, p->sz); \u4fee\u6539 exec.c \uff0c\u6dfb\u52a0\uff1a kvmdealloc ( p -> kptbl , oldsz , 0 ); if ( kvmcopy ( p -> kptbl , p -> pagetable , 0 , p -> sz ) < 0 ) return -1 ; \u8fd9\u65f6\u5df2\u7ecf\u7ed9\u6210\u529f\u7ed9\u8fdb\u7a0b\u4e2d\u7684\u5185\u6838\u9875\u8868\u6dfb\u52a0\u4e86\u8fdb\u7a0b\u9875\u8868\u7684\u62f7\u8d1d\u4e86\u3002 \u4fee\u6539 copyin() \u548c copyinstr() \u4e24\u4e2a\u51fd\u6570\uff0c\u5728 vm.c \u5f00\u5934\u6dfb\u52a0\u5916\u90e8\u51fd\u6570 copyin_new() \u548c copyinstr() \u7684\u58f0\u660e\uff0c\u7136\u540e\u8fd9\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u76f4\u63a5\u8c03\u7528\u8fd9\u4e24\u4e2a\u65b0\u51fd\u6570\u3002 \u601d\u8003\u9898 \u89e3\u91ca\u4e00\u4e0b copyin_new() \u4e2d\u7684\u7b2c\u4e09\u4e2a\u6d4b\u8bd5 srcva + len < srcva \u7684\u4f5c\u7528\uff1b \u4e3e\u51fa\u4f1a\u5f15\u53d1\u5371\u5bb3\u7684\u53cd\u4f8b\u6765\u4f7f\u5f97 copyin_new() \u7684\u524d\u4e24\u4e2a\u6d4b\u8bd5\u901a\u8fc7\uff0c\u800c\u7b2c\u4e09\u4e2a\u6d4b\u8bd5\u4e0d\u901a\u8fc7\u3002 \u5982\u679c\u6ca1\u6709\u7b2c\u4e09\u4e2a\u6d4b\u8bd5\uff0c srcva = 0x0000 0000 0200 0000 \u548c len = 0xffff ffff ffff ffff \u5c31\u53ef\u4ee5\u5229\u7528 uint64 \u8868\u8fbe\u80fd\u529b\u6709\u9650\u7684\u7279\u6027\uff0c\u8bbf\u95ee\u5230\u5185\u6838\u6570\u636e\u3002 \u603b\u7ed3 \u00b6 \u8fd9\u6b21\u5b9e\u9a8c\u505a\u5f97\u6709\u4e9b\u574e\u5777\uff0c\u662f\u6ca1\u6709\u7406\u89e3\u6e90\u7801\u3001\u4e0d\u4f1a gdb \u8c03\u8bd5\u7b49\u539f\u56e0\u9020\u6210\u7684\u5427\u3002 \u6709\u65f6\u5019\u4e5f\u60f3\u592a\u591a\uff0c\u60f3\u7740\u5185\u6838\u9875\u8868\u76f4\u63a5\u548c\u8fdb\u7a0b\u9875\u8868\u516c\u7528\u4e00\u5f20\u8868\u7b49\u7b49\u60f3\u6cd5\uff0c\u9020\u6210\u4e86\u5e72\u6270\uff0c\u8d70\u4e86\u5f2f\u8def\u3002 \u5176\u5b9e\u8fd8\u662f\u6ca1\u6709\u7279\u522b\u7406\u89e3\u5185\u5b58\uff0c\u6bd4\u5982 scheduler \u4e2d\u5b9a\u4e49\u7684\u90a3\u51e0\u4e2a\u5c40\u90e8\u53d8\u91cf\u88ab\u4fdd\u5b58\u5728\u54ea\u91cc\uff0c\u5728\u51fd\u6570\u4e2d\u5207\u6362 \u9875\u8868\u5bc4\u5b58\u5668\u4e3a\u4ec0\u4e48\u6ca1\u6709\u62a5\u9519\uff1b\u653e\u7684\u4f4d\u7f6e\u4e0d\u5bf9\uff0c\u4e3a\u4ec0\u4e48\u53c8\u4f1a\u62a5\u9519\u7b49\u7b49\u95ee\u9898\u3002\u4e0d\u8fc7\u6bcf\u4e00\u4e2a\u7ec6\u8282\u90fd\u641e\u5b9a\u4e86\u518d\u8d70\u4e0b\u4e00\u6b65 \u7684\u5b66\u4e60\u65b9\u5f0f\u6548\u7387\u592a\u4f4e\u4e86\uff0c\u5148\u7ee7\u7eed\u8d70\u8d77\u6765\u5427\u3002","title":"Lab03 Page Tables"},{"location":"6.S081/Lab03-Page-Tables/#lab3-page-tables","text":"\u8fd9\u4e00\u8282\u5b9e\u9a8c\u6d89\u53ca\u7684\u662f\u8ba1\u7b97\u673a\u7684\u9875\u8868\uff0c\u4e5f\u5c31\u662f\u865a\u62df\u5185\u5b58\u3002\u6211\u9605\u8bfb\u4e86 xv6-book \u7684\u7b2c\u4e09\u7ae0\u5185\u5bb9\uff0c\u5199\u5f97 \u975e\u5e38\u597d\uff0c\u5f88\u6e05\u695a\u4e5f\u7b80\u6d01\uff0c\u6d89\u53ca\u5176\u4ed6\u7ae0\u8282\u7684\u590d\u6742\u5185\u5bb9\u90fd\u4f1a\u7701\u7565\uff0c\u589e\u52a0\u4e86\u9605\u8bfb\u7406\u89e3\u7684\u8fde\u8d2f\u6027\uff0c\u975e\u5e38\u5efa\u8bae \u8ddf\u7740\u8bb2\u4e49\u9605\u8bfb\u6e90\u7801\uff1a kern/memlayout.h \u3001 kern/vm.c \u548c kernel/kalloc.c \u3002 \u6211\u540c\u65f6\u8fd8\u5efa\u8bae\u63d0\u524d\u9605\u8bfb\u7b2c\u56db\u7ae0\u548c\u7b2c\u4e03\u7ae0\u7684\u90e8\u5206\u5185\u5bb9\uff0c\u5bf9\u7b2c\u4e8c\u9898\u548c\u7b2c\u4e09\u9898\u6709\u5f88\u597d\u7684\u5e2e\u52a9\u4f5c\u7528\u3002 \u83b7\u53d6\u5b9e\u9a8c\u4ee3\u7801\uff1a $ git fetch $ git checkout pgtbl $ make clean","title":"Lab3: Page Tables"},{"location":"6.S081/Lab03-Page-Tables/#_1","text":"\u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570 vmprint(pagetable_t) \u63a5\u53d7\u4e00\u4e2a pagetable_t \u6253\u5370\u5b83\u7684\u503c\u3002 \u540c\u65f6\u5728 exec \u51fd\u6570\u7684 return argc \u524d\u6dfb\u52a0 if(p->pid==1) vmprint(p->pagetable) \uff0c \u6765\u6253\u5370\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684 pagetable \u3002\u7a0b\u5e8f\u9700\u8981\u901a\u8fc7 make grade \u4e2d\u7684 pte printout \u6d4b\u8bd5\u3002 \u5f53 xv6 \u542f\u52a8\u65f6\u9700\u8981\u6253\u5370\u7c7b\u4f3c\u5982\u4e0b\u7684\u4fe1\u606f\uff1a page table 0x0000000087f6e000 ..0: pte 0x0000000021fda801 pa 0x0000000087f6a000 .. ..0: pte 0x0000000021fda401 pa 0x0000000087f69000 .. .. ..0: pte 0x0000000021fdac1f pa 0x0000000087f6b000 .. .. ..1: pte 0x0000000021fda00f pa 0x0000000087f68000 .. .. ..2: pte 0x0000000021fd9c1f pa 0x0000000087f67000 ..255: pte 0x0000000021fdb401 pa 0x0000000087f6d000 .. ..511: pte 0x0000000021fdb001 pa 0x0000000087f6c000 .. .. ..510: pte 0x0000000021fdd807 pa 0x0000000087f76000 .. .. ..511: pte 0x0000000020001c0b pa 0x0000000080007000 \u7b2c\u4e00\u884c\u662f vmprint \u7684\u53c2\u6570\u3002\u63a5\u4e0b\u6765\u6bcf\u4e00\u884c\u7f29\u8fdb\u4ee3\u8868PTE\u7684\u6df1\u5ea6\uff0c\u63a5\u7740\u662f\u8be5PTE\u5728\u8868\u4e2d\u7684\u4e0b\u6807\u3001PTE \u7684\u5730\u5740\u4ee5\u53ca\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u3002\u4e0d\u8981\u6253\u5370\u4e0d\u5141\u8bb8\u8bbf\u95ee\u7684PTE\u3002 \u63d0\u793a\uff1a \u53ef\u4ee5\u5728 kernel/vm.c \u4e2d\u5b9e\u73b0\uff1b \u9700\u8981\u7528\u5230 kernel/riscv.h \u6700\u540e\u7684\u5b8f\u5b9a\u4e49\uff1b \u53ef\u4ee5\u53c2\u8003 freewalk \uff1b \u5728 kernel/defs.h \u4e2d\u58f0\u660e vmprint \u5c31\u53ef\u4ee5\u5728 exec \u4e2d\u4f7f\u7528\u5b83\u4e86\uff1b \u4f7f\u7528 %p \u6765\u6253\u5370\u5730\u5740\u3002 \u53c2\u8003\u7b54\u6848 \u63d0\u793a\u5df2\u7ecf\u628a\u4e00\u4e9b\u7410\u788e\u7684\u4fee\u6539\u70b9\u544a\u8bc9\u4e86\u6211\u4eec\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u5355\u7eaf\u5217\u51fa\u4e00\u4e2a vmprint \u7684\u53c2\u8003\u4ee3\u7801\u5427\uff1a // Recursively print page-table pages information. void vmprint ( pagetable_t pagetable , int deepth ) { if ( deepth == 0 ) printf ( \"page table %p \\n \" , pagetable ); // there are 2^9 = 512 PTEs in a page table. for ( int i = 0 ; i < 512 ; i ++ ){ pte_t pte = pagetable [ i ]; if ( pte & PTE_V ){ uint64 child = PTE2PA ( pte ); for ( int j = 0 ; j < deepth ; ++ j ) printf ( \".. \" ); printf ( \"..%d: pte %p pa %p \\n \" , i , pte , child ); if (( pte & ( PTE_R | PTE_W | PTE_X )) == 0 ) // this PTE points to a lower-level page table. vmprint (( pagetable_t ) child , deepth + 1 ); } } } \u601d\u8003\u9898 \u6839\u636e xv6-book \u4e2d\u5173\u4e8e\u7528\u6237\u5185\u5b58\u7a7a\u95f4\u7684\u56fe3-4\u6765\u89e3\u91ca\u7b2c0\u9875\u4e0e\u7b2c2\u9875\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u7528\u6237\u6a21\u5f0f (user mode) \u4e0b\u80fd\u5426\u8bfb\u5199\u7b2c1\u9875\u7684\u5185\u5bb9\u3002 \u53c2\u8003\u7b54\u6848 exec \u4f1a\u5148\u628a\u9700\u8981\u8c03\u7528\u7684\u7a0b\u5e8f\u590d\u5236\u5230\u8fdb\u7a0b\u7a7a\u95f4\u7684\u5f00\u5934\uff08kernel/exec.c:42:59)\uff0c\u6240\u4ee5\u524d\u51e0\u9875 \u4e00\u5b9a\u90fd\u662f\u7a0b\u5e8f\u7684\u4ee3\u7801\u3002\u4f46\u662f\u7a76\u7adf\u6709\u51e0\u9875\uff0c\u6211\u4eec\u8fd8\u662f\u9700\u8981\u7ee7\u7eed\u63a8\u7406\u4e00\u4e0b\u3002 exec \u4f1a\u7d27\u63a5\u7740\u4ee3\u7801\u540e \u9762\u5206\u914d\u4e24\u9875\u5185\u5b58\uff0c\u5206\u522b\u5bf9\u5e94\u7528\u6237\u7a7a\u95f4\u7684 guard page \u548c stack (kernel/exec.c:69:76)\u3002 \u5176\u4e2d guard page \u662f\u7528\u6765\u628a\u7a0b\u5e8f\u7684\u5185\u5bb9\u548c\u6808\u5206\u9694\u5f00\u7684\u5b89\u5168\u9875\uff0c\u4f1a\u5728 PTE_U \u4f4d\u88ab\u6807\u8bb0\u4e3a\u4e0d\u53ef\u7528 (kernel/vim.c:348)\uff0c\u800c PTE_V \u8fd8\u662f1\u3002\u6240\u4ee5 vmprint \u4f1a\u6253\u5370\u4e00\u4e2a\u8fde\u7eed\u7684n\u9875\u7a0b\u5e8f\u4ee3\u7801 \u6570\u636e\u6709\u5173\u7684PTE\uff0c\u7d27\u8ddf\u7740\u4e24\u9875 guard page \u548c stack \u3002\u4ece\u5b9e\u9a8c\u7ed3\u679c\u6765\u770b\uff0c\u7b2c\u4e00\u4e2a vmprint \u5f00\u5934\u8f93\u51fa\u4e86\u8fde\u7eed\u7684\u4e09\u9875PTE\uff0c\u6240\u4ee5\u6211\u4eec\u77e5\u9053\u5f00\u59cb\u7684\u7a0b\u5e8f\u4ee3\u7801\u5360\u7528\u7b2c0\u9875\u5185\u5bb9\uff0c\u7b2c1\u9875\u662f guard page \uff0c \u7b2c2\u9875\u662f stack \u3002\u90a3\u4e48\uff0c\u7528\u6237\u6a21\u5f0f\u4e0b\u662f\u4e0d\u53ef\u4ee5\u8bfb\u5199\u7b2c1\u9875\u7684 guard page \u5185\u5bb9\u7684\u3002","title":"\u6253\u5370\u9875\u8868"},{"location":"6.S081/Lab03-Page-Tables/#a-kernel-page-table-per-process","text":"Xv6 \u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u5185\u6838\u9875\u8868\u7528\u4e8e\u8fd0\u884c\u5185\u6838\u7a0b\u5e8f\u3002\u800c\u5185\u6838\u9875\u8868\u76f4\u63a5\u548c\u7269\u7406\u5185\u5b58\u5730\u5740\u76f4\u63a5\u5bf9\u5e94\uff0c\u5185\u6838 \u865a\u62df\u5730\u5740\u5c31\u7b49\u4e8e\u7269\u7406\u5730\u5740\u3002 Xv6 \u540c\u65f6\u4e5f\u4e3a\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u5206\u914d\u72ec\u7acb\u7684\u7528\u6237\u7a7a\u95f4\uff0c\u53ea\u5305\u542b\u8fdb\u7a0b\u7684\u7528\u6237\u5185\u5b58\uff0c \u5b83\u4ece0\u5f00\u59cb\u3002\u56e0\u4e3a\u5185\u6838\u9875\u8868\u4e0d\u5305\u542b\u8fd9\u4e9b\u8fdb\u7a0b\u9875\u8868\u7684\u6620\u5c04\uff0c\u7528\u6237\u5730\u5740\u4e0d\u80fd\u88ab\u5185\u6838\u76f4\u63a5\u4f7f\u7528\u3002\u5185\u6838\u9700\u8981\u4f7f\u7528 \u7528\u6237\u7a7a\u95f4\u7684\u5730\u5740\u65f6\uff0c\u5c31\u5fc5\u987b\u5148\u628a\u5b83\u8f6c\u6362\u6210\u7269\u7406\u5730\u5740\u3002\u8fd9\u8282\u7684\u76ee\u6807\u5c31\u662f\u8ba9\u5185\u6838\u76f4\u63a5\u4f7f\u7528\u7528\u6237\u6307\u9488\u3002 \u95ee\u9898\u63cf\u8ff0 \u9996\u5148\u4fee\u6539\u5185\u6838\uff0c\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u5b83\u5b50\u96c6\u7684\u62f7\u8d1d\u540e\u7684\u5185\u6838\u9875\u8868\uff0c\u5f53\u8be5\u8fdb\u7a0b\u8fdb\u5165\u5185\u6838\u6001\u65f6\u4f7f\u7528 \u8fd9\u4e2a\u79c1\u4eba\u7684\u5185\u6838\u9875\u8868\u3002\u4fee\u6539 struct proc \u6765\u4e3a\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u6dfb\u52a0\u4e00\u4e2a\u5185\u6838\u9875\u8868\uff0c\u5e76\u4e14\u4fee\u6539 \u8c03\u5ea6\u5668\uff0c\u5f53\u5207\u6362\u8fdb\u7a0b\u65f6\u4e5f\u4fee\u6539\u5185\u6838\u5730\u5740\u3002\u5f53\u7136\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u5e94\u8be5\u548c\u5168\u5c40\u7684\u5185\u6838\u9875\u8868\u76f8\u540c\u3002 \u5982\u679c usertests \u8fd0\u884c\u901a\u8fc7\uff0c\u5c31\u901a\u8fc7\u4e86\u8fd9\u4e2a\u5b9e\u9a8c\u3002 \u63d0\u793a\uff1a \u4fee\u6539\u7ed3\u6784\u4f53 struct proc \u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u6dfb\u52a0\u5185\u6838\u9875\u8868\uff1b \u4e00\u79cd\u5408\u7406\u7684\u4ea7\u751f\u5185\u6838\u9875\u8868\u7684\u65b9\u5f0f\u662f\uff1a\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u4f3c kvminit \u7684\u51fd\u6570\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u9875\u8868\u800c\u4e0d\u662f\u4fee\u6539 kernel_pagetable \u3002\u4f1a\u5728 allocproc \u4e2d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002 \u786e\u5b9a\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u4e2d\u6620\u5c04\u4e86\u8fd9\u4e2a\u51fd\u6570\u7684\u5185\u6838\u6808\u3002\u5728\u672a\u4fee\u6539\u7684\u4ee3\u7801\u91cc\uff0c\u5b9e\u73b0\u5728 procinit , \u8fd9\u91cc\u5e0c\u671b\u79fb\u52a8\u5230 allocproc \u51fd\u6570\u91cc\u3002 \u4fee\u6539\u8c03\u5ea6\u5668 scheduler() \u6765\u4fee\u6539\u5185\u6838\u9875\u8868\u5728\u5bc4\u5b58\u5668 satp \u91cc\u7684\u5730\u5740\uff08\u53c2\u8003 kvminithart )\u3002 \u4e0d\u8981\u5fd8\u8bb0\u5728\u8c03\u7528 w_satp() \u540e\u8c03\u7528 sfence_vma() \u3002 \u5728 freeproc \u91cc\u91ca\u653e\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u3002 \u6211\u4eec\u5728\u91ca\u653e\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u65f6\uff0c\u4e0d\u8981\u91ca\u653e\u5bf9\u5e94\u7269\u7406\u5185\u5b58\u9875\u7684\u53f6\u5b50\u8282\u70b9\u3002 vmprint \u80fd\u5e2e\u52a9\u6211\u4eec debug \u8fdb\u7a0b\u9875\u8868\u3002 \u53ef\u80fd\u9700\u8981\u5728 kernel/vm.c \u548c kernel/proc.c \u91cc\u6dfb\u52a0\u65b0\u7684\u51fd\u6570\u3002 \u5982\u679c\u9875\u8868\u7f3a\u5931\uff0c\u5c06\u4f1a\u5f15\u8d77\u9875\u8868\u9519\u8bef\u3002\u9519\u8bef\u4fe1\u606f\u5305\u542b sepc=0x00000000xxxxxxxx \u3002 \u5728 kernel/kernel.asm \u91cc\u67e5\u770b xxxxxxxx \u5bf9\u5e94\u54ea\u4e00\u6bb5\u7684\u4ee3\u7801\u3002 \u8fd9\u4e00\u9898\u8981\u6c42\u6211\u4eec\u4e3a\u5b50\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u5185\u6838\u9875\u8868\uff0c\u4e0d\u8981\u6c42\u5185\u6838\u9875\u8868\u5b58\u5728\u7a0b\u5e8f\u9875\u8868\u7684\u6620\u5c04\u3002\u5bf9\u5185\u6838\u9875\u8868\u6dfb\u52a0\u7a0b\u5e8f\u9875\u8868 \u7684\u529f\u80fd\u5728\u4e0b\u4e00\u9898\u5b8c\u6210\u3002\u8fd9\u9053\u9898\u76ee\u7684\u4e3b\u8981\u96be\u70b9\u662f\u8981\u91ca\u653e\u5185\u6838\u9875\u8868\u7684\u65f6\u5019\uff0c\u5148\u91ca\u653e\u8fdb\u7a0b\u7684\u5185\u6838\u6808\uff1b \u4ee5\u53ca\u5982\u4f55\u4fee\u6539 scheduler \u3002\u9488\u5bf9\u5982\u4f55\u4fee\u6539 scheduler \uff0c \u8fd9\u91cc\u53ef\u4ee5\u7b80\u5355\u9605\u8bfb\u4e00\u4e0b\u7b2c\u4e03\u7ae0\u7684\u5185\u5bb9\uff0c scheduler \u91cc\u8c03\u7528\u4e86\u4e00\u4e2a swtch \u6267\u884c\u4e86\u53bb\u8fd0\u884c\u67d0\u4e2a\u5bf9\u5e94\u8fdb\u7a0b\uff0c \u6240\u4ee5\u8fd9\u4e2a\u6307\u4ee4\u524d\u540e\u5b8c\u6210\u5185\u6838\u9875\u8868\u5bc4\u5b58\u5668 satp \u7684\u4fee\u6539\u3002 \u6211\u7684\u7406\u89e3\u662f\uff0c scheduler \u4f3c\u4e4e\u8fd0\u884c\u4e2d\u5168\u5c40\u7684\u5185\u6838\u9875\u8868\u4e0b\u3002 vm.c \u7b49\u7a0b\u5e8f\u4e2d\u7684\u53d8\u91cf\u4e5f\u58f0\u660e\u5728\u5168\u5c40 \u7684\u5185\u6838\u9875\u8868\u4e0b\u3002 \u6211\u518d\u6b21\u63d0\u9192\uff0c\u4e0b\u9762\u8fd9\u4e2a\u7b54\u6848\u53ea\u80fd\u4f5c\u4e3a\u601d\u8def\u5361\u58f3\u65f6\u5019\u7684\u63d0\u793a\uff0c\u751f\u642c\u786c\u770b\u662f\u641e\u4e0d\u61c2\u7684\u3002 \u53c2\u8003\u7b54\u6848 \u5728 def.h \u5bf9\u5e94 vm.c \u7684\u680f\u4e2d\u58f0\u660e\u51fd\u6570 kvmcreate \u548c kvmfree \uff0c\u5206\u522b\u7528\u4e8e\u521b\u5efa\u548c\u91ca\u653e \u5185\u6838\u9875\u8868\uff1b // Create a kernel page table. pagetable_t kvmcreate ( void ) { pagetable_t kptbl = uvmcreate (); if ( kptbl == 0 ) return 0 ; // uart registers if ( mappages ( kptbl , UART0 , PGSIZE , UART0 , PTE_R | PTE_W ) != 0 ){ return 0 ; } // virtio mmio disk interface if ( mappages ( kptbl , VIRTIO0 , PGSIZE , VIRTIO0 , PTE_R | PTE_W ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); return 0 ; } // CLINT if ( mappages ( kptbl , CLINT , 0x10000 , CLINT , PTE_R | PTE_W ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); return 0 ; } // PLIC if ( mappages ( kptbl , PLIC , 0x400000 , PLIC , PTE_R | PTE_W ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); uvmunmap ( kptbl , CLINT , PGROUNDUP ( 0x10000 ) / PGSIZE , 0 ); return 0 ; } // map kernel text executable and read-only. if ( mappages ( kptbl , KERNBASE , ( uint64 ) etext - KERNBASE , KERNBASE , PTE_R | PTE_X ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); uvmunmap ( kptbl , CLINT , PGROUNDUP ( 0x10000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , PLIC , PGROUNDUP ( 0x400000 ) / PGSIZE , 0 ); return 0 ; } // map kernel data and the physical RAM we'll make use of. if ( mappages ( kptbl , ( uint64 ) etext , PHYSTOP - ( uint64 ) etext , ( uint64 ) etext , PTE_R | PTE_W ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); uvmunmap ( kptbl , CLINT , PGROUNDUP ( 0x10000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , PLIC , PGROUNDUP ( 0x400000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , KERNBASE , PGROUNDUP (( uint64 ) etext - KERNBASE ) / PGSIZE , 0 ); return 0 ; } // map the trampoline for trap entry/exit to // the highest virtual address in the kernel. if ( mappages ( kptbl , TRAMPOLINE , PGSIZE , ( uint64 ) trampoline , PTE_R | PTE_X ) != 0 ){ uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); uvmunmap ( kptbl , CLINT , PGROUNDUP ( 0x10000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , PLIC , PGROUNDUP ( 0x400000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , KERNBASE , PGROUNDUP (( uint64 ) etext - KERNBASE ) / PGSIZE , 0 ); uvmunmap ( kptbl , ( uint64 ) etext , PGROUNDUP ( PHYSTOP - ( uint64 ) etext ) / PGSIZE , 0 ); }; return kptbl ; } // Free a kernel page table. void kvmfree ( pagetable_t kptbl ) { uvmunmap ( kptbl , UART0 , 1 , 0 ); uvmunmap ( kptbl , VIRTIO0 , 1 , 0 ); uvmunmap ( kptbl , CLINT , PGROUNDUP ( 0x10000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , PLIC , PGROUNDUP ( 0x400000 ) / PGSIZE , 0 ); uvmunmap ( kptbl , KERNBASE , PGROUNDUP (( uint64 ) etext - KERNBASE ) / PGSIZE , 0 ); uvmunmap ( kptbl , ( uint64 ) etext , PGROUNDUP ( PHYSTOP - ( uint64 ) etext ) / PGSIZE , 0 ); uvmunmap ( kptbl , TRAMPOLINE , 1 , 0 ); uvmfree ( kptbl , 0 ); } \u4fee\u6539 kernel/proc.h \u7684\u7ed3\u6784\u4f53\uff0c\u6dfb\u52a0 kptbl \u4ee5\u53ca\u5185\u6838\u9875\u8868\u5bf9\u5e94\u7684\u7a0b\u5e8f\u6808 kptbl_kstack \u3002 \u5176\u4e2d kptbl_kstack \u662f\u7528\u6765\u8868\u793a\u5185\u6838\u9875\u8868\u5bf9\u5e94\u7684\u7a0b\u5e8f\u6808\u662f\u5426\u5206\u914d\u6210\u529f\u7684\uff0c\u5b9e\u9645\u4e0a\u548c kstack \u5185\u5bb9\u4e00\u6a21\u4e00\u6837\u3002 \u5728 kernel/proc.c \u4e2d\u5b9a\u4e49 kstackset \u548c kstackfree \u4e24\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u6620\u5c04\u5185\u6838\u9875 \u8868\u7684\u7a0b\u5e8f\u6808\uff0c\u4ee5\u53ca\u91ca\u653e\u7a0b\u5e8f\u6808\u3002\u5206\u522b\u5728 p->kptbl \u521b\u5efa\u540e \u4ee5\u53ca \u91ca\u653e\u524d\u5b8c\u6210\u3002 // Set kernel stack uint64 kstackset ( struct proc * p ){ if ( mappages ( p -> kptbl , p -> kstack , PGSIZE , kvmpa ( p -> kstack ), PTE_R | PTE_W ) != 0 ) return 0 ; return p -> kstack ; } // Free kernel stack void kstackfree ( struct proc * p ){ uvmunmap ( p -> kptbl , p -> kptbl_kstack , 1 , 0 ); } \u4fee\u6539 kernel/proc.c \u4e2d\u7684\u4e24\u4e2a\u51fd\u6570 allocproc \u548c freeproc \uff0c\u5b8c\u6210\u7b2c\u4e8c\u9898\u3002 // Look in the process table for an UNUSED proc. // If found, initialize state required to run in the kernel, // and return with p->lock held. // If there are no free procs, or a memory allocation fails, return 0. static struct proc * allocproc ( void ) { //... p -> kptbl = kvmcreate (); if ( p -> kptbl == 0 ){ freeproc ( p ); release ( & p -> lock ); return 0 ; } p -> kptbl_kstack = kstackset ( p ); if ( p -> kptbl_kstack == 0 ){ freeproc ( p ); release ( & p -> lock ); return 0 ; } //... } // free a proc structure and the data hanging from it, // including user pages. // p->lock must be held. static void freeproc ( struct proc * p ) { //... if ( p -> kptbl_kstack ) kstackfree ( p ); p -> kptbl_kstack = 0 ; if ( p -> kptbl ) kvmfree ( p -> kptbl ); p -> kptbl = 0 ; //... } \u4fee\u6539 scheduler \u51fd\u6570 void scheduler ( void ) { //... if ( p -> state == RUNNABLE ) { kvminithart1 ( p -> kptbl ); // Switch to chosen process. It is the process's job // to release its lock and then reacquire it // before jumping back to us. p -> state = RUNNING ; c -> proc = p ; swtch ( & c -> context , & p -> context ); // Process is done running for now. // It should have changed its p->state before coming back. c -> proc = 0 ; found = 1 ; kvminithart (); } //... }","title":"A kernel page table per process"},{"location":"6.S081/Lab03-Page-Tables/#copyincopyinstr","text":"\u5185\u6838\u4e2d\u7684\u51fd\u6570 copyin \u8bfb\u53d6\u7528\u6237\u7a7a\u95f4\u7684\u6307\u9488\u3002\u5b83\u5148\u628a\u6307\u9488\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\uff0c\u7136\u540e\u53c8\u56e0\u4e3a\u5185\u6838\u5730\u5740\u548c \u7269\u7406\u5730\u5740\u76f4\u63a5\u5bf9\u5e94\uff0c\u7136\u540e\u5185\u6838\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u5730\u5740\u4e86\u3002\u8f6c\u6362\u8fc7\u7a0b\u5c31\u662f\u67e5\u627e\u8fdb\u7a0b\u9875\u8868\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u9700\u8981 \u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u521b\u5efa\u4e00\u4e2a\u6620\u5c04\uff0c\u6765\u5141\u8bb8 copyin \u76f4\u63a5\u4f7f\u7528\u7528\u6237\u6307\u9488\u3002 \u95ee\u9898\u63cf\u8ff0 \u66ff\u6362 kernel/vm.c:copyin() \u7684\u5b9e\u73b0\uff1a\u95f4\u63a5\u8c03\u7528 kernel/vmcopyin.c\uff1acopyin_new() ; \u66ff\u6362 kernel/vm.c:copyinstr() \u7684\u5b9e\u73b0\uff1a\u95f4\u63a5\u8c03\u7528 kernel/vmcopy.c:copyinstr_new ; \u6620\u5c04\u7528\u6237\u5730\u5740\u5230\u8fdb\u7a0b\u5185\u6838\u9875\u8868\uff0c\u4f7f\u5f97 copyin() \u548c copyinstr() \u53ef\u7528\u3002 \u5982\u679c usertests \u80fd\u591f\u6b63\u786e\u8fd0\u884c\uff0c\u90a3\u4e48\u5c31\u901a\u8fc7\u4e86\u8fd9\u4e2a\u9898\u76ee\u3002 \u8fd9\u4e2a\u5b9e\u9a8c\u4f9d\u8d56\u4e8e\u524d\u63d0\uff1a\u7528\u6237\u865a\u62df\u5730\u5740\u548c\u5185\u6838\u7684\u4ee3\u7801\u548c\u6570\u636e\u5730\u5740\u4e0d\u91cd\u53e0\u3002\u7528\u6237\u7a7a\u95f4\u865a\u62df\u5730\u5740\u7684\u8d77\u59cb\u5730\u5740 \u662f0\uff0c\u5185\u6838\u7684\u7a7a\u95f2\u7a7a\u95f4\u8981\u9ad8\u5f97\u591a\u3002\u4f46\u662f\uff0c\u8fd9\u91cc\u6ca1\u6709\u9650\u5236\u7528\u6237\u7a0b\u5e8f\u4e00\u5b9a\u8981\u6bd4\u5185\u6838\u7684\u6700\u5c0f\u865a\u62df\u5730\u5740\u4f4e\u3002 \u5728 xv6 \u4e2d\uff0c\u5185\u6838\u542f\u52a8\u540e\u7684\u5730\u5740\u662f 0xC000000 \uff0c\u4e5f\u5c31\u662f PLIC \u5bc4\u5b58\u5668\u7684\u5730\u5740\uff1b\u5177\u4f53\u53ef\u4ee5\u770b kernel/vm.c:kvminit() \u548c kernel/memlayout.h \uff0c\u4ee5\u53ca xv6-book \u7684\u56fe3-4\u3002\u6211\u4eec\u9700\u8981 \u8c03\u6574 xv6 \u6765\u907f\u514d\u7528\u6237\u8fdb\u7a0b\u8d85\u8fc7 PLIC \u5730\u5740\u3002\u5b9e\u9645\u4e0a\uff0c\u5185\u6838\u7684\u6700\u4f4e\u865a\u62df\u5730\u5740\u662f 0x2000000 \uff0c \u4fdd\u5b58\u7740 CLINT \u5bc4\u5b58\u5668\u7684\u503c\u3002\u4f46\u662f xv6 \u53ea\u662f\u5728\u542f\u52a8\u521d\u671f\u4f1a\u7528\u5230\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684\uff0c\u6240\u4ee5\u5b8c\u5168\u53ef\u4ee5\u8986\u76d6\u5b83\u3002 \u63d0\u793a\uff1a \u5148\u5b9e\u73b0 copyin() \uff0c\u7b49\u6210\u529f\u4e4b\u540e\uff0c\u518d\u5b9e\u73b0 copyinstr \uff1b \u5f53\u5185\u6838\u4fee\u6539\u8fdb\u7a0b\u7684\u7528\u6237\u6620\u5c04\u65f6\uff0c\u4e5f\u5e94\u8be5\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u4fee\u6539\u8fdb\u7a0b\u5185\u6838\u9875\u8868\u3002\u5bf9\u5e94\u8981\u4fee\u6539 fork() \uff0c exec() \u548c sbrk() ; \u4e0d\u8981\u5fd8\u8bb0\u5305\u542b\u7b2c\u4e00\u4e2a\u8fdb\u7a0b userinit \u7684\u7528\u6237\u9875\u8868\u5230\u5b83\u7684\u5185\u6838\u9875\u8868\u4e2d\uff1b \u6ce8\u610f\u7528\u6237\u6307\u9488\u9700\u8981\u7684\u5141\u8bb8\u6807\u8bb0\u3002 \u88ab\u6807\u8bb0\u4e0a PTE_U \u7684\u9875\u4e0d\u80fd\u5728\u5185\u6838\u6001\u88ab\u8bbf\u95ee\uff1b \u4e0d\u8981\u5fd8\u8bb0 PLIC \u7684\u9650\u5236\u3002 Linux\u4f7f\u7528\u7c7b\u4f3c\u7684\u9875\u8868\u673a\u5236\u3002\u51e0\u5e74\u524d\u5185\u6838\u5728\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u8fdb\u7a0b\u9875\u8868\uff0c\u540c\u65f6\u5177\u6709 \u7528\u6237\u548c\u5185\u6838\u5730\u5740\u6620\u5c04\uff0c\u4ee5\u907f\u514d\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u4e4b\u95f4\u5207\u6362\u65f6\u5fc5\u987b\u5207\u6362\u9875\u8868\u3002\u4f46\u662f\u4e5f\u5bfc\u81f4\u4e86 side-channel \u653b\u51fb\uff0c\u4f8b\u5982 Meltdown \u548c Specture \u3002 \u4e0b\u9762\u7684\u53c2\u8003\u7b54\u6848\u53ea\u80fd\u4fdd\u8bc1\u6d4b\u8bd5\u901a\u8fc7\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u7b97\u6cd5\u7684\u6548\u7387\u3002 \u6211\u9700\u8981\u5c06 grade-lab-pgtbl:65 \u5173\u4e8e\u6d4b\u8bd5\u65f6\u95f4\u7684\u9650\u5b9a\u589e\u52a0\u5230 350 \u624d\u80fd\u901a\u8fc7\u6d4b\u8bd5\uff0c\u4e0d\u77e5\u9053\u662f\u7a0b\u5e8f\u6548\u7387 \u7684\u95ee\u9898\uff0c\u8fd8\u662f\u7535\u8111\u4e0d\u592a\u884c\u3002 \u53c2\u8003\u7b54\u6848 \u9996\u5148\u5728 vm.c \u4e2d\u5b9a\u4e49\u4e24\u4e2a\u51fd\u6570\uff08\u4e0d\u8981\u5fd8\u8bb0\u5728 def.h \u4e2d\u58f0\u660e\uff09\u3002 \u4e00\u4e2a\u51fd\u6570\u53eb kvmdealloc \u7528\u4e8e\u5220\u9664\u5185\u6838\u9875\u8868\u4e2d\u5bf9\u5e94\u7684\u67d0\u4e9b\u8fdb\u7a0b\u9875\uff0c\u53e6\u4e00\u4e2a\u53eb kvmcopy \u7528\u4e8e\u4ece \u8fdb\u7a0b\u9875\u8868\u4e2d\u590d\u5236\u67d0\u4e9b\u9875\u5230\u5185\u8377\u9875\u8868\u4e2d\u3002 // Remove process's page in process's kernel pagetable. uint64 kvmdealloc ( pagetable_t pagetable , uint64 oldsz , uint64 newsz ) { if ( newsz >= oldsz ) return oldsz ; if ( PGROUNDUP ( newsz ) < PGROUNDUP ( oldsz )){ int npages = ( PGROUNDUP ( oldsz ) - PGROUNDUP ( newsz )) / PGSIZE ; uvmunmap ( pagetable , PGROUNDUP ( newsz ), npages , 0 ); } return newsz ; } // Copy process's pagetable to process's kernel pagetable. int kvmcopy ( pagetable_t kptbl , pagetable_t pagetable , uint64 start , uint64 end ) { pte_t * pte ; uint64 pa , i ; // uint flags; start = PGROUNDUP ( start ); if ( start >= PLIC || end > PLIC ) return -1 ; for ( i = start ; i < end ; i += PGSIZE ){ if (( pte = walk ( pagetable , i , 0 )) == 0 ) panic ( \"kvmcopy: pte should exist\" ); if (( * pte & PTE_V ) == 0 ) panic ( \"kvmcopy: page not present\" ); pa = PTE2PA ( * pte ); // flags = PTE_FLAGS(*pte); if ( mappages ( kptbl , i , PGSIZE , pa , PTE_R ) != 0 ){ goto err ; } } return 0 ; err : uvmunmap ( kptbl , start , ( end - start ) / PGSIZE , 0 ); return -1 ; } \u4fee\u6539 proc.c:fork() \uff0c\u6dfb\u52a0\uff08\u5982\u679c\u8fde\u6dfb\u52a0\u5230\u54ea\u91cc\u90fd\u4e0d\u77e5\u9053\uff0c\u5176\u5b9e\u5148\u4e0d\u8981\u770b\u7b54\u6848\uff09\uff1a if ( kvmcopy ( np -> kptbl , np -> pagetable , 0 , np -> sz ) < 0 ){ freeproc ( np ); release ( & np -> lock ); return -1 ; } \u4e3a\u7cfb\u7edf\u8c03\u7528 sbrk() \u4fee\u6539\u51fd\u6570 proc.c:growproc() : int growproc ( int n ) { uint sz ; struct proc * p = myproc (); sz = p -> sz ; if ( n > 0 ){ if (( sz = uvmalloc ( p -> pagetable , sz , sz + n )) == 0 ) { return -1 ; } if ( kvmcopy ( p -> kptbl , p -> pagetable , p -> sz , sz ) < 0 ) { return -1 ; } } else if ( n < 0 ){ sz = uvmdealloc ( p -> pagetable , sz , sz + n ); kvmdealloc ( p -> kptbl , p -> sz , sz ); } p -> sz = sz ; return 0 ; } \u4fee\u6539 proc.c:userinit() \uff1a // allocate one user page and copy init's instructions // and data into it. uvminit(p->pagetable, initcode, sizeof(initcode)); p->sz = PGSIZE; kvmcopy(p->kptbl, p->pagetable, 0, p->sz); \u4fee\u6539 exec.c \uff0c\u6dfb\u52a0\uff1a kvmdealloc ( p -> kptbl , oldsz , 0 ); if ( kvmcopy ( p -> kptbl , p -> pagetable , 0 , p -> sz ) < 0 ) return -1 ; \u8fd9\u65f6\u5df2\u7ecf\u7ed9\u6210\u529f\u7ed9\u8fdb\u7a0b\u4e2d\u7684\u5185\u6838\u9875\u8868\u6dfb\u52a0\u4e86\u8fdb\u7a0b\u9875\u8868\u7684\u62f7\u8d1d\u4e86\u3002 \u4fee\u6539 copyin() \u548c copyinstr() \u4e24\u4e2a\u51fd\u6570\uff0c\u5728 vm.c \u5f00\u5934\u6dfb\u52a0\u5916\u90e8\u51fd\u6570 copyin_new() \u548c copyinstr() \u7684\u58f0\u660e\uff0c\u7136\u540e\u8fd9\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u76f4\u63a5\u8c03\u7528\u8fd9\u4e24\u4e2a\u65b0\u51fd\u6570\u3002 \u601d\u8003\u9898 \u89e3\u91ca\u4e00\u4e0b copyin_new() \u4e2d\u7684\u7b2c\u4e09\u4e2a\u6d4b\u8bd5 srcva + len < srcva \u7684\u4f5c\u7528\uff1b \u4e3e\u51fa\u4f1a\u5f15\u53d1\u5371\u5bb3\u7684\u53cd\u4f8b\u6765\u4f7f\u5f97 copyin_new() \u7684\u524d\u4e24\u4e2a\u6d4b\u8bd5\u901a\u8fc7\uff0c\u800c\u7b2c\u4e09\u4e2a\u6d4b\u8bd5\u4e0d\u901a\u8fc7\u3002 \u5982\u679c\u6ca1\u6709\u7b2c\u4e09\u4e2a\u6d4b\u8bd5\uff0c srcva = 0x0000 0000 0200 0000 \u548c len = 0xffff ffff ffff ffff \u5c31\u53ef\u4ee5\u5229\u7528 uint64 \u8868\u8fbe\u80fd\u529b\u6709\u9650\u7684\u7279\u6027\uff0c\u8bbf\u95ee\u5230\u5185\u6838\u6570\u636e\u3002","title":"\u7b80\u5316 copyin/copyinstr"},{"location":"6.S081/Lab03-Page-Tables/#_2","text":"\u8fd9\u6b21\u5b9e\u9a8c\u505a\u5f97\u6709\u4e9b\u574e\u5777\uff0c\u662f\u6ca1\u6709\u7406\u89e3\u6e90\u7801\u3001\u4e0d\u4f1a gdb \u8c03\u8bd5\u7b49\u539f\u56e0\u9020\u6210\u7684\u5427\u3002 \u6709\u65f6\u5019\u4e5f\u60f3\u592a\u591a\uff0c\u60f3\u7740\u5185\u6838\u9875\u8868\u76f4\u63a5\u548c\u8fdb\u7a0b\u9875\u8868\u516c\u7528\u4e00\u5f20\u8868\u7b49\u7b49\u60f3\u6cd5\uff0c\u9020\u6210\u4e86\u5e72\u6270\uff0c\u8d70\u4e86\u5f2f\u8def\u3002 \u5176\u5b9e\u8fd8\u662f\u6ca1\u6709\u7279\u522b\u7406\u89e3\u5185\u5b58\uff0c\u6bd4\u5982 scheduler \u4e2d\u5b9a\u4e49\u7684\u90a3\u51e0\u4e2a\u5c40\u90e8\u53d8\u91cf\u88ab\u4fdd\u5b58\u5728\u54ea\u91cc\uff0c\u5728\u51fd\u6570\u4e2d\u5207\u6362 \u9875\u8868\u5bc4\u5b58\u5668\u4e3a\u4ec0\u4e48\u6ca1\u6709\u62a5\u9519\uff1b\u653e\u7684\u4f4d\u7f6e\u4e0d\u5bf9\uff0c\u4e3a\u4ec0\u4e48\u53c8\u4f1a\u62a5\u9519\u7b49\u7b49\u95ee\u9898\u3002\u4e0d\u8fc7\u6bcf\u4e00\u4e2a\u7ec6\u8282\u90fd\u641e\u5b9a\u4e86\u518d\u8d70\u4e0b\u4e00\u6b65 \u7684\u5b66\u4e60\u65b9\u5f0f\u6548\u7387\u592a\u4f4e\u4e86\uff0c\u5148\u7ee7\u7eed\u8d70\u8d77\u6765\u5427\u3002","title":"\u603b\u7ed3"},{"location":"6.S081/Lab04-Traps/","text":"Lab4: Traps \u00b6 \u8fd9\u4e2a\u5b9e\u9a8c\u5c06\u63a2\u7a76\u5982\u4f55\u4f7f\u7528 trap \u6765\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\u3002\u9996\u5148\u8981\u5148\u5b8c\u6210\u4e00\u4e2a\u5173\u4e8e\u6808\u7684\u70ed\u8eab\u7ec3\u4e60\uff0c\u5b8c\u6210\u4e00\u4e2a \u7528\u6237\u5c42\u7ea7\u7684\u9677\u9631\u5904\u7406\u5668\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u611f\u89c96.S081-2020\u8bbe\u8ba1\u7684\u5b9e\u9a8c\u8fd8\u662f\u975e\u5e38\u5408\u7406\u7684\uff0c\u6bcf\u4e00\u4e2a\u5b9e\u9a8c \u90fd\u6b63\u662f\u6211\u6b63\u5728\u56f0\u6270\u7684\u5185\u5bb9\u3002 \u5728\u4ee5\u524d\uff0c\u8fd9\u4e2a\u5b9e\u9a8c\u7684\u4e00\u4e9b\u9898\u76ee\u662f\u653e\u5728 Lab1 \u91cc\u7684\uff0c\u529d\u9000\u4e86\u5f88\u591a\u4eba\u5427\u3002\u73b0\u5728\u9605\u8bfb\u8fc7\u4e00\u4e9b\u6e90\u7801\u540e\u5e94\u8be5\u597d\u5f88\u591a\u3002 \u5728\u5b9e\u9a8c\u524d\uff0c\u8bfe\u7a0b\u5efa\u8bae\u6211\u4eec\u5148\u9605\u8bfb\u4e00\u4e0b xv6-book:ch4 \u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u76f8\u5173\u6e90\u7801\uff1a kernel/trampoline.S :\u8d1f\u8d23\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u7684\u8f6c\u6362\u7684\u6c47\u7f16\u7a0b\u5e8f\uff1b kernel/trap.c :\u8d1f\u8d23\u5904\u7406\u5404\u79cd\u4e2d\u65ad\u4fe1\u53f7\u3002 \u83b7\u53d6\u5b9e\u9a8c\u4ee3\u7801\uff1a $ git fetch $ git checkout traps $ make clean \u9605\u8bfb\u6750\u6599 \u00b6 trap \u5206\u4e3a\u4e09\u79cd\uff1a ecall \u5f15\u53d1\u7684\u7cfb\u7edf\u8c03\u7528\uff1b\u5f02\u5e38\uff1b\u8bbe\u5907\u4e2d\u65ad\u3002\u7528\u6237\u5e94\u8be5\u611f\u53d7\u4e0d\u5230\u5bf9\u4e2d\u65ad\u7684\u5904\u7406\uff0c \u6240\u4ee5\u5185\u6838\u5e94\u8be5\u5728\u4e2d\u65ad\u524d\u4fdd\u5b58\u5bc4\u5b58\u5668\u5185\u5bb9\uff0c\u4e2d\u65ad\u5904\u7406\u5b8c\u6210\u540e\u6062\u590d\u5bc4\u5b58\u5668\u3002 xv6 \u5904\u7406\u4e2d\u65ad\u7a0b\u5e8f\u5206\u4e3a\u56db\u4e2a \u6b65\u9aa4\uff1a\u5904\u7406\u5668\u63a5\u6536\u4e2d\u65ad\u4fe1\u53f7\uff1b\u6c47\u7f16\u5411\u91cf\u4e3a\u5185\u6838\u7684C\u4ee3\u7801\u51c6\u5907\u4e00\u4e9b\u4e1c\u897f\uff0c\u5185\u6838\u4e2d\u9677\u9631\u5904\u7406\u5668\u51b3\u5b9a\u8be5\u600e\u4e48 \u5904\u7406\u8fd9\u4e2a\u9677\u9631\uff0c\u6700\u540e\u8fd0\u884c\u7cfb\u7edf\u8c03\u7528\u548c\u9a71\u52a8\u7a0b\u5e8f\u3002 xv6 \u4f7f\u7528\u4e09\u7c7b\u9677\u9631\u5904\u7406\u5668\uff1a\u5904\u7406\u7528\u6237\u6001\u7684\u9677\u9631\u3001 \u5904\u7406\u5185\u6838\u6001\u7684\u9677\u9631\u548c\u65f6\u95f4\u4e2d\u65ad\u3002 RISC-V \u7684\u9677\u9631\u673a\u5236 \u00b6 \u5904\u7406\u5668\u4f7f\u7528\u4e00\u7cfb\u5217\u63a7\u5236\u5bc4\u5b58\u5668\u6765\u5b8c\u6210\u9677\u9631\u673a\u5236\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u51e0\u4e2a\u91cd\u8981\u7684\u5bc4\u5b58\u5668\uff1a stvec : \u5185\u6838\u628a\u9677\u9631\u5904\u7406\u5668\u7684\u5730\u5740\u5199\u5230\u8fd9\u4e2a\u5bc4\u5b58\u5668\u91cc\uff0c\u5904\u7406\u5668\u5c06\u8df3\u8f6c\u5230\u8fd9\u4e2a\u5730\u5740\u3002 sepc : \u8bb0\u5f55 pc , \u7136\u540e pc \u88ab stvec \u66ff\u6362\u3002 sret \u4f1a\u62f7\u8d1d stvec \u5230 pc \u3002\u5185\u6838\u80fd\u591f\u901a\u8fc7\u4fee\u6539 sepc \u6765\u63a7\u5236\u8fd4\u56de\u3002 scause : trap \u7684\u539f\u56e0\u3002 sscratch : \u5e2e\u52a9\u9677\u9631\u5904\u7406\u5668\u7684\u542f\u52a8\u7684\u4e00\u4e9b\u6709\u7528\u7684\u503c\u3002 sstatus : \u4e00\u4e9b\u72b6\u6001\u503c\uff0c SIE \u4f4d\u63a7\u5236\u662f\u5426\u5141\u8bb8\u8bbe\u5907\u4e2d\u65ad\uff0c SPP \u4f4d\u6807\u5fd7\u7740\u9677\u9631\u662f\u6765\u81ea\u7528\u6237\u6001 \u8fd8\u662f\u5185\u6838\u6001\u3002 \u5904\u7406\u5668\u5904\u7406\u4e2d\u65ad\u7684\u5177\u4f53\u6d41\u7a0b\u662f\uff1a \u5982\u679c\u662f\u8bbe\u5907\u4e2d\u65ad\uff0c SIE \u6e05\u96f6\uff0c\u7a0b\u5e8f\u65e0\u9650\u7b49\u5f85\u8bbe\u5907\u5c06\u5b83\u7f6e1\u3002 \u5173\u95ed\u4e2d\u65ad SIE \u6e05\u96f6\u3002 \u62f7\u8d1d pc \u5230 sepc \u3002 \u6839\u636e\u5f53\u524d\u6a21\u5f0f\u8bbe\u7f6e sstatus \u4e2d\u7684 SPP \u4f4d\u3002 \u628a\u7ec8\u7aef\u539f\u56e0\u5199\u5165 scause \u3002 \u8f6c\u5230 supervisor \u6a21\u5f0f\u3002 \u62f7\u8d1d stvec \u5230 pc \u3002 \u6267\u884c\u65b0\u7684 pc \u5904\u7684\u6307\u4ee4\u3002 \u5904\u7406\u5668\u5e76\u6ca1\u6709\u8f6c\u6362\u5185\u6838\u9875\uff0c\u5185\u6838\u6808\uff0c\u4ee5\u53ca\u9664\u4e86 pc \u4ee5\u5916\u7684\u5bc4\u5b58\u5668\u3002\u5185\u6838\u7a0b\u5e8f\u9700\u8981\u5b8c\u6210\u8fd9\u4e9b\u4e8b\u60c5\u3002 \u4ece\u7528\u6237\u7a7a\u95f4\u5f15\u53d1\u9677\u9631 \u00b6 \u5f53\u9677\u9631\u53d1\u751f\u5728\u7528\u6237\u7a7a\u95f4\u65f6\uff0c\u5185\u6838\u5f00\u59cb\u6267\u884c uservec (kernel/trampoline.S:16)\uff0c usertrap (kernel/trap.c:37), usertrapret (kernel/trap.c:90) \u548c userret (kernel/trampoline.S:16)\u3002 \u4ece\u5185\u6838\u7a7a\u95f4\u5f15\u53d1\u9677\u9631\u975e\u5e38\u5177\u6709\u6311\u6218\u6027\uff0c satp \u6307\u5411\u7684\u662f\u7528\u6237\u9875\u8868\uff0c\u5e76\u4e0d\u662f\u5185\u6838\u9875\u8868\uff0c\u800c\u4e14\u6808\u6307\u9488\u4f1a\u6307\u5411 \u975e\u6cd5\u7684\u5185\u5bb9\uff0c\u751a\u81f3\u4f1a\u9020\u6210\u6781\u5927\u7684\u5371\u5bb3\u3002 \u56e0\u4e3aRISC-V\u786c\u4ef6\u6ca1\u6709\u8f6c\u6362\u9875\u8868\uff0c\u6240\u4ee5\u7528\u6237\u9875\u8868\u9700\u8981\u5bf9 stvec \u6307\u5411\u7684 uservec \u505a\u6620\u5c04\u3002 uservec \u9700\u8981\u4ece\u7528\u6237\u9875\u8868\u8f6c\u6362\u4e3a\u5185\u6838\u9875\u8868\uff0c\u6765\u6267\u884c\u540e\u9762\u7684\u7a0b\u5e8f\u3002\u56e0\u6b64\u5728\u7528\u6237\u9875\u8868\u548c\u5185\u6838\u9875\u8868\u4e2d\uff0c\u9700\u8981\u5c06 uservec \u6620\u5c04\u5230\u76f8\u540c\u7684\u865a\u62df\u5730\u5740\uff0c xv6 \u901a\u8fc7 trampoline \u9875\u6765\u5b9e\u73b0\u8fd9\u4e2a\u8981\u6c42\u3002\u865a\u62df\u5730\u5740 TRAMPOLINE \u4fdd\u5b58 \u7684\u5185\u5bb9\u7531 trampoline.S \u8bbe\u7f6e\uff0c\u7528\u6237\u6a21\u5f0f\u4e2d stvec \u8bbe\u7f6e\u5230 uservec \u4e2d(kernel/trampoline.S:16)\u3002 \u5f53 uservec \u5f00\u59cb\uff0c\u6240\u670932\u4e2a\u5bc4\u5b58\u5668\u5305\u542b\u4e2d\u65ad\u4ee3\u7801\u76f8\u5173\u4fe1\u606f\u3002\u4f46\u662f uservec \u9700\u8981\u4fee\u6539\u4e00\u4e9b\u5bc4\u5b58\u5668\u5e76\u4e14 \u4fdd\u5b58\u4e00\u4e9b\u5bc4\u5b58\u5668\u3002RISC-V\u63d0\u4f9b\u4e86 sscratch \u5bc4\u5b58\u5668\u6765\u4fdd\u5b58\u5e2e\u52a9\u4fe1\u606f\u3002\u6bd4\u5982 trampoline.S:137 \u884c\u4f7f\u7528 csrrw \u6765\u4fdd\u5b58 sscratch \u5230 a0 \u3002 uservec \u63a5\u7740\u8981\u4fdd\u5b58\u7528\u6237\u7684\u5bc4\u5b58\u5668\u4fe1\u606f\u3002\u5728\u8fdb\u5165\u7528\u6237\u7a7a\u95f4\u524d\uff0c\u5185\u6838\u8bbe\u7f6e sscratch \u6307\u5411\u7528\u6237\u7684 trapframe , \u5728 trapframe \u4e2d\u4fdd\u5b58\u7528\u6237\u7684\u5bc4\u5b58\u5668(kernel/proc.h:44)\u3002\u4f46\u662f satp \u4ecd\u7136\u6307\u5411 \u7528\u6237\u9875\u8868\uff0c uservec \u9700\u8981\u6620\u5c04 trapframe \u3002 xv6 \u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u9875\u8868\u6620\u5c04\u4e00\u4e2a trapframe \u5230\u865a\u62df \u5730\u5740 TRAPFRAME \u4e2d\uff0c\u5c31\u5728 TRAMPOLINE \u4e0b\u9762\u3002 p->trapframe \u5c31\u6307\u5411 trapframe \u7684\u7269\u7406\u5730\u5740\uff0c \u8ba9\u5185\u6838\u76f4\u63a5\u8bbf\u95ee\u8fd9\u91cc\u3002 \u6362\u51fa sscratch \u540e\uff0c a0 \u5305\u542b\u8fdb\u7a0b\u7684 trapframe \uff0c\u7136\u540e uservec \u4fdd\u5b58\u7528 \u6237\u7684\u5bc4\u5b58\u5668\u5230 sscratch \u3002 trampframe \u5305\u542b\u5f53\u524d\u8fdb\u7a0b\u7684 kernel stack \uff0c\u5f53\u524dCPU\u7684\u56fe\u6807\uff0c usertrap \u7684\u5730\u5740\uff0c\u5185\u6838\u9875\u8868 \u5730\u5740\uff0c uservec \u83b7\u5f97\u8fd9\u4e9b\u5185\u5bb9\uff0c\u8bbe\u7f6e satp \u5207\u6362\u5230\u5185\u6838\u9875\u8868\uff0c\u7136\u540e\u8c03\u7528 usertrap \u3002 usertrap \u7684\u4f5c\u7528\u662f\u786e\u5b9a\u9677\u9631\u7684\u539f\u56e0\uff0c\u6267\u884c\u5b83\uff0c\u7136\u540e\u8fd4\u56de(kernel/trap.c:37)\u3002\u5b83\u9996\u5148\u6539\u53d8 stvec \uff0c \u6240\u4ee5\u5185\u6838\u80fd\u591f\u5f00\u59cb\u5904\u7406 kernelvec \u3002\u7136\u540e\u4fdd\u5b58 sepc \uff0c\u9632\u6b62\u8fdb\u7a0b\u5207\u6362\u540e\uff0c sepc \u88ab\u91cd\u5199\u3002 \u5982\u679c\u9677\u9631\u662f\u7cfb\u7edf\u8c03\u7528\uff0c syscall \u63a5\u624b\u5b83\uff1b\u5982\u679c\u662f\u8bbe\u5907\u4e2d\u65ad\uff0c devintr \u63a5\u624b\u5b83\uff1b\u5982\u679c\u662f\u5f02\u5e38\uff0c \u5185\u6838\u5c06\u6740\u6b7b\u8fdb\u7a0b\u3002\u5728\u7cfb\u7edf\u8c03\u7528\u4e2d\uff0c\u7cfb\u7edf\u5c06 pc \u52a04\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u6307\u5411 ecall \u6307\u4ee4\u3002\u5728\u7ed3\u675f usertrap \u524d\uff0c usertrap \u68c0\u67e5\u8fdb\u7a0b\u662f\u5426\u88ab\u6740\u6b7b\uff0c\u6216\u8005\u5e94\u8be5\u91ca\u653eCPU\uff08\u5982\u679c\u662f\u65f6\u949f\u4e2d\u65ad\uff09\u3002 \u5f53\u8fd4\u56de\u5230\u7528\u6237\u7a7a\u95f4\u540e\uff0c\u7b2c\u4e00\u6761\u662f\u8c03\u7528 usertrapret (kernel/trap.c:90)\u3002\u8fd9\u4e2a\u51fd\u6570\u8bbe\u7f6eRISC-V \u5bc4\u5b58\u5668\u51c6\u5907\u597d\u5904\u7406\u540e\u9762\u7684\u7528\u6237\u7a7a\u95f4\u7684\u9677\u9631\u3002\u5305\u62ec\uff1a\u4fee\u6539 stvec \u6307\u5411 uservec \uff0c\u51c6\u5907 trapframe \uff0c \u8bbe\u7f6e sepc \u5230\u4e4b\u524d\u4fdd\u5b58\u7684\u7528\u6237\u7a0b\u5e8f\u3002\u6700\u540e usertrapret \u8c03\u7528\u5728trampoline\u4e2d\u7684 userret \u3002 userret \u5c06\u4f1a\u8f6c\u6362\u9875\u8868\u3002 usertrapret \u8c03\u7528 userret \u6765\u4f20\u9012\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4fdd\u5b58\u8fdb\u7a0b\u7528\u6237\u9875\u8868 a1 \uff0c\u548c\u4fdd\u5b58TRAPFRAME\u7684 a0 (kernel/trampoline.S:88)\u3002 userret \u8f6c\u6362 satp \u5230\u7528\u6237\u9875\u8868\u3002 userret \u5c06\u62f7\u8d1d trampframe \u4e2d\u4fdd\u5b58\u7684 a0 \u6765\u51c6\u5907\u540e\u9762\u4ea4\u6362 TRAPFRAME \u3002 userret \u552f\u4e00\u80fd\u7528\u7684\u662f\u5bc4\u5b58\u5668\u5185\u5bb9\u548c trapframe \u4e2d \u7684\u5185\u5bb9\u3002\u7136\u540e userret \u4ece trapframe \u4e2d\u590d\u539f\u7528\u6237\u7a0b\u5e8f\u7684\u5bc4\u5b58\u5668\uff0c\u4ea4\u6362 a0 \u4e0e sscratch \u4e2d\u7684\u5185\u5bb9\uff0c \u6062\u590d\u7528\u6237\u7684 a0 \uff0c\u4e3a\u4e0b\u4e00\u6b21\u9677\u9631\u4fdd\u5b58 TRAPFRAME \u3002\u6700\u540e\u4f7f\u7528 sret \u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u3002 \u540e\u9762\u7684\u9605\u8bfb\u5185\u5bb9\u5c31\u4e0d\u7ffb\u8bd1\u4e86\uff0c\u57fa\u672c\u4e0a\u628a\u7528\u6237\u6001\u5904\u7406\u9677\u9631\u7684\u6d41\u7a0b\u8d70\u901a\u4e86\uff0c\u5176\u4ed6\u6d41\u7a0b\u5c31\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u4e86\u3002 RISC-V \u6c47\u7f16 \u00b6 \u8fd9\u91cc\u8981\u901a\u8fc7\u5206\u6790 user/call.c \u6765\u5b66\u4e60\u4e00\u4e0bRISC-V\u7684\u6c47\u7f16\u8bed\u8a00\u3002 \u8c03\u7528 make fs.img \u6765\u7f16\u8bd1\u5b83\uff0c \u5e76\u4e14\u751f\u6210\u53ef\u8bfb\u7684\u6c47\u7f16\u7248\u672c\u7684\u7a0b\u5e8f user/call.asm \u3002 \u9605\u8bfb call.asm \u7684\u51fd\u6570 g \uff0c f \u548c main \u3002\u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898: \u54ea\u4e9b\u5bc4\u5b58\u5668\u5305\u542b\u51fd\u6570\u7684\u53c2\u6570?\u5f53 main \u8c03\u7528 printf \u65f6\uff0c\u54ea\u4e2a\u5bc4\u5b58\u5668\u4fdd\u5b58\u4e86 13 ? \u4f7f\u7528 a0-a7 \u5bc4\u5b58\u5668\u6765\u4fdd\u5b58\u51fd\u6570\u53d8\u91cf\u3002\u8fd9\u91cc printf \u4f7f\u7528 a2 \u4fdd\u5b58 13 \u3002 main \u4e2d\u8c03\u7528 f \u7684\u8bed\u53e5\u662f\u54ea\u4e9b\uff0c\u8c03\u7528 g \u7684\u8bed\u53e5\u662f\u54ea\u4e9b? \u88ab\u4f18\u5316\u4e86\uff0c\u6ca1\u6709\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002 printf \u7684\u5730\u5740\u662f\u4ec0\u4e48\uff1f\u8d77\u59cb\u5730\u5740\u662f 0x630 \u3002 main \u4e2d printf \u7684 jalr \u6307\u4ee4\u8fd0\u884c\u540e\uff0c ra \u5bc4\u5b58\u5668\u4fdd\u5b58\u4e86\u4ec0\u4e48\u503c\uff1f ra \u4fdd\u5b58\u503c\u662f 0x38 \u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u8f93\u51fa\u4ec0\u4e48\uff1f\u8f93\u51fa\u503c\u53d6\u51b3\u4e8eRISC-V\u662f\u5927\u7aef\u8fd8\u662f\u5c0f\u7aef\u3002\u5982\u679c\u662f\u5927\u7aef\uff0c\u5e94\u8be5\u6539\u53d8\u53d8\u91cf\u6210\u4ec0\u4e48 \u624d\u80fd\u4fdd\u8bc1\u8f93\u51fa\u4e0d\u53d8\uff1f57616\u9700\u8981\u6539\u53d8\u5417\uff1f unsigned int i = 0x00646c72 ; printf ( \"H%x Wo%s\" , 57616 , & i ); \u8f93\u51fa\u7684 HE110 World \uff0c\u5982\u679c\u662f\u5927\u7aef\u5219 i = 0x726c6400 \u3002 printf(\"x=%d y=%d\", 3) \u4f1a\u8f93\u51fa\u4ec0\u4e48\uff1f y= \u540e\u9762\u8f93\u51fa\u7684\u662f a2 \u5bc4\u5b58\u5668\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u6ca1\u6709\u8d4b\u503c\uff0c \u6240\u4ee5\u8981\u770b\u8fd0\u884c\u5230\u8fd9\u91cc\u7684\u65f6\u5019 a2 \u88ab\u5176\u4ed6\u7a0b\u5e8f\u8d4b\u503c\u6210\u4ec0\u4e48\u503c\u3002 Note \u8fd9\u91cc\u8981\u7406\u89e3RISC-V\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\uff0c\u89c4\u5b9a\u7684\u5806\u6808\u53d8\u5316\u6807\u51c6\u3002\u5728\u8bfe\u7a0b\u89c6\u9891\u7684\u7b2c\u4e94\u8282\u6709\u4e13\u95e8\u7684\u8bb2\u89e3\uff0c \u8fd9\u4e00\u8282 \u8fd8\u8bb2\u4e86\u5f88\u591agdb\u7684\u8c03\u8bd5\u65b9\u6cd5\uff0c\u975e\u5e38\u503c\u5f97\u770b\u4e00\u4e0b\u3002 \u53e6\u5916\u8fd9\u91cc\u6709\u4e00\u7bc7 \u535a\u5ba2 \u771f\u4e0d\u9519\u3002 Backtrace \u00b6 \u5b9e\u73b0\u4e00\u4e2a gdb \u4e2d\u5f88\u6709\u7528\u7684\u6307\u4ee4 backtrace \uff0c\u5f53\u9047\u5230\u8fd0\u884c\u51fa\u9519\u65f6\uff0c\u6253\u5370\u51fd\u6570\u8c03\u7528\u6808\u4e0a\u9762\u7684\u6307\u9488\u60c5\u51b5\u3002 \u9898\u76ee\u63cf\u8ff0 \u5728 kernel/printf.c \u5b9e\u73b0\u4e00\u4e2a backtrace() \u51fd\u6570\u3002\u5728 sys_sleep \u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u7136\u540e\u8fd0\u884c bttest \u547d\u4ee4\uff0c\u5b83\u4f1a\u547c\u53eb sys_sleep \u3002\u8f93\u51fa\u5e94\u8be5\u662f\uff1a backtrace: 0x0000000080002cda 0x0000000080002bb6 0x0000000080002898 \u4e4b\u540e\u9000\u51fa qemu \u3002\u5728\u7ec8\u7aef\u8f93\u5165\uff1a\u5730\u5740\u4f1a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u53ef\u4ee5\u4f7f\u7528 addr2line -e kernel/kernel \uff0c \u6216\u8005 riscv64-unknown-elf-addr2line -e kernel/kernel \u7136\u540e\u590d\u5236 bttest \u8f93\u51fa\u7684\u7ed3\u679c\uff1a $ addr2line -e kernel/kernel 0x0000000080002de2 0x0000000080002f4a 0x0000000080002dfc Ctrl-D \u7136\u540e\u6211\u4eec\u4f1a\u770b\u5230 kernel/sysproc.c:74 kernel/syscall.c:224 kernel/trap.c:85 \u7f16\u8bd1\u5668\u7ed9\u4e00\u7247\u4e00\u7247\u7684\u6808\u533a\u653e\u7f6e\u4e00\u4e2a\u6307\u9488\uff0c\u4fdd\u5b58\u7740 caller \u7684\u7247\u6307\u9488\u3002 backtrace \u5e94\u8be5\u7528\u5230\u8fd9\u4e9b\u6808\u6307\u9488 \u6cbf\u7740\u6808\u53bb\u641c\u7d22\u4fdd\u5b58\u7740\u7684\u6307\u9488\u3002 \u4e00\u4e9b\u63d0\u793a\uff1a \u5728 kernel/defs.h \u58f0\u660e backtrace \uff0c\u7136\u540e\u5c31\u80fd\u5728 sys_sleep \u4e2d\u8c03\u7528 backtrace \u3002 \u5728GCC\u7f16\u8bd1\u5668\u4e2d\u4fdd\u5b58\u7740\u5f53\u524d\u51fd\u6570\u7684\u7247\u6307\u9488 \\(s0\\) \u3002\u5728 kernel/riscv.h \u4e2d\u6dfb\u52a0\u51fd\u6570\uff1a static inline uint64 r_fp () { uint64 x ; asm volatile ( \"mv %0, s0\" : \"=r\" ( x )); return x ; } \u7136\u540e\u518d backtrace \u4e2d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u8bfb\u53d6\u5f53\u524d\u7684\u7247\u6307\u9488\u3002 - \u5728\u8bfe\u7a0b\u7b14\u8bb0\u4e2d\u6709\u4e00\u5f20\u56fe\u7247\u753b\u7740\u6808\u7247\u7684\u7ed3\u6784\u3002\u8fd4\u56de\u5730\u5740\u5728\u6808\u6307\u9488\u7684(-8)\u4f4d\u7f6e\uff0c\u4fdd\u5b58\u7684\u6808\u6307\u9488\u5728\u5f53\u524d \u6808\u6307\u9488\u7684(-16)\u7684\u4f4d\u7f6e\u3002 - Xv6 \u7ed9\u6808\u5206\u914d\u4e00\u4e2a\u5185\u5b58\u9875\u3002\u53ef\u4ee5\u4f7f\u7528 PGROUNDDOWN(fp) \u548c PGROUNDUP(fp) \uff08\u770b kernel/riscv.h \u3002 \u8fd9\u4e2a\u6570\u5b57\u6709\u52a9\u4e8e backtrace \u7ed3\u675f\u5faa\u73af\u3002\uff09 \u4e00\u65e6 backtrace \u6709\u7528\uff0c\u5728 kernel/printf.c:panic \u4e2d\u8c03\u7528\u5b83\uff0c\u5f53\u5185\u6838\u51fa\u9519\u65f6\u6253\u5370 backtrace \u3002 \u53c2\u8003\u7b54\u6848 \u5176\u4e2d\u7528\u4e8e\u5224\u65ad\u7684 0x3fffff9000 \u662f\u8bd5\u51fa\u6765\u7684\u3002 void backtrace ( void ) { printf ( \"backtrace: \\n \" ); uint64 * p = ( uint64 * ) r_fp (); while ( PGROUNDDOWN (( uint64 ) p ) == 0x3fffff9000 ){ printf ( \"%p \\n \" , p [ -1 ]); p = ( uint64 * ) p [ -2 ]; } } Alarm \u00b6 \u9898\u76ee\u63cf\u8ff0 \u4e3a xv6 \u589e\u52a0\u4e00\u4e2a\u65b0\u7279\u6027\uff1a\u5468\u671f\u6027\u5730\u63d0\u793a\u7a0b\u5e8f\u4f7f\u7528\u7684CPU\u65f6\u95f4\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u7840\u7684\u7528\u6237\u7ea7\u522b\u7684\u4e2d\u65ad/ \u9519\u8bef\u7a0b\u5e8f\uff0c\u9700\u8981\u901a\u8fc7 alarmtest \u548c usertests \u3002 \u9700\u8981\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528 sigalarm(interval, handler) \u3002\u8c03\u7528 sigalarm(n, fn) \uff0c\u7528\u6237\u7a0b\u5e8f\u6bcfn\u4e2a CPU\u65f6\u949f\u5468\u671f\uff0c\u5185\u6838\u5c31\u4f1a\u8c03\u7528\u4e00\u4e0b fn \uff0c\u5f53 fn \u6267\u884c\u5b8c\u6bd5\uff0c\u7ee7\u7eed\u6267\u884c\u7528\u6237\u7a0b\u5e8f\u3002 sigalarm(0, 0) \u5e94\u8be5\u4e0d\u4ea7\u751f\u4e2d\u65ad\u3002 \u5c06 user/alarmtest.c \u52a0\u5165\u5230 Makefile \uff0c\u5b83\u9700\u8981\u7cfb\u7edf\u8c03\u7528 sigalarm \u548c sigreturn \u3002 alarmtest.c \u8c03\u7528 sigalarm(2, periodic) \u3002 \u9700\u8981\u5b9e\u73b0\u7684\u4ee3\u7801\u53ef\u80fd\u5f88\u77ed\uff0c\u4f46\u662f\u975e\u5e38\u5de7\u5999\u3002 \u6211\u5efa\u8bae sys_sigalarm(void) \u548c sys_sigreturn(void) \u7684\u5b9e\u73b0\u653e\u5230 sysproc.c \u4e2d\u3002 \u9488\u5bf9 test0 \u00b6 \u63d0\u793a\uff1a \u5c06 alarmtest.c \u52a0\u5165\u5230 Makefile \u3002 \u5728 user/user.h \u4e2d\u52a0\u5165\u58f0\u660e\uff1a int sigalarm ( int ticks , void ( * handler )()); int sigreturn ( void ); \u66f4\u65b0 user/usys.pl \uff0c kernel/syscall.h \u548c kernel/syscall.c \u6765\u521b\u5efa\u8fd9\u4e24\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002 \u76ee\u524d sys_sigreturn \u76ee\u524d\u53ea\u9700\u8981\u8fd4\u56de0\u3002 sys_sigalarm() \u5e94\u8be5\u5728 proc ( kernel/proc.h )\u7ed3\u6784\u4e2d\u4fdd\u5b58 interval \u548c\u6307\u9488\u3002 \u9700\u8981\u8bb0\u5f55\u7a0b\u5e8f\u5df2\u7ecf\u7528\u8fc7\u4e86\u591a\u5c11CPU\u65f6\u949f\u5468\u671f\uff0c\u5728 proc \u4e2d\u4fdd\u5b58\u8fd9\u4e2a\u5185\u5bb9\u3002\u5728 proc.c/allocproc() \u4e2d \u521d\u59cb\u5316\u4e3a\u96f6\u3002 \u53ea\u9700\u8981\u64cd\u4f5c\u65f6\u949f\u5468\u671f\uff0c\u4f8b\u5982\uff1a if(which_dev == 0) \u3002 \u53ea\u6709\u8fdb\u7a0b\u6709\u672a\u5b8c\u6210\u7684\u8ba1\u65f6\u5668\u65f6\u624d\u4f1a\u542f\u7528\u8b66\u62a5\u65b9\u7a0b\u3002\u7528\u6237\u7684\u8b66\u544a\u51fd\u6570\u5730\u5740\u53ef\u80fd\u662f0\uff08 user/alarmtest.asm \u91cc\u663e\u793a periodic \u5730\u5740\u4e3a0\uff09\u3002 \u9700\u8981\u4fee\u6539 usertrap() \u6765\u4f7f\u5f97\u8b66\u544a\u4e2d\u65ad\u6682\u65f6\u5931\u6548\u65f6\uff0c\u8fd0\u884chandler\u51fd\u6570\u3002\u5f53\u9677\u9631\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u65f6\uff0c \u4ec0\u4e48\u6307\u4ee4\u51b3\u5b9a\u4e86\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u6267\u884c\u4ec0\u4e48\u6307\u4ee4\uff1f \u5f53\u53ea\u7528\u4e00\u4e2aCPU\u65f6\u6bd4\u8f83\u597d\u4f7f\u7528gdb\u8c03\u8bd5\uff0c\u53ef\u4ee5\u4f7f\u7528 make CPUS=1 qemu-gdb \u3002 \u8fd9\u65f6\u5019\u5e94\u8be5\u80fd\u6210\u529f\u6253\u5370 alarm \u3002 \u9488\u5bf9 test1/test2 \u00b6 \u8b66\u544a\u6307\u4ee4\u7684\u6700\u540e\u9700\u8981\u8c03\u7528 sigreturn \uff0c\u53c2\u8003 alarmtest.c:periodic() \u3002\u9700\u8981\u4fee\u6539 usertrap \u548c sys_sigreturn \u6765\u4fdd\u8bc1\u7a0b\u5e8f\u6062\u590d\u6b63\u5e38\u8fd0\u884c\u3002 \u63d0\u793a\uff1a \u9700\u8981\u4fdd\u5b58\u4e00\u7cfb\u5217\u7684\u5bc4\u5b58\u5668\uff1b \u5f53\u8ba1\u65f6\u5668\u5173\u95ed\u65f6\uff0c usertrap \u5728 struct proc \u4e2d\u4fdd\u5b58\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf sigreturn \u8fd4\u56de\u6b63 \u786e\u7684\u7528\u6237\u4ee3\u7801\u3002 \u9632\u6b62\u7a0b\u5e8f\u91cd\u5165\u8c03\u7528\u2014\u2014\u5f53\u5904\u7406\u7a0b\u5e8f\u8fd8\u6ca1\u6709\u8fd4\u56de\uff0c\u5185\u6838\u4e0d\u5e94\u8be5\u7ee7\u7eed\u8c03\u7528\u5b83\u3002 \u53c2\u8003\u7b54\u6848 \u5173\u4e8e\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528\u7b49\u64cd\u4f5c\u5728\u63d0\u793a\u91cc\u9762\u5df2\u7ecf\u6bd4\u8f83\u5230\u4f4d\u4e86\u3002 \u9488\u5bf9 struct proc \u7ed3\u6784\u4f53\u7684\u4fee\u6539\u3002\u6dfb\u52a0\u6210\u5458\u53d8\u91cf int interval ; // Alarm interval uint64 handler ; // Handler function int ticks ; // The number of ticks since last call int inhandler ; // inhandler != 0 when the process is running in handler function struct trapframe handler_trapframe ; // The trapframe before into handler \u5728 trap.c:79 \u4e2d\u6dfb\u52a0\u5982\u4e0b\u7a0b\u5e8f\u6bb5\uff0c\u7528\u4e8e\u8c03\u7528\u4e2d\u65ad\u51fd\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c trapframe \u662f\u6307\u9488\uff0c handler_trapframe \u662f\u7ed3\u6784\u4f53\u3002 // give up the CPU if this is a timer interrupt. if ( which_dev == 2 ){ if ( p -> inhandler == 0 ) { p -> ticks += 1 ; if ( p -> interval > 0 && p -> ticks % p -> interval == 0 ){ p -> handler_trapframe = * ( p -> trapframe ); p -> inhandler = 1 ; p -> ticks = 0 ; p -> trapframe -> epc = p -> handler ; } } yield (); } \u5728 sysproc.c \u4e2d\u5b9a\u4e49\u7cfb\u7edf\u8c03\u7528\u3002\u540c\u6837\u9700\u8981\u6ce8\u610f\uff0c trapframe \u662f\u6307\u9488\uff0c handler_trapframe \u662f\u7ed3\u6784\u4f53\u3002 // alarm system call uint64 sys_sigalarm ( void ) { struct proc * p = myproc (); if ( argint ( 0 , & ( p -> interval )) < 0 ) return -1 ; if ( argaddr ( 1 , & ( p -> handler )) < 0 ) return -1 ; return 0 ; } uint64 sys_sigreturn ( void ) { struct proc * p = myproc (); p -> inhandler = 0 ; * ( p -> trapframe ) = p -> handler_trapframe ; return 0 ; }","title":"Lab04 Traps"},{"location":"6.S081/Lab04-Traps/#lab4-traps","text":"\u8fd9\u4e2a\u5b9e\u9a8c\u5c06\u63a2\u7a76\u5982\u4f55\u4f7f\u7528 trap \u6765\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\u3002\u9996\u5148\u8981\u5148\u5b8c\u6210\u4e00\u4e2a\u5173\u4e8e\u6808\u7684\u70ed\u8eab\u7ec3\u4e60\uff0c\u5b8c\u6210\u4e00\u4e2a \u7528\u6237\u5c42\u7ea7\u7684\u9677\u9631\u5904\u7406\u5668\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u611f\u89c96.S081-2020\u8bbe\u8ba1\u7684\u5b9e\u9a8c\u8fd8\u662f\u975e\u5e38\u5408\u7406\u7684\uff0c\u6bcf\u4e00\u4e2a\u5b9e\u9a8c \u90fd\u6b63\u662f\u6211\u6b63\u5728\u56f0\u6270\u7684\u5185\u5bb9\u3002 \u5728\u4ee5\u524d\uff0c\u8fd9\u4e2a\u5b9e\u9a8c\u7684\u4e00\u4e9b\u9898\u76ee\u662f\u653e\u5728 Lab1 \u91cc\u7684\uff0c\u529d\u9000\u4e86\u5f88\u591a\u4eba\u5427\u3002\u73b0\u5728\u9605\u8bfb\u8fc7\u4e00\u4e9b\u6e90\u7801\u540e\u5e94\u8be5\u597d\u5f88\u591a\u3002 \u5728\u5b9e\u9a8c\u524d\uff0c\u8bfe\u7a0b\u5efa\u8bae\u6211\u4eec\u5148\u9605\u8bfb\u4e00\u4e0b xv6-book:ch4 \u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u76f8\u5173\u6e90\u7801\uff1a kernel/trampoline.S :\u8d1f\u8d23\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u7684\u8f6c\u6362\u7684\u6c47\u7f16\u7a0b\u5e8f\uff1b kernel/trap.c :\u8d1f\u8d23\u5904\u7406\u5404\u79cd\u4e2d\u65ad\u4fe1\u53f7\u3002 \u83b7\u53d6\u5b9e\u9a8c\u4ee3\u7801\uff1a $ git fetch $ git checkout traps $ make clean","title":"Lab4: Traps"},{"location":"6.S081/Lab04-Traps/#_1","text":"trap \u5206\u4e3a\u4e09\u79cd\uff1a ecall \u5f15\u53d1\u7684\u7cfb\u7edf\u8c03\u7528\uff1b\u5f02\u5e38\uff1b\u8bbe\u5907\u4e2d\u65ad\u3002\u7528\u6237\u5e94\u8be5\u611f\u53d7\u4e0d\u5230\u5bf9\u4e2d\u65ad\u7684\u5904\u7406\uff0c \u6240\u4ee5\u5185\u6838\u5e94\u8be5\u5728\u4e2d\u65ad\u524d\u4fdd\u5b58\u5bc4\u5b58\u5668\u5185\u5bb9\uff0c\u4e2d\u65ad\u5904\u7406\u5b8c\u6210\u540e\u6062\u590d\u5bc4\u5b58\u5668\u3002 xv6 \u5904\u7406\u4e2d\u65ad\u7a0b\u5e8f\u5206\u4e3a\u56db\u4e2a \u6b65\u9aa4\uff1a\u5904\u7406\u5668\u63a5\u6536\u4e2d\u65ad\u4fe1\u53f7\uff1b\u6c47\u7f16\u5411\u91cf\u4e3a\u5185\u6838\u7684C\u4ee3\u7801\u51c6\u5907\u4e00\u4e9b\u4e1c\u897f\uff0c\u5185\u6838\u4e2d\u9677\u9631\u5904\u7406\u5668\u51b3\u5b9a\u8be5\u600e\u4e48 \u5904\u7406\u8fd9\u4e2a\u9677\u9631\uff0c\u6700\u540e\u8fd0\u884c\u7cfb\u7edf\u8c03\u7528\u548c\u9a71\u52a8\u7a0b\u5e8f\u3002 xv6 \u4f7f\u7528\u4e09\u7c7b\u9677\u9631\u5904\u7406\u5668\uff1a\u5904\u7406\u7528\u6237\u6001\u7684\u9677\u9631\u3001 \u5904\u7406\u5185\u6838\u6001\u7684\u9677\u9631\u548c\u65f6\u95f4\u4e2d\u65ad\u3002","title":"\u9605\u8bfb\u6750\u6599"},{"location":"6.S081/Lab04-Traps/#risc-v","text":"\u5904\u7406\u5668\u4f7f\u7528\u4e00\u7cfb\u5217\u63a7\u5236\u5bc4\u5b58\u5668\u6765\u5b8c\u6210\u9677\u9631\u673a\u5236\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u51e0\u4e2a\u91cd\u8981\u7684\u5bc4\u5b58\u5668\uff1a stvec : \u5185\u6838\u628a\u9677\u9631\u5904\u7406\u5668\u7684\u5730\u5740\u5199\u5230\u8fd9\u4e2a\u5bc4\u5b58\u5668\u91cc\uff0c\u5904\u7406\u5668\u5c06\u8df3\u8f6c\u5230\u8fd9\u4e2a\u5730\u5740\u3002 sepc : \u8bb0\u5f55 pc , \u7136\u540e pc \u88ab stvec \u66ff\u6362\u3002 sret \u4f1a\u62f7\u8d1d stvec \u5230 pc \u3002\u5185\u6838\u80fd\u591f\u901a\u8fc7\u4fee\u6539 sepc \u6765\u63a7\u5236\u8fd4\u56de\u3002 scause : trap \u7684\u539f\u56e0\u3002 sscratch : \u5e2e\u52a9\u9677\u9631\u5904\u7406\u5668\u7684\u542f\u52a8\u7684\u4e00\u4e9b\u6709\u7528\u7684\u503c\u3002 sstatus : \u4e00\u4e9b\u72b6\u6001\u503c\uff0c SIE \u4f4d\u63a7\u5236\u662f\u5426\u5141\u8bb8\u8bbe\u5907\u4e2d\u65ad\uff0c SPP \u4f4d\u6807\u5fd7\u7740\u9677\u9631\u662f\u6765\u81ea\u7528\u6237\u6001 \u8fd8\u662f\u5185\u6838\u6001\u3002 \u5904\u7406\u5668\u5904\u7406\u4e2d\u65ad\u7684\u5177\u4f53\u6d41\u7a0b\u662f\uff1a \u5982\u679c\u662f\u8bbe\u5907\u4e2d\u65ad\uff0c SIE \u6e05\u96f6\uff0c\u7a0b\u5e8f\u65e0\u9650\u7b49\u5f85\u8bbe\u5907\u5c06\u5b83\u7f6e1\u3002 \u5173\u95ed\u4e2d\u65ad SIE \u6e05\u96f6\u3002 \u62f7\u8d1d pc \u5230 sepc \u3002 \u6839\u636e\u5f53\u524d\u6a21\u5f0f\u8bbe\u7f6e sstatus \u4e2d\u7684 SPP \u4f4d\u3002 \u628a\u7ec8\u7aef\u539f\u56e0\u5199\u5165 scause \u3002 \u8f6c\u5230 supervisor \u6a21\u5f0f\u3002 \u62f7\u8d1d stvec \u5230 pc \u3002 \u6267\u884c\u65b0\u7684 pc \u5904\u7684\u6307\u4ee4\u3002 \u5904\u7406\u5668\u5e76\u6ca1\u6709\u8f6c\u6362\u5185\u6838\u9875\uff0c\u5185\u6838\u6808\uff0c\u4ee5\u53ca\u9664\u4e86 pc \u4ee5\u5916\u7684\u5bc4\u5b58\u5668\u3002\u5185\u6838\u7a0b\u5e8f\u9700\u8981\u5b8c\u6210\u8fd9\u4e9b\u4e8b\u60c5\u3002","title":"RISC-V \u7684\u9677\u9631\u673a\u5236"},{"location":"6.S081/Lab04-Traps/#_2","text":"\u5f53\u9677\u9631\u53d1\u751f\u5728\u7528\u6237\u7a7a\u95f4\u65f6\uff0c\u5185\u6838\u5f00\u59cb\u6267\u884c uservec (kernel/trampoline.S:16)\uff0c usertrap (kernel/trap.c:37), usertrapret (kernel/trap.c:90) \u548c userret (kernel/trampoline.S:16)\u3002 \u4ece\u5185\u6838\u7a7a\u95f4\u5f15\u53d1\u9677\u9631\u975e\u5e38\u5177\u6709\u6311\u6218\u6027\uff0c satp \u6307\u5411\u7684\u662f\u7528\u6237\u9875\u8868\uff0c\u5e76\u4e0d\u662f\u5185\u6838\u9875\u8868\uff0c\u800c\u4e14\u6808\u6307\u9488\u4f1a\u6307\u5411 \u975e\u6cd5\u7684\u5185\u5bb9\uff0c\u751a\u81f3\u4f1a\u9020\u6210\u6781\u5927\u7684\u5371\u5bb3\u3002 \u56e0\u4e3aRISC-V\u786c\u4ef6\u6ca1\u6709\u8f6c\u6362\u9875\u8868\uff0c\u6240\u4ee5\u7528\u6237\u9875\u8868\u9700\u8981\u5bf9 stvec \u6307\u5411\u7684 uservec \u505a\u6620\u5c04\u3002 uservec \u9700\u8981\u4ece\u7528\u6237\u9875\u8868\u8f6c\u6362\u4e3a\u5185\u6838\u9875\u8868\uff0c\u6765\u6267\u884c\u540e\u9762\u7684\u7a0b\u5e8f\u3002\u56e0\u6b64\u5728\u7528\u6237\u9875\u8868\u548c\u5185\u6838\u9875\u8868\u4e2d\uff0c\u9700\u8981\u5c06 uservec \u6620\u5c04\u5230\u76f8\u540c\u7684\u865a\u62df\u5730\u5740\uff0c xv6 \u901a\u8fc7 trampoline \u9875\u6765\u5b9e\u73b0\u8fd9\u4e2a\u8981\u6c42\u3002\u865a\u62df\u5730\u5740 TRAMPOLINE \u4fdd\u5b58 \u7684\u5185\u5bb9\u7531 trampoline.S \u8bbe\u7f6e\uff0c\u7528\u6237\u6a21\u5f0f\u4e2d stvec \u8bbe\u7f6e\u5230 uservec \u4e2d(kernel/trampoline.S:16)\u3002 \u5f53 uservec \u5f00\u59cb\uff0c\u6240\u670932\u4e2a\u5bc4\u5b58\u5668\u5305\u542b\u4e2d\u65ad\u4ee3\u7801\u76f8\u5173\u4fe1\u606f\u3002\u4f46\u662f uservec \u9700\u8981\u4fee\u6539\u4e00\u4e9b\u5bc4\u5b58\u5668\u5e76\u4e14 \u4fdd\u5b58\u4e00\u4e9b\u5bc4\u5b58\u5668\u3002RISC-V\u63d0\u4f9b\u4e86 sscratch \u5bc4\u5b58\u5668\u6765\u4fdd\u5b58\u5e2e\u52a9\u4fe1\u606f\u3002\u6bd4\u5982 trampoline.S:137 \u884c\u4f7f\u7528 csrrw \u6765\u4fdd\u5b58 sscratch \u5230 a0 \u3002 uservec \u63a5\u7740\u8981\u4fdd\u5b58\u7528\u6237\u7684\u5bc4\u5b58\u5668\u4fe1\u606f\u3002\u5728\u8fdb\u5165\u7528\u6237\u7a7a\u95f4\u524d\uff0c\u5185\u6838\u8bbe\u7f6e sscratch \u6307\u5411\u7528\u6237\u7684 trapframe , \u5728 trapframe \u4e2d\u4fdd\u5b58\u7528\u6237\u7684\u5bc4\u5b58\u5668(kernel/proc.h:44)\u3002\u4f46\u662f satp \u4ecd\u7136\u6307\u5411 \u7528\u6237\u9875\u8868\uff0c uservec \u9700\u8981\u6620\u5c04 trapframe \u3002 xv6 \u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u9875\u8868\u6620\u5c04\u4e00\u4e2a trapframe \u5230\u865a\u62df \u5730\u5740 TRAPFRAME \u4e2d\uff0c\u5c31\u5728 TRAMPOLINE \u4e0b\u9762\u3002 p->trapframe \u5c31\u6307\u5411 trapframe \u7684\u7269\u7406\u5730\u5740\uff0c \u8ba9\u5185\u6838\u76f4\u63a5\u8bbf\u95ee\u8fd9\u91cc\u3002 \u6362\u51fa sscratch \u540e\uff0c a0 \u5305\u542b\u8fdb\u7a0b\u7684 trapframe \uff0c\u7136\u540e uservec \u4fdd\u5b58\u7528 \u6237\u7684\u5bc4\u5b58\u5668\u5230 sscratch \u3002 trampframe \u5305\u542b\u5f53\u524d\u8fdb\u7a0b\u7684 kernel stack \uff0c\u5f53\u524dCPU\u7684\u56fe\u6807\uff0c usertrap \u7684\u5730\u5740\uff0c\u5185\u6838\u9875\u8868 \u5730\u5740\uff0c uservec \u83b7\u5f97\u8fd9\u4e9b\u5185\u5bb9\uff0c\u8bbe\u7f6e satp \u5207\u6362\u5230\u5185\u6838\u9875\u8868\uff0c\u7136\u540e\u8c03\u7528 usertrap \u3002 usertrap \u7684\u4f5c\u7528\u662f\u786e\u5b9a\u9677\u9631\u7684\u539f\u56e0\uff0c\u6267\u884c\u5b83\uff0c\u7136\u540e\u8fd4\u56de(kernel/trap.c:37)\u3002\u5b83\u9996\u5148\u6539\u53d8 stvec \uff0c \u6240\u4ee5\u5185\u6838\u80fd\u591f\u5f00\u59cb\u5904\u7406 kernelvec \u3002\u7136\u540e\u4fdd\u5b58 sepc \uff0c\u9632\u6b62\u8fdb\u7a0b\u5207\u6362\u540e\uff0c sepc \u88ab\u91cd\u5199\u3002 \u5982\u679c\u9677\u9631\u662f\u7cfb\u7edf\u8c03\u7528\uff0c syscall \u63a5\u624b\u5b83\uff1b\u5982\u679c\u662f\u8bbe\u5907\u4e2d\u65ad\uff0c devintr \u63a5\u624b\u5b83\uff1b\u5982\u679c\u662f\u5f02\u5e38\uff0c \u5185\u6838\u5c06\u6740\u6b7b\u8fdb\u7a0b\u3002\u5728\u7cfb\u7edf\u8c03\u7528\u4e2d\uff0c\u7cfb\u7edf\u5c06 pc \u52a04\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u6307\u5411 ecall \u6307\u4ee4\u3002\u5728\u7ed3\u675f usertrap \u524d\uff0c usertrap \u68c0\u67e5\u8fdb\u7a0b\u662f\u5426\u88ab\u6740\u6b7b\uff0c\u6216\u8005\u5e94\u8be5\u91ca\u653eCPU\uff08\u5982\u679c\u662f\u65f6\u949f\u4e2d\u65ad\uff09\u3002 \u5f53\u8fd4\u56de\u5230\u7528\u6237\u7a7a\u95f4\u540e\uff0c\u7b2c\u4e00\u6761\u662f\u8c03\u7528 usertrapret (kernel/trap.c:90)\u3002\u8fd9\u4e2a\u51fd\u6570\u8bbe\u7f6eRISC-V \u5bc4\u5b58\u5668\u51c6\u5907\u597d\u5904\u7406\u540e\u9762\u7684\u7528\u6237\u7a7a\u95f4\u7684\u9677\u9631\u3002\u5305\u62ec\uff1a\u4fee\u6539 stvec \u6307\u5411 uservec \uff0c\u51c6\u5907 trapframe \uff0c \u8bbe\u7f6e sepc \u5230\u4e4b\u524d\u4fdd\u5b58\u7684\u7528\u6237\u7a0b\u5e8f\u3002\u6700\u540e usertrapret \u8c03\u7528\u5728trampoline\u4e2d\u7684 userret \u3002 userret \u5c06\u4f1a\u8f6c\u6362\u9875\u8868\u3002 usertrapret \u8c03\u7528 userret \u6765\u4f20\u9012\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4fdd\u5b58\u8fdb\u7a0b\u7528\u6237\u9875\u8868 a1 \uff0c\u548c\u4fdd\u5b58TRAPFRAME\u7684 a0 (kernel/trampoline.S:88)\u3002 userret \u8f6c\u6362 satp \u5230\u7528\u6237\u9875\u8868\u3002 userret \u5c06\u62f7\u8d1d trampframe \u4e2d\u4fdd\u5b58\u7684 a0 \u6765\u51c6\u5907\u540e\u9762\u4ea4\u6362 TRAPFRAME \u3002 userret \u552f\u4e00\u80fd\u7528\u7684\u662f\u5bc4\u5b58\u5668\u5185\u5bb9\u548c trapframe \u4e2d \u7684\u5185\u5bb9\u3002\u7136\u540e userret \u4ece trapframe \u4e2d\u590d\u539f\u7528\u6237\u7a0b\u5e8f\u7684\u5bc4\u5b58\u5668\uff0c\u4ea4\u6362 a0 \u4e0e sscratch \u4e2d\u7684\u5185\u5bb9\uff0c \u6062\u590d\u7528\u6237\u7684 a0 \uff0c\u4e3a\u4e0b\u4e00\u6b21\u9677\u9631\u4fdd\u5b58 TRAPFRAME \u3002\u6700\u540e\u4f7f\u7528 sret \u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u3002 \u540e\u9762\u7684\u9605\u8bfb\u5185\u5bb9\u5c31\u4e0d\u7ffb\u8bd1\u4e86\uff0c\u57fa\u672c\u4e0a\u628a\u7528\u6237\u6001\u5904\u7406\u9677\u9631\u7684\u6d41\u7a0b\u8d70\u901a\u4e86\uff0c\u5176\u4ed6\u6d41\u7a0b\u5c31\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u4e86\u3002","title":"\u4ece\u7528\u6237\u7a7a\u95f4\u5f15\u53d1\u9677\u9631"},{"location":"6.S081/Lab04-Traps/#risc-v_1","text":"\u8fd9\u91cc\u8981\u901a\u8fc7\u5206\u6790 user/call.c \u6765\u5b66\u4e60\u4e00\u4e0bRISC-V\u7684\u6c47\u7f16\u8bed\u8a00\u3002 \u8c03\u7528 make fs.img \u6765\u7f16\u8bd1\u5b83\uff0c \u5e76\u4e14\u751f\u6210\u53ef\u8bfb\u7684\u6c47\u7f16\u7248\u672c\u7684\u7a0b\u5e8f user/call.asm \u3002 \u9605\u8bfb call.asm \u7684\u51fd\u6570 g \uff0c f \u548c main \u3002\u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898: \u54ea\u4e9b\u5bc4\u5b58\u5668\u5305\u542b\u51fd\u6570\u7684\u53c2\u6570?\u5f53 main \u8c03\u7528 printf \u65f6\uff0c\u54ea\u4e2a\u5bc4\u5b58\u5668\u4fdd\u5b58\u4e86 13 ? \u4f7f\u7528 a0-a7 \u5bc4\u5b58\u5668\u6765\u4fdd\u5b58\u51fd\u6570\u53d8\u91cf\u3002\u8fd9\u91cc printf \u4f7f\u7528 a2 \u4fdd\u5b58 13 \u3002 main \u4e2d\u8c03\u7528 f \u7684\u8bed\u53e5\u662f\u54ea\u4e9b\uff0c\u8c03\u7528 g \u7684\u8bed\u53e5\u662f\u54ea\u4e9b? \u88ab\u4f18\u5316\u4e86\uff0c\u6ca1\u6709\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002 printf \u7684\u5730\u5740\u662f\u4ec0\u4e48\uff1f\u8d77\u59cb\u5730\u5740\u662f 0x630 \u3002 main \u4e2d printf \u7684 jalr \u6307\u4ee4\u8fd0\u884c\u540e\uff0c ra \u5bc4\u5b58\u5668\u4fdd\u5b58\u4e86\u4ec0\u4e48\u503c\uff1f ra \u4fdd\u5b58\u503c\u662f 0x38 \u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u8f93\u51fa\u4ec0\u4e48\uff1f\u8f93\u51fa\u503c\u53d6\u51b3\u4e8eRISC-V\u662f\u5927\u7aef\u8fd8\u662f\u5c0f\u7aef\u3002\u5982\u679c\u662f\u5927\u7aef\uff0c\u5e94\u8be5\u6539\u53d8\u53d8\u91cf\u6210\u4ec0\u4e48 \u624d\u80fd\u4fdd\u8bc1\u8f93\u51fa\u4e0d\u53d8\uff1f57616\u9700\u8981\u6539\u53d8\u5417\uff1f unsigned int i = 0x00646c72 ; printf ( \"H%x Wo%s\" , 57616 , & i ); \u8f93\u51fa\u7684 HE110 World \uff0c\u5982\u679c\u662f\u5927\u7aef\u5219 i = 0x726c6400 \u3002 printf(\"x=%d y=%d\", 3) \u4f1a\u8f93\u51fa\u4ec0\u4e48\uff1f y= \u540e\u9762\u8f93\u51fa\u7684\u662f a2 \u5bc4\u5b58\u5668\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u6ca1\u6709\u8d4b\u503c\uff0c \u6240\u4ee5\u8981\u770b\u8fd0\u884c\u5230\u8fd9\u91cc\u7684\u65f6\u5019 a2 \u88ab\u5176\u4ed6\u7a0b\u5e8f\u8d4b\u503c\u6210\u4ec0\u4e48\u503c\u3002 Note \u8fd9\u91cc\u8981\u7406\u89e3RISC-V\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\uff0c\u89c4\u5b9a\u7684\u5806\u6808\u53d8\u5316\u6807\u51c6\u3002\u5728\u8bfe\u7a0b\u89c6\u9891\u7684\u7b2c\u4e94\u8282\u6709\u4e13\u95e8\u7684\u8bb2\u89e3\uff0c \u8fd9\u4e00\u8282 \u8fd8\u8bb2\u4e86\u5f88\u591agdb\u7684\u8c03\u8bd5\u65b9\u6cd5\uff0c\u975e\u5e38\u503c\u5f97\u770b\u4e00\u4e0b\u3002 \u53e6\u5916\u8fd9\u91cc\u6709\u4e00\u7bc7 \u535a\u5ba2 \u771f\u4e0d\u9519\u3002","title":"RISC-V \u6c47\u7f16"},{"location":"6.S081/Lab04-Traps/#backtrace","text":"\u5b9e\u73b0\u4e00\u4e2a gdb \u4e2d\u5f88\u6709\u7528\u7684\u6307\u4ee4 backtrace \uff0c\u5f53\u9047\u5230\u8fd0\u884c\u51fa\u9519\u65f6\uff0c\u6253\u5370\u51fd\u6570\u8c03\u7528\u6808\u4e0a\u9762\u7684\u6307\u9488\u60c5\u51b5\u3002 \u9898\u76ee\u63cf\u8ff0 \u5728 kernel/printf.c \u5b9e\u73b0\u4e00\u4e2a backtrace() \u51fd\u6570\u3002\u5728 sys_sleep \u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u7136\u540e\u8fd0\u884c bttest \u547d\u4ee4\uff0c\u5b83\u4f1a\u547c\u53eb sys_sleep \u3002\u8f93\u51fa\u5e94\u8be5\u662f\uff1a backtrace: 0x0000000080002cda 0x0000000080002bb6 0x0000000080002898 \u4e4b\u540e\u9000\u51fa qemu \u3002\u5728\u7ec8\u7aef\u8f93\u5165\uff1a\u5730\u5740\u4f1a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u53ef\u4ee5\u4f7f\u7528 addr2line -e kernel/kernel \uff0c \u6216\u8005 riscv64-unknown-elf-addr2line -e kernel/kernel \u7136\u540e\u590d\u5236 bttest \u8f93\u51fa\u7684\u7ed3\u679c\uff1a $ addr2line -e kernel/kernel 0x0000000080002de2 0x0000000080002f4a 0x0000000080002dfc Ctrl-D \u7136\u540e\u6211\u4eec\u4f1a\u770b\u5230 kernel/sysproc.c:74 kernel/syscall.c:224 kernel/trap.c:85 \u7f16\u8bd1\u5668\u7ed9\u4e00\u7247\u4e00\u7247\u7684\u6808\u533a\u653e\u7f6e\u4e00\u4e2a\u6307\u9488\uff0c\u4fdd\u5b58\u7740 caller \u7684\u7247\u6307\u9488\u3002 backtrace \u5e94\u8be5\u7528\u5230\u8fd9\u4e9b\u6808\u6307\u9488 \u6cbf\u7740\u6808\u53bb\u641c\u7d22\u4fdd\u5b58\u7740\u7684\u6307\u9488\u3002 \u4e00\u4e9b\u63d0\u793a\uff1a \u5728 kernel/defs.h \u58f0\u660e backtrace \uff0c\u7136\u540e\u5c31\u80fd\u5728 sys_sleep \u4e2d\u8c03\u7528 backtrace \u3002 \u5728GCC\u7f16\u8bd1\u5668\u4e2d\u4fdd\u5b58\u7740\u5f53\u524d\u51fd\u6570\u7684\u7247\u6307\u9488 \\(s0\\) \u3002\u5728 kernel/riscv.h \u4e2d\u6dfb\u52a0\u51fd\u6570\uff1a static inline uint64 r_fp () { uint64 x ; asm volatile ( \"mv %0, s0\" : \"=r\" ( x )); return x ; } \u7136\u540e\u518d backtrace \u4e2d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u8bfb\u53d6\u5f53\u524d\u7684\u7247\u6307\u9488\u3002 - \u5728\u8bfe\u7a0b\u7b14\u8bb0\u4e2d\u6709\u4e00\u5f20\u56fe\u7247\u753b\u7740\u6808\u7247\u7684\u7ed3\u6784\u3002\u8fd4\u56de\u5730\u5740\u5728\u6808\u6307\u9488\u7684(-8)\u4f4d\u7f6e\uff0c\u4fdd\u5b58\u7684\u6808\u6307\u9488\u5728\u5f53\u524d \u6808\u6307\u9488\u7684(-16)\u7684\u4f4d\u7f6e\u3002 - Xv6 \u7ed9\u6808\u5206\u914d\u4e00\u4e2a\u5185\u5b58\u9875\u3002\u53ef\u4ee5\u4f7f\u7528 PGROUNDDOWN(fp) \u548c PGROUNDUP(fp) \uff08\u770b kernel/riscv.h \u3002 \u8fd9\u4e2a\u6570\u5b57\u6709\u52a9\u4e8e backtrace \u7ed3\u675f\u5faa\u73af\u3002\uff09 \u4e00\u65e6 backtrace \u6709\u7528\uff0c\u5728 kernel/printf.c:panic \u4e2d\u8c03\u7528\u5b83\uff0c\u5f53\u5185\u6838\u51fa\u9519\u65f6\u6253\u5370 backtrace \u3002 \u53c2\u8003\u7b54\u6848 \u5176\u4e2d\u7528\u4e8e\u5224\u65ad\u7684 0x3fffff9000 \u662f\u8bd5\u51fa\u6765\u7684\u3002 void backtrace ( void ) { printf ( \"backtrace: \\n \" ); uint64 * p = ( uint64 * ) r_fp (); while ( PGROUNDDOWN (( uint64 ) p ) == 0x3fffff9000 ){ printf ( \"%p \\n \" , p [ -1 ]); p = ( uint64 * ) p [ -2 ]; } }","title":"Backtrace"},{"location":"6.S081/Lab04-Traps/#alarm","text":"\u9898\u76ee\u63cf\u8ff0 \u4e3a xv6 \u589e\u52a0\u4e00\u4e2a\u65b0\u7279\u6027\uff1a\u5468\u671f\u6027\u5730\u63d0\u793a\u7a0b\u5e8f\u4f7f\u7528\u7684CPU\u65f6\u95f4\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u7840\u7684\u7528\u6237\u7ea7\u522b\u7684\u4e2d\u65ad/ \u9519\u8bef\u7a0b\u5e8f\uff0c\u9700\u8981\u901a\u8fc7 alarmtest \u548c usertests \u3002 \u9700\u8981\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528 sigalarm(interval, handler) \u3002\u8c03\u7528 sigalarm(n, fn) \uff0c\u7528\u6237\u7a0b\u5e8f\u6bcfn\u4e2a CPU\u65f6\u949f\u5468\u671f\uff0c\u5185\u6838\u5c31\u4f1a\u8c03\u7528\u4e00\u4e0b fn \uff0c\u5f53 fn \u6267\u884c\u5b8c\u6bd5\uff0c\u7ee7\u7eed\u6267\u884c\u7528\u6237\u7a0b\u5e8f\u3002 sigalarm(0, 0) \u5e94\u8be5\u4e0d\u4ea7\u751f\u4e2d\u65ad\u3002 \u5c06 user/alarmtest.c \u52a0\u5165\u5230 Makefile \uff0c\u5b83\u9700\u8981\u7cfb\u7edf\u8c03\u7528 sigalarm \u548c sigreturn \u3002 alarmtest.c \u8c03\u7528 sigalarm(2, periodic) \u3002 \u9700\u8981\u5b9e\u73b0\u7684\u4ee3\u7801\u53ef\u80fd\u5f88\u77ed\uff0c\u4f46\u662f\u975e\u5e38\u5de7\u5999\u3002 \u6211\u5efa\u8bae sys_sigalarm(void) \u548c sys_sigreturn(void) \u7684\u5b9e\u73b0\u653e\u5230 sysproc.c \u4e2d\u3002","title":"Alarm"},{"location":"6.S081/Lab04-Traps/#test0","text":"\u63d0\u793a\uff1a \u5c06 alarmtest.c \u52a0\u5165\u5230 Makefile \u3002 \u5728 user/user.h \u4e2d\u52a0\u5165\u58f0\u660e\uff1a int sigalarm ( int ticks , void ( * handler )()); int sigreturn ( void ); \u66f4\u65b0 user/usys.pl \uff0c kernel/syscall.h \u548c kernel/syscall.c \u6765\u521b\u5efa\u8fd9\u4e24\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002 \u76ee\u524d sys_sigreturn \u76ee\u524d\u53ea\u9700\u8981\u8fd4\u56de0\u3002 sys_sigalarm() \u5e94\u8be5\u5728 proc ( kernel/proc.h )\u7ed3\u6784\u4e2d\u4fdd\u5b58 interval \u548c\u6307\u9488\u3002 \u9700\u8981\u8bb0\u5f55\u7a0b\u5e8f\u5df2\u7ecf\u7528\u8fc7\u4e86\u591a\u5c11CPU\u65f6\u949f\u5468\u671f\uff0c\u5728 proc \u4e2d\u4fdd\u5b58\u8fd9\u4e2a\u5185\u5bb9\u3002\u5728 proc.c/allocproc() \u4e2d \u521d\u59cb\u5316\u4e3a\u96f6\u3002 \u53ea\u9700\u8981\u64cd\u4f5c\u65f6\u949f\u5468\u671f\uff0c\u4f8b\u5982\uff1a if(which_dev == 0) \u3002 \u53ea\u6709\u8fdb\u7a0b\u6709\u672a\u5b8c\u6210\u7684\u8ba1\u65f6\u5668\u65f6\u624d\u4f1a\u542f\u7528\u8b66\u62a5\u65b9\u7a0b\u3002\u7528\u6237\u7684\u8b66\u544a\u51fd\u6570\u5730\u5740\u53ef\u80fd\u662f0\uff08 user/alarmtest.asm \u91cc\u663e\u793a periodic \u5730\u5740\u4e3a0\uff09\u3002 \u9700\u8981\u4fee\u6539 usertrap() \u6765\u4f7f\u5f97\u8b66\u544a\u4e2d\u65ad\u6682\u65f6\u5931\u6548\u65f6\uff0c\u8fd0\u884chandler\u51fd\u6570\u3002\u5f53\u9677\u9631\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u65f6\uff0c \u4ec0\u4e48\u6307\u4ee4\u51b3\u5b9a\u4e86\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u6267\u884c\u4ec0\u4e48\u6307\u4ee4\uff1f \u5f53\u53ea\u7528\u4e00\u4e2aCPU\u65f6\u6bd4\u8f83\u597d\u4f7f\u7528gdb\u8c03\u8bd5\uff0c\u53ef\u4ee5\u4f7f\u7528 make CPUS=1 qemu-gdb \u3002 \u8fd9\u65f6\u5019\u5e94\u8be5\u80fd\u6210\u529f\u6253\u5370 alarm \u3002","title":"\u9488\u5bf9test0"},{"location":"6.S081/Lab04-Traps/#test1test2","text":"\u8b66\u544a\u6307\u4ee4\u7684\u6700\u540e\u9700\u8981\u8c03\u7528 sigreturn \uff0c\u53c2\u8003 alarmtest.c:periodic() \u3002\u9700\u8981\u4fee\u6539 usertrap \u548c sys_sigreturn \u6765\u4fdd\u8bc1\u7a0b\u5e8f\u6062\u590d\u6b63\u5e38\u8fd0\u884c\u3002 \u63d0\u793a\uff1a \u9700\u8981\u4fdd\u5b58\u4e00\u7cfb\u5217\u7684\u5bc4\u5b58\u5668\uff1b \u5f53\u8ba1\u65f6\u5668\u5173\u95ed\u65f6\uff0c usertrap \u5728 struct proc \u4e2d\u4fdd\u5b58\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf sigreturn \u8fd4\u56de\u6b63 \u786e\u7684\u7528\u6237\u4ee3\u7801\u3002 \u9632\u6b62\u7a0b\u5e8f\u91cd\u5165\u8c03\u7528\u2014\u2014\u5f53\u5904\u7406\u7a0b\u5e8f\u8fd8\u6ca1\u6709\u8fd4\u56de\uff0c\u5185\u6838\u4e0d\u5e94\u8be5\u7ee7\u7eed\u8c03\u7528\u5b83\u3002 \u53c2\u8003\u7b54\u6848 \u5173\u4e8e\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528\u7b49\u64cd\u4f5c\u5728\u63d0\u793a\u91cc\u9762\u5df2\u7ecf\u6bd4\u8f83\u5230\u4f4d\u4e86\u3002 \u9488\u5bf9 struct proc \u7ed3\u6784\u4f53\u7684\u4fee\u6539\u3002\u6dfb\u52a0\u6210\u5458\u53d8\u91cf int interval ; // Alarm interval uint64 handler ; // Handler function int ticks ; // The number of ticks since last call int inhandler ; // inhandler != 0 when the process is running in handler function struct trapframe handler_trapframe ; // The trapframe before into handler \u5728 trap.c:79 \u4e2d\u6dfb\u52a0\u5982\u4e0b\u7a0b\u5e8f\u6bb5\uff0c\u7528\u4e8e\u8c03\u7528\u4e2d\u65ad\u51fd\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c trapframe \u662f\u6307\u9488\uff0c handler_trapframe \u662f\u7ed3\u6784\u4f53\u3002 // give up the CPU if this is a timer interrupt. if ( which_dev == 2 ){ if ( p -> inhandler == 0 ) { p -> ticks += 1 ; if ( p -> interval > 0 && p -> ticks % p -> interval == 0 ){ p -> handler_trapframe = * ( p -> trapframe ); p -> inhandler = 1 ; p -> ticks = 0 ; p -> trapframe -> epc = p -> handler ; } } yield (); } \u5728 sysproc.c \u4e2d\u5b9a\u4e49\u7cfb\u7edf\u8c03\u7528\u3002\u540c\u6837\u9700\u8981\u6ce8\u610f\uff0c trapframe \u662f\u6307\u9488\uff0c handler_trapframe \u662f\u7ed3\u6784\u4f53\u3002 // alarm system call uint64 sys_sigalarm ( void ) { struct proc * p = myproc (); if ( argint ( 0 , & ( p -> interval )) < 0 ) return -1 ; if ( argaddr ( 1 , & ( p -> handler )) < 0 ) return -1 ; return 0 ; } uint64 sys_sigreturn ( void ) { struct proc * p = myproc (); p -> inhandler = 0 ; * ( p -> trapframe ) = p -> handler_trapframe ; return 0 ; }","title":"\u9488\u5bf9test1/test2"},{"location":"6.S081/Lab05-Xv6-Lazy-Allocation/","text":"Lab5: Lazy Page Allocation \u00b6 Lazy Page\u80fd\u591f\u5927\u5927\u964d\u4f4e\u7528\u6237\u5806\u7a7a\u95f4\u7684\u9875\u8868\u4ea4\u6362\u7684\u786c\u4ef6IO\u6b21\u6570\u3002Xv6\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528 sbrk() \u6765\u5411\u5185\u6838\u7533\u8bf7\u5806 \u7a7a\u95f4\u3002 sbrk() \u5206\u914d\u4e00\u4e2a\u7269\u7406\u5185\u5b58\u7ed9\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u3002\u5185\u6838\u5206\u914d\u7269\u7406\u5730\u5740\u9875\u7684\u82b1\u9500\u975e\u5e38\u5927\u3002\u7a0b\u5e8f\u7ecf\u5e38\u7533\u8bf7 \u8fdc\u8fdc\u8d85\u51fa\u5b83\u9700\u6c42\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5374\u4ece\u4e0d\u4f7f\u7528\uff1b\u6216\u8005\u63d0\u524d\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4\u4f46\u662f\u8fc7\u4e86\u5f88\u4e45\u624d\u4f7f\u7528\u3002\u4e3a\u4e86\u8ba9 sbrk \u6548\u7387 \u66f4\u9ad8\uff0c\u5185\u6838\u5f80\u5f80\u4f7f\u7528Lazy Page\u6280\u672f\uff1a\u5728\u7a0b\u5e8f\u7533\u8bf7\u5185\u5b58\u65f6\u5e76\u4e0d\u771f\u6b63\u5730\u5206\u914d\uff0c\u76f4\u5230\u7a0b\u5e8f\u4f7f\u7528\u5b83\u65f6\u4ea7\u751f\u4e00\u4e2a\u7f3a\u9875 \u4e2d\u65ad\uff0c\u8fd9\u65f6\u5185\u6838\u518d\u5206\u914d\u771f\u5b9e\u7684\u7269\u7406\u7a7a\u95f4\u3002 \u83b7\u53d6\u672c\u8282\u5b9e\u9a8c\u4ee3\u7801\uff1a $ git fetch $ git checkout lazy $ make clean Eliminate allocation from sbrk() \u00b6 \u95ee\u9898\u63cf\u8ff0 \u5220\u9664 sbrk(n) \u7cfb\u7edf\u8c03\u7528\u4e2d\u9875\u8868\u5206\u914d\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f sysproc.c:sys_sbrk() \u7684\u5185\u5bb9\u3002\u65b0\u7684 sbrk \u5e94\u8be5\u53ea\u589e\u957f\u8fdb\u7a0b\u7684\u5927\u5c0f\u5c5e\u6027\uff08 myproc()->sz \uff09\uff0c\u7136\u540e\u8fd4\u56de\u65e7\u7684\u8fdb\u7a0b\u7684\u5927\u5c0f\u3002\u5b83\u4e0d\u5e94\u8be5 \u5206\u914d\u5185\u5b58\u2014\u2014\u4e5f\u5c31\u662f\u5220\u9664 growproc() \u3002 \u4fee\u6539\u5b8c\u6bd5\u540e\uff0c\u4f1a\u5f15\u8d77\u54ea\u91cc\u62a5\u9519\u5462\uff1f\u4fee\u6539\u5b8c\u540e\u8fdb\u5165qemu\uff0c\u8f93\u5165\u6307\u4ee4 echo hi \uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u770b\u5230\uff1a init: starting sh $ echo hi usertrap () : unexpected scause 0x000000000000000f pid = 3 sepc = 0x0000000000001258 stval = 0x0000000000004008 va = 0x0000000000004000 pte = 0x0000000000000000 panic: uvmunmap: not mapped usertrap():... \u62a5\u9519\u6307\u4ee4\u662f\u6765\u81ea trap.c \uff1b\u786e\u4fdd\u4f60\u7406\u89e3\u4e3a\u4ec0\u4e48\u4f1a\u5f15\u8d77\u9875\u9519\u8bef\u3002 stval=0x0..04008 \u8868\u793a\u865a\u62df\u5730\u5740 0x4008 \u8bfb\u53d6\u7684\u65f6\u5019\u53d1\u751f\u9519\u8bef\u3002 Lazy allocation \u00b6 \u95ee\u9898\u63cf\u8ff0 \u4fee\u6539 trap.c \u4e2d\u5bf9\u5e94\u7684\u9875\u9519\u8bef\u7684\u90e8\u5206\uff0c\u4e3a\u7528\u6237\u7a7a\u95f4\u7533\u8bf7\u4e00\u4e2a\u65b0\u7684\u7269\u7406\u5185\u5b58\u9875\u5230\u51fa\u9519\u8bef\u7684\u5730\u5740\uff0c\u7136\u540e\u8fd4\u56de \u5230\u7528\u6237\u7a7a\u95f4\u7ee7\u7eed\u7528\u6237\u7a0b\u5e8f\u7684\u8fd0\u884c\u3002\u9700\u8981\u5728 printf() \u8f93\u51fa usertrap() \u7684\u7a0b\u5e8f\u6bb5\u524d\u5b8c\u6210\u8fd9\u4e2a\u529f\u80fd\u3002 \u4fee\u6539\u6210\u529f\u540e echo hi \u5e94\u8be5\u53ef\u4ee5\u5de5\u4f5c\u3002 \u63d0\u793a\uff1a \u53ef\u4ee5\u901a\u8fc7 r_scause() \u6765\u67e5\u770b\u62a5\u9519\u4fe1\u606f\uff0c\u5982\u679c\u662f13\u621615\u90a3\u5c31\u662f\u9875\u9519\u8bef\uff1b \u8c03\u7528 r_stval() \u8fd4\u56deRISC-V\u7684 stval \u5bc4\u5b58\u5668\uff0c\u5b83\u5305\u542b\u5f15\u8d77\u9875\u9519\u8bef\u7684\u865a\u62df\u5730\u5740\uff1b \u501f\u9274 vm.c:uvmalloc() \u7684\u4ee3\u7801\u3002\u9700\u8981\u4f7f\u7528 kalloc() \u548c mappages() \uff1b \u4f7f\u7528 PGROUNDDOWN(va) \u6765\u53d6\u6574\u865a\u62df\u5730\u5740\uff1b \u73b0\u5728\u7684 uvmunmap() \u4f1a\u62a5\u9519\uff0c\u4fee\u6539\u5b83\uff1b \u5185\u6838\u62a5\u9519\u4e86\u53ef\u4ee5\u9605\u8bfb kernel/kernel.asm \uff1b \u4f7f\u7528\u4ece pgtbl \u4e2d\u5b9e\u73b0\u7684 vmprint \u51fd\u6570\uff0c\u6765\u6253\u5370 page table \u7684\u5185\u5bb9\uff1b \u5982\u679c\u9047\u5230\u62a5\u9519 incomplete type proc \uff0c \u5305\u542b spinlock.h \u548c proc.h \u5934\u6587\u4ef6\u3002 Lazytests and Usertests \u00b6 \u6d4b\u8bd5\u7a0b\u5e8f\u8981\u8003\u8651\u66f4\u590d\u6742\u7684\u60c5\u51b5\uff1a sbrk() \u662f\u8d1f\u6570\u7684\u65f6\u5019\u8be5\u600e\u4e48\uff1f\uff08\u6211\u8fd9\u91cc\u76f4\u63a5\u4fdd\u7559\u539f\u6765\u7684 sbrk() \u51fd\u6570\u7684\u5224\u65ad\uff0c\u8d1f\u6570\u62a5\u9519\uff0c\u8fd4\u56de-1\u3002) \u5982\u679c\u865a\u62df\u5185\u5b58\u8bbf\u95ee\u7684\u672c\u6765\u5c31\u662f\u9ad8\u4e8e\u8fdb\u7a0b\u7533\u8bf7\u7684\u5185\u5b58\u9875\u5462\uff1f\uff08\u5728 trap.c \u4e2d\u6dfb\u52a0\u5224\u65ad\u3002\uff09 \u5904\u7406\u6b63\u786e\u5904\u7406 fork() \u3002 \u5904\u7406\u8fdb\u7a0b\u8fdb\u5165\u7cfb\u7edf\u8c03\u7528 read \u548c write \u65f6\uff0c\u7cfb\u7edf\u8fd8\u6ca1\u6709\u7ed9\u7528\u6237\u9875\u8868\u5206\u914d\u5185\u5b58\u7684\u60c5\u51b5\u3002 \uff08\u5e94\u8be5\u662f\u4fee\u6539 copyin \u548c copyout \uff09 \u5982\u679c\u5185\u5b58\u5360\u6ee1\u4e86\uff0c\u9700\u8981\u6b63\u786e\u5730\u6740\u6b7b\u8fdb\u7a0b\u3002 \u5904\u7406\u7528\u6237\u6808\u4e0b\u9762\u7684\u975e\u6cd5\u9875\u7684\u8bbf\u95ee\u3002 \u5982\u679c\u5b9e\u73b0\u6b63\u786e\uff0c\u90a3\u4e48\u5185\u6838\u8fd0\u884c usertests \u4f1a\u51fa\u73b0\u5982\u4e0b\u5185\u5bb9\uff1a $ lazytests lazytests starting running test lazy alloc test lazy alloc: OK running test lazy unmap... usertrap () : ... test lazy unmap: OK running test out of memory usertrap () : ... test out of memory: OK ALL TESTS PASSED $ usertests ... ALL TESTS PASSED $ \u53c2\u8003\u7b54\u6848 \u9996\u5148\u4fee\u6539 sysproc.c \uff1a uint64 sys_sbrk ( void ) { int addr ; int n ; if ( argint ( 0 , & n ) < 0 ) return -1 ; addr = myproc () -> sz ; if ( n < 0 ){ if ( growproc ( n ) < 0 ) return -1 ; } else { myproc () -> sz += n ; } return addr ; } \u4fee\u6539\u9677\u9631\u51fd\u6570 trap.c:68 \uff1a else if ( r_scause () == 13 || r_scause () == 15 ){ char * mem ; uint64 va = r_stval (); if ( va >= myproc () -> sz ){ p -> killed = 1 ; } else { mem = kalloc (); if ( mem == 0 ){ // run out of physical memory, // wait for an empty page. p -> killed = 1 ; } else { memset ( mem , 0 , PGSIZE ); if ( mappages ( myproc () -> pagetable , PGROUNDDOWN ( va ), PGSIZE , ( uint64 ) mem , PTE_W | PTE_X | PTE_R | PTE_U ) != 0 ){ kfree ( mem ); p -> killed = 1 ; } } } } \u4fee\u6539 vm.c \u6765\u4f7f\u5f97\u7cfb\u7edf\u8c03\u7528 write \u548c read \u53ef\u7528\uff1a //\u6dfb\u52a0\u5934\u6587\u4ef6 #include \"spinlock.h\" #include \"proc.h\" //... uint64 walkaddr ( pagetable_t pagetable , uint64 va ) { pte_t * pte ; uint64 pa ; if ( va >= MAXVA ) return 0 ; // pte = walk(pagetable, va, 0); pte = walk ( pagetable , va , 0 ); if ( pte == 0 || ( * pte & PTE_V ) == 0 ){ struct proc * p = myproc (); if ( va >= p -> sz ) return 0 ; char * mem = kalloc (); if ( mem == 0 ){ return 0 ; } memset ( mem , 0 , PGSIZE ); if ( mappages ( pagetable , PGROUNDDOWN ( va ), PGSIZE , ( uint64 ) mem , PTE_W | PTE_X | PTE_R | PTE_U ) != 0 ){ kfree ( mem ); return 0 ; } else { return ( uint64 ) mem ; } } if (( * pte & PTE_U ) == 0 ) return 0 ; pa = PTE2PA ( * pte ); return pa ; } //... int mappages ( pagetable_t pagetable , uint64 va , uint64 size , uint64 pa , int perm ) { //... if ( * pte & PTE_V ){ return -1 ; // panic(\"remap\"); } //... } //... void uvmunmap ( pagetable_t pagetable , uint64 va , uint64 npages , int do_free ) { //... if (( pte = walk ( pagetable , a , 0 )) == 0 ){ continue ; // panic(\"uvmunmap: walk\"); } if (( * pte & PTE_V ) == 0 ){ continue ; // panic(\"uvmunmap: not mapped\"); } //... } //... int uvmcopy ( pagetable_t old , pagetable_t new , uint64 sz ) { //... if (( pte = walk ( old , i , 0 )) == 0 ){ continue ; } if (( * pte & PTE_V ) == 0 ){ continue ; } //... } //...","title":"Lab05 Xv6 Lazy Allocation"},{"location":"6.S081/Lab05-Xv6-Lazy-Allocation/#lab5-lazy-page-allocation","text":"Lazy Page\u80fd\u591f\u5927\u5927\u964d\u4f4e\u7528\u6237\u5806\u7a7a\u95f4\u7684\u9875\u8868\u4ea4\u6362\u7684\u786c\u4ef6IO\u6b21\u6570\u3002Xv6\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528 sbrk() \u6765\u5411\u5185\u6838\u7533\u8bf7\u5806 \u7a7a\u95f4\u3002 sbrk() \u5206\u914d\u4e00\u4e2a\u7269\u7406\u5185\u5b58\u7ed9\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u3002\u5185\u6838\u5206\u914d\u7269\u7406\u5730\u5740\u9875\u7684\u82b1\u9500\u975e\u5e38\u5927\u3002\u7a0b\u5e8f\u7ecf\u5e38\u7533\u8bf7 \u8fdc\u8fdc\u8d85\u51fa\u5b83\u9700\u6c42\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5374\u4ece\u4e0d\u4f7f\u7528\uff1b\u6216\u8005\u63d0\u524d\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4\u4f46\u662f\u8fc7\u4e86\u5f88\u4e45\u624d\u4f7f\u7528\u3002\u4e3a\u4e86\u8ba9 sbrk \u6548\u7387 \u66f4\u9ad8\uff0c\u5185\u6838\u5f80\u5f80\u4f7f\u7528Lazy Page\u6280\u672f\uff1a\u5728\u7a0b\u5e8f\u7533\u8bf7\u5185\u5b58\u65f6\u5e76\u4e0d\u771f\u6b63\u5730\u5206\u914d\uff0c\u76f4\u5230\u7a0b\u5e8f\u4f7f\u7528\u5b83\u65f6\u4ea7\u751f\u4e00\u4e2a\u7f3a\u9875 \u4e2d\u65ad\uff0c\u8fd9\u65f6\u5185\u6838\u518d\u5206\u914d\u771f\u5b9e\u7684\u7269\u7406\u7a7a\u95f4\u3002 \u83b7\u53d6\u672c\u8282\u5b9e\u9a8c\u4ee3\u7801\uff1a $ git fetch $ git checkout lazy $ make clean","title":"Lab5: Lazy Page Allocation"},{"location":"6.S081/Lab05-Xv6-Lazy-Allocation/#eliminate-allocation-from-sbrk","text":"\u95ee\u9898\u63cf\u8ff0 \u5220\u9664 sbrk(n) \u7cfb\u7edf\u8c03\u7528\u4e2d\u9875\u8868\u5206\u914d\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f sysproc.c:sys_sbrk() \u7684\u5185\u5bb9\u3002\u65b0\u7684 sbrk \u5e94\u8be5\u53ea\u589e\u957f\u8fdb\u7a0b\u7684\u5927\u5c0f\u5c5e\u6027\uff08 myproc()->sz \uff09\uff0c\u7136\u540e\u8fd4\u56de\u65e7\u7684\u8fdb\u7a0b\u7684\u5927\u5c0f\u3002\u5b83\u4e0d\u5e94\u8be5 \u5206\u914d\u5185\u5b58\u2014\u2014\u4e5f\u5c31\u662f\u5220\u9664 growproc() \u3002 \u4fee\u6539\u5b8c\u6bd5\u540e\uff0c\u4f1a\u5f15\u8d77\u54ea\u91cc\u62a5\u9519\u5462\uff1f\u4fee\u6539\u5b8c\u540e\u8fdb\u5165qemu\uff0c\u8f93\u5165\u6307\u4ee4 echo hi \uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u770b\u5230\uff1a init: starting sh $ echo hi usertrap () : unexpected scause 0x000000000000000f pid = 3 sepc = 0x0000000000001258 stval = 0x0000000000004008 va = 0x0000000000004000 pte = 0x0000000000000000 panic: uvmunmap: not mapped usertrap():... \u62a5\u9519\u6307\u4ee4\u662f\u6765\u81ea trap.c \uff1b\u786e\u4fdd\u4f60\u7406\u89e3\u4e3a\u4ec0\u4e48\u4f1a\u5f15\u8d77\u9875\u9519\u8bef\u3002 stval=0x0..04008 \u8868\u793a\u865a\u62df\u5730\u5740 0x4008 \u8bfb\u53d6\u7684\u65f6\u5019\u53d1\u751f\u9519\u8bef\u3002","title":"Eliminate allocation from sbrk()"},{"location":"6.S081/Lab05-Xv6-Lazy-Allocation/#lazy-allocation","text":"\u95ee\u9898\u63cf\u8ff0 \u4fee\u6539 trap.c \u4e2d\u5bf9\u5e94\u7684\u9875\u9519\u8bef\u7684\u90e8\u5206\uff0c\u4e3a\u7528\u6237\u7a7a\u95f4\u7533\u8bf7\u4e00\u4e2a\u65b0\u7684\u7269\u7406\u5185\u5b58\u9875\u5230\u51fa\u9519\u8bef\u7684\u5730\u5740\uff0c\u7136\u540e\u8fd4\u56de \u5230\u7528\u6237\u7a7a\u95f4\u7ee7\u7eed\u7528\u6237\u7a0b\u5e8f\u7684\u8fd0\u884c\u3002\u9700\u8981\u5728 printf() \u8f93\u51fa usertrap() \u7684\u7a0b\u5e8f\u6bb5\u524d\u5b8c\u6210\u8fd9\u4e2a\u529f\u80fd\u3002 \u4fee\u6539\u6210\u529f\u540e echo hi \u5e94\u8be5\u53ef\u4ee5\u5de5\u4f5c\u3002 \u63d0\u793a\uff1a \u53ef\u4ee5\u901a\u8fc7 r_scause() \u6765\u67e5\u770b\u62a5\u9519\u4fe1\u606f\uff0c\u5982\u679c\u662f13\u621615\u90a3\u5c31\u662f\u9875\u9519\u8bef\uff1b \u8c03\u7528 r_stval() \u8fd4\u56deRISC-V\u7684 stval \u5bc4\u5b58\u5668\uff0c\u5b83\u5305\u542b\u5f15\u8d77\u9875\u9519\u8bef\u7684\u865a\u62df\u5730\u5740\uff1b \u501f\u9274 vm.c:uvmalloc() \u7684\u4ee3\u7801\u3002\u9700\u8981\u4f7f\u7528 kalloc() \u548c mappages() \uff1b \u4f7f\u7528 PGROUNDDOWN(va) \u6765\u53d6\u6574\u865a\u62df\u5730\u5740\uff1b \u73b0\u5728\u7684 uvmunmap() \u4f1a\u62a5\u9519\uff0c\u4fee\u6539\u5b83\uff1b \u5185\u6838\u62a5\u9519\u4e86\u53ef\u4ee5\u9605\u8bfb kernel/kernel.asm \uff1b \u4f7f\u7528\u4ece pgtbl \u4e2d\u5b9e\u73b0\u7684 vmprint \u51fd\u6570\uff0c\u6765\u6253\u5370 page table \u7684\u5185\u5bb9\uff1b \u5982\u679c\u9047\u5230\u62a5\u9519 incomplete type proc \uff0c \u5305\u542b spinlock.h \u548c proc.h \u5934\u6587\u4ef6\u3002","title":"Lazy allocation"},{"location":"6.S081/Lab05-Xv6-Lazy-Allocation/#lazytests-and-usertests","text":"\u6d4b\u8bd5\u7a0b\u5e8f\u8981\u8003\u8651\u66f4\u590d\u6742\u7684\u60c5\u51b5\uff1a sbrk() \u662f\u8d1f\u6570\u7684\u65f6\u5019\u8be5\u600e\u4e48\uff1f\uff08\u6211\u8fd9\u91cc\u76f4\u63a5\u4fdd\u7559\u539f\u6765\u7684 sbrk() \u51fd\u6570\u7684\u5224\u65ad\uff0c\u8d1f\u6570\u62a5\u9519\uff0c\u8fd4\u56de-1\u3002) \u5982\u679c\u865a\u62df\u5185\u5b58\u8bbf\u95ee\u7684\u672c\u6765\u5c31\u662f\u9ad8\u4e8e\u8fdb\u7a0b\u7533\u8bf7\u7684\u5185\u5b58\u9875\u5462\uff1f\uff08\u5728 trap.c \u4e2d\u6dfb\u52a0\u5224\u65ad\u3002\uff09 \u5904\u7406\u6b63\u786e\u5904\u7406 fork() \u3002 \u5904\u7406\u8fdb\u7a0b\u8fdb\u5165\u7cfb\u7edf\u8c03\u7528 read \u548c write \u65f6\uff0c\u7cfb\u7edf\u8fd8\u6ca1\u6709\u7ed9\u7528\u6237\u9875\u8868\u5206\u914d\u5185\u5b58\u7684\u60c5\u51b5\u3002 \uff08\u5e94\u8be5\u662f\u4fee\u6539 copyin \u548c copyout \uff09 \u5982\u679c\u5185\u5b58\u5360\u6ee1\u4e86\uff0c\u9700\u8981\u6b63\u786e\u5730\u6740\u6b7b\u8fdb\u7a0b\u3002 \u5904\u7406\u7528\u6237\u6808\u4e0b\u9762\u7684\u975e\u6cd5\u9875\u7684\u8bbf\u95ee\u3002 \u5982\u679c\u5b9e\u73b0\u6b63\u786e\uff0c\u90a3\u4e48\u5185\u6838\u8fd0\u884c usertests \u4f1a\u51fa\u73b0\u5982\u4e0b\u5185\u5bb9\uff1a $ lazytests lazytests starting running test lazy alloc test lazy alloc: OK running test lazy unmap... usertrap () : ... test lazy unmap: OK running test out of memory usertrap () : ... test out of memory: OK ALL TESTS PASSED $ usertests ... ALL TESTS PASSED $ \u53c2\u8003\u7b54\u6848 \u9996\u5148\u4fee\u6539 sysproc.c \uff1a uint64 sys_sbrk ( void ) { int addr ; int n ; if ( argint ( 0 , & n ) < 0 ) return -1 ; addr = myproc () -> sz ; if ( n < 0 ){ if ( growproc ( n ) < 0 ) return -1 ; } else { myproc () -> sz += n ; } return addr ; } \u4fee\u6539\u9677\u9631\u51fd\u6570 trap.c:68 \uff1a else if ( r_scause () == 13 || r_scause () == 15 ){ char * mem ; uint64 va = r_stval (); if ( va >= myproc () -> sz ){ p -> killed = 1 ; } else { mem = kalloc (); if ( mem == 0 ){ // run out of physical memory, // wait for an empty page. p -> killed = 1 ; } else { memset ( mem , 0 , PGSIZE ); if ( mappages ( myproc () -> pagetable , PGROUNDDOWN ( va ), PGSIZE , ( uint64 ) mem , PTE_W | PTE_X | PTE_R | PTE_U ) != 0 ){ kfree ( mem ); p -> killed = 1 ; } } } } \u4fee\u6539 vm.c \u6765\u4f7f\u5f97\u7cfb\u7edf\u8c03\u7528 write \u548c read \u53ef\u7528\uff1a //\u6dfb\u52a0\u5934\u6587\u4ef6 #include \"spinlock.h\" #include \"proc.h\" //... uint64 walkaddr ( pagetable_t pagetable , uint64 va ) { pte_t * pte ; uint64 pa ; if ( va >= MAXVA ) return 0 ; // pte = walk(pagetable, va, 0); pte = walk ( pagetable , va , 0 ); if ( pte == 0 || ( * pte & PTE_V ) == 0 ){ struct proc * p = myproc (); if ( va >= p -> sz ) return 0 ; char * mem = kalloc (); if ( mem == 0 ){ return 0 ; } memset ( mem , 0 , PGSIZE ); if ( mappages ( pagetable , PGROUNDDOWN ( va ), PGSIZE , ( uint64 ) mem , PTE_W | PTE_X | PTE_R | PTE_U ) != 0 ){ kfree ( mem ); return 0 ; } else { return ( uint64 ) mem ; } } if (( * pte & PTE_U ) == 0 ) return 0 ; pa = PTE2PA ( * pte ); return pa ; } //... int mappages ( pagetable_t pagetable , uint64 va , uint64 size , uint64 pa , int perm ) { //... if ( * pte & PTE_V ){ return -1 ; // panic(\"remap\"); } //... } //... void uvmunmap ( pagetable_t pagetable , uint64 va , uint64 npages , int do_free ) { //... if (( pte = walk ( pagetable , a , 0 )) == 0 ){ continue ; // panic(\"uvmunmap: walk\"); } if (( * pte & PTE_V ) == 0 ){ continue ; // panic(\"uvmunmap: not mapped\"); } //... } //... int uvmcopy ( pagetable_t old , pagetable_t new , uint64 sz ) { //... if (( pte = walk ( old , i , 0 )) == 0 ){ continue ; } if (( * pte & PTE_V ) == 0 ){ continue ; } //... } //...","title":"Lazytests and Usertests"},{"location":"6.S081/Lab06-Copy-on-Write/","text":"Lab6: Copy-on-Write Fork for xv6 \u00b6 \u865a\u62df\u5185\u5b58\u63d0\u4f9b\u4e86\u4e00\u5c42\u95f4\u63a5\u7684\u7ea7\u522b\uff1a\u5f53\u5185\u6838\u611f\u77e5\u5230\u5185\u5b58\u6307\u5411\u7684PTEs\u88ab\u6807\u8bb0\u4e3a\u975e\u6cd5\u6216\u8005\u53ea\u8bfb\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9875\u9519 \u8bef\uff0c \u7136\u540e\u4e2d\u65ad\u5904\u7406\u6765\u4fee\u6539\u8fd9\u4e2aPTEs\u7684\u5730\u5740\uff0c\u4ece\u800c\u95f4\u63a5\u5bfb\u5740\u7684\u529f\u80fd\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u91cc\uff0c\u4efb\u4f55\u4e00\u4e2a\u7cfb \u7edf\u9519\u8bef\u90fd\u53ef\u4ee5\u4f7f\u7528\u95f4\u63a5\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u3002Lazy allocation\u662f\u8fd9\u6837\uff0cCopy-on-Write\u4e5f\u662f\u8fd9\u6837\u3002 \u5207\u6362\u5230COW\u5b9e\u9a8c\u7684\u5206\u652f\uff1a $ git fetch $ git checkout cow $ make clean \u95ee\u9898 \u00b6 xv6\u4e2d\u7684\u7cfb\u7edf\u8c03\u7528 fork() \u5c06\u62f7\u8d1d\u7236\u8fdb\u7a0b\u6240\u6709\u7684\u7528\u6237\u7a7a\u95f4\u5185\u5b58\u5230\u5b50\u8fdb\u7a0b\u4e2d\u3002\u5982\u679c\u7236\u8fdb\u7a0b\u975e\u5e38\u5927\uff0c\u90a3\u4e48\u8fd9\u79cd\u62f7\u8d1d \u8981\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u3002\u901a\u5e38\uff0c\u6211\u4eec\u5b8c\u5168\u4e0d\u9700\u8981\u590d\u5236\u6240\u6709\u7684\u7528\u6237\u7a7a\u95f4\uff1a\u4f8b\u5982\uff0c fork() \u540e\uff0c\u5b50\u8fdb\u7a0b\u7d27\u8ddf\u7740 \u6267\u884c\u4e00\u4e2a exec() \u6307\u4ee4\u65f6\uff0c\u5b50\u8fdb\u7a0b\u4f1a\u5b8c\u5168\u5ffd\u7565\u5927\u90e8\u5206\u7684\u7236\u8fdb\u7a0b\u7684\u7528\u6237\u7a7a\u95f4\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u6709\u65f6 \u5019\u4f1a\u5bf9\u540c\u4e00\u4e2a\u9875\u8868\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\u5bfc\u81f4\u51b2\u7a81\uff0c\u590d\u5236\u9875\u8868\u975e\u5e38\u91cd\u8981\u3002 \u89e3\u51b3\u65b9\u6cd5 \u00b6 Copy-on-write (COW) fork() \u5ef6\u8fdf\u5206\u914d\u4e0e\u62f7\u8d1d\u7269\u7406\u5185\u5b58\u9875\u7ed9\u5b50\u8fdb\u7a0b\uff0c\u76f4\u5230\u62f7\u8d1d\u662f\u5fc5\u987b\u7684\u3002 COW fork() \u7ed9\u5b50\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u9875\u8868\u6307\u5411\u7236\u8fdb\u7a0b\u7684\u7269\u7406\u5185\u5b58\u3002 COW fork() \u7ed9\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u7684PTEs \u90fd\u6807\u8bb0\u4e3a\u4e0d\u53ef\u5199\u3002\u5f53\u4efb\u610f\u4e00\u4e2a\u8fdb\u7a0b\u5c1d\u8bd5\u5199\u5165\u67d0\u4e2a\u5185\u5b58\u9875\u65f6\uff0cCPU\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9875\u8868\u9519\u8bef\u3002\u5185\u6838\u9875\u9519\u8bef\u5904\u7406handler \u4f1a\u68c0\u6d4b\u5e76\u5904\u7406\u8fd9\u4e2a\u9519\u8bef\uff0c\u4e3a\u8fd9\u4e2a\u865a\u62df\u9875\u8868\u5206\u914d\u7269\u7406\u5185\u5b58\u9875\u8868\uff0c\u62f7\u8d1d\u539f\u672c\u7684\u5185\u5b58\u9875\u5230\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\u9875\uff0c\u7136\u540e\u5c06\u62a5 \u9519\u7684PTE\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u5185\u5b58\u9875\uff0c\u540c\u65f6\u88ab\u6807\u8bb0\u4e3a\u53ef\u5199\u5165\u3002\u8fd9\u65f6\uff0c\u9875\u9519\u8befhandler\u8fd4\u56de\u65f6\uff0c\u7a0b\u5e8f\u5c31\u80fd\u591f\u5199\u5165\u8fd9\u4e2a\u865a \u62df\u5730\u5740\u4e86\u3002 COW fork() \u91ca\u653e\u7528\u6237\u7a7a\u95f4\u7684\u7269\u7406\u5730\u5740\u4f1a\u6709\u4e00\u4e9b\u9ebb\u70e6\u3002 \u591a\u4e2a\u8fdb\u7a0b\u7684\u9875\u8868\u4f1a\u6307\u5411\u540c\u4e00\u4e2a\u7269\u7406\u5730\u5740\uff0c\u4ec5\u4ec5\u5f53\u6700 \u540e\u4e00\u4e2a\u8fdb\u7a0b\u9009\u62e9\u91ca\u653e\u8fd9\u4e2a\u7269\u7406\u5730\u5740\u540e\uff0c\u7269\u7406\u5730\u5740\u624d\u771f\u7684\u88ab\u91ca\u653e\u3002 \u5b9e\u73b0Copy-on-Write \u00b6 \u95ee\u9898\u63cf\u8ff0 \u5b9e\u73b0 Copy-on-Write \u6765\u901a\u8fc7 cowtest \u548c usertests \u3002 \u5408\u7406\u7684\u5b9e\u73b0\u6d41\u7a0b\uff1a \u8c03\u6574 uvmcopy() \u5c06\u7236\u8fdb\u7a0b\u7684\u7269\u7406\u5730\u5740\u6620\u5c04\u7ed9\u5b50\u8fdb\u7a0b\uff0c\u4f46\u662f\u4e0d\u5206\u914d\u65b0\u7269\u7406\u5185\u5b58\u9875\u3002\u540c\u65f6\u5c06PTEs\u7684PTE_W \u7f6e0\uff1b \u8c03\u6574 usertrap() \u6765\u8bc6\u522b\u9875\u9519\u8bef\u3002\u5f53\u9875\u9519\u8bef\u53d1\u751f\u5728COW\u9875\uff0c\u90a3\u4e48\u4f7f\u7528 kalloc() \u6765\u5206\u914d\u65b0\u7684\u7269\u7406\u5185\u5b58\uff1b \u786e\u4fdd\u7269\u7406\u5185\u5b58\u9875\u88ab\u6b63\u786e\u5730\u91ca\u653e\uff1a\u5f53\u4e14\u4ec5\u5f53\u6700\u540e\u4e00\u4e2a\u6307\u5411\u5b83\u7684PTE\u88ab\u91ca\u653e\u3002\u6700\u597d\u7684\u65b9\u6cd5\u662f\u4e3a\u6bcf\u4e00\u4e2a\u7269\u7406\u5185\u5b58 \u9875\u4fdd\u5b58\u4e00\u4e2a reference count \u6765\u8bb0\u5f55\u6307\u5411\u5b83\u7684PTE\u6709\u591a\u5c11\u4e2a\u3002\u4fee\u6539 kalloc() \u5206\u914d\u8fd9\u4e2a reference count \u3002\u5728 fork \u4e2d\uff0c\u5f53\u7236\u5b50\u8fdb\u7a0b\u5171\u4eab\u7269\u7406\u5185\u5b58\u9875\u65f6\uff0c\u589e\u52a0 reference count \uff0c\u5728\u4e0d\u5171\u4eab\u540e\u964d\u4f4e reference count \u3002 kfree \u4e5f\u8981\u6709\u6240\u4fee\u6539\uff0c\u4ec5\u5f53\u7269\u7406\u5185\u5b58\u9875\u771f\u6b63\u9700\u8981\u88ab\u91ca\u653e\u65f6\uff0c\u518d\u653e\u5230free list \u540e\u9762\u3002\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u8ba1\u6570\u5668\u653e\u5728\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u6574\u6570\u6570\u7ec4\u4e2d\u3002\u4f60\u9700\u8981\u7814\u7a76\u6574\u6570\u6570\u7ec4\u7684\u4e0b\u6807\u548c\u5927\u5c0f\u8be5\u5982\u4f55\u786e\u5b9a\u3002 \u4f8b\u5982\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u7269\u7406\u5730\u5740\u9664\u4ee54096\u6765\u4f5c\u4e3a\u4e0b\u6807\uff0c\u6570\u7ec4\u7684\u5927\u5c0f\u4e3a\u6700\u5927\u7269\u7406\u5730\u5740\u9664\u4ee54096\u3002\u7136\u540e\u518d kinit \u4e2d\u58f0\u660e\u6570\u7ec4\u3002 \u4fee\u6539 copyout() \u6765\u4f7f\u7528\u7c7b\u4f3c\u7684\u6280\u672f\u6765\u4f7f\u7528COW\u6280\u672f\u3002 \u63d0\u793a\uff1a \u4e0d\u8981\u57fa\u4e8e lazy allocation \uff0c\u4f46\u662f lazy allocation \u5b9e\u9a8c\u80fd\u591f\u7ed9\u4e00\u4e9b\u63d0\u793a\uff1b \u8bb0\u5f55\u6bcf\u4e2aPTE\u662f\u5426\u662fCOW\u4ea7\u751f\u7684\u6620\u5c04\u4f1a\u5f88\u6709\u7528\u3002\u53ef\u4ee5\u4f7f\u7528PTE\u4e2d\u7684RSW\u4f4d\uff08reserved for software\uff09\uff0c \u76ee\u524d\u7684xv6\u6ca1\u6709\u4f7f\u7528\u8fd9\u4e2a\u6807\u5fd7\u4f4d\u3002 usertests \u548c cowtest \u7684\u5b9e\u9a8c\u5e76\u4e0d\u91cd\u5408\uff0c\u6240\u4ee5\u8981\u540c\u65f6\u901a\u8fc7\u4e24\u4e2a\u6d4b\u8bd5\u624d\u53ef\u4ee5\u3002 kernel/riscv.h \u4e2d\u6709\u5f88\u591a\u6709\u7528\u7684\u5b8f\u5b9a\u4e49\u3002 \u5982\u679cCOW\u9875\u9519\u8bef\u53d1\u751f\uff0c\u4f46\u662f\u6ca1\u6709\u7a7a\u4f59\u7684\u5185\u5b58\uff0c\u90a3\u4e48\u8fdb\u7a0b\u5e94\u8be5\u88ab\u6740\u6b7b\u3002 \u53c2\u8003\u7b54\u6848 \u00b6 \u9996\u5148\u5728 riscv.h\uff1a334 \u4e2d\u58f0\u660e\u8d85\u53c2\u6570 #define PTE_RSW (1L << 8) \u7528\u4e8e\u6807\u8bb0COW\u9875\u3002 \u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u5c06\u7528\u5230 xv6-book \u7b2c\u516d\u7ae0\u6d89\u53ca\u5230\u7684\u5185\u5bb9\u2014\u2014\u5e76\u53d1\u9501\uff08concurrency lock\uff09\u3002\u5e76\u53d1\u9501\u7528\u4e8e\u63a7\u5236 kernel/kalloc.c \u6587\u4ef6\u4e2d\u7684\u6570\u636e\u7ed3\u6784 pacnt \u7528\u4e8e\u4fdd\u5b58\u7269\u7406\u5185\u5b58\u9875\u88ab\u51e0\u4e2a\u865a\u62df\u5730\u5740\u6240\u6307\u5411\u3002\u540c\u65f6\u9700\u8981\u4e00\u4e2a\u51fd\u6570 incpacnt() \u6765\u66f4\u65b0\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u3002(\u8fd9\u91cc\u6211\u6ca1\u6709\u4f7f\u7528\u7ed3\u6784\u4f53\u5185\u90e8\u6210\u5458\u51fd\u6570) struct { struct spinlock lock ; uint64 cnt [ PHYSTOP >> PGSHIFT ]; } pacnt ; // physical addresses' reference count void incpacnt ( uint64 pa ) { acquire ( & pacnt . lock ); pacnt . cnt [( uint64 ) pa >> PGSHIFT ] ++ ; release ( & pacnt . lock ); } \u63a5\u7740\u6211\u4eec\u4e3a pacnt \u7ed3\u6784\u4f53\u4fee\u6539 kernel/kalloc.c:kinit() \u3001 kernel/kalloc.c:kfree() \u548c kernel/kalloc.c:kalloc() \u4e09\u4e2a\u51fd\u6570\u3002 void kinit () { initlock ( & kmem . lock , \"kmem\" ); initlock ( & pacnt . lock , \"pacnt\" ); freerange ( end , ( void * ) PHYSTOP ); } void kfree ( void * pa ) { acquire ( & pacnt . lock ); if ( pacnt . cnt [( uint64 ) pa >> PGSHIFT ] > 0 ) pacnt . cnt [( uint64 ) pa >> PGSHIFT ] -- ; if ( pacnt . cnt [( uint64 ) pa >> PGSHIFT ] > 0 ){ release ( & pacnt . lock ); return ; } release ( & pacnt . lock ); //... } void * kalloc ( void ) { struct run * r ; acquire ( & kmem . lock ); r = kmem . freelist ; if ( r ) kmem . freelist = r -> next ; release ( & kmem . lock ); // update the physical address' reference count incpacnt (( uint64 ) r ); if ( r ){ memset (( char * ) r , 5 , PGSIZE ); // fill with junk } return ( void * ) r ; } \u4fee\u6539 kernel/vm.c:uvmcopy() \u51fd\u6570\uff0c\u6784\u9020COW\u9875\u3002 int uvmcopy ( pagetable_t old , pagetable_t new , uint64 sz ) { pte_t * pte ; uint64 pa , i ; uint flags ; // char *mem; for ( i = 0 ; i < sz ; i += PGSIZE ){ if (( pte = walk ( old , i , 0 )) == 0 ) panic ( \"uvmcopy: pte should exist\" ); if (( * pte & PTE_V ) == 0 ) panic ( \"uvmcopy: page not present\" ); * pte = (( * pte | PTE_RSW ) & ( ~ PTE_W )); pa = PTE2PA ( * pte ); flags = PTE_FLAGS ( * pte ); incpacnt ( pa ); //update the physical address's reference count. if ( mappages ( new , i , PGSIZE , pa , flags ) != 0 ){ goto err ; } // if((mem = kalloc()) == 0) // goto err; // memmove(mem, (char*)pa, PGSIZE); // if(mappages(new, i, PGSIZE, (uint64)mem, flags) != 0){ // kfree(mem); // goto err; // } } return 0 ; err : uvmunmap ( new , 0 , i / PGSIZE , 1 ); return -1 ; } \u7531\u6b64\u5f15\u53d1\u7684COW\u9875\u9519\u8bef\u7684\u5904\u7406\u7a0b\u5e8f\u5728 trap.c:usertrap() \u4e2d\u5b9e\u73b0\u3002\u5176\u4e2d\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u5728 vm.c \u5b9e\u73b0\u4e86\u4e00\u4e2a\u5206\u914dCOW\u51b2\u7a81\u9875\u7684\u51fd\u6570 cowalloc() \u3002 else if ( r_scause () == 13 || r_scause () == 15 ){ uint64 va = r_stval (); if ( va >= p -> sz ){ p -> killed = 1 ; } else { if ( cowalloc ( p -> pagetable , va ) < 0 ) p -> killed = 1 ; } } int cowalloc ( pagetable_t pagetable , uint64 va ){ pte_t * pte ; uint64 pa ; uint flags ; char * mem ; if (( pte = walk ( pagetable , PGROUNDDOWN ( va ), 0 )) == 0 ) return -1 ; if (( * pte & PTE_V ) == 0 || ( * pte & PTE_RSW ) == 0 ) return -1 ; pa = PTE2PA ( * pte ); flags = (( PTE_FLAGS ( * pte ) | PTE_W ) & ( ~ PTE_RSW )); if (( mem = kalloc ()) == 0 ) return -1 ; memmove ( mem , ( char * ) pa , PGSIZE ); * pte = PA2PTE ( mem ) | flags ; kfree (( char * ) pa ); return 0 ; } \u51fd\u6570 vm.c:copyout() \u4e5f\u4f1a\u9047\u5230COW\u9875\uff0c\u9700\u8981\u6211\u4eec\u5904\u7406\u76f8\u5e94\u7684\u60c5\u51b5 int copyout ( pagetable_t pagetable , uint64 dstva , char * src , uint64 len ) { \\\\ ... pa0 = cowwalkaddr ( pagetable , va0 ); \\\\ ... } \u5176\u4e2d cowwalkaddr() \u4f1a\u5728\u9047\u5230COW\u9875\u65f6\uff0c\u518d\u590d\u5236\u7269\u7406\u5730\u5740\u9875 uint64 cowwalkaddr ( pagetable_t pagetable , uint64 va ) { pte_t * pte ; uint64 pa ; if ( va >= MAXVA ) return 0 ; pte = walk ( pagetable , va , 0 ); if ( pte == 0 ) return 0 ; if (( * pte & PTE_V ) == 0 ) return 0 ; if (( * pte & PTE_U ) == 0 ) return 0 ; if ( * pte & PTE_RSW ) { if ( cowalloc ( pagetable , va ) < 0 ) return 0 ; } pa = PTE2PA ( * pte ); return pa ; } \u4e3a\u4e86\u80fd\u5728\u4e0d\u540c\u6587\u4ef6\u4e2d\u8c03\u7528\u65b0\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u9700\u8981\u518d def.h \u4e2d\u58f0\u660e\u8fd9\u4e9b\u51fd\u6570\uff1a // kalloc.c // ... void incpacnt ( uint64 ); // vm.c // ... int cowalloc ( pagetable_t , uint64 );","title":"Lab06 Copy on Write"},{"location":"6.S081/Lab06-Copy-on-Write/#lab6-copy-on-write-fork-for-xv6","text":"\u865a\u62df\u5185\u5b58\u63d0\u4f9b\u4e86\u4e00\u5c42\u95f4\u63a5\u7684\u7ea7\u522b\uff1a\u5f53\u5185\u6838\u611f\u77e5\u5230\u5185\u5b58\u6307\u5411\u7684PTEs\u88ab\u6807\u8bb0\u4e3a\u975e\u6cd5\u6216\u8005\u53ea\u8bfb\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9875\u9519 \u8bef\uff0c \u7136\u540e\u4e2d\u65ad\u5904\u7406\u6765\u4fee\u6539\u8fd9\u4e2aPTEs\u7684\u5730\u5740\uff0c\u4ece\u800c\u95f4\u63a5\u5bfb\u5740\u7684\u529f\u80fd\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u91cc\uff0c\u4efb\u4f55\u4e00\u4e2a\u7cfb \u7edf\u9519\u8bef\u90fd\u53ef\u4ee5\u4f7f\u7528\u95f4\u63a5\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u3002Lazy allocation\u662f\u8fd9\u6837\uff0cCopy-on-Write\u4e5f\u662f\u8fd9\u6837\u3002 \u5207\u6362\u5230COW\u5b9e\u9a8c\u7684\u5206\u652f\uff1a $ git fetch $ git checkout cow $ make clean","title":"Lab6: Copy-on-Write Fork for xv6"},{"location":"6.S081/Lab06-Copy-on-Write/#_1","text":"xv6\u4e2d\u7684\u7cfb\u7edf\u8c03\u7528 fork() \u5c06\u62f7\u8d1d\u7236\u8fdb\u7a0b\u6240\u6709\u7684\u7528\u6237\u7a7a\u95f4\u5185\u5b58\u5230\u5b50\u8fdb\u7a0b\u4e2d\u3002\u5982\u679c\u7236\u8fdb\u7a0b\u975e\u5e38\u5927\uff0c\u90a3\u4e48\u8fd9\u79cd\u62f7\u8d1d \u8981\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u3002\u901a\u5e38\uff0c\u6211\u4eec\u5b8c\u5168\u4e0d\u9700\u8981\u590d\u5236\u6240\u6709\u7684\u7528\u6237\u7a7a\u95f4\uff1a\u4f8b\u5982\uff0c fork() \u540e\uff0c\u5b50\u8fdb\u7a0b\u7d27\u8ddf\u7740 \u6267\u884c\u4e00\u4e2a exec() \u6307\u4ee4\u65f6\uff0c\u5b50\u8fdb\u7a0b\u4f1a\u5b8c\u5168\u5ffd\u7565\u5927\u90e8\u5206\u7684\u7236\u8fdb\u7a0b\u7684\u7528\u6237\u7a7a\u95f4\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u6709\u65f6 \u5019\u4f1a\u5bf9\u540c\u4e00\u4e2a\u9875\u8868\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\u5bfc\u81f4\u51b2\u7a81\uff0c\u590d\u5236\u9875\u8868\u975e\u5e38\u91cd\u8981\u3002","title":"\u95ee\u9898"},{"location":"6.S081/Lab06-Copy-on-Write/#_2","text":"Copy-on-write (COW) fork() \u5ef6\u8fdf\u5206\u914d\u4e0e\u62f7\u8d1d\u7269\u7406\u5185\u5b58\u9875\u7ed9\u5b50\u8fdb\u7a0b\uff0c\u76f4\u5230\u62f7\u8d1d\u662f\u5fc5\u987b\u7684\u3002 COW fork() \u7ed9\u5b50\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u9875\u8868\u6307\u5411\u7236\u8fdb\u7a0b\u7684\u7269\u7406\u5185\u5b58\u3002 COW fork() \u7ed9\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u7684PTEs \u90fd\u6807\u8bb0\u4e3a\u4e0d\u53ef\u5199\u3002\u5f53\u4efb\u610f\u4e00\u4e2a\u8fdb\u7a0b\u5c1d\u8bd5\u5199\u5165\u67d0\u4e2a\u5185\u5b58\u9875\u65f6\uff0cCPU\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9875\u8868\u9519\u8bef\u3002\u5185\u6838\u9875\u9519\u8bef\u5904\u7406handler \u4f1a\u68c0\u6d4b\u5e76\u5904\u7406\u8fd9\u4e2a\u9519\u8bef\uff0c\u4e3a\u8fd9\u4e2a\u865a\u62df\u9875\u8868\u5206\u914d\u7269\u7406\u5185\u5b58\u9875\u8868\uff0c\u62f7\u8d1d\u539f\u672c\u7684\u5185\u5b58\u9875\u5230\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\u9875\uff0c\u7136\u540e\u5c06\u62a5 \u9519\u7684PTE\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u5185\u5b58\u9875\uff0c\u540c\u65f6\u88ab\u6807\u8bb0\u4e3a\u53ef\u5199\u5165\u3002\u8fd9\u65f6\uff0c\u9875\u9519\u8befhandler\u8fd4\u56de\u65f6\uff0c\u7a0b\u5e8f\u5c31\u80fd\u591f\u5199\u5165\u8fd9\u4e2a\u865a \u62df\u5730\u5740\u4e86\u3002 COW fork() \u91ca\u653e\u7528\u6237\u7a7a\u95f4\u7684\u7269\u7406\u5730\u5740\u4f1a\u6709\u4e00\u4e9b\u9ebb\u70e6\u3002 \u591a\u4e2a\u8fdb\u7a0b\u7684\u9875\u8868\u4f1a\u6307\u5411\u540c\u4e00\u4e2a\u7269\u7406\u5730\u5740\uff0c\u4ec5\u4ec5\u5f53\u6700 \u540e\u4e00\u4e2a\u8fdb\u7a0b\u9009\u62e9\u91ca\u653e\u8fd9\u4e2a\u7269\u7406\u5730\u5740\u540e\uff0c\u7269\u7406\u5730\u5740\u624d\u771f\u7684\u88ab\u91ca\u653e\u3002","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"6.S081/Lab06-Copy-on-Write/#copy-on-write","text":"\u95ee\u9898\u63cf\u8ff0 \u5b9e\u73b0 Copy-on-Write \u6765\u901a\u8fc7 cowtest \u548c usertests \u3002 \u5408\u7406\u7684\u5b9e\u73b0\u6d41\u7a0b\uff1a \u8c03\u6574 uvmcopy() \u5c06\u7236\u8fdb\u7a0b\u7684\u7269\u7406\u5730\u5740\u6620\u5c04\u7ed9\u5b50\u8fdb\u7a0b\uff0c\u4f46\u662f\u4e0d\u5206\u914d\u65b0\u7269\u7406\u5185\u5b58\u9875\u3002\u540c\u65f6\u5c06PTEs\u7684PTE_W \u7f6e0\uff1b \u8c03\u6574 usertrap() \u6765\u8bc6\u522b\u9875\u9519\u8bef\u3002\u5f53\u9875\u9519\u8bef\u53d1\u751f\u5728COW\u9875\uff0c\u90a3\u4e48\u4f7f\u7528 kalloc() \u6765\u5206\u914d\u65b0\u7684\u7269\u7406\u5185\u5b58\uff1b \u786e\u4fdd\u7269\u7406\u5185\u5b58\u9875\u88ab\u6b63\u786e\u5730\u91ca\u653e\uff1a\u5f53\u4e14\u4ec5\u5f53\u6700\u540e\u4e00\u4e2a\u6307\u5411\u5b83\u7684PTE\u88ab\u91ca\u653e\u3002\u6700\u597d\u7684\u65b9\u6cd5\u662f\u4e3a\u6bcf\u4e00\u4e2a\u7269\u7406\u5185\u5b58 \u9875\u4fdd\u5b58\u4e00\u4e2a reference count \u6765\u8bb0\u5f55\u6307\u5411\u5b83\u7684PTE\u6709\u591a\u5c11\u4e2a\u3002\u4fee\u6539 kalloc() \u5206\u914d\u8fd9\u4e2a reference count \u3002\u5728 fork \u4e2d\uff0c\u5f53\u7236\u5b50\u8fdb\u7a0b\u5171\u4eab\u7269\u7406\u5185\u5b58\u9875\u65f6\uff0c\u589e\u52a0 reference count \uff0c\u5728\u4e0d\u5171\u4eab\u540e\u964d\u4f4e reference count \u3002 kfree \u4e5f\u8981\u6709\u6240\u4fee\u6539\uff0c\u4ec5\u5f53\u7269\u7406\u5185\u5b58\u9875\u771f\u6b63\u9700\u8981\u88ab\u91ca\u653e\u65f6\uff0c\u518d\u653e\u5230free list \u540e\u9762\u3002\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u8ba1\u6570\u5668\u653e\u5728\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u6574\u6570\u6570\u7ec4\u4e2d\u3002\u4f60\u9700\u8981\u7814\u7a76\u6574\u6570\u6570\u7ec4\u7684\u4e0b\u6807\u548c\u5927\u5c0f\u8be5\u5982\u4f55\u786e\u5b9a\u3002 \u4f8b\u5982\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u7269\u7406\u5730\u5740\u9664\u4ee54096\u6765\u4f5c\u4e3a\u4e0b\u6807\uff0c\u6570\u7ec4\u7684\u5927\u5c0f\u4e3a\u6700\u5927\u7269\u7406\u5730\u5740\u9664\u4ee54096\u3002\u7136\u540e\u518d kinit \u4e2d\u58f0\u660e\u6570\u7ec4\u3002 \u4fee\u6539 copyout() \u6765\u4f7f\u7528\u7c7b\u4f3c\u7684\u6280\u672f\u6765\u4f7f\u7528COW\u6280\u672f\u3002 \u63d0\u793a\uff1a \u4e0d\u8981\u57fa\u4e8e lazy allocation \uff0c\u4f46\u662f lazy allocation \u5b9e\u9a8c\u80fd\u591f\u7ed9\u4e00\u4e9b\u63d0\u793a\uff1b \u8bb0\u5f55\u6bcf\u4e2aPTE\u662f\u5426\u662fCOW\u4ea7\u751f\u7684\u6620\u5c04\u4f1a\u5f88\u6709\u7528\u3002\u53ef\u4ee5\u4f7f\u7528PTE\u4e2d\u7684RSW\u4f4d\uff08reserved for software\uff09\uff0c \u76ee\u524d\u7684xv6\u6ca1\u6709\u4f7f\u7528\u8fd9\u4e2a\u6807\u5fd7\u4f4d\u3002 usertests \u548c cowtest \u7684\u5b9e\u9a8c\u5e76\u4e0d\u91cd\u5408\uff0c\u6240\u4ee5\u8981\u540c\u65f6\u901a\u8fc7\u4e24\u4e2a\u6d4b\u8bd5\u624d\u53ef\u4ee5\u3002 kernel/riscv.h \u4e2d\u6709\u5f88\u591a\u6709\u7528\u7684\u5b8f\u5b9a\u4e49\u3002 \u5982\u679cCOW\u9875\u9519\u8bef\u53d1\u751f\uff0c\u4f46\u662f\u6ca1\u6709\u7a7a\u4f59\u7684\u5185\u5b58\uff0c\u90a3\u4e48\u8fdb\u7a0b\u5e94\u8be5\u88ab\u6740\u6b7b\u3002","title":"\u5b9e\u73b0Copy-on-Write"},{"location":"6.S081/Lab06-Copy-on-Write/#_3","text":"\u9996\u5148\u5728 riscv.h\uff1a334 \u4e2d\u58f0\u660e\u8d85\u53c2\u6570 #define PTE_RSW (1L << 8) \u7528\u4e8e\u6807\u8bb0COW\u9875\u3002 \u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u5c06\u7528\u5230 xv6-book \u7b2c\u516d\u7ae0\u6d89\u53ca\u5230\u7684\u5185\u5bb9\u2014\u2014\u5e76\u53d1\u9501\uff08concurrency lock\uff09\u3002\u5e76\u53d1\u9501\u7528\u4e8e\u63a7\u5236 kernel/kalloc.c \u6587\u4ef6\u4e2d\u7684\u6570\u636e\u7ed3\u6784 pacnt \u7528\u4e8e\u4fdd\u5b58\u7269\u7406\u5185\u5b58\u9875\u88ab\u51e0\u4e2a\u865a\u62df\u5730\u5740\u6240\u6307\u5411\u3002\u540c\u65f6\u9700\u8981\u4e00\u4e2a\u51fd\u6570 incpacnt() \u6765\u66f4\u65b0\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u3002(\u8fd9\u91cc\u6211\u6ca1\u6709\u4f7f\u7528\u7ed3\u6784\u4f53\u5185\u90e8\u6210\u5458\u51fd\u6570) struct { struct spinlock lock ; uint64 cnt [ PHYSTOP >> PGSHIFT ]; } pacnt ; // physical addresses' reference count void incpacnt ( uint64 pa ) { acquire ( & pacnt . lock ); pacnt . cnt [( uint64 ) pa >> PGSHIFT ] ++ ; release ( & pacnt . lock ); } \u63a5\u7740\u6211\u4eec\u4e3a pacnt \u7ed3\u6784\u4f53\u4fee\u6539 kernel/kalloc.c:kinit() \u3001 kernel/kalloc.c:kfree() \u548c kernel/kalloc.c:kalloc() \u4e09\u4e2a\u51fd\u6570\u3002 void kinit () { initlock ( & kmem . lock , \"kmem\" ); initlock ( & pacnt . lock , \"pacnt\" ); freerange ( end , ( void * ) PHYSTOP ); } void kfree ( void * pa ) { acquire ( & pacnt . lock ); if ( pacnt . cnt [( uint64 ) pa >> PGSHIFT ] > 0 ) pacnt . cnt [( uint64 ) pa >> PGSHIFT ] -- ; if ( pacnt . cnt [( uint64 ) pa >> PGSHIFT ] > 0 ){ release ( & pacnt . lock ); return ; } release ( & pacnt . lock ); //... } void * kalloc ( void ) { struct run * r ; acquire ( & kmem . lock ); r = kmem . freelist ; if ( r ) kmem . freelist = r -> next ; release ( & kmem . lock ); // update the physical address' reference count incpacnt (( uint64 ) r ); if ( r ){ memset (( char * ) r , 5 , PGSIZE ); // fill with junk } return ( void * ) r ; } \u4fee\u6539 kernel/vm.c:uvmcopy() \u51fd\u6570\uff0c\u6784\u9020COW\u9875\u3002 int uvmcopy ( pagetable_t old , pagetable_t new , uint64 sz ) { pte_t * pte ; uint64 pa , i ; uint flags ; // char *mem; for ( i = 0 ; i < sz ; i += PGSIZE ){ if (( pte = walk ( old , i , 0 )) == 0 ) panic ( \"uvmcopy: pte should exist\" ); if (( * pte & PTE_V ) == 0 ) panic ( \"uvmcopy: page not present\" ); * pte = (( * pte | PTE_RSW ) & ( ~ PTE_W )); pa = PTE2PA ( * pte ); flags = PTE_FLAGS ( * pte ); incpacnt ( pa ); //update the physical address's reference count. if ( mappages ( new , i , PGSIZE , pa , flags ) != 0 ){ goto err ; } // if((mem = kalloc()) == 0) // goto err; // memmove(mem, (char*)pa, PGSIZE); // if(mappages(new, i, PGSIZE, (uint64)mem, flags) != 0){ // kfree(mem); // goto err; // } } return 0 ; err : uvmunmap ( new , 0 , i / PGSIZE , 1 ); return -1 ; } \u7531\u6b64\u5f15\u53d1\u7684COW\u9875\u9519\u8bef\u7684\u5904\u7406\u7a0b\u5e8f\u5728 trap.c:usertrap() \u4e2d\u5b9e\u73b0\u3002\u5176\u4e2d\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u5728 vm.c \u5b9e\u73b0\u4e86\u4e00\u4e2a\u5206\u914dCOW\u51b2\u7a81\u9875\u7684\u51fd\u6570 cowalloc() \u3002 else if ( r_scause () == 13 || r_scause () == 15 ){ uint64 va = r_stval (); if ( va >= p -> sz ){ p -> killed = 1 ; } else { if ( cowalloc ( p -> pagetable , va ) < 0 ) p -> killed = 1 ; } } int cowalloc ( pagetable_t pagetable , uint64 va ){ pte_t * pte ; uint64 pa ; uint flags ; char * mem ; if (( pte = walk ( pagetable , PGROUNDDOWN ( va ), 0 )) == 0 ) return -1 ; if (( * pte & PTE_V ) == 0 || ( * pte & PTE_RSW ) == 0 ) return -1 ; pa = PTE2PA ( * pte ); flags = (( PTE_FLAGS ( * pte ) | PTE_W ) & ( ~ PTE_RSW )); if (( mem = kalloc ()) == 0 ) return -1 ; memmove ( mem , ( char * ) pa , PGSIZE ); * pte = PA2PTE ( mem ) | flags ; kfree (( char * ) pa ); return 0 ; } \u51fd\u6570 vm.c:copyout() \u4e5f\u4f1a\u9047\u5230COW\u9875\uff0c\u9700\u8981\u6211\u4eec\u5904\u7406\u76f8\u5e94\u7684\u60c5\u51b5 int copyout ( pagetable_t pagetable , uint64 dstva , char * src , uint64 len ) { \\\\ ... pa0 = cowwalkaddr ( pagetable , va0 ); \\\\ ... } \u5176\u4e2d cowwalkaddr() \u4f1a\u5728\u9047\u5230COW\u9875\u65f6\uff0c\u518d\u590d\u5236\u7269\u7406\u5730\u5740\u9875 uint64 cowwalkaddr ( pagetable_t pagetable , uint64 va ) { pte_t * pte ; uint64 pa ; if ( va >= MAXVA ) return 0 ; pte = walk ( pagetable , va , 0 ); if ( pte == 0 ) return 0 ; if (( * pte & PTE_V ) == 0 ) return 0 ; if (( * pte & PTE_U ) == 0 ) return 0 ; if ( * pte & PTE_RSW ) { if ( cowalloc ( pagetable , va ) < 0 ) return 0 ; } pa = PTE2PA ( * pte ); return pa ; } \u4e3a\u4e86\u80fd\u5728\u4e0d\u540c\u6587\u4ef6\u4e2d\u8c03\u7528\u65b0\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u9700\u8981\u518d def.h \u4e2d\u58f0\u660e\u8fd9\u4e9b\u51fd\u6570\uff1a // kalloc.c // ... void incpacnt ( uint64 ); // vm.c // ... int cowalloc ( pagetable_t , uint64 );","title":"\u53c2\u8003\u7b54\u6848"},{"location":"6.S081/Lab07-MultiThreading/","text":"Lab7: Multithreading \u00b6 \u8fd9\u4e2a\u5b9e\u9a8c\u662f\u4e3a\u4e86\u719f\u6089\u591a\u7ebf\u7a0b\u3002\u5728\u5b9e\u9a8c\u4e2d\u6211\u4eec\u5c06\u5b9e\u73b0\u4e00\u4e2a\u7528\u6237\u5c42\u7ea7\u7684\u591a\u7ebf\u7a0b\u8c03\u5ea6\u5668\uff0c\u6765\u52a0\u901f\u8fdb\u7a0b\u7684\u8fd0\u884c\u901f\u5ea6\uff0c\u5e76\u4e14\u5b9e\u73b0\u4e00\u4e2a barrier \u3002 \u8fd9\u4e00\u7ae0\u9700\u8981\u9605\u8bfb xv6-book \u7b2c\u4e03\u7ae0\u7684\u5185\u5bb9\u3002 \u5207\u6362\u5230\u672c\u7ae0\u5b9e\u9a8c\u7684\u5206\u652f\u4e3a\uff1a git betch git checkout thread make clean Uthread: switching between threads \u00b6 \u672c\u8282\u8981\u8bbe\u8ba1\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5207\u6362\u673a\u5236\uff08context switch mechanism\uff09\u6765\u5b9e\u73b0\u4e00\u4e2a\u7528\u6237\u5c42\u7ea7\u7684\u591a\u7ebf\u7a0b\u7cfb\u7edf\u3002\u6709\u4e24\u4e2a\u5173\u952e\u7684\u6587\u4ef6 user/uthread.c \u548c user/uthread_switch.S ,\u5e76\u4e14\u5728 Makefile \u4e2d\u6784\u5efa\u4e86\u4e00\u4e2a\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u3002 uthread.c \u5305\u542b\u5927\u90e8\u5206\u7528\u6237\u5c42\u7ea7\u7684\u591a\u7ebf\u7a0b\u5305\uff0c\u5e76\u4e14\u7a0b\u5e8f\u5305\u542b\u4e09\u4e2a\u7b80\u5355\u7684\u7ebf\u7a0b\u6d4b\u8bd5\u7a0b\u5e8f\u3002\u73b0\u5728\u591a\u7ebf\u7a0b\u5305\u7f3a\u5931\u4e86\u4e00\u4e9b\u4ee3\u7801\u6765\u521b\u5efa\u548c\u5207\u6362\u7ebf\u7a0b\u3002 \u95ee\u9898\u63cf\u8ff0 \u8865\u5168\u4ee3\u7801\u6765\u901a\u8fc7 uthread \u6d4b\u8bd5\u3002\u9996\u5148\u9700\u8981\u8865\u5168 user/thread.c \u4e2d\u7684\u4ee3\u7801 thread_create() \u548c thread_schedule() \uff0c\u4ee5\u53ca user/uthread_switch.S \u4e2d\u7684\u4ee3\u7801 thread_switch \u3002 \u76ee\u6807\u4e00\uff1a\u4fdd\u8bc1 thread_schedule() \u6267\u884c\u7b2c\u4e00\u6b21\u6267\u884c\u7ebf\u7a0b\u65f6\uff0c\u7ebf\u7a0b\u8c03\u7528\u51fd\u6570 thread_create() \uff0c\u521b\u5efa\u5b83\u81ea\u5df1\u7684\u6808\u7a7a\u95f4\uff1b \u76ee\u6807\u4e8c\uff1a\u4fdd\u8bc1 thread_switch \u80fd\u591f\u5728\u5207\u6362\u7ebf\u7a0b\u65f6\u6b63\u786e\u5730\u4fdd\u5b58\u5bc4\u5b58\u5668\uff0c\u5e76\u4e14\u6b63\u786e\u5730\u6062\u590d\u5bc4\u5b58\u5668\u3002\u8fd9\u91cc\u53ef\u4ee5\u4fee\u6539 struct thread \u6765\u4fdd\u5b58\u5bc4\u5b58\u5668\u3002\u5728 thread_schedule \u4e2d\u9700\u8981\u8c03\u7528 thread_switch \uff0c\u6700\u7ec8\u5b9e\u73b0\u4ece\u7ebf\u7a0b t \u5207\u6362\u5230\u7ebf\u7a0b next_thread \u3002 \u63d0\u793a\uff1a thread_swtich \u53ea\u9700\u8981\u4fdd\u5b58 callee-save \u5bc4\u5b58\u5668\uff1b\uff08\u539f\u56e0\u8bf7\u5199\u5728 answers-thread.txt \u6587\u4ef6\u4e2d\uff09 Debug\u53ef\u4ee5\u53c2\u8003 user/uthread.asm \uff0c\u5177\u4f53\u65b9\u5f0f\u662f ( gdb ) file user/_uthread Reading symbols from user/_uthread... ( gdb ) b uthread.c:60 \u4e0b\u9762\u662f\u4e00\u4e9b gdb \u7684\u547d\u4ee4 ( gdb ) p/x *next_thread ( gdb ) x/x next_thread->stack ( gdb ) b thread_switch ( gdb ) c ( gdb ) si Note \u6211\u53d1\u73b0\u8fd9\u9053\u5b9e\u9a8c\u9898\u8fd8\u9700\u8981\u4e24\u4e2a\u63d0\u793a\uff1a ra \u5bc4\u5b58\u5668\u662f\u4fdd\u5b58\u8fd4\u56de\u5730\u5740\u7684\u5bc4\u5b58\u5668\uff0c\u53ef\u4ee5\u7528\u4e8e\u4fee\u6539 uthread_shedule() \u7684\u8fd4\u56de\u5730\u5740\uff1b sp \u5bc4\u5b58\u5668\u4fdd\u5b58\u7684\u662f\u6808\u5730\u5740\uff0c\u5e76\u4e14riscv\u7684\u6808\u6307\u9488\u662f\u4ece\u9ad8\u5730\u5740\u5f80\u4f4e\u5730\u5740\u66f4\u65b0\u7684\u3002 \u53c2\u8003\u7b54\u6848 uthread \u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\uff0c\u589e\u52a0\u4e00\u4e2a\u5173\u4e8e context \u7684\u53d8\u91cf\u3002 struct uthread_context { uint64 ra ; uint64 sp ; // callee-saved uint64 s0 ; uint64 s1 ; uint64 s2 ; uint64 s3 ; uint64 s4 ; uint64 s5 ; uint64 s6 ; uint64 s7 ; uint64 s8 ; uint64 s9 ; uint64 s10 ; uint64 s11 ; }; struct thread { char stack [ STACK_SIZE ]; /* the thread's stack */ int state ; /* FREE, RUNNING, RUNNABLE */ struct uthread_context context ; /* context for user thread */ }; \u66f4\u65b0 context \u7684\u51fd\u6570 uthread_switch.S \u548c\u5185\u6838\u4e2d\u7684\u5207\u6362\u51fd\u6570 swtch \u4e00\u6a21\u4e00\u6837\u3002 . globl swtch swtch : sd ra , 0 ( a0 ) sd sp , 8 ( a0 ) sd s0 , 16 ( a0 ) sd s1 , 24 ( a0 ) sd s2 , 32 ( a0 ) sd s3 , 40 ( a0 ) sd s4 , 48 ( a0 ) sd s5 , 56 ( a0 ) sd s6 , 64 ( a0 ) sd s7 , 72 ( a0 ) sd s8 , 80 ( a0 ) sd s9 , 88 ( a0 ) sd s10 , 96 ( a0 ) sd s11 , 104 ( a0 ) ld ra , 0 ( a1 ) ld sp , 8 ( a1 ) ld s0 , 16 ( a1 ) ld s1 , 24 ( a1 ) ld s2 , 32 ( a1 ) ld s3 , 40 ( a1 ) ld s4 , 48 ( a1 ) ld s5 , 56 ( a1 ) ld s6 , 64 ( a1 ) ld s7 , 72 ( a1 ) ld s8 , 80 ( a1 ) ld s9 , 88 ( a1 ) ld s10 , 96 ( a1 ) ld s11 , 104 ( a1 ) ret \u6838\u5fc3\u96be\u70b9\u5c31\u662f thread_create \u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u5bf9\u5bc4\u5b58\u5668\u7684\u66f4\u65b0\u9700\u8981\u4e00\u5b9a\u7684\u5148\u9a8c\u77e5\u8bc6\u3002 void thread_create ( void ( * func )()) { struct thread * t ; for ( t = all_thread ; t < all_thread + MAX_THREAD ; t ++ ) { if ( t -> state == FREE ) break ; } t -> state = RUNNABLE ; // YOUR CODE HERE t -> context . ra = ( uint64 ) func ; t -> context . sp = ( uint64 )( t -> stack + STACK_SIZE ); } \u5bf9 thread_schedule() \u51fd\u6570\u7684\u8865\u5145\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u548c\u5185\u6838\u4e2d\u7684\u591a\u7ebf\u7a0b\u4e00\u6837\u3002 thread_switch (( uint64 ) & t -> context , ( uint64 ) & current_thread -> context ); Using threads \u00b6 \u5728\u8fd9\u4e00\u8282\u5c06\u5b9e\u73b0\u4e00\u4e2a\u591a\u7ebf\u7a0b\u7f16\u7a0b\uff0c\u5e76\u4e14\u5b9e\u73b0\u4e00\u4e2a\u591a\u7ebf\u7a0b\u54c8\u5e0c\u8868\u3002\u5177\u4f53\u662f\u4f7f\u7528UNIX\u7684 pthread \u591a\u7ebf\u7a0b\u5e93\u3002 man pthread \u53ef\u4ee5\u67e5\u770b\u5177\u4f53\u6587\u6863\uff0c\u6216\u8005\u67e5\u770b\u7f51\u7ad9\u6587\u6863 here , here , here \u3002 notxv6/ph.c \u5305\u542b\u4e00\u4e2a\u7b80\u5355\u7684\u54c8\u5e0c\u8868\uff0c\u5b83\u5728\u5355\u7ebf\u7a0b\u8fd0\u884c\u65f6\u662f\u6b63\u5e38\u7684\u3002\u5177\u4f53\u7f16\u8bd1\u65b9\u5f0f\u662f\uff08\u4f7f\u7528\u672c\u5730\u7f16\u8bd1\u5668\uff09 make ph ./ph 1 \u4e5f\u53ef\u4ee5\u8f93\u5165 ./ph 2 \u6765\u4f7f\u7528\u591a\u6838\u5fc3\u6765\u8fd0\u884c\u8fd9\u4e2a\u54c8\u5e0c\u8868\u3002 \u95ee\u98981 \u4e3a\u4ec0\u4e48\u591a\u7ebf\u7a0b\u4f1a\u5bfc\u81f4\u539f\u672c\u7684\u7a0b\u5e8f\u62a5\u9519\u3002 \u95ee\u98982 \u52a0\u5165\u591a\u7ebf\u7a0b\u9501\u7684\u58f0\u660e pthread_mutex_t lock ; // declare a lock pthread_mutex_init ( & lock , NULL ); // initialize the lock pthread_mutex_lock ( & lock ); // acquire lock pthread_mutex_unlock ( & lock ); // release lock \u8fd9\u65f6 make grade \u53ef\u4ee5\u5b9e\u73b0 ph_safe \u6d4b\u8bd5\u3002\u8fd9\u6837\u53ea\u4f1a\u62a5 0 \u5173\u952e\u8bcd\u7f3a\u5931\u3002 \u4e0d\u8981\u5fd8\u8bb0\u8c03\u7528 pthread_mutex_init() \u3002\u53ef\u4ee5\u5c1d\u8bd5\u4e3a\u6bcf\u4e2a\u54c8\u5e0c\u6876\u5355\u72ec\u5206\u914d\u4e00\u4e2a\u9501\u6765\u52a0\u901f put() \u3002 \u95ee\u98983 \u4fee\u6539 put \u6765\u4fdd\u8bc1\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\uff0c\u8fd0\u884c make grade \u6765\u901a\u8fc7 ph_safe \u548c ph_fast \u4e24\u4e2a\u6d4b\u8bd5\u3002 \u53c2\u8003\u7b54\u6848 \u4e24\u4e2a\u7ebf\u7a0b\u4ea4\u66ff\u8fd0\u884c put \u4f1a\u9020\u6210 table \u540e\u9762\u6dfb\u52a0\u5143\u7d20\u65f6\u540e\u9762\u7684\u64cd\u4f5c\u628a\u524d\u9762\u7684\u64cd\u4f5c\u8986\u76d6\uff0c\u6240\u4ee5\u9020\u6210\u5173\u952e\u8bcd\u7f3a\u5931\uff1b \u9996\u5148\u5728 user/ph.c:20 \u5904\u58f0\u660e\u7ebf\u7a0b\u9501 pthread_mutex_t lock [ NBUCKET ]; // declare a lock \u63a5\u7740\u4fee\u6539 user/ph.c:put() \u51fd\u6570 static void put ( int key , int value ) { int i = key % NBUCKET ; // is the key already present? struct entry * e = 0 ; pthread_mutex_lock ( & lock [ i ]); // acquire lock // ... pthread_mutex_unlock ( & lock [ i ]); // release lock } \u6700\u540e\u5728 user/ph.c:main() \u4e2d\u542f\u52a8\u9501 for ( int i = 0 ; i < NBUCKET ; ++ i ) pthread_mutex_init ( & lock [ i ], NULL ); // initialize the lock Barrier \u00b6 \u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570 barrier \u6765\u4f7f\u5f97\u6240\u6709\u7ebf\u7a0b\u540c\u6b65\u5230\u8be5\u51fd\u6570\u3002\u9700\u8981\u4f7f\u7528 pthread \u6761\u4ef6\u53d8\u91cf\uff0c\u7c7b\u4f3c\u4e8e xv6 \u4e2d\u7684 sleep \u548c wakeup \u3002\u672c\u8282\u7684\u6d4b\u8bd5\u5c06\u5728\u771f\u5b9e\u8ba1\u7b97\u673a\u4e0a\u5b9e\u73b0\u3002\u5177\u4f53\u6267\u884c\u5982\u4e0b make barrier ./barrier 2 \u95ee\u9898\u63cf\u8ff0 \u6211\u4eec\u7684\u76ee\u6807\u662f\u5b9e\u73b0 barrier \u3002\u5177\u4f53\u5305\u542b\u4e00\u4e9b ph \u9898\u76ee\u4e2d\u7684\u9501\uff0c\u4ee5\u53ca\u4e24\u4e2a\u65b0\u7684\u8bf7\u6c42\uff08\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 here \u548c here \uff09 pthread_cond_wait ( & cond , & mutex ); // go to sleep on cond, releasing lock mutex, acquiring upon wake up pthread_cond_broadcast ( & cond ); // wake up every thread sleeping on cond \u6700\u7ec8\u901a\u8fc7 make grade \u7684\u6d4b\u8bd5 barrier \u3002 \u5df2\u7ecf\u5b9e\u73b0\u4e86 barrier_init() \u548c struct barrier \u3002 \u63d0\u793a\uff1a \u6838\u5fc3\u662f\u8981\u540c\u6b65 bstate.round \uff1b \u9700\u8981\u6ce8\u610f\u5faa\u73af\u4e2d\u4e00\u4e2a\u7a0b\u5e8f\u5df2\u7ecf\u9000\u51fa\u4e86\uff0c\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u8fd8\u5728\u7b49\u5f85\u7684\u60c5\u51b5\u3002\u4fdd\u8bc1\u8fdb\u7a0b\u5728\u5f53\u524d\u8f6e\u6b21\u66f4\u65b0 bstate.nthread \u524d\uff0c\u4e0a\u4e00\u4e2a\u8f6e\u6b21\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u66f4\u65b0 bstate.nthread \u3002 Note \u672c\u5b9e\u9a8c\u9898\u4e5f\u662f\u9700\u8981 pthread_mutex_lock \u548c pthread_mutex_unlock \u6765\u9632\u6b62\u4ea7\u751f\u6b7b\u9501\u3002 \u672c\u5b9e\u9a8c\u9700\u8981\u4e86\u89e3 pthread_cond_broadcast \u548c pthread_cond_waint \u4e24\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\uff0c\u5c24\u5176\u662fwait\uff0c\u5b83\u5173\u7cfb\u5230\u9501\u7684\u89e3\u9664\u548c\u7533\u8bf7\u3002\u7f51\u4e0a\u7a0d\u5fae\u67e5\u70b9\u4f8b\u7a0b\u5c31\u641e\u660e\u767d\u4e86\u3002 \u53c2\u8003\u7b54\u6848 static void barrier () { pthread_mutex_lock ( & bstate . barrier_mutex ); // acquire lock if ( ++ bstate . nthread == nthread ) { bstate . nthread = 0 ; bstate . round ++ ; pthread_cond_broadcast ( & bstate . barrier_cond ); pthread_mutex_unlock ( & bstate . barrier_mutex ); } else { pthread_cond_wait ( & bstate . barrier_cond , & bstate . barrier_mutex ); pthread_mutex_unlock ( & bstate . barrier_mutex ); } }","title":"Lab07 MultiThreading"},{"location":"6.S081/Lab07-MultiThreading/#lab7-multithreading","text":"\u8fd9\u4e2a\u5b9e\u9a8c\u662f\u4e3a\u4e86\u719f\u6089\u591a\u7ebf\u7a0b\u3002\u5728\u5b9e\u9a8c\u4e2d\u6211\u4eec\u5c06\u5b9e\u73b0\u4e00\u4e2a\u7528\u6237\u5c42\u7ea7\u7684\u591a\u7ebf\u7a0b\u8c03\u5ea6\u5668\uff0c\u6765\u52a0\u901f\u8fdb\u7a0b\u7684\u8fd0\u884c\u901f\u5ea6\uff0c\u5e76\u4e14\u5b9e\u73b0\u4e00\u4e2a barrier \u3002 \u8fd9\u4e00\u7ae0\u9700\u8981\u9605\u8bfb xv6-book \u7b2c\u4e03\u7ae0\u7684\u5185\u5bb9\u3002 \u5207\u6362\u5230\u672c\u7ae0\u5b9e\u9a8c\u7684\u5206\u652f\u4e3a\uff1a git betch git checkout thread make clean","title":"Lab7: Multithreading"},{"location":"6.S081/Lab07-MultiThreading/#uthread-switching-between-threads","text":"\u672c\u8282\u8981\u8bbe\u8ba1\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5207\u6362\u673a\u5236\uff08context switch mechanism\uff09\u6765\u5b9e\u73b0\u4e00\u4e2a\u7528\u6237\u5c42\u7ea7\u7684\u591a\u7ebf\u7a0b\u7cfb\u7edf\u3002\u6709\u4e24\u4e2a\u5173\u952e\u7684\u6587\u4ef6 user/uthread.c \u548c user/uthread_switch.S ,\u5e76\u4e14\u5728 Makefile \u4e2d\u6784\u5efa\u4e86\u4e00\u4e2a\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u3002 uthread.c \u5305\u542b\u5927\u90e8\u5206\u7528\u6237\u5c42\u7ea7\u7684\u591a\u7ebf\u7a0b\u5305\uff0c\u5e76\u4e14\u7a0b\u5e8f\u5305\u542b\u4e09\u4e2a\u7b80\u5355\u7684\u7ebf\u7a0b\u6d4b\u8bd5\u7a0b\u5e8f\u3002\u73b0\u5728\u591a\u7ebf\u7a0b\u5305\u7f3a\u5931\u4e86\u4e00\u4e9b\u4ee3\u7801\u6765\u521b\u5efa\u548c\u5207\u6362\u7ebf\u7a0b\u3002 \u95ee\u9898\u63cf\u8ff0 \u8865\u5168\u4ee3\u7801\u6765\u901a\u8fc7 uthread \u6d4b\u8bd5\u3002\u9996\u5148\u9700\u8981\u8865\u5168 user/thread.c \u4e2d\u7684\u4ee3\u7801 thread_create() \u548c thread_schedule() \uff0c\u4ee5\u53ca user/uthread_switch.S \u4e2d\u7684\u4ee3\u7801 thread_switch \u3002 \u76ee\u6807\u4e00\uff1a\u4fdd\u8bc1 thread_schedule() \u6267\u884c\u7b2c\u4e00\u6b21\u6267\u884c\u7ebf\u7a0b\u65f6\uff0c\u7ebf\u7a0b\u8c03\u7528\u51fd\u6570 thread_create() \uff0c\u521b\u5efa\u5b83\u81ea\u5df1\u7684\u6808\u7a7a\u95f4\uff1b \u76ee\u6807\u4e8c\uff1a\u4fdd\u8bc1 thread_switch \u80fd\u591f\u5728\u5207\u6362\u7ebf\u7a0b\u65f6\u6b63\u786e\u5730\u4fdd\u5b58\u5bc4\u5b58\u5668\uff0c\u5e76\u4e14\u6b63\u786e\u5730\u6062\u590d\u5bc4\u5b58\u5668\u3002\u8fd9\u91cc\u53ef\u4ee5\u4fee\u6539 struct thread \u6765\u4fdd\u5b58\u5bc4\u5b58\u5668\u3002\u5728 thread_schedule \u4e2d\u9700\u8981\u8c03\u7528 thread_switch \uff0c\u6700\u7ec8\u5b9e\u73b0\u4ece\u7ebf\u7a0b t \u5207\u6362\u5230\u7ebf\u7a0b next_thread \u3002 \u63d0\u793a\uff1a thread_swtich \u53ea\u9700\u8981\u4fdd\u5b58 callee-save \u5bc4\u5b58\u5668\uff1b\uff08\u539f\u56e0\u8bf7\u5199\u5728 answers-thread.txt \u6587\u4ef6\u4e2d\uff09 Debug\u53ef\u4ee5\u53c2\u8003 user/uthread.asm \uff0c\u5177\u4f53\u65b9\u5f0f\u662f ( gdb ) file user/_uthread Reading symbols from user/_uthread... ( gdb ) b uthread.c:60 \u4e0b\u9762\u662f\u4e00\u4e9b gdb \u7684\u547d\u4ee4 ( gdb ) p/x *next_thread ( gdb ) x/x next_thread->stack ( gdb ) b thread_switch ( gdb ) c ( gdb ) si Note \u6211\u53d1\u73b0\u8fd9\u9053\u5b9e\u9a8c\u9898\u8fd8\u9700\u8981\u4e24\u4e2a\u63d0\u793a\uff1a ra \u5bc4\u5b58\u5668\u662f\u4fdd\u5b58\u8fd4\u56de\u5730\u5740\u7684\u5bc4\u5b58\u5668\uff0c\u53ef\u4ee5\u7528\u4e8e\u4fee\u6539 uthread_shedule() \u7684\u8fd4\u56de\u5730\u5740\uff1b sp \u5bc4\u5b58\u5668\u4fdd\u5b58\u7684\u662f\u6808\u5730\u5740\uff0c\u5e76\u4e14riscv\u7684\u6808\u6307\u9488\u662f\u4ece\u9ad8\u5730\u5740\u5f80\u4f4e\u5730\u5740\u66f4\u65b0\u7684\u3002 \u53c2\u8003\u7b54\u6848 uthread \u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\uff0c\u589e\u52a0\u4e00\u4e2a\u5173\u4e8e context \u7684\u53d8\u91cf\u3002 struct uthread_context { uint64 ra ; uint64 sp ; // callee-saved uint64 s0 ; uint64 s1 ; uint64 s2 ; uint64 s3 ; uint64 s4 ; uint64 s5 ; uint64 s6 ; uint64 s7 ; uint64 s8 ; uint64 s9 ; uint64 s10 ; uint64 s11 ; }; struct thread { char stack [ STACK_SIZE ]; /* the thread's stack */ int state ; /* FREE, RUNNING, RUNNABLE */ struct uthread_context context ; /* context for user thread */ }; \u66f4\u65b0 context \u7684\u51fd\u6570 uthread_switch.S \u548c\u5185\u6838\u4e2d\u7684\u5207\u6362\u51fd\u6570 swtch \u4e00\u6a21\u4e00\u6837\u3002 . globl swtch swtch : sd ra , 0 ( a0 ) sd sp , 8 ( a0 ) sd s0 , 16 ( a0 ) sd s1 , 24 ( a0 ) sd s2 , 32 ( a0 ) sd s3 , 40 ( a0 ) sd s4 , 48 ( a0 ) sd s5 , 56 ( a0 ) sd s6 , 64 ( a0 ) sd s7 , 72 ( a0 ) sd s8 , 80 ( a0 ) sd s9 , 88 ( a0 ) sd s10 , 96 ( a0 ) sd s11 , 104 ( a0 ) ld ra , 0 ( a1 ) ld sp , 8 ( a1 ) ld s0 , 16 ( a1 ) ld s1 , 24 ( a1 ) ld s2 , 32 ( a1 ) ld s3 , 40 ( a1 ) ld s4 , 48 ( a1 ) ld s5 , 56 ( a1 ) ld s6 , 64 ( a1 ) ld s7 , 72 ( a1 ) ld s8 , 80 ( a1 ) ld s9 , 88 ( a1 ) ld s10 , 96 ( a1 ) ld s11 , 104 ( a1 ) ret \u6838\u5fc3\u96be\u70b9\u5c31\u662f thread_create \u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u5bf9\u5bc4\u5b58\u5668\u7684\u66f4\u65b0\u9700\u8981\u4e00\u5b9a\u7684\u5148\u9a8c\u77e5\u8bc6\u3002 void thread_create ( void ( * func )()) { struct thread * t ; for ( t = all_thread ; t < all_thread + MAX_THREAD ; t ++ ) { if ( t -> state == FREE ) break ; } t -> state = RUNNABLE ; // YOUR CODE HERE t -> context . ra = ( uint64 ) func ; t -> context . sp = ( uint64 )( t -> stack + STACK_SIZE ); } \u5bf9 thread_schedule() \u51fd\u6570\u7684\u8865\u5145\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u548c\u5185\u6838\u4e2d\u7684\u591a\u7ebf\u7a0b\u4e00\u6837\u3002 thread_switch (( uint64 ) & t -> context , ( uint64 ) & current_thread -> context );","title":"Uthread: switching between threads"},{"location":"6.S081/Lab07-MultiThreading/#using-threads","text":"\u5728\u8fd9\u4e00\u8282\u5c06\u5b9e\u73b0\u4e00\u4e2a\u591a\u7ebf\u7a0b\u7f16\u7a0b\uff0c\u5e76\u4e14\u5b9e\u73b0\u4e00\u4e2a\u591a\u7ebf\u7a0b\u54c8\u5e0c\u8868\u3002\u5177\u4f53\u662f\u4f7f\u7528UNIX\u7684 pthread \u591a\u7ebf\u7a0b\u5e93\u3002 man pthread \u53ef\u4ee5\u67e5\u770b\u5177\u4f53\u6587\u6863\uff0c\u6216\u8005\u67e5\u770b\u7f51\u7ad9\u6587\u6863 here , here , here \u3002 notxv6/ph.c \u5305\u542b\u4e00\u4e2a\u7b80\u5355\u7684\u54c8\u5e0c\u8868\uff0c\u5b83\u5728\u5355\u7ebf\u7a0b\u8fd0\u884c\u65f6\u662f\u6b63\u5e38\u7684\u3002\u5177\u4f53\u7f16\u8bd1\u65b9\u5f0f\u662f\uff08\u4f7f\u7528\u672c\u5730\u7f16\u8bd1\u5668\uff09 make ph ./ph 1 \u4e5f\u53ef\u4ee5\u8f93\u5165 ./ph 2 \u6765\u4f7f\u7528\u591a\u6838\u5fc3\u6765\u8fd0\u884c\u8fd9\u4e2a\u54c8\u5e0c\u8868\u3002 \u95ee\u98981 \u4e3a\u4ec0\u4e48\u591a\u7ebf\u7a0b\u4f1a\u5bfc\u81f4\u539f\u672c\u7684\u7a0b\u5e8f\u62a5\u9519\u3002 \u95ee\u98982 \u52a0\u5165\u591a\u7ebf\u7a0b\u9501\u7684\u58f0\u660e pthread_mutex_t lock ; // declare a lock pthread_mutex_init ( & lock , NULL ); // initialize the lock pthread_mutex_lock ( & lock ); // acquire lock pthread_mutex_unlock ( & lock ); // release lock \u8fd9\u65f6 make grade \u53ef\u4ee5\u5b9e\u73b0 ph_safe \u6d4b\u8bd5\u3002\u8fd9\u6837\u53ea\u4f1a\u62a5 0 \u5173\u952e\u8bcd\u7f3a\u5931\u3002 \u4e0d\u8981\u5fd8\u8bb0\u8c03\u7528 pthread_mutex_init() \u3002\u53ef\u4ee5\u5c1d\u8bd5\u4e3a\u6bcf\u4e2a\u54c8\u5e0c\u6876\u5355\u72ec\u5206\u914d\u4e00\u4e2a\u9501\u6765\u52a0\u901f put() \u3002 \u95ee\u98983 \u4fee\u6539 put \u6765\u4fdd\u8bc1\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\uff0c\u8fd0\u884c make grade \u6765\u901a\u8fc7 ph_safe \u548c ph_fast \u4e24\u4e2a\u6d4b\u8bd5\u3002 \u53c2\u8003\u7b54\u6848 \u4e24\u4e2a\u7ebf\u7a0b\u4ea4\u66ff\u8fd0\u884c put \u4f1a\u9020\u6210 table \u540e\u9762\u6dfb\u52a0\u5143\u7d20\u65f6\u540e\u9762\u7684\u64cd\u4f5c\u628a\u524d\u9762\u7684\u64cd\u4f5c\u8986\u76d6\uff0c\u6240\u4ee5\u9020\u6210\u5173\u952e\u8bcd\u7f3a\u5931\uff1b \u9996\u5148\u5728 user/ph.c:20 \u5904\u58f0\u660e\u7ebf\u7a0b\u9501 pthread_mutex_t lock [ NBUCKET ]; // declare a lock \u63a5\u7740\u4fee\u6539 user/ph.c:put() \u51fd\u6570 static void put ( int key , int value ) { int i = key % NBUCKET ; // is the key already present? struct entry * e = 0 ; pthread_mutex_lock ( & lock [ i ]); // acquire lock // ... pthread_mutex_unlock ( & lock [ i ]); // release lock } \u6700\u540e\u5728 user/ph.c:main() \u4e2d\u542f\u52a8\u9501 for ( int i = 0 ; i < NBUCKET ; ++ i ) pthread_mutex_init ( & lock [ i ], NULL ); // initialize the lock","title":"Using threads"},{"location":"6.S081/Lab07-MultiThreading/#barrier","text":"\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570 barrier \u6765\u4f7f\u5f97\u6240\u6709\u7ebf\u7a0b\u540c\u6b65\u5230\u8be5\u51fd\u6570\u3002\u9700\u8981\u4f7f\u7528 pthread \u6761\u4ef6\u53d8\u91cf\uff0c\u7c7b\u4f3c\u4e8e xv6 \u4e2d\u7684 sleep \u548c wakeup \u3002\u672c\u8282\u7684\u6d4b\u8bd5\u5c06\u5728\u771f\u5b9e\u8ba1\u7b97\u673a\u4e0a\u5b9e\u73b0\u3002\u5177\u4f53\u6267\u884c\u5982\u4e0b make barrier ./barrier 2 \u95ee\u9898\u63cf\u8ff0 \u6211\u4eec\u7684\u76ee\u6807\u662f\u5b9e\u73b0 barrier \u3002\u5177\u4f53\u5305\u542b\u4e00\u4e9b ph \u9898\u76ee\u4e2d\u7684\u9501\uff0c\u4ee5\u53ca\u4e24\u4e2a\u65b0\u7684\u8bf7\u6c42\uff08\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 here \u548c here \uff09 pthread_cond_wait ( & cond , & mutex ); // go to sleep on cond, releasing lock mutex, acquiring upon wake up pthread_cond_broadcast ( & cond ); // wake up every thread sleeping on cond \u6700\u7ec8\u901a\u8fc7 make grade \u7684\u6d4b\u8bd5 barrier \u3002 \u5df2\u7ecf\u5b9e\u73b0\u4e86 barrier_init() \u548c struct barrier \u3002 \u63d0\u793a\uff1a \u6838\u5fc3\u662f\u8981\u540c\u6b65 bstate.round \uff1b \u9700\u8981\u6ce8\u610f\u5faa\u73af\u4e2d\u4e00\u4e2a\u7a0b\u5e8f\u5df2\u7ecf\u9000\u51fa\u4e86\uff0c\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u8fd8\u5728\u7b49\u5f85\u7684\u60c5\u51b5\u3002\u4fdd\u8bc1\u8fdb\u7a0b\u5728\u5f53\u524d\u8f6e\u6b21\u66f4\u65b0 bstate.nthread \u524d\uff0c\u4e0a\u4e00\u4e2a\u8f6e\u6b21\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u66f4\u65b0 bstate.nthread \u3002 Note \u672c\u5b9e\u9a8c\u9898\u4e5f\u662f\u9700\u8981 pthread_mutex_lock \u548c pthread_mutex_unlock \u6765\u9632\u6b62\u4ea7\u751f\u6b7b\u9501\u3002 \u672c\u5b9e\u9a8c\u9700\u8981\u4e86\u89e3 pthread_cond_broadcast \u548c pthread_cond_waint \u4e24\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\uff0c\u5c24\u5176\u662fwait\uff0c\u5b83\u5173\u7cfb\u5230\u9501\u7684\u89e3\u9664\u548c\u7533\u8bf7\u3002\u7f51\u4e0a\u7a0d\u5fae\u67e5\u70b9\u4f8b\u7a0b\u5c31\u641e\u660e\u767d\u4e86\u3002 \u53c2\u8003\u7b54\u6848 static void barrier () { pthread_mutex_lock ( & bstate . barrier_mutex ); // acquire lock if ( ++ bstate . nthread == nthread ) { bstate . nthread = 0 ; bstate . round ++ ; pthread_cond_broadcast ( & bstate . barrier_cond ); pthread_mutex_unlock ( & bstate . barrier_mutex ); } else { pthread_cond_wait ( & bstate . barrier_cond , & bstate . barrier_mutex ); pthread_mutex_unlock ( & bstate . barrier_mutex ); } }","title":"Barrier"},{"location":"6.S081/Lab08-Locks/","text":"Lab8: Locks \u00b6 \u8fd9\u4e00\u5c0f\u8282\u8981\u91cd\u65b0\u8bbe\u8ba1\u9501\uff0c\u589e\u52a0\u5e76\u884c\u6027\u3002\u591a\u6838\u5fc3\u673a\u5668\u4e0a\u64cd\u4f5c\u7cfb\u7edf\u5e76\u884c\u6027\u6bd4\u8f83\u5dee\u7684\u4e3b\u8981\u75c7\u72b6\u662f\u8f83\u9ad8\u7684\u9501\u4e89\u7528\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u6570\u636e\u7ed3\u6784\u548c\u9501\u7684\u673a\u5236\u6765\u964d\u4f4e\u9501\u7684\u4e89\u7528\u9891\u7387\u4ece\u800c\u63d0\u9ad8\u5e76\u884c\u6027\u3002\u6211\u4eec\u4e3b\u8981\u8981\u518dxv6\u7684\u5185\u5b58\u5206\u914d\u548c\u9ad8\u901f\u7f13\u5b58\u5757\u4e0a\u505a\u6587\u7ae0\u3002 \u9700\u8981\u5148\u9605\u8bfbxv6-book\u7684\u7b2c\u516d\u7ae0\u5185\u5bb9\u3001\u7b2c\u4e09\u7ae0\u7b2c\u4e94\u8282\u7269\u7406\u5185\u5b58\u5206\u914d\u6709\u5173\u7684\u5185\u5bb9\u4ee5\u53ca\u7b2c\u516b\u7ae0\u524d\u4e09\u8282\u7684\u5185\u5bb9\u3002 \u83b7\u53d6\u5b9e\u9a8c\u7684\u6e90\u4ee3\u7801\u7684\u6307\u4ee4\u662f git fetch git checkout lock make clean Memory Allocator \u00b6 \u7528\u6237\u7a0b\u5e8f user/kalloctest \u538b\u529b\u6d4b\u8bd5xv6\u7684\u5185\u5b58\u5206\u914d\u7a0b\u5e8f\u3002\u4e09\u4e2a\u8fdb\u7a0b\u4e0d\u65ad\u5730\u589e\u52a0\u7f29\u5c0f\u5b83\u4eec\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u8c03\u7528\u591a\u4e2a kalloc \u3001 kfree \uff0c\u4e0d\u65ad\u5730\u7533\u8bf7 kmem.lock \u3002\u5982\u679c\u8fdb\u7a0b\u6267\u884c acquire \u540e\u7b49\u5f85\u5176\u4ed6\u8fdb\u7a0b\uff0c kalloctest \u5c06\u4f1a\u505a\u51fa\u7edf\u8ba1\uff0c\u5e76\u4e14\u6253\u5370\u5728\u547d\u4ee4\u884c\u4e2d\u3002 \u5728\u5206\u914d\u5185\u5b58\u65f6\u4ea7\u751f\u8fc7\u5ea6\u7684\u7ade\u4e89\u7684\u539f\u56e0\u662fxv6\u53ea\u7528\u4e86\u4e00\u4e2a\u94fe\u8868\u6765\u7ef4\u62a4\u95f2\u7f6e\u7269\u7406\u5185\u5b58\u9875\u3002\u6211\u4eec\u9700\u8981\u91cd\u65b0\u8bbe\u8ba1\u8fd9\u4e00\u90e8\u5206\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5305\u62ec\u9501\u548c\u94fe\u8868\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\u662f\u4e3a\u6bcf\u4e00\u4e2aCPU\u7ef4\u62a4\u4e00\u4e2a\u94fe\u8868\u548c\u9501\u3002\u867d\u7136\u589e\u52a0\u4e86\u5e73\u884c\u6027\uff0c\u4f46\u662f\u96be\u70b9\u5c31\u662f\u5982\u4f55\u540c\u6b65\u6240\u6709\u7684CPU\u7684\u94fe\u8868\u3002 \u95ee\u9898\u63cf\u8ff0 \u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e00\u4e2aCPU\u5b9e\u73b0\u4e00\u4e2a\u7a7a\u7269\u7406\u5185\u5b58\u94fe\u8868\u3002\u5f53\u4e00\u4e2aCPU\u7684\u7a7a\u95f2\u5185\u5b58\u94fe\u8868\u7528\u5b8c\u65f6\uff0c\u9700\u8981\u80fd\u591f\u4ece\u5176\u4ed6CPU\u4e2d\u5077\u4e00\u4e9b\u95f2\u7f6e\u9875\u56de\u6765\u3002\u65b0\u7684\u9501\u547d\u540d\u5efa\u8bae\u90fd\u4ee5 kmem \u5f00\u5934\u3002\u53ef\u4ee5\u8fd0\u884c usertests sbrkmuch \u6765\u6d4b\u8bd5\u5b9e\u9a8c\u7684\u7ed3\u679c\uff0c\u6216\u8005\u8fd0\u884c make grade \u3002 \u63d0\u793a\uff1a \u53ef\u80fd\u9700\u8981\u5b8f\u5b9a\u4e49 kernel/param.h:NCPU \uff1b \u8ba9 freernage \u6765\u5206\u914d\u5185\u5b58\uff0c\u5c06\u6240\u6709\u7a7a\u95f2\u5185\u5b58\u9875\u5206\u914d\u7ed9\u8c03\u7528 freerange \uff1b cpuid \u8fd4\u56de\u5f53\u524dCPU\u6838\u5fc3\u7684\u7f16\u53f7\uff0c\u53ea\u6709\u5f53\u4e2d\u65ad\u5173\u95ed\u7684\u65f6\u5019\u8c03\u7528\u5b83\u624d\u662f\u5b89\u5168\u7684\u3002\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570 push_off() \u548c pop_off() \u6765\u63a7\u5236\u4e2d\u65ad\u7684\u5f00\u95ed\uff1b \u53ef\u4ee5\u53c2\u8003 kernel/sprintf.c \u7684 smprintf \u51fd\u6570\u6765\u5b66\u4e60\u5b57\u7b26\u4e32\u89c4\u8303\u5316\u8f93\u51fa\u7684\u65b9\u5f0f\u3002 \u53c2\u8003\u7b54\u6848 \u8fd9\u9053\u9898\u76ee\u505a\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u51ed\u76f4\u89c9\u5c31\u597d\u4e86\u3002\u6211\u4eec\u8fd9\u91cc\u53ea\u9700\u8981\u4fee\u6539 kalloc.c \u6587\u4ef6\u3002 \u4fee\u6539\u7269\u7406\u5730\u5740\u94fe\u8868\u6570\u636e\u7ed3\u6784\uff0c\u4e3a\u6bcf\u4e00\u4e2aCPU\u63d0\u4f9b\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u3002 struct { struct spinlock lock ; struct run * freelist ; } kmem [ NCPU ]; \u4fee\u6539\u94fe\u8868\u521d\u59cb\u51fd\u6570 kinit() \u3002 void kinit () { char lock_name [ 10 ]; for ( int i = 0 ; i < NCPU ; ++ i ) { snprintf ( lock_name , 10 , \"kmem%d\" , i ); initlock ( & kmem [ i ]. lock , lock_name ); } freerange ( end , ( void * ) PHYSTOP ); } kfree() \u51fd\u6570\u4e5f\u8981\u9488\u5bf9\u6bcf\u4e00\u4e2aCPU\u8fdb\u884c\u64cd\u4f5c\u3002 void kfree ( void * pa ) { struct run * r ; int icpu ; if ((( uint64 ) pa % PGSIZE ) != 0 || ( char * ) pa < end || ( uint64 ) pa >= PHYSTOP ) panic ( \"kfree\" ); // Fill with junk to catch dangling refs. memset ( pa , 1 , PGSIZE ); r = ( struct run * ) pa ; push_off (); icpu = cpuid (); acquire ( & kmem [ icpu ]. lock ); r -> next = kmem [ icpu ]. freelist ; kmem [ icpu ]. freelist = r ; release ( & kmem [ icpu ]. lock ); pop_off (); } \u6700\u540e\u4fee\u6539\u5206\u914d\u7269\u7406\u5185\u5b58\u7684\u51fd\u6570 kalloc() \uff0c\u5f53\u524dCPU\u94fe\u8868\u4e3a\u7a7a\u65f6\uff0c\u4ece\u5176\u4ed6CPU\u7684\u94fe\u8868\u501f\u7528\u3002 void * kalloc ( void ) { struct run * r ; int icpu ; push_off (); icpu = cpuid (); for ( int i = 0 ; i < NCPU ; ++ i ) { acquire ( & kmem [( i + icpu ) % NCPU ]. lock ); r = kmem [( i + icpu ) % NCPU ]. freelist ; if ( r ) { kmem [( i + icpu ) % NCPU ]. freelist = r -> next ; } release ( & kmem [( i + icpu ) % NCPU ]. lock ); if ( r ) break ; } pop_off (); if ( r ) memset (( char * ) r , 5 , PGSIZE ); // fill with junk return ( void * ) r ; } Buffer cache \u00b6 \u8fd9\u9053\u5b9e\u9a8c\u9898\u548c\u524d\u9762\u90a3\u9053\u5b8c\u5168\u65e0\u5173\u3002 \u591a\u6838\u5fc3\u5904\u7406\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u975e\u5e38\u9891\u7e41\uff0c\u5b83\u4eec\u4f7f\u7528\u7684\u9501\u53eb\u505a bcache.lock \uff0c\u4fdd\u62a4\u4e86 kernel/bio.c \u4e2d\u7684\u78c1\u76d8\u7f13\u5b58\u3002\u7528\u6237\u7a0b\u5e8f bcachetest \u521b\u9020\u4e86\u4e00\u4e9b\u8fdb\u7a0b\u6765\u91cd\u590d\u9605\u8bfb\u4e0d\u540c\u7684\u6587\u4ef6\uff0c\u4ee5\u6b64\u6765\u4ea7\u751f\u4ee3\u7801\u7ade\u4e89\u3002 \u5728\u4ee3\u7801 kernel/bio.c \u4e2d\uff0c\u6211\u4eec\u80fd\u591f\u5206\u6790\u53ef\u5f97 bcache.lock \u4fdd\u62a4\u4e86\u9ad8\u901f\u7f13\u5b58\u5757\u5bc4\u5b58\u5668\uff0c bache.lock \u4fdd\u62a4\u4e86\u4e00\u4e9b\u9ad8\u901f\u7f13\u5b58\u5668\uff0c refcnt \u4fdd\u5b58\u4e86\u6307\u5411\u8be5\u9ad8\u901f\u5bc4\u5b58\u5feb\u7684\u4e2a\u6570\u3002\u9ad8\u901f\u7f13\u5b58\u533a\u7684\u6307\u6807\u4e3a b->dev \u4ee5\u53ca b->blockno \u3002 \u9898\u76ee\u63cf\u8ff0 \u4fee\u6539block cache\u6765\u964d\u4f4eacquire\u5faa\u73af\u4e2d\u7b49\u5f85\u6240\u7684\u8f6e\u6b21\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0cblock cache\u6d89\u53ca\u5230\u7684\u9501\u65f6\u95f4\u5468\u671f\u63a5\u8fd10\uff0c\u5b9e\u9645\u6bd4500\u5c11\u5c31\u53ef\u4ee5\u3002\u7136\u540e\u4fee\u6539 bget \u548c brelse \u4f7f\u5f97\u5f53\u524d\u67e5\u627e\u548c\u91ca\u653e\u4e0d\u540c\u7684\u9ad8\u901f\u7f13\u5b58\u5757\u51e0\u4e4e\u4e0d\u4ea7\u751f\u51b2\u7a81\uff08\u4e5f\u5c31\u662f\u8bf4\u4e0d\u7533\u8bf7\u9501 bcache.lock \uff09\u3002\u540c\u65f6\u8981\u5728\u591a\u6838\u5fc3\u4e0b\u4fdd\u6301\u6570\u636e\u7ed3\u6784\u7684\u4e0d\u53d8\u6027\u3002 \u6240\u6709\u7684\u9501\u7684\u540d\u5b57\u5efa\u8bae\u7531 bcache \u5f00\u59cb\uff0c\u5e76\u4e14\u5728 initlock \u4e2d\u521d\u59cb\u5316\u3002 \u964d\u4f4e block cache \u7684\u4e89\u7528\u6bd4 kalloc \u8981\u9ebb\u70e6\u5f97\u591a\uff0c\u56e0\u4e3a\u9ad8\u901f\u7f13\u5b58\u5757\u5728\u8fdb\u7a0b\u95f4\u662f\u5171\u4eab\u7684\u3002\u5728 kalloc \u4e2d\u53ea\u9700\u8981\u7ed9CPU\u5206\u914d\u4e0d\u540c\u7684\u7269\u7406\u5185\u5b58\u5373\u53ef\uff0c\u4f46\u662f block cache \u7684\u5206\u914d\u5c31\u4e0d\u80fd\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u4e86\u3002\u5efa\u8bae\u4f7f\u7528\u4e00\u4e2a\u54c8\u5e0c\u8868\u6765\u4fdd\u5b58\u6bcf\u4e2a\u9ad8\u901f\u7f13\u5b58\u5757\u7684\u9501\u3002 \u4e0b\u9762\u7684\u573a\u666f\u4f1a\u5bfc\u81f4\u6b7b\u9501\uff0c\u4f46\u662f\u6ca1\u6709\u5173\u7cfb\uff1a \u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u4f7f\u7528\u4e00\u4e2a\u5757\uff1b \u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6miss\u9ad8\u901f\u7f13\u5b58\u5757\uff1b \u5f53\u4e24\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u51b2\u7a81\u7684\u5757\uff0c\u5e76\u4e14\u4e24\u4e2a\u5757\u53f7\u6620\u5c04\u5230\u54c8\u5e0c\u8868\u7684\u540c\u4e00\u4e2a\u69fd\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u751f\u6b7b\u9501\uff0c\u53ef\u4ee5\u7b80\u5355\u589e\u5927\u54c8\u5e0c\u8868\uff0c\u4e0d\u9700\u8981\u63d0\u4f9b\u89e3\u51b3\u51b2\u7a81\u7684\u673a\u5236\u3002 \u63d0\u793a\uff1a \u9605\u8bfb block cache \u7684\u76f8\u5173\u63cf\u8ff0\uff0c\u5728xv6-book\u7684\u7b2c\u516b\u7ae0\u7684\u524d\u4e09\u8282\uff1b \u53ef\u4ee5\u4f7f\u7528\u56fa\u5b9a\u7684 buckets \u5e76\u4e14\u4e0d\u52a8\u6001\u5206\u914d\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\u3002\u4f7f\u7528\u7d20\u6570\u7684 buckets \u6765\u5c3d\u91cf\u907f\u514d\u7ade\u4e89\uff1b \u67e5\u627e\u54c8\u5e0c\u8868\u548c\u6dfb\u52a0\u54c8\u5e0c\u8868\u5fc5\u987b\u662f\u539f\u5b50\u64cd\u4f5c\uff1b \u5220\u9664\u6240\u6709 buffer \u7684\u94fe\u8868\uff08 bcache.head \u7b49\u4f4d\u7f6e\uff09\uff0c\u4f7f\u7528\u5e26\u65f6\u95f4\u6233\u7684 buffer \uff08 kernel/trap.c \u7684 ticks \uff09\u3002 brelse \u4e0d\u5728\u9700\u8981 bcache \u9501\uff0c bget \u9009\u62e9\u6700\u65e9\u88ab\u4f7f\u7528\u8fc7\u7684\u5757\uff08\u4e5f\u5c31\u662f\u5f88\u4e45\u6ca1\u6709\u88ab\u4f7f\u7528\u8fc7\u7684\u5757\uff09\uff1b \u53ef\u4ee5\u5e8f\u5217\u5316\u53d1\u5c04 bget \u3002\u5f53 cache \u547d\u4e2d\u5931\u8d25\u65f6\uff0c bget \u53ef\u4ee5\u91cd\u65b0\u9009\u62e9\u4e00\u4e2a buffer \uff1b \u6709\u4e9b\u573a\u666f\u53ef\u80fd\u540c\u65f6\u9700\u8981\u4e24\u4e2a\u9501\uff0c bcache \u548c\u5404\u4e2a bucket \u7684\u9501\uff0c\u6ce8\u610f\u907f\u514d\u6b7b\u9501\uff1b \u5728\u66ff\u6362 block \u65f6\uff0c\u8981\u5c06\u65e7\u7684 struct buf \u4ece\u4e00\u4e2a bucket \u79fb\u52a8\u5230\u53e6\u4e00\u4e2a bucket \u3002\u4f46\u662f\u8981\u907f\u514d\u79fb\u52a8\u524d\u548c\u79fb\u52a8\u540e\u7684 bucket \u662f\u76f8\u540c\u7684\uff1b Debug\u5efa\u8bae\uff1a\u5148\u4fdd\u7559\u5168\u5c40\u7684 bcache.lock \uff0c\u7b49\u786e\u4fdd\u6ca1\u6709\u7ade\u4e89\u64cd\u4f5c\u540e\u518d\u53bb\u6389\u5168\u5c40\u9501\u3002\u4e5f\u53ef\u4ee5\u8fd0\u884c make CPUS=1 qemu \u6765\u6d4b\u8bd5\u5355\u4e2a\u6838\u5fc3\u7684\u60c5\u51b5\u3002 Note \u6211\u6ca1\u6709\u505a\u8fc7\u9898\u76ee\uff0c\u6240\u4ee5\u5728\u7ffb\u8bd1\u9898\u76ee\u7684\u65f6\u5019\u6211\u4e5f\u662f\u4e91\u91cc\u96fe\u91cc\u7684\u3002\u505a\u5b8c\u4e4b\u540e\u6211\u611f\u89c9\u5c31\u662f\u4e0a\u4e00\u9053\u9898\u76ee\u7684\u53d8\u79cd\uff0c\u4e5f\u662f\u5206\u914d\u591a\u4e2aBuckets\u3002 \u53c2\u8003\u7b54\u6848 \u4fee\u6539 bcache \u3002 #define NBUCK 13 struct { struct spinlock lock [ NBUCK ]; struct buf buf [ NBUF ]; // Linked list of all buffers, through prev/next. // Sorted by how recently the buffer was used. // head.next is most recent, head.prev is least. struct buf head [ NBUCK ]; } bcache ; \u4fee\u6539\u521d\u59cb\u5316\uff0c\u5c06 buf \u5747\u5300\u5206\u7ed9\u54c8\u5e0c\u8868\u3002 void binit ( void ) { struct buf * b ; char lock_name [ 10 ]; int i ; for ( i = 0 ; i < NBUCK ; ++ i ){ snprintf ( lock_name , 10 , \"bcache%d\" , i ); initlock ( & bcache . lock [ i ], lock_name ); // Create linked list of buffers bcache . head [ i ]. prev = & bcache . head [ i ]; bcache . head [ i ]. next = & bcache . head [ i ]; } for ( i = 0 , b = bcache . buf ; b < bcache . buf + NBUF ; b ++ , i = ( i + 1 ) % NBUCK ){ b -> next = bcache . head [ i ]. next ; b -> prev = & bcache . head [ i ]; initsleeplock ( & b -> lock , \"buffer\" ); bcache . head [ i ]. next -> prev = b ; bcache . head [ i ]. next = b ; } } \u5206\u914dcache\uff0c\u8fd1\u4f3cLRU\u3002 static struct buf * bget ( uint dev , uint blockno ) { struct buf * b ; int i = blockno % NBUCK ; acquire ( & bcache . lock [ i ]); // Is the block already cached? for ( b = bcache . head [ i ]. next ; b != & bcache . head [ i ]; b = b -> next ){ if ( b -> dev == dev && b -> blockno == blockno ){ b -> refcnt ++ ; release ( & bcache . lock [ i ]); acquiresleep ( & b -> lock ); return b ; } } // Not cached. // Recycle the least recently used (LRU) unused buffer. for ( b = bcache . head [ i ]. prev ; b != & bcache . head [ i ]; b = b -> prev ){ if ( b -> refcnt == 0 ) { b -> dev = dev ; b -> blockno = blockno ; b -> valid = 0 ; b -> refcnt = 1 ; release ( & bcache . lock [ i ]); acquiresleep ( & b -> lock ); return b ; } } // Bucket is full. Stealing. for ( int j = 1 ; j < NBUCK ; ++ j ){ int k = ( i + j ) % NBUCK ; acquire ( & bcache . lock [ k ]); for ( b = bcache . head [ k ]. prev ; b != & bcache . head [ k ]; b = b -> prev ){ if ( b -> refcnt == 0 ) { b -> next -> prev = b -> prev ; b -> prev -> next = b -> next ; release ( & bcache . lock [ k ]); b -> next = bcache . head [ i ]. next ; b -> prev = & bcache . head [ i ]; bcache . head [ i ]. next -> prev = b ; bcache . head [ i ]. next = b ; b -> dev = dev ; b -> blockno = blockno ; b -> valid = 0 ; b -> refcnt = 1 ; release ( & bcache . lock [ i ]); acquiresleep ( & b -> lock ); return b ; } } release ( & bcache . lock [ k ]); } panic ( \"bget: no buffers\" ); } \u5bf9 brelse \u3001 bpin \u548c bunpin \u4fee\u6539\u6240\u9700\u8981\u7684\u9501\u3002 void brelse ( struct buf * b ) { if ( ! holdingsleep ( & b -> lock )) panic ( \"brelse\" ); releasesleep ( & b -> lock ); int i = b -> blockno % NBUCK ; acquire ( & bcache . lock [ i ]); b -> refcnt -- ; if ( b -> refcnt == 0 ) { // no one is waiting for it. b -> next -> prev = b -> prev ; b -> prev -> next = b -> next ; b -> next = bcache . head [ i ]. next ; b -> prev = & bcache . head [ i ]; bcache . head [ i ]. next -> prev = b ; bcache . head [ i ]. next = b ; } release ( & bcache . lock [ i ]); } void bpin ( struct buf * b ) { int i = b -> blockno % NBUCK ; acquire ( & bcache . lock [ i ]); b -> refcnt ++ ; release ( & bcache . lock [ i ]); } void bunpin ( struct buf * b ) { int i = b -> blockno % NBUCK ; acquire ( & bcache . lock [ i ]); b -> refcnt -- ; release ( & bcache . lock [ i ]); }","title":"Lab08 Locks"},{"location":"6.S081/Lab08-Locks/#lab8-locks","text":"\u8fd9\u4e00\u5c0f\u8282\u8981\u91cd\u65b0\u8bbe\u8ba1\u9501\uff0c\u589e\u52a0\u5e76\u884c\u6027\u3002\u591a\u6838\u5fc3\u673a\u5668\u4e0a\u64cd\u4f5c\u7cfb\u7edf\u5e76\u884c\u6027\u6bd4\u8f83\u5dee\u7684\u4e3b\u8981\u75c7\u72b6\u662f\u8f83\u9ad8\u7684\u9501\u4e89\u7528\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u6570\u636e\u7ed3\u6784\u548c\u9501\u7684\u673a\u5236\u6765\u964d\u4f4e\u9501\u7684\u4e89\u7528\u9891\u7387\u4ece\u800c\u63d0\u9ad8\u5e76\u884c\u6027\u3002\u6211\u4eec\u4e3b\u8981\u8981\u518dxv6\u7684\u5185\u5b58\u5206\u914d\u548c\u9ad8\u901f\u7f13\u5b58\u5757\u4e0a\u505a\u6587\u7ae0\u3002 \u9700\u8981\u5148\u9605\u8bfbxv6-book\u7684\u7b2c\u516d\u7ae0\u5185\u5bb9\u3001\u7b2c\u4e09\u7ae0\u7b2c\u4e94\u8282\u7269\u7406\u5185\u5b58\u5206\u914d\u6709\u5173\u7684\u5185\u5bb9\u4ee5\u53ca\u7b2c\u516b\u7ae0\u524d\u4e09\u8282\u7684\u5185\u5bb9\u3002 \u83b7\u53d6\u5b9e\u9a8c\u7684\u6e90\u4ee3\u7801\u7684\u6307\u4ee4\u662f git fetch git checkout lock make clean","title":"Lab8: Locks"},{"location":"6.S081/Lab08-Locks/#memory-allocator","text":"\u7528\u6237\u7a0b\u5e8f user/kalloctest \u538b\u529b\u6d4b\u8bd5xv6\u7684\u5185\u5b58\u5206\u914d\u7a0b\u5e8f\u3002\u4e09\u4e2a\u8fdb\u7a0b\u4e0d\u65ad\u5730\u589e\u52a0\u7f29\u5c0f\u5b83\u4eec\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u8c03\u7528\u591a\u4e2a kalloc \u3001 kfree \uff0c\u4e0d\u65ad\u5730\u7533\u8bf7 kmem.lock \u3002\u5982\u679c\u8fdb\u7a0b\u6267\u884c acquire \u540e\u7b49\u5f85\u5176\u4ed6\u8fdb\u7a0b\uff0c kalloctest \u5c06\u4f1a\u505a\u51fa\u7edf\u8ba1\uff0c\u5e76\u4e14\u6253\u5370\u5728\u547d\u4ee4\u884c\u4e2d\u3002 \u5728\u5206\u914d\u5185\u5b58\u65f6\u4ea7\u751f\u8fc7\u5ea6\u7684\u7ade\u4e89\u7684\u539f\u56e0\u662fxv6\u53ea\u7528\u4e86\u4e00\u4e2a\u94fe\u8868\u6765\u7ef4\u62a4\u95f2\u7f6e\u7269\u7406\u5185\u5b58\u9875\u3002\u6211\u4eec\u9700\u8981\u91cd\u65b0\u8bbe\u8ba1\u8fd9\u4e00\u90e8\u5206\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5305\u62ec\u9501\u548c\u94fe\u8868\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\u662f\u4e3a\u6bcf\u4e00\u4e2aCPU\u7ef4\u62a4\u4e00\u4e2a\u94fe\u8868\u548c\u9501\u3002\u867d\u7136\u589e\u52a0\u4e86\u5e73\u884c\u6027\uff0c\u4f46\u662f\u96be\u70b9\u5c31\u662f\u5982\u4f55\u540c\u6b65\u6240\u6709\u7684CPU\u7684\u94fe\u8868\u3002 \u95ee\u9898\u63cf\u8ff0 \u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e00\u4e2aCPU\u5b9e\u73b0\u4e00\u4e2a\u7a7a\u7269\u7406\u5185\u5b58\u94fe\u8868\u3002\u5f53\u4e00\u4e2aCPU\u7684\u7a7a\u95f2\u5185\u5b58\u94fe\u8868\u7528\u5b8c\u65f6\uff0c\u9700\u8981\u80fd\u591f\u4ece\u5176\u4ed6CPU\u4e2d\u5077\u4e00\u4e9b\u95f2\u7f6e\u9875\u56de\u6765\u3002\u65b0\u7684\u9501\u547d\u540d\u5efa\u8bae\u90fd\u4ee5 kmem \u5f00\u5934\u3002\u53ef\u4ee5\u8fd0\u884c usertests sbrkmuch \u6765\u6d4b\u8bd5\u5b9e\u9a8c\u7684\u7ed3\u679c\uff0c\u6216\u8005\u8fd0\u884c make grade \u3002 \u63d0\u793a\uff1a \u53ef\u80fd\u9700\u8981\u5b8f\u5b9a\u4e49 kernel/param.h:NCPU \uff1b \u8ba9 freernage \u6765\u5206\u914d\u5185\u5b58\uff0c\u5c06\u6240\u6709\u7a7a\u95f2\u5185\u5b58\u9875\u5206\u914d\u7ed9\u8c03\u7528 freerange \uff1b cpuid \u8fd4\u56de\u5f53\u524dCPU\u6838\u5fc3\u7684\u7f16\u53f7\uff0c\u53ea\u6709\u5f53\u4e2d\u65ad\u5173\u95ed\u7684\u65f6\u5019\u8c03\u7528\u5b83\u624d\u662f\u5b89\u5168\u7684\u3002\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570 push_off() \u548c pop_off() \u6765\u63a7\u5236\u4e2d\u65ad\u7684\u5f00\u95ed\uff1b \u53ef\u4ee5\u53c2\u8003 kernel/sprintf.c \u7684 smprintf \u51fd\u6570\u6765\u5b66\u4e60\u5b57\u7b26\u4e32\u89c4\u8303\u5316\u8f93\u51fa\u7684\u65b9\u5f0f\u3002 \u53c2\u8003\u7b54\u6848 \u8fd9\u9053\u9898\u76ee\u505a\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u51ed\u76f4\u89c9\u5c31\u597d\u4e86\u3002\u6211\u4eec\u8fd9\u91cc\u53ea\u9700\u8981\u4fee\u6539 kalloc.c \u6587\u4ef6\u3002 \u4fee\u6539\u7269\u7406\u5730\u5740\u94fe\u8868\u6570\u636e\u7ed3\u6784\uff0c\u4e3a\u6bcf\u4e00\u4e2aCPU\u63d0\u4f9b\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u3002 struct { struct spinlock lock ; struct run * freelist ; } kmem [ NCPU ]; \u4fee\u6539\u94fe\u8868\u521d\u59cb\u51fd\u6570 kinit() \u3002 void kinit () { char lock_name [ 10 ]; for ( int i = 0 ; i < NCPU ; ++ i ) { snprintf ( lock_name , 10 , \"kmem%d\" , i ); initlock ( & kmem [ i ]. lock , lock_name ); } freerange ( end , ( void * ) PHYSTOP ); } kfree() \u51fd\u6570\u4e5f\u8981\u9488\u5bf9\u6bcf\u4e00\u4e2aCPU\u8fdb\u884c\u64cd\u4f5c\u3002 void kfree ( void * pa ) { struct run * r ; int icpu ; if ((( uint64 ) pa % PGSIZE ) != 0 || ( char * ) pa < end || ( uint64 ) pa >= PHYSTOP ) panic ( \"kfree\" ); // Fill with junk to catch dangling refs. memset ( pa , 1 , PGSIZE ); r = ( struct run * ) pa ; push_off (); icpu = cpuid (); acquire ( & kmem [ icpu ]. lock ); r -> next = kmem [ icpu ]. freelist ; kmem [ icpu ]. freelist = r ; release ( & kmem [ icpu ]. lock ); pop_off (); } \u6700\u540e\u4fee\u6539\u5206\u914d\u7269\u7406\u5185\u5b58\u7684\u51fd\u6570 kalloc() \uff0c\u5f53\u524dCPU\u94fe\u8868\u4e3a\u7a7a\u65f6\uff0c\u4ece\u5176\u4ed6CPU\u7684\u94fe\u8868\u501f\u7528\u3002 void * kalloc ( void ) { struct run * r ; int icpu ; push_off (); icpu = cpuid (); for ( int i = 0 ; i < NCPU ; ++ i ) { acquire ( & kmem [( i + icpu ) % NCPU ]. lock ); r = kmem [( i + icpu ) % NCPU ]. freelist ; if ( r ) { kmem [( i + icpu ) % NCPU ]. freelist = r -> next ; } release ( & kmem [( i + icpu ) % NCPU ]. lock ); if ( r ) break ; } pop_off (); if ( r ) memset (( char * ) r , 5 , PGSIZE ); // fill with junk return ( void * ) r ; }","title":"Memory Allocator"},{"location":"6.S081/Lab08-Locks/#buffer-cache","text":"\u8fd9\u9053\u5b9e\u9a8c\u9898\u548c\u524d\u9762\u90a3\u9053\u5b8c\u5168\u65e0\u5173\u3002 \u591a\u6838\u5fc3\u5904\u7406\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u975e\u5e38\u9891\u7e41\uff0c\u5b83\u4eec\u4f7f\u7528\u7684\u9501\u53eb\u505a bcache.lock \uff0c\u4fdd\u62a4\u4e86 kernel/bio.c \u4e2d\u7684\u78c1\u76d8\u7f13\u5b58\u3002\u7528\u6237\u7a0b\u5e8f bcachetest \u521b\u9020\u4e86\u4e00\u4e9b\u8fdb\u7a0b\u6765\u91cd\u590d\u9605\u8bfb\u4e0d\u540c\u7684\u6587\u4ef6\uff0c\u4ee5\u6b64\u6765\u4ea7\u751f\u4ee3\u7801\u7ade\u4e89\u3002 \u5728\u4ee3\u7801 kernel/bio.c \u4e2d\uff0c\u6211\u4eec\u80fd\u591f\u5206\u6790\u53ef\u5f97 bcache.lock \u4fdd\u62a4\u4e86\u9ad8\u901f\u7f13\u5b58\u5757\u5bc4\u5b58\u5668\uff0c bache.lock \u4fdd\u62a4\u4e86\u4e00\u4e9b\u9ad8\u901f\u7f13\u5b58\u5668\uff0c refcnt \u4fdd\u5b58\u4e86\u6307\u5411\u8be5\u9ad8\u901f\u5bc4\u5b58\u5feb\u7684\u4e2a\u6570\u3002\u9ad8\u901f\u7f13\u5b58\u533a\u7684\u6307\u6807\u4e3a b->dev \u4ee5\u53ca b->blockno \u3002 \u9898\u76ee\u63cf\u8ff0 \u4fee\u6539block cache\u6765\u964d\u4f4eacquire\u5faa\u73af\u4e2d\u7b49\u5f85\u6240\u7684\u8f6e\u6b21\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0cblock cache\u6d89\u53ca\u5230\u7684\u9501\u65f6\u95f4\u5468\u671f\u63a5\u8fd10\uff0c\u5b9e\u9645\u6bd4500\u5c11\u5c31\u53ef\u4ee5\u3002\u7136\u540e\u4fee\u6539 bget \u548c brelse \u4f7f\u5f97\u5f53\u524d\u67e5\u627e\u548c\u91ca\u653e\u4e0d\u540c\u7684\u9ad8\u901f\u7f13\u5b58\u5757\u51e0\u4e4e\u4e0d\u4ea7\u751f\u51b2\u7a81\uff08\u4e5f\u5c31\u662f\u8bf4\u4e0d\u7533\u8bf7\u9501 bcache.lock \uff09\u3002\u540c\u65f6\u8981\u5728\u591a\u6838\u5fc3\u4e0b\u4fdd\u6301\u6570\u636e\u7ed3\u6784\u7684\u4e0d\u53d8\u6027\u3002 \u6240\u6709\u7684\u9501\u7684\u540d\u5b57\u5efa\u8bae\u7531 bcache \u5f00\u59cb\uff0c\u5e76\u4e14\u5728 initlock \u4e2d\u521d\u59cb\u5316\u3002 \u964d\u4f4e block cache \u7684\u4e89\u7528\u6bd4 kalloc \u8981\u9ebb\u70e6\u5f97\u591a\uff0c\u56e0\u4e3a\u9ad8\u901f\u7f13\u5b58\u5757\u5728\u8fdb\u7a0b\u95f4\u662f\u5171\u4eab\u7684\u3002\u5728 kalloc \u4e2d\u53ea\u9700\u8981\u7ed9CPU\u5206\u914d\u4e0d\u540c\u7684\u7269\u7406\u5185\u5b58\u5373\u53ef\uff0c\u4f46\u662f block cache \u7684\u5206\u914d\u5c31\u4e0d\u80fd\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u4e86\u3002\u5efa\u8bae\u4f7f\u7528\u4e00\u4e2a\u54c8\u5e0c\u8868\u6765\u4fdd\u5b58\u6bcf\u4e2a\u9ad8\u901f\u7f13\u5b58\u5757\u7684\u9501\u3002 \u4e0b\u9762\u7684\u573a\u666f\u4f1a\u5bfc\u81f4\u6b7b\u9501\uff0c\u4f46\u662f\u6ca1\u6709\u5173\u7cfb\uff1a \u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u4f7f\u7528\u4e00\u4e2a\u5757\uff1b \u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6miss\u9ad8\u901f\u7f13\u5b58\u5757\uff1b \u5f53\u4e24\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u51b2\u7a81\u7684\u5757\uff0c\u5e76\u4e14\u4e24\u4e2a\u5757\u53f7\u6620\u5c04\u5230\u54c8\u5e0c\u8868\u7684\u540c\u4e00\u4e2a\u69fd\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u751f\u6b7b\u9501\uff0c\u53ef\u4ee5\u7b80\u5355\u589e\u5927\u54c8\u5e0c\u8868\uff0c\u4e0d\u9700\u8981\u63d0\u4f9b\u89e3\u51b3\u51b2\u7a81\u7684\u673a\u5236\u3002 \u63d0\u793a\uff1a \u9605\u8bfb block cache \u7684\u76f8\u5173\u63cf\u8ff0\uff0c\u5728xv6-book\u7684\u7b2c\u516b\u7ae0\u7684\u524d\u4e09\u8282\uff1b \u53ef\u4ee5\u4f7f\u7528\u56fa\u5b9a\u7684 buckets \u5e76\u4e14\u4e0d\u52a8\u6001\u5206\u914d\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\u3002\u4f7f\u7528\u7d20\u6570\u7684 buckets \u6765\u5c3d\u91cf\u907f\u514d\u7ade\u4e89\uff1b \u67e5\u627e\u54c8\u5e0c\u8868\u548c\u6dfb\u52a0\u54c8\u5e0c\u8868\u5fc5\u987b\u662f\u539f\u5b50\u64cd\u4f5c\uff1b \u5220\u9664\u6240\u6709 buffer \u7684\u94fe\u8868\uff08 bcache.head \u7b49\u4f4d\u7f6e\uff09\uff0c\u4f7f\u7528\u5e26\u65f6\u95f4\u6233\u7684 buffer \uff08 kernel/trap.c \u7684 ticks \uff09\u3002 brelse \u4e0d\u5728\u9700\u8981 bcache \u9501\uff0c bget \u9009\u62e9\u6700\u65e9\u88ab\u4f7f\u7528\u8fc7\u7684\u5757\uff08\u4e5f\u5c31\u662f\u5f88\u4e45\u6ca1\u6709\u88ab\u4f7f\u7528\u8fc7\u7684\u5757\uff09\uff1b \u53ef\u4ee5\u5e8f\u5217\u5316\u53d1\u5c04 bget \u3002\u5f53 cache \u547d\u4e2d\u5931\u8d25\u65f6\uff0c bget \u53ef\u4ee5\u91cd\u65b0\u9009\u62e9\u4e00\u4e2a buffer \uff1b \u6709\u4e9b\u573a\u666f\u53ef\u80fd\u540c\u65f6\u9700\u8981\u4e24\u4e2a\u9501\uff0c bcache \u548c\u5404\u4e2a bucket \u7684\u9501\uff0c\u6ce8\u610f\u907f\u514d\u6b7b\u9501\uff1b \u5728\u66ff\u6362 block \u65f6\uff0c\u8981\u5c06\u65e7\u7684 struct buf \u4ece\u4e00\u4e2a bucket \u79fb\u52a8\u5230\u53e6\u4e00\u4e2a bucket \u3002\u4f46\u662f\u8981\u907f\u514d\u79fb\u52a8\u524d\u548c\u79fb\u52a8\u540e\u7684 bucket \u662f\u76f8\u540c\u7684\uff1b Debug\u5efa\u8bae\uff1a\u5148\u4fdd\u7559\u5168\u5c40\u7684 bcache.lock \uff0c\u7b49\u786e\u4fdd\u6ca1\u6709\u7ade\u4e89\u64cd\u4f5c\u540e\u518d\u53bb\u6389\u5168\u5c40\u9501\u3002\u4e5f\u53ef\u4ee5\u8fd0\u884c make CPUS=1 qemu \u6765\u6d4b\u8bd5\u5355\u4e2a\u6838\u5fc3\u7684\u60c5\u51b5\u3002 Note \u6211\u6ca1\u6709\u505a\u8fc7\u9898\u76ee\uff0c\u6240\u4ee5\u5728\u7ffb\u8bd1\u9898\u76ee\u7684\u65f6\u5019\u6211\u4e5f\u662f\u4e91\u91cc\u96fe\u91cc\u7684\u3002\u505a\u5b8c\u4e4b\u540e\u6211\u611f\u89c9\u5c31\u662f\u4e0a\u4e00\u9053\u9898\u76ee\u7684\u53d8\u79cd\uff0c\u4e5f\u662f\u5206\u914d\u591a\u4e2aBuckets\u3002 \u53c2\u8003\u7b54\u6848 \u4fee\u6539 bcache \u3002 #define NBUCK 13 struct { struct spinlock lock [ NBUCK ]; struct buf buf [ NBUF ]; // Linked list of all buffers, through prev/next. // Sorted by how recently the buffer was used. // head.next is most recent, head.prev is least. struct buf head [ NBUCK ]; } bcache ; \u4fee\u6539\u521d\u59cb\u5316\uff0c\u5c06 buf \u5747\u5300\u5206\u7ed9\u54c8\u5e0c\u8868\u3002 void binit ( void ) { struct buf * b ; char lock_name [ 10 ]; int i ; for ( i = 0 ; i < NBUCK ; ++ i ){ snprintf ( lock_name , 10 , \"bcache%d\" , i ); initlock ( & bcache . lock [ i ], lock_name ); // Create linked list of buffers bcache . head [ i ]. prev = & bcache . head [ i ]; bcache . head [ i ]. next = & bcache . head [ i ]; } for ( i = 0 , b = bcache . buf ; b < bcache . buf + NBUF ; b ++ , i = ( i + 1 ) % NBUCK ){ b -> next = bcache . head [ i ]. next ; b -> prev = & bcache . head [ i ]; initsleeplock ( & b -> lock , \"buffer\" ); bcache . head [ i ]. next -> prev = b ; bcache . head [ i ]. next = b ; } } \u5206\u914dcache\uff0c\u8fd1\u4f3cLRU\u3002 static struct buf * bget ( uint dev , uint blockno ) { struct buf * b ; int i = blockno % NBUCK ; acquire ( & bcache . lock [ i ]); // Is the block already cached? for ( b = bcache . head [ i ]. next ; b != & bcache . head [ i ]; b = b -> next ){ if ( b -> dev == dev && b -> blockno == blockno ){ b -> refcnt ++ ; release ( & bcache . lock [ i ]); acquiresleep ( & b -> lock ); return b ; } } // Not cached. // Recycle the least recently used (LRU) unused buffer. for ( b = bcache . head [ i ]. prev ; b != & bcache . head [ i ]; b = b -> prev ){ if ( b -> refcnt == 0 ) { b -> dev = dev ; b -> blockno = blockno ; b -> valid = 0 ; b -> refcnt = 1 ; release ( & bcache . lock [ i ]); acquiresleep ( & b -> lock ); return b ; } } // Bucket is full. Stealing. for ( int j = 1 ; j < NBUCK ; ++ j ){ int k = ( i + j ) % NBUCK ; acquire ( & bcache . lock [ k ]); for ( b = bcache . head [ k ]. prev ; b != & bcache . head [ k ]; b = b -> prev ){ if ( b -> refcnt == 0 ) { b -> next -> prev = b -> prev ; b -> prev -> next = b -> next ; release ( & bcache . lock [ k ]); b -> next = bcache . head [ i ]. next ; b -> prev = & bcache . head [ i ]; bcache . head [ i ]. next -> prev = b ; bcache . head [ i ]. next = b ; b -> dev = dev ; b -> blockno = blockno ; b -> valid = 0 ; b -> refcnt = 1 ; release ( & bcache . lock [ i ]); acquiresleep ( & b -> lock ); return b ; } } release ( & bcache . lock [ k ]); } panic ( \"bget: no buffers\" ); } \u5bf9 brelse \u3001 bpin \u548c bunpin \u4fee\u6539\u6240\u9700\u8981\u7684\u9501\u3002 void brelse ( struct buf * b ) { if ( ! holdingsleep ( & b -> lock )) panic ( \"brelse\" ); releasesleep ( & b -> lock ); int i = b -> blockno % NBUCK ; acquire ( & bcache . lock [ i ]); b -> refcnt -- ; if ( b -> refcnt == 0 ) { // no one is waiting for it. b -> next -> prev = b -> prev ; b -> prev -> next = b -> next ; b -> next = bcache . head [ i ]. next ; b -> prev = & bcache . head [ i ]; bcache . head [ i ]. next -> prev = b ; bcache . head [ i ]. next = b ; } release ( & bcache . lock [ i ]); } void bpin ( struct buf * b ) { int i = b -> blockno % NBUCK ; acquire ( & bcache . lock [ i ]); b -> refcnt ++ ; release ( & bcache . lock [ i ]); } void bunpin ( struct buf * b ) { int i = b -> blockno % NBUCK ; acquire ( & bcache . lock [ i ]); b -> refcnt -- ; release ( & bcache . lock [ i ]); }","title":"Buffer cache"},{"location":"6.S081/Lab09-File-System/","text":"Lab9: File System \u00b6 \u672c\u6b21\u5b9e\u9a8c\u5c06\u6dfb\u52a0 large file \u548c symbolic link \u4e24\u4e2a\u7279\u6027\u5230 xv6 \u4e2d\u3002\u9700\u8981\u9605\u8bfb xv6-book \u7b2c\u516b\u7ae0\u7684\u5185\u5bb9\u3002\u5b9e\u9a8c\u4ee3\u7801\u83b7\u53d6\uff1a git fetch git checkout fs make clean Large files \u00b6 \u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u9700\u8981\u589e\u52a0xv6\u652f\u6301\u7684\u6587\u4ef6\u6700\u5927\u5c3a\u5bf8\u3002\u5f53\u524d\u7684xv6\u6587\u4ef6\u9650\u5236\u5728268blocks\uff0c\u6216\u8005\u662f 268BSIZE \u6bd4\u7279\uff08BSIZE \u5728 xv6 \u4e2d\u4e3a 1024)\u3002\u9650\u5236\u662f\u7531 xv6 inode \u5305\u542b 12 \u4e2a\u76f4\u63a5block\uff0c\u4ee5\u53ca\u4e00\u4e2a\u95f4\u63a5block\u3002\u8fd9\u4e2a\u95f4\u63a5block\u6307\u5411256\u4e2a\u76f4\u63a5block\uff0c\u6240\u4ee5\u603b\u5171\u662f \\(12 + 256 = 268\\) blocks\u3002 \u547d\u4ee4 bigfile \u662f\u7528\u6765\u68c0\u6d4b\u8fd9\u4e2a\u5b9e\u73b0\u7684\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a 65803 blocks\u3002 \u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u53cc\u95f4\u63a5block\u7684\u529f\u80fd\u3002\u6211\u4eec\u6700\u7ec8\u53ef\u4ee5\u5b9e\u73b0 \\(256 \\times 256 + 256 + 11\\) blocks\uff08\u539f\u672c\u768412\u4e2a\u76f4\u63a5block\u9700\u8981\u5206\u51fa\u4e00\u4e2a\u7ed9\u53cc\u95f4\u63a5block\uff09\u3002 Preliminaries \u00b6 \u7a0b\u5e8f mkfs \u521b\u5efa\u4e86xv6\u6587\u4ef6\u7cfb\u7edf\u6240\u6709\u9700\u8981\u7684\u78c1\u76d8\u955c\u50cf\uff0c\u786e\u5b9a\u4e86\u6587\u4ef6\u7cfb\u7edf\u4e00\u5171\u6709\u591a\u5c11blocks\u3002\u8fd9\u4e2a\u6570\u503c\u7531 kernel/param.h:FSSIZE \u4e2d\u786e\u5b9a\u3002\u5728 make \u6307\u4ee4\u7684\u8f93\u51fa\u4e2d\uff0c\u6709\u4e00\u6761 nmeta 70 ( boot, super, log blocks 30 inode blocks 13 , bitmap blocks 25 ) blocks 199930 total 200000 \u4ecb\u7ecd\u4e86 mkfs/mkfs \u7ed9\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u4e8670\u4e2a\u57fa\u7840\u5757\uff0c\u7528\u4e8e\u63cf\u8ff0\u6587\u4ef6\u7cfb\u7edf\uff0c\u5269\u4f59199930\u662f\u6570\u636e\u5757\uff0c\u603b\u7528200000\u4e2a\u5757\u3002 \u6bcf\u6b21\u4fee\u6539\u6587\u4ef6\u7cfb\u7edf\uff0c\u9700\u8981 make clean \u6765\u6e05\u9664 fs.img \u3002 What to Look At \u00b6 \u6211\u4eec\u5e94\u8be5\u6ce8\u610f\u5b9a\u4e49\u5728 fs.h \u4e2d\u7684on-disk\u7684inode\u7ed3\u6784 struct dinode \u3002\u6211\u4eec\u5e94\u8be5\u7279\u522b\u6ce8\u610f dinode \u7684\u51e0\u4e2a\u6210\u5458\u53d8\u91cf NDIRECT , NINDIRECT , MAXFILE \u548c addrs[] \u3002 xv6-book \u7684\u56fe8.3\u5c55\u793a\u4e86xv6\u7684\u6807\u51c6inode\u7ed3\u6784\u3002 \u7b2c\u4e8c\u4e2a\u5e94\u8be5\u6ce8\u610f\u7684\u70b9\u662f fs.c \u4e2d\u7684\u51fd\u6570 bmap() \u3002\u786e\u4fdd\u6211\u4eec\u7406\u89e3\u4e86\u5b83\u5728\u505a\u4ec0\u4e48\u3002 bmap() \u5728\u8bfb\u5199\u6587\u4ef6\u65f6\u90fd\u6709\u7528\u3002\u5f53\u5199\u6587\u4ef6\u7684\u65f6\u5019\uff0c bmap() \u5206\u914d\u65b0\u7684blocks\u6765\u4fdd\u5b58\u6587\u4ef6\u5185\u5bb9\uff0c\u540c\u65f6\u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u5206\u914d\u95f4\u63a5block\u6765\u4fdd\u5b58blocks\u7684\u5730\u5740\u3002 bmap() \u5904\u7406\u4e24\u79cd\u5757\u7f16\u53f7\u3002\u53c2\u6570 bn \u662f\u903b\u8f91\u5757\u7f16\u53f7\u2014\u2014\u4e00\u4e2a\u5173\u4e8e\u6587\u4ef6\u5f00\u5934\u7684\u5757\u7f16\u53f7\u3002\u78c1\u76d8\u7684\u5757\u7f16\u53f7\u5728 ip->addrs[] \u4e2d\uff0c\u540c\u65f6\u4e5f\u662f bread() \u7684\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a bmap() \u662f\u5c06\u6587\u4ef6\u7684\u903b\u8f91\u5757\u7f16\u53f7\u6620\u5c04\u5230\u78c1\u76d8\u7684\u5757\u7f16\u53f7\u3002 Your Job \u00b6 \u9898\u76ee\u63cf\u8ff0 \u4fee\u6539 bmap() \u6765\u652f\u6301\u53cc\u95f4\u63a5\u5757\uff0c\u5305\u62ec\u76f4\u63a5\u5757\u548c\u4e00\u4e2a\u95f4\u63a5\u5757\u3002\u56e0\u6b64\u6211\u4eec\u5c06\u53ea\u5269\u4e0b11\u4e2a\u76f4\u63a5\u5757\uff0c\u548c\u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u95f4\u63a5\u5757\u5730\u5740\u7684\u53cc\u95f4\u63a5\u5757\u3002\u6211\u4eec\u4e0d\u80fd\u4fee\u6539on-disk\u7684inode\u7684\u4e2a\u6570\u3002 ip-addrs[] \u7684\u524d11\u4e2a\u9879\u5e94\u8be5\u662f\u76f4\u63a5\u5757\uff1b\u7b2c12\u5757\u5e94\u8be5\u662f\u4e00\u4e2a\u5355\u95f4\u63a5\u5757\uff1b\u7b2c13\u5757\u662f\u4e00\u4e2a\u53cc\u95f4\u63a5\u5757\u3002\u6700\u7ec8\u9700\u8981\u901a\u8fc7\u7a0b\u5e8f bigfile \u6765\u521b\u5efa65803\u4e2a\u5757\u5927\u5c0f\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u901a\u8fc7\u6d4b\u8bd5 usertests \u3002 \u63d0\u793a\uff1a \u786e\u4fdd\u6211\u4eec\u7406\u89e3\u4e86 bmap() \u51fd\u6570\u3002\u5199\u4e0b ip->addrs[] \uff0c\u5355\u95f4\u63a5\u5757\u548c\u53cc\u95f4\u63a5\u5757\u4ee5\u53ca\u7eaf\u5355\u95f4\u63a5\u5757\u7684\u6307\u5411\u56fe\u3002\u786e\u4fdd\u7406\u89e3\u4e86\u53cc\u95f4\u63a5\u5757\u5982\u4f55\u589e\u52a0\u4e86\u6700\u5927\u6587\u4ef6\u7684\u5c3a\u5bf8\u3002 \u60f3\u4e00\u60f3\u5982\u4f55\u901a\u8fc7\u903b\u8f91\u5757\u7f16\u53f7\u6765\u786e\u5b9a\u53cc\u95f4\u63a5\u5757\u7684\u4e0b\u6807\uff0c\u4ee5\u53ca\u5b83\u6307\u5411\u7684\u5355\u95f4\u63a5\u5757\u3002 \u5982\u679c\u4fee\u6539\u4e86 NDIRECT \u7684\u5b9a\u4e49\uff0c\u90a3\u5c31\u8981\u540c\u65f6\u4fee\u6539 file.h \u91cc\u7684\u7ed3\u6784\u4f53 struct inode \u4e2d\u7684 addrs[] \uff0c\u786e\u4fdd struct inode \u548c struct dinode \u7684 addrs[] \u6709\u76f8\u540c\u6570\u91cf\u7684\u5143\u7d20\u3002 \u5982\u679c\u4fee\u6539 NDIRECT \u7684\u5b9a\u4e49\uff0c\u90a3\u4e48\u5e94\u8be5\u8981\u5220\u9664\u5e76\u4e14\u521b\u5efa\u65b0\u7684 fs.img \u3002 \u4e0d\u8981\u5fd8\u8bb0\u5728 bread() \u540e\u8c03\u7528 brelse() \u3002 \u53ea\u5728\u9700\u8981\u7684\u65f6\u5019\u5206\u914d\u95f4\u63a5\u5757\u548c\u53cc\u95f4\u63a5\u5757\u3002 \u786e\u4fdd itrunc \u91ca\u653e\u6587\u4ef6\u7684\u6240\u6709\u5757\uff0c\u5305\u62ec\u53cc\u95f4\u63a5\u5757\u3002 \u53c2\u8003\u7b54\u6848 \u4fee\u6539\u5b8f\u5b9a\u4e49\u6587\u4ef6 kernel/fs.h \u3002 #define NDIRECT 11 #define NINDIRECT (BSIZE / sizeof(uint)) #define NDINDIRECT ((BSIZE / sizeof(uint))*(BSIZE / sizeof(uint))) #define MAXFILE (NDIRECT + NINDIRECT + NDINDIRECT) \u4fee\u6539 fs.h:struct dinode \u548c file.h:struct inode \u4e2d\u7684\u6210\u5458\u53d8\u91cf addr \u3002 uint addrs [ NDIRECT + 2 ]; // Data block addresses \u4fee\u6539\u6587\u4ef6 kernel/fs.c \u4e2d\u7684\u4e24\u4e2a\u51fd\u6570 bmap() \u548c itrunc \u3002 static uint bmap ( struct inode * ip , uint bn ) { uint addr , * a ; struct buf * bp , * bpp ; if ( bn < NDIRECT ){ if (( addr = ip -> addrs [ bn ]) == 0 ) ip -> addrs [ bn ] = addr = balloc ( ip -> dev ); return addr ; } bn -= NDIRECT ; if ( bn < NINDIRECT ){ // Load indirect block, allocating if necessary. if (( addr = ip -> addrs [ NDIRECT ]) == 0 ) ip -> addrs [ NDIRECT ] = addr = balloc ( ip -> dev ); bp = bread ( ip -> dev , addr ); a = ( uint * ) bp -> data ; if (( addr = a [ bn ]) == 0 ){ a [ bn ] = addr = balloc ( ip -> dev ); log_write ( bp ); } brelse ( bp ); return addr ; } bn -= NINDIRECT ; if ( bn < NDINDIRECT ){ // Load double-indirect block, allocating if necessary. if (( addr = ip -> addrs [ NDIRECT + 1 ]) == 0 ) ip -> addrs [ NDIRECT + 1 ] = addr = balloc ( ip -> dev ); bp = bread ( ip -> dev , addr ); a = ( uint * ) bp -> data ; if (( addr = a [ bn / NINDIRECT ]) == 0 ){ a [ bn / NINDIRECT ] = addr = balloc ( ip -> dev ); log_write ( bp ); } bpp = bread ( ip -> dev , addr ); a = ( uint * ) bpp -> data ; if (( addr = a [ bn % NINDIRECT ]) == 0 ){ a [ bn % NINDIRECT ] = addr = balloc ( ip -> dev ); log_write ( bpp ); } brelse ( bpp ); brelse ( bp ); return addr ; } panic ( \"bmap: out of range\" ); } void itrunc ( struct inode * ip ) { int i , j , k ; struct buf * bp , * bpp ; uint * a , * b ; for ( i = 0 ; i < NDIRECT ; i ++ ){ if ( ip -> addrs [ i ]){ bfree ( ip -> dev , ip -> addrs [ i ]); ip -> addrs [ i ] = 0 ; } } if ( ip -> addrs [ NDIRECT ]){ bp = bread ( ip -> dev , ip -> addrs [ NDIRECT ]); a = ( uint * ) bp -> data ; for ( j = 0 ; j < NINDIRECT ; j ++ ){ if ( a [ j ]) bfree ( ip -> dev , a [ j ]); } brelse ( bp ); bfree ( ip -> dev , ip -> addrs [ NDIRECT ]); ip -> addrs [ NDIRECT ] = 0 ; } if ( ip -> addrs [ NDIRECT + 1 ]){ bp = bread ( ip -> dev , ip -> addrs [ NDIRECT + 1 ]); a = ( uint * ) bp -> data ; for ( j = 0 ; j < NINDIRECT ; j ++ ){ if ( a [ j ]){ bpp = bread ( ip -> dev , a [ j ]); b = ( uint * ) bpp -> data ; for ( k = 0 ; k < NINDIRECT ; k ++ ){ if ( b [ k ]) bfree ( ip -> dev , b [ k ]); } brelse ( bpp ); bfree ( ip -> dev , a [ j ]); a [ j ] = 0 ; } } brelse ( bp ); bfree ( ip -> dev , ip -> addrs [ NDIRECT + 1 ]); ip -> addrs [ NDIRECT + 1 ] = 0 ; } ip -> size = 0 ; iupdate ( ip ); } Symbolic Links \u00b6 \u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u589e\u52a0symbolic links\u7684\u529f\u80fd\u3002 Symbolic links\uff08\u6216\u8005\u53eb\u8f6f\u8fde\u63a5\uff09\u901a\u8fc7\u6587\u4ef6\u540d\u6267\u884c\u4e00\u4e2a\u88ab\u94fe\u63a5\u7684\u6587\u4ef6\u3002\u5f53symbolic link\u88ab\u6253\u5f00\uff0c\u5185\u6838\u6cbf\u7740\u94fe\u63a5\u6253\u5f00\u88ab\u6307\u5411\u7684\u6587\u4ef6\u3002Symbolic links \u7c7b\u4f3c\u4e8e\u786c\u94fe\u63a5\uff0c\u4f46\u662f\u786c\u94fe\u63a5\u4ec5\u9650\u4e8e\u6307\u5411\u540c\u4e00\u4e2a\u78c1\u76d8\u4e0a\u7684\u6587\u4ef6\uff0c\u800c\u7b26\u53f7\u94fe\u63a5\u53ef\u4ee5\u8de8\u78c1\u76d8\u8bbe\u5907\u3002\u867d\u7136\u73b0\u5728\u7684xv6\u4e0d\u652f\u6301\u591a\u8bbe\u5907\uff0c\u5b9e\u73b0\u8fd9\u4e2a\u8f6f\u8fde\u63a5\u529f\u80fd\u80fd\u591f\u5f88\u597d\u5730\u7406\u89e3pathname\u67e5\u627e\u529f\u80fd\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002 \u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528 symlink(char *target, char *path) \uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u7531 *target \u786e\u5b9a\u7684\u6587\u4ef6\u3002\u5982\u679c\u9700\u8981\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u67e5\u770b page symlink \u7684man\u9875\u3002\u4e3a\u4e86\u6d4b\u8bd5\uff0c\u9700\u8981\u5728 Makefile \u4e2d\u589e\u52a0 symlinktest \u547d\u4ee4\u5e76\u4e14\u8fd0\u884c\u5b83\u3002\u6700\u540e\u6211\u4eec\u8981\u901a\u8fc7 symlinktest \u548c usertests \u3002 \u521b\u5efa\u7cfb\u7edf\u8c03\u7528 symlink \uff0c\u589e\u52a0\u5165\u53e3\u5230 user/usys.pl \u548c user/user.h \uff0c\u5728 kernel/sysfile.c \u4e2d\u5b9e\u73b0 sys_symlink \uff1b\uff08\u8fd9\u91cc\u6ca1\u6709\u8bb2\u6e05\u695a\uff0c\u8fd8\u6709\u5f88\u591a\u5730\u65b9\u8981\u58f0\u660e\uff0c\u5728\u524d\u9762\u7684\u5b9e\u9a8c\u4e2d\u6709\u9047\u5230\u8fc7\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u53c2\u8003\u7b54\u6848\u3002\uff09 \u5728 kernel/stat.h \u4e2d\u589e\u52a0\u7c7b\u578b T_SYMLINK \uff0c\u6765\u4ee3\u8868\u7b26\u53f7\u94fe\u63a5\uff1b \u5728 kernel/fcntl.h \u4e2d\u589e\u52a0\u6807\u8bb0 O_NOFOLLOW \uff0c\u5b83\u53ef\u4ee5\u548c open \u8fd9\u4e2a\u7cfb\u7edf\u8c03\u7528\u8fde\u7528\u3002\u4f20\u9012\u5230 open \u4e2d\u7684\u53c2\u6570\u9700\u8981\u7528\u6309\u4f4d\u6216\u6765\u4fee\u6539\uff0c\u4e0d\u8981\u8986\u76d6\u5176\u4ed6\u7684\u6807\u8bb0\u3002\u81f3\u6b64\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\u8fc7\u7a0b\u3002 \u53c2\u8003\u7b54\u6848 user/usys.pl \u4e2d\u6dfb\u52a0\u58f0\u660e\uff1a entry(\"symlink\"); \uff1b user/user.h \u4e2d\u6dfb\u52a0\u58f0\u660e\uff1a int symlink(const char*, const char*); \uff1b kernel/syscall.h \u4e2d\u6dfb\u52a0\u58f0\u660e\uff1a #define SYS_symlink 22 \uff1b kernel/syscall.c \u4e2d\u6dfb\u52a0\u58f0\u660e\uff1a extern uint64 sys_symlink(void); \uff1b \u4fee\u6539\u6570\u7ec4 kernel/syscall.c:syscalls \uff1a [SYS_symlink] sys_symlink, \uff1b kernel/sysfile.c \u4e2d\u6dfb\u52a0\u51fd\u6570\u5b9a\u4e49\uff1a uint64 sys_symlink ( void ) { return 0 ; } \u5728 kernel/stat.h \u4e2d\u6dfb\u52a0\u5b9a\u4e49\uff1a #define T_SYMLINK 4 // Symbolic Link \uff1b \u5728 kernel/fcntl.h \u4e2d\u6dfb\u52a0\u5b9a\u4e49\uff1a #define O_NOFOLLOW 0x800 \uff1b \u6700\u540e\u4fee\u6539 Makefile \uff0c\u6765\u5f15\u5165\u7528\u6237\u7a0b\u5e8f symlinktest \uff1a $U/_symlinktest\\ \u3002 \u5b9e\u73b0 symlink(target, path) \u3002 target \u4e0d\u9700\u8981\u5b58\u5728\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5730\u65b9\u6765\u4fdd\u5b58\u7b26\u53f7\u8def\u5f84\u7684\u76ee\u6807\u8def\u5f84\uff0c\u4f8b\u5982\uff1a\u5728inode\u7684\u6570\u636e\u5757\u4e2d\u3002 symlink \u5e94\u8be5\u8fd4\u56de0\u8868\u793a\u6210\u529f\uff0c\u8fd4\u56de-1\u8868\u793a\u5931\u8d25\u3002 \u4fee\u6539 open \u7cfb\u7edf\u8c03\u7528\u6765\u5904\u7406\u6307\u5411\u7b26\u53f7\u94fe\u63a5\u7684\u8def\u5f84\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5c31\u8fd4\u56de-1\u8868\u793a\u5931\u8d25\u3002\u5f53\u8981\u6253\u5f00\u7684\u6587\u4ef6\u4e2d O_NOFOLLOW \u4e3a1\u65f6\uff0c open \u5e94\u8be5\u6253\u5f00\u94fe\u63a5\u800c\u4e0d\u662f\u6307\u5411\u94fe\u63a5\u3002 \u5982\u679c\u88ab\u94fe\u63a5\u7684\u6587\u4ef6\u4e5f\u662f\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\uff0c\u90a3\u4e48\u9700\u8981\u9012\u5f52\u7684\u8c03\u7528\u5230\u975e\u7b26\u53f7\u94fe\u63a5\u7684\u6587\u4ef6\u3002\u5982\u679c\u5f62\u6210\u73af\uff0c\u90a3\u4e48\u5e94\u8be5\u62a5\u9519\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u5b9a\u94fe\u63a5\u6df1\u5ea6\u7684\u9608\u503c\uff0c\u4f8b\u5982\uff1a10\uff0c\u6765\u5b9e\u73b0\u73af\u7684\u68c0\u6d4b\u3002 \u5176\u4ed6\u7cfb\u7edf\u8c03\u7528\uff08\u4f8b\u5982link\u548cunlink\uff09\u4e0d\u80fd\u6307\u5411\u7b26\u53f7\u94fe\u63a5\uff1b\u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528\u63a5\u53d7\u7684\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u5b83\u4eec\u81ea\u5df1\u3002 \u4e0d\u9700\u8981\u5904\u7406\u6587\u4ef6\u5939\u7684\u60c5\u51b5\u3002 \u53c2\u8003\u7b54\u6848 \u5b9e\u73b0 sys_symlink() \u51fd\u6570\u3002\u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u5f88\u591a\u4e8b\u60c5\u90fd\u4e0d\u7528\u8003\u8651\u3002 uint64 sys_symlink ( void ) { char new [ MAXPATH ], target [ MAXPATH ]; struct inode * ip_new ; if ( argstr ( 0 , target , MAXPATH ) < 0 || argstr ( 1 , new , MAXPATH ) < 0 ) return -1 ; begin_op (); ip_new = create ( new , T_SYMLINK , 0 , 0 ); if ( ip_new == 0 ){ end_op (); return -1 ; } // Copy target name to the symbolic inode. if ( writei ( ip_new , 0 , ( uint64 ) target , ip_new -> size , MAXPATH ) < 0 ){ panic ( \"symbolic panic\" ); } iunlockput ( ip_new ); end_op (); return 0 ; } \u4fee\u6539 sys_open() \u51fd\u6570\u3002\u5173\u952e\u662f\u8981\u5b8c\u6210\u5bf9\u9012\u5f52\u7684\u7b26\u53f7\u94fe\u63a5\u7684\u5224\u5b9a\u3002\u6211\u5b9e\u73b0\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u964b\u7684\u7248\u672c\u3002 uint64 sys_open ( void ) { //... begin_op (); if ( omode & O_CREATE ){ //... } else { if (( ip = namei ( path )) == 0 ){ end_op (); return -1 ; } ilock ( ip ); // Symbolic inode if ( ! ( omode & O_NOFOLLOW )){ for ( int i = 0 ; i < 10 ; ++ i ){ if ( ip -> type == T_SYMLINK ){ memset ( path , 0 , MAXPATH ); if ( readi ( ip , 0 , ( uint64 ) path , ip -> size - MAXPATH , MAXPATH ) < 0 ){ iunlockput ( ip ); end_op (); return -1 ; } iunlockput ( ip ); if (( ip = namei ( path )) == 0 ){ end_op (); return -1 ; } ilock ( ip ); } else { break ; } } if ( ip -> type == T_SYMLINK ){ iunlockput ( ip ); end_op (); return -1 ; } } // Directory if ( ip -> type == T_DIR && omode != O_RDONLY ){ iunlockput ( ip ); end_op (); return -1 ; } } //... }","title":"Lab09 File System"},{"location":"6.S081/Lab09-File-System/#lab9-file-system","text":"\u672c\u6b21\u5b9e\u9a8c\u5c06\u6dfb\u52a0 large file \u548c symbolic link \u4e24\u4e2a\u7279\u6027\u5230 xv6 \u4e2d\u3002\u9700\u8981\u9605\u8bfb xv6-book \u7b2c\u516b\u7ae0\u7684\u5185\u5bb9\u3002\u5b9e\u9a8c\u4ee3\u7801\u83b7\u53d6\uff1a git fetch git checkout fs make clean","title":"Lab9: File System"},{"location":"6.S081/Lab09-File-System/#large-files","text":"\u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u9700\u8981\u589e\u52a0xv6\u652f\u6301\u7684\u6587\u4ef6\u6700\u5927\u5c3a\u5bf8\u3002\u5f53\u524d\u7684xv6\u6587\u4ef6\u9650\u5236\u5728268blocks\uff0c\u6216\u8005\u662f 268BSIZE \u6bd4\u7279\uff08BSIZE \u5728 xv6 \u4e2d\u4e3a 1024)\u3002\u9650\u5236\u662f\u7531 xv6 inode \u5305\u542b 12 \u4e2a\u76f4\u63a5block\uff0c\u4ee5\u53ca\u4e00\u4e2a\u95f4\u63a5block\u3002\u8fd9\u4e2a\u95f4\u63a5block\u6307\u5411256\u4e2a\u76f4\u63a5block\uff0c\u6240\u4ee5\u603b\u5171\u662f \\(12 + 256 = 268\\) blocks\u3002 \u547d\u4ee4 bigfile \u662f\u7528\u6765\u68c0\u6d4b\u8fd9\u4e2a\u5b9e\u73b0\u7684\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a 65803 blocks\u3002 \u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u53cc\u95f4\u63a5block\u7684\u529f\u80fd\u3002\u6211\u4eec\u6700\u7ec8\u53ef\u4ee5\u5b9e\u73b0 \\(256 \\times 256 + 256 + 11\\) blocks\uff08\u539f\u672c\u768412\u4e2a\u76f4\u63a5block\u9700\u8981\u5206\u51fa\u4e00\u4e2a\u7ed9\u53cc\u95f4\u63a5block\uff09\u3002","title":"Large files"},{"location":"6.S081/Lab09-File-System/#preliminaries","text":"\u7a0b\u5e8f mkfs \u521b\u5efa\u4e86xv6\u6587\u4ef6\u7cfb\u7edf\u6240\u6709\u9700\u8981\u7684\u78c1\u76d8\u955c\u50cf\uff0c\u786e\u5b9a\u4e86\u6587\u4ef6\u7cfb\u7edf\u4e00\u5171\u6709\u591a\u5c11blocks\u3002\u8fd9\u4e2a\u6570\u503c\u7531 kernel/param.h:FSSIZE \u4e2d\u786e\u5b9a\u3002\u5728 make \u6307\u4ee4\u7684\u8f93\u51fa\u4e2d\uff0c\u6709\u4e00\u6761 nmeta 70 ( boot, super, log blocks 30 inode blocks 13 , bitmap blocks 25 ) blocks 199930 total 200000 \u4ecb\u7ecd\u4e86 mkfs/mkfs \u7ed9\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u4e8670\u4e2a\u57fa\u7840\u5757\uff0c\u7528\u4e8e\u63cf\u8ff0\u6587\u4ef6\u7cfb\u7edf\uff0c\u5269\u4f59199930\u662f\u6570\u636e\u5757\uff0c\u603b\u7528200000\u4e2a\u5757\u3002 \u6bcf\u6b21\u4fee\u6539\u6587\u4ef6\u7cfb\u7edf\uff0c\u9700\u8981 make clean \u6765\u6e05\u9664 fs.img \u3002","title":"Preliminaries"},{"location":"6.S081/Lab09-File-System/#what-to-look-at","text":"\u6211\u4eec\u5e94\u8be5\u6ce8\u610f\u5b9a\u4e49\u5728 fs.h \u4e2d\u7684on-disk\u7684inode\u7ed3\u6784 struct dinode \u3002\u6211\u4eec\u5e94\u8be5\u7279\u522b\u6ce8\u610f dinode \u7684\u51e0\u4e2a\u6210\u5458\u53d8\u91cf NDIRECT , NINDIRECT , MAXFILE \u548c addrs[] \u3002 xv6-book \u7684\u56fe8.3\u5c55\u793a\u4e86xv6\u7684\u6807\u51c6inode\u7ed3\u6784\u3002 \u7b2c\u4e8c\u4e2a\u5e94\u8be5\u6ce8\u610f\u7684\u70b9\u662f fs.c \u4e2d\u7684\u51fd\u6570 bmap() \u3002\u786e\u4fdd\u6211\u4eec\u7406\u89e3\u4e86\u5b83\u5728\u505a\u4ec0\u4e48\u3002 bmap() \u5728\u8bfb\u5199\u6587\u4ef6\u65f6\u90fd\u6709\u7528\u3002\u5f53\u5199\u6587\u4ef6\u7684\u65f6\u5019\uff0c bmap() \u5206\u914d\u65b0\u7684blocks\u6765\u4fdd\u5b58\u6587\u4ef6\u5185\u5bb9\uff0c\u540c\u65f6\u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u5206\u914d\u95f4\u63a5block\u6765\u4fdd\u5b58blocks\u7684\u5730\u5740\u3002 bmap() \u5904\u7406\u4e24\u79cd\u5757\u7f16\u53f7\u3002\u53c2\u6570 bn \u662f\u903b\u8f91\u5757\u7f16\u53f7\u2014\u2014\u4e00\u4e2a\u5173\u4e8e\u6587\u4ef6\u5f00\u5934\u7684\u5757\u7f16\u53f7\u3002\u78c1\u76d8\u7684\u5757\u7f16\u53f7\u5728 ip->addrs[] \u4e2d\uff0c\u540c\u65f6\u4e5f\u662f bread() \u7684\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a bmap() \u662f\u5c06\u6587\u4ef6\u7684\u903b\u8f91\u5757\u7f16\u53f7\u6620\u5c04\u5230\u78c1\u76d8\u7684\u5757\u7f16\u53f7\u3002","title":"What to Look At"},{"location":"6.S081/Lab09-File-System/#your-job","text":"\u9898\u76ee\u63cf\u8ff0 \u4fee\u6539 bmap() \u6765\u652f\u6301\u53cc\u95f4\u63a5\u5757\uff0c\u5305\u62ec\u76f4\u63a5\u5757\u548c\u4e00\u4e2a\u95f4\u63a5\u5757\u3002\u56e0\u6b64\u6211\u4eec\u5c06\u53ea\u5269\u4e0b11\u4e2a\u76f4\u63a5\u5757\uff0c\u548c\u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u95f4\u63a5\u5757\u5730\u5740\u7684\u53cc\u95f4\u63a5\u5757\u3002\u6211\u4eec\u4e0d\u80fd\u4fee\u6539on-disk\u7684inode\u7684\u4e2a\u6570\u3002 ip-addrs[] \u7684\u524d11\u4e2a\u9879\u5e94\u8be5\u662f\u76f4\u63a5\u5757\uff1b\u7b2c12\u5757\u5e94\u8be5\u662f\u4e00\u4e2a\u5355\u95f4\u63a5\u5757\uff1b\u7b2c13\u5757\u662f\u4e00\u4e2a\u53cc\u95f4\u63a5\u5757\u3002\u6700\u7ec8\u9700\u8981\u901a\u8fc7\u7a0b\u5e8f bigfile \u6765\u521b\u5efa65803\u4e2a\u5757\u5927\u5c0f\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u901a\u8fc7\u6d4b\u8bd5 usertests \u3002 \u63d0\u793a\uff1a \u786e\u4fdd\u6211\u4eec\u7406\u89e3\u4e86 bmap() \u51fd\u6570\u3002\u5199\u4e0b ip->addrs[] \uff0c\u5355\u95f4\u63a5\u5757\u548c\u53cc\u95f4\u63a5\u5757\u4ee5\u53ca\u7eaf\u5355\u95f4\u63a5\u5757\u7684\u6307\u5411\u56fe\u3002\u786e\u4fdd\u7406\u89e3\u4e86\u53cc\u95f4\u63a5\u5757\u5982\u4f55\u589e\u52a0\u4e86\u6700\u5927\u6587\u4ef6\u7684\u5c3a\u5bf8\u3002 \u60f3\u4e00\u60f3\u5982\u4f55\u901a\u8fc7\u903b\u8f91\u5757\u7f16\u53f7\u6765\u786e\u5b9a\u53cc\u95f4\u63a5\u5757\u7684\u4e0b\u6807\uff0c\u4ee5\u53ca\u5b83\u6307\u5411\u7684\u5355\u95f4\u63a5\u5757\u3002 \u5982\u679c\u4fee\u6539\u4e86 NDIRECT \u7684\u5b9a\u4e49\uff0c\u90a3\u5c31\u8981\u540c\u65f6\u4fee\u6539 file.h \u91cc\u7684\u7ed3\u6784\u4f53 struct inode \u4e2d\u7684 addrs[] \uff0c\u786e\u4fdd struct inode \u548c struct dinode \u7684 addrs[] \u6709\u76f8\u540c\u6570\u91cf\u7684\u5143\u7d20\u3002 \u5982\u679c\u4fee\u6539 NDIRECT \u7684\u5b9a\u4e49\uff0c\u90a3\u4e48\u5e94\u8be5\u8981\u5220\u9664\u5e76\u4e14\u521b\u5efa\u65b0\u7684 fs.img \u3002 \u4e0d\u8981\u5fd8\u8bb0\u5728 bread() \u540e\u8c03\u7528 brelse() \u3002 \u53ea\u5728\u9700\u8981\u7684\u65f6\u5019\u5206\u914d\u95f4\u63a5\u5757\u548c\u53cc\u95f4\u63a5\u5757\u3002 \u786e\u4fdd itrunc \u91ca\u653e\u6587\u4ef6\u7684\u6240\u6709\u5757\uff0c\u5305\u62ec\u53cc\u95f4\u63a5\u5757\u3002 \u53c2\u8003\u7b54\u6848 \u4fee\u6539\u5b8f\u5b9a\u4e49\u6587\u4ef6 kernel/fs.h \u3002 #define NDIRECT 11 #define NINDIRECT (BSIZE / sizeof(uint)) #define NDINDIRECT ((BSIZE / sizeof(uint))*(BSIZE / sizeof(uint))) #define MAXFILE (NDIRECT + NINDIRECT + NDINDIRECT) \u4fee\u6539 fs.h:struct dinode \u548c file.h:struct inode \u4e2d\u7684\u6210\u5458\u53d8\u91cf addr \u3002 uint addrs [ NDIRECT + 2 ]; // Data block addresses \u4fee\u6539\u6587\u4ef6 kernel/fs.c \u4e2d\u7684\u4e24\u4e2a\u51fd\u6570 bmap() \u548c itrunc \u3002 static uint bmap ( struct inode * ip , uint bn ) { uint addr , * a ; struct buf * bp , * bpp ; if ( bn < NDIRECT ){ if (( addr = ip -> addrs [ bn ]) == 0 ) ip -> addrs [ bn ] = addr = balloc ( ip -> dev ); return addr ; } bn -= NDIRECT ; if ( bn < NINDIRECT ){ // Load indirect block, allocating if necessary. if (( addr = ip -> addrs [ NDIRECT ]) == 0 ) ip -> addrs [ NDIRECT ] = addr = balloc ( ip -> dev ); bp = bread ( ip -> dev , addr ); a = ( uint * ) bp -> data ; if (( addr = a [ bn ]) == 0 ){ a [ bn ] = addr = balloc ( ip -> dev ); log_write ( bp ); } brelse ( bp ); return addr ; } bn -= NINDIRECT ; if ( bn < NDINDIRECT ){ // Load double-indirect block, allocating if necessary. if (( addr = ip -> addrs [ NDIRECT + 1 ]) == 0 ) ip -> addrs [ NDIRECT + 1 ] = addr = balloc ( ip -> dev ); bp = bread ( ip -> dev , addr ); a = ( uint * ) bp -> data ; if (( addr = a [ bn / NINDIRECT ]) == 0 ){ a [ bn / NINDIRECT ] = addr = balloc ( ip -> dev ); log_write ( bp ); } bpp = bread ( ip -> dev , addr ); a = ( uint * ) bpp -> data ; if (( addr = a [ bn % NINDIRECT ]) == 0 ){ a [ bn % NINDIRECT ] = addr = balloc ( ip -> dev ); log_write ( bpp ); } brelse ( bpp ); brelse ( bp ); return addr ; } panic ( \"bmap: out of range\" ); } void itrunc ( struct inode * ip ) { int i , j , k ; struct buf * bp , * bpp ; uint * a , * b ; for ( i = 0 ; i < NDIRECT ; i ++ ){ if ( ip -> addrs [ i ]){ bfree ( ip -> dev , ip -> addrs [ i ]); ip -> addrs [ i ] = 0 ; } } if ( ip -> addrs [ NDIRECT ]){ bp = bread ( ip -> dev , ip -> addrs [ NDIRECT ]); a = ( uint * ) bp -> data ; for ( j = 0 ; j < NINDIRECT ; j ++ ){ if ( a [ j ]) bfree ( ip -> dev , a [ j ]); } brelse ( bp ); bfree ( ip -> dev , ip -> addrs [ NDIRECT ]); ip -> addrs [ NDIRECT ] = 0 ; } if ( ip -> addrs [ NDIRECT + 1 ]){ bp = bread ( ip -> dev , ip -> addrs [ NDIRECT + 1 ]); a = ( uint * ) bp -> data ; for ( j = 0 ; j < NINDIRECT ; j ++ ){ if ( a [ j ]){ bpp = bread ( ip -> dev , a [ j ]); b = ( uint * ) bpp -> data ; for ( k = 0 ; k < NINDIRECT ; k ++ ){ if ( b [ k ]) bfree ( ip -> dev , b [ k ]); } brelse ( bpp ); bfree ( ip -> dev , a [ j ]); a [ j ] = 0 ; } } brelse ( bp ); bfree ( ip -> dev , ip -> addrs [ NDIRECT + 1 ]); ip -> addrs [ NDIRECT + 1 ] = 0 ; } ip -> size = 0 ; iupdate ( ip ); }","title":"Your Job"},{"location":"6.S081/Lab09-File-System/#symbolic-links","text":"\u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u589e\u52a0symbolic links\u7684\u529f\u80fd\u3002 Symbolic links\uff08\u6216\u8005\u53eb\u8f6f\u8fde\u63a5\uff09\u901a\u8fc7\u6587\u4ef6\u540d\u6267\u884c\u4e00\u4e2a\u88ab\u94fe\u63a5\u7684\u6587\u4ef6\u3002\u5f53symbolic link\u88ab\u6253\u5f00\uff0c\u5185\u6838\u6cbf\u7740\u94fe\u63a5\u6253\u5f00\u88ab\u6307\u5411\u7684\u6587\u4ef6\u3002Symbolic links \u7c7b\u4f3c\u4e8e\u786c\u94fe\u63a5\uff0c\u4f46\u662f\u786c\u94fe\u63a5\u4ec5\u9650\u4e8e\u6307\u5411\u540c\u4e00\u4e2a\u78c1\u76d8\u4e0a\u7684\u6587\u4ef6\uff0c\u800c\u7b26\u53f7\u94fe\u63a5\u53ef\u4ee5\u8de8\u78c1\u76d8\u8bbe\u5907\u3002\u867d\u7136\u73b0\u5728\u7684xv6\u4e0d\u652f\u6301\u591a\u8bbe\u5907\uff0c\u5b9e\u73b0\u8fd9\u4e2a\u8f6f\u8fde\u63a5\u529f\u80fd\u80fd\u591f\u5f88\u597d\u5730\u7406\u89e3pathname\u67e5\u627e\u529f\u80fd\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002 \u9898\u76ee\u63cf\u8ff0 \u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528 symlink(char *target, char *path) \uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u7531 *target \u786e\u5b9a\u7684\u6587\u4ef6\u3002\u5982\u679c\u9700\u8981\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u67e5\u770b page symlink \u7684man\u9875\u3002\u4e3a\u4e86\u6d4b\u8bd5\uff0c\u9700\u8981\u5728 Makefile \u4e2d\u589e\u52a0 symlinktest \u547d\u4ee4\u5e76\u4e14\u8fd0\u884c\u5b83\u3002\u6700\u540e\u6211\u4eec\u8981\u901a\u8fc7 symlinktest \u548c usertests \u3002 \u521b\u5efa\u7cfb\u7edf\u8c03\u7528 symlink \uff0c\u589e\u52a0\u5165\u53e3\u5230 user/usys.pl \u548c user/user.h \uff0c\u5728 kernel/sysfile.c \u4e2d\u5b9e\u73b0 sys_symlink \uff1b\uff08\u8fd9\u91cc\u6ca1\u6709\u8bb2\u6e05\u695a\uff0c\u8fd8\u6709\u5f88\u591a\u5730\u65b9\u8981\u58f0\u660e\uff0c\u5728\u524d\u9762\u7684\u5b9e\u9a8c\u4e2d\u6709\u9047\u5230\u8fc7\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u53c2\u8003\u7b54\u6848\u3002\uff09 \u5728 kernel/stat.h \u4e2d\u589e\u52a0\u7c7b\u578b T_SYMLINK \uff0c\u6765\u4ee3\u8868\u7b26\u53f7\u94fe\u63a5\uff1b \u5728 kernel/fcntl.h \u4e2d\u589e\u52a0\u6807\u8bb0 O_NOFOLLOW \uff0c\u5b83\u53ef\u4ee5\u548c open \u8fd9\u4e2a\u7cfb\u7edf\u8c03\u7528\u8fde\u7528\u3002\u4f20\u9012\u5230 open \u4e2d\u7684\u53c2\u6570\u9700\u8981\u7528\u6309\u4f4d\u6216\u6765\u4fee\u6539\uff0c\u4e0d\u8981\u8986\u76d6\u5176\u4ed6\u7684\u6807\u8bb0\u3002\u81f3\u6b64\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\u8fc7\u7a0b\u3002 \u53c2\u8003\u7b54\u6848 user/usys.pl \u4e2d\u6dfb\u52a0\u58f0\u660e\uff1a entry(\"symlink\"); \uff1b user/user.h \u4e2d\u6dfb\u52a0\u58f0\u660e\uff1a int symlink(const char*, const char*); \uff1b kernel/syscall.h \u4e2d\u6dfb\u52a0\u58f0\u660e\uff1a #define SYS_symlink 22 \uff1b kernel/syscall.c \u4e2d\u6dfb\u52a0\u58f0\u660e\uff1a extern uint64 sys_symlink(void); \uff1b \u4fee\u6539\u6570\u7ec4 kernel/syscall.c:syscalls \uff1a [SYS_symlink] sys_symlink, \uff1b kernel/sysfile.c \u4e2d\u6dfb\u52a0\u51fd\u6570\u5b9a\u4e49\uff1a uint64 sys_symlink ( void ) { return 0 ; } \u5728 kernel/stat.h \u4e2d\u6dfb\u52a0\u5b9a\u4e49\uff1a #define T_SYMLINK 4 // Symbolic Link \uff1b \u5728 kernel/fcntl.h \u4e2d\u6dfb\u52a0\u5b9a\u4e49\uff1a #define O_NOFOLLOW 0x800 \uff1b \u6700\u540e\u4fee\u6539 Makefile \uff0c\u6765\u5f15\u5165\u7528\u6237\u7a0b\u5e8f symlinktest \uff1a $U/_symlinktest\\ \u3002 \u5b9e\u73b0 symlink(target, path) \u3002 target \u4e0d\u9700\u8981\u5b58\u5728\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5730\u65b9\u6765\u4fdd\u5b58\u7b26\u53f7\u8def\u5f84\u7684\u76ee\u6807\u8def\u5f84\uff0c\u4f8b\u5982\uff1a\u5728inode\u7684\u6570\u636e\u5757\u4e2d\u3002 symlink \u5e94\u8be5\u8fd4\u56de0\u8868\u793a\u6210\u529f\uff0c\u8fd4\u56de-1\u8868\u793a\u5931\u8d25\u3002 \u4fee\u6539 open \u7cfb\u7edf\u8c03\u7528\u6765\u5904\u7406\u6307\u5411\u7b26\u53f7\u94fe\u63a5\u7684\u8def\u5f84\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5c31\u8fd4\u56de-1\u8868\u793a\u5931\u8d25\u3002\u5f53\u8981\u6253\u5f00\u7684\u6587\u4ef6\u4e2d O_NOFOLLOW \u4e3a1\u65f6\uff0c open \u5e94\u8be5\u6253\u5f00\u94fe\u63a5\u800c\u4e0d\u662f\u6307\u5411\u94fe\u63a5\u3002 \u5982\u679c\u88ab\u94fe\u63a5\u7684\u6587\u4ef6\u4e5f\u662f\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\uff0c\u90a3\u4e48\u9700\u8981\u9012\u5f52\u7684\u8c03\u7528\u5230\u975e\u7b26\u53f7\u94fe\u63a5\u7684\u6587\u4ef6\u3002\u5982\u679c\u5f62\u6210\u73af\uff0c\u90a3\u4e48\u5e94\u8be5\u62a5\u9519\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u5b9a\u94fe\u63a5\u6df1\u5ea6\u7684\u9608\u503c\uff0c\u4f8b\u5982\uff1a10\uff0c\u6765\u5b9e\u73b0\u73af\u7684\u68c0\u6d4b\u3002 \u5176\u4ed6\u7cfb\u7edf\u8c03\u7528\uff08\u4f8b\u5982link\u548cunlink\uff09\u4e0d\u80fd\u6307\u5411\u7b26\u53f7\u94fe\u63a5\uff1b\u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528\u63a5\u53d7\u7684\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u5b83\u4eec\u81ea\u5df1\u3002 \u4e0d\u9700\u8981\u5904\u7406\u6587\u4ef6\u5939\u7684\u60c5\u51b5\u3002 \u53c2\u8003\u7b54\u6848 \u5b9e\u73b0 sys_symlink() \u51fd\u6570\u3002\u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u5f88\u591a\u4e8b\u60c5\u90fd\u4e0d\u7528\u8003\u8651\u3002 uint64 sys_symlink ( void ) { char new [ MAXPATH ], target [ MAXPATH ]; struct inode * ip_new ; if ( argstr ( 0 , target , MAXPATH ) < 0 || argstr ( 1 , new , MAXPATH ) < 0 ) return -1 ; begin_op (); ip_new = create ( new , T_SYMLINK , 0 , 0 ); if ( ip_new == 0 ){ end_op (); return -1 ; } // Copy target name to the symbolic inode. if ( writei ( ip_new , 0 , ( uint64 ) target , ip_new -> size , MAXPATH ) < 0 ){ panic ( \"symbolic panic\" ); } iunlockput ( ip_new ); end_op (); return 0 ; } \u4fee\u6539 sys_open() \u51fd\u6570\u3002\u5173\u952e\u662f\u8981\u5b8c\u6210\u5bf9\u9012\u5f52\u7684\u7b26\u53f7\u94fe\u63a5\u7684\u5224\u5b9a\u3002\u6211\u5b9e\u73b0\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u964b\u7684\u7248\u672c\u3002 uint64 sys_open ( void ) { //... begin_op (); if ( omode & O_CREATE ){ //... } else { if (( ip = namei ( path )) == 0 ){ end_op (); return -1 ; } ilock ( ip ); // Symbolic inode if ( ! ( omode & O_NOFOLLOW )){ for ( int i = 0 ; i < 10 ; ++ i ){ if ( ip -> type == T_SYMLINK ){ memset ( path , 0 , MAXPATH ); if ( readi ( ip , 0 , ( uint64 ) path , ip -> size - MAXPATH , MAXPATH ) < 0 ){ iunlockput ( ip ); end_op (); return -1 ; } iunlockput ( ip ); if (( ip = namei ( path )) == 0 ){ end_op (); return -1 ; } ilock ( ip ); } else { break ; } } if ( ip -> type == T_SYMLINK ){ iunlockput ( ip ); end_op (); return -1 ; } } // Directory if ( ip -> type == T_DIR && omode != O_RDONLY ){ iunlockput ( ip ); end_op (); return -1 ; } } //... }","title":"Symbolic Links"},{"location":"6.S081/Lab10-mmap/","text":"Lab10: mmap \u00b6 \u7cfb\u7edf\u8c03\u7528 mmap \u548c munmap \u5141\u8bb8UNIX\u7a0b\u5e8f\u5bf9\u5b83\u4eec\u7684\u5730\u5740\u7a7a\u95f4\u6267\u884c\u66f4\u7cbe\u81f4\u7684\u63a7\u5236\u3002\u5b83\u4eec\u53ef\u4ee5\u88ab\u7528\u6765\u5728\u8fdb\u7a0b\u95f4\u5171\u4eab\u5185\u5b58\uff0c\u5c06\u6587\u4ef6\u6620\u5c04\u5728\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u4ee5\u53ca\u4f5c\u4e3a\u7528\u6237\u7ea7\u522b\u9875\u9519\u8bef\u673a\u5236\u7684\u4e00\u90e8\u5206\uff0c\u4f8b\u5982\u516c\u5f00\u8bfe\u4e2d\u8ba8\u8bba\u7684\u5783\u573e\u56de\u6536\u7b97\u6cd5\u3002\u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0 mmap \u548c munmap \u5230xv6\u4e2d\uff0c\u4e3b\u8981\u662f\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u3002 \u5b9e\u9a8c\u4ee3\u7801\u5728 mmap \u5206\u652f\u4e0a\u3002 make clean git fetch git checkout mmap \u5e2e\u52a9\u6587\u6863\uff08 man 2 mmap \uff09\u8bf4\u660e\u4e86 mmap \u7684\u5177\u4f53\u4f7f\u7528\u65b9\u5f0f\u3002\u73b0\u5728\u4eba\u4eec\u4f7f\u7528\u7684 mmap \u7684\u58f0\u660e\u5982\u4e0b\uff1a void * mmap ( void * addr , size_t length , int prot , int flags , int fd , off_t offset ); mmap \u6709\u975e\u5e38\u591a\u7684\u8c03\u7528\u65b9\u5f0f\uff0c\u672c\u6b21\u5b9e\u9a8c\u53ea\u9700\u8981\u5b9e\u73b0\u90e8\u5206\u529f\u80fd\u5373\u53ef\uff0c\u5177\u4f53\u6d89\u53ca\u7684\u662f\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u7684\u529f\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a addr \u59cb\u7ec8\u672a0\uff0c\u4e5f\u5c31\u662f\u8bf4\u5185\u6838\u5e94\u8be5\u51b3\u5b9a\u6587\u4ef6\u5e94\u8be5\u6620\u5c04\u5230\u865a\u62df\u5730\u5740\u7684\u4f4d\u7f6e\u3002 mmap \u5728\u6267\u884c\u6210\u529f\u540e\u8fd4\u56de\u8be5\u865a\u62df\u5730\u5740\uff0c\u5931\u8d25\u65f6\u8fd4\u56de 0xffffffffffffffff \u3002 length \u662f\u6620\u5c04\u7684\u6bd4\u7279\u6570\uff0c\u5b83\u548c\u6587\u4ef6\u7684\u957f\u5ea6\u4e0d\u4e00\u5b9a\u76f8\u540c\u3002 prot \u8868\u793a\u88ab\u6620\u5c04\u7684\u5185\u5b58\u7684\u6743\u9650\uff0c\u9009\u9879\u6709\uff1a\u662f\u5426\u53ef\u8bfb\u3001\u662f\u5426\u53ef\u5199\u3001\u662f\u5426\u53ef\u6267\u884c\uff0c\u5bf9\u5e94\u7684\u5b8f\u6709 PROT_READ \u548c PROT_WRITE \u6216\u8005\u90fd\u6709\u3002 flag \u53ef\u4ee5\u662f MAP_SHARED (\u8868\u793a\u5185\u5b58\u7684\u4fee\u6539\u9700\u8981\u540c\u6b65\u5230\u6587\u4ef6\u4e2d)\u6216\u8005 MAP_PRIVATE (\u4e0d\u540c\u6b65)\uff0c\u5176\u4ed6\u4f4d\u7684\u529f\u80fd\u4e0d\u9700\u8981\u5b9e\u73b0\u3002 fd \u662f\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a offset \u59cb\u7ec8\u4e3a0\u3002 \u8fdb\u7a0b\u6620\u5c04\u76f8\u540c\u7684 MAP_SHARED \u6587\u4ef6\u5230\u4e0d\u540c\u7684\u7269\u7406\u9875\u662f\u53ef\u4ee5\u7684\u3002 munmap(addr, length) \u5e94\u8be5\u79fb\u9664 mmap \u6620\u5c04\u7684\u5730\u5740\u3002\u5982\u679c\u8fdb\u7a0b\u4fee\u6539\u4e86\u5c5e\u6027\u4e3a MAP_SHARED \u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u6240\u505a\u7684\u4fee\u6539\u9700\u8981\u66f4\u65b0\u5230\u6587\u4ef6\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6620\u5c04\u7684\u533a\u57df\u53ea\u4f1a\u5728\u5f00\u5934\u3001\u7ed3\u5c3e\u6216\u8005\u6574\u4e2a\u533a\u57df\uff0c\u4e0d\u4f1a\u6709\u6d1e\u3002 \u9898\u76ee\u63cf\u8ff0 \u6211\u4eec\u9700\u8981\u5b9e\u73b0 mmap \u548c munmap \u8db3\u591f\u591a\u7684\u529f\u80fd\u6765\u901a\u8fc7 mmaptest \u548c usertests \u8fd9\u4e24\u4e2a\u7a0b\u5e8f\u3002 \u63d0\u793a\uff1a \u9996\u5148\u6dfb\u52a0 _mmaptest \u5230 UPROGS \uff0c\u7136\u540e\u6dfb\u52a0 mmap \u548c munmap \u7cfb\u7edf\u8c03\u7528\u7684\u5916\u58f3\uff0c\u5b9e\u73b0 user/mmaptest.c \u7f16\u8bd1\u901a\u8fc7\u3002(\u5728 kernel/fcntl.h \u4e2d\u5df2\u7ecf\u6709\u4e00\u4e9b\u5b8f\u5b9a\u4e49 PROT_READ \u3002) \u53c2\u8003\u7b54\u6848 Makefile \u4e2d\u6dfb\u52a0\uff1a $U/_mmaptest\\ \u3002 user/user.h \u4e2d\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528\u7684\u58f0\u660e\uff1a void * mmap ( void * , uint , int , int , int , uint ); int munmap ( void * , uint ); \u5728 user/usys.pl \u4e2d\u6dfb\u52a0\uff1a entry ( \"mmap\" ); entry ( \"munmap\" ); \u5728 kernel/syscall.h \u4e2d\u6dfb\u52a0\uff1a #define SYS_mmap 22 #define SYS_munmap 23 \u5728 kernel/syscall.c \u4e2d\u6dfb\u52a0\uff1a extern uint64 sys_mmap ( void ); extern uint64 sys_munmap ( void ); static uint64 ( * syscalls [])( void ) = { //... [ SYS_mmap ] sys_mmap , [ SYS_munmap ] sys_munmap , }; \u5728 kernel/sysfile.c \u4e2d\u6dfb\u52a0\uff1a uint64 sys_mmap ( void ) { return 0 ; } uint64 sys_munmap ( void ) { return 0 ; } \u5ef6\u8fdf\u6dfb\u52a0\u9875\u8868\uff0c\u54cd\u5e94\u9875\u9519\u8bef\u3002 mmap \u4e0d\u9700\u8981\u5206\u914d\u7269\u7406\u5185\u5b58\u4e5f\u4ee5\u53ca\u8bfb\u6587\u4ef6\u3002\u5728 usertrap \u7684\u9875\u9519\u8bef\u5904\u7406\u4ee3\u7801\u4e2d\u5b9e\u73b0 lazy page \u7684\u4ee3\u7801\u3002\u5b9e\u73b0 lazy page \u53ef\u4ee5\u8ba9 mmap \u5904\u7406\u5927\u6587\u4ef6\u5feb\u4e00\u4e9b\uff0c\u5e76\u4e14\u53ef\u4ee5\u5904\u7406\u5927\u4e8e\u5185\u5b58\u5927\u5c0f\u7684\u6587\u4ef6\u3002 \u53c2\u8003\u7b54\u6848 \u53ef\u4ee5\u53c2\u8003 Lab05 Lazy Allocation \u3002 \u4fdd\u6301\u8ffd\u8e2a mmap \u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u6620\u5c04\u7684\u5185\u5bb9\u3002\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 VMA (virtual memory area)\uff0c\u8bb0\u5f55 mmap \u521b\u5efa\u7684\u865a\u62df\u5185\u5b58\u7684\u5730\u5740\u3001\u957f\u5ea6\u3001\u6743\u9650\u548c\u6587\u4ef6\u7b49\u4fe1\u606f\u3002\u56e0\u4e3a\u5185\u6838\u6ca1\u6709\u5185\u5b58\u5206\u914d\u5668\uff0c\u6240\u4ee5\u53ef\u4ee5\u58f0\u660e\u56fa\u5b9a\u957f\u5ea6\u7684\u6570\u7ec4\u7ed9 VMAs \u5e76\u4e14\u4ece\u6570\u7ec4\u4e2d\u5206\u914d\u9700\u8981\u7684\u7a7a\u95f4\u3002\u4f8b\u598216\u7684\u957f\u5ea6\u5df2\u7ecf\u8db3\u591f\u3002 \u5b9e\u73b0 mmap \uff1a\u67e5\u627e\u8fdb\u7a0b\u5730\u5740\u672a\u4f7f\u7528\u7684\u90e8\u5206\u6765\u6620\u5c04\u6587\u4ef6\uff0c\u6dfb\u52a0VMA\u5230\u8fdb\u7a0b\u7684\u6620\u5c04\u533a\u57df\u8868\u4e2d\u3002VMA\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u6307\u5411\u88ab\u6620\u5c04\u6587\u4ef6\u7684\u7ed3\u6784\u4f53struct file\u7684\u6307\u9488\u3002 mmap \u5e94\u8be5\u8981\u589e\u52a0\u6587\u4ef6\u7684 reference \u6570\u91cf\uff0c\u4fdd\u8bc1\u6587\u4ef6\u5173\u95ed\u7684\u65f6\u5019\u7ed3\u6784\u4f53\u4e0d\u4f1a\u6d88\u5931\u3002\u8fd0\u884c mmaptest \uff1a\u7b2c\u4e00\u4e2a mmap \u6d4b\u8bd5\u5e94\u8be5\u80fd\u6210\u529f\uff0c\u4f46\u662f\u540e\u9762\u7684\u9875\u8868\u9519\u8bef\u8fd8\u4e0d\u80fd\u5904\u7406\u3002 \u6dfb\u52a0\u5904\u7406\u8bbf\u95ee mmap \u6620\u5c04\u7684\u9875\u5f15\u8d77\u9875\u9519\u8bef\u7684\u4ee3\u7801\uff0c\u7528\u6765\u5206\u914d\u7269\u7406\u5185\u5b58\u3002\u8bfb\u51654096\u4e2a\u5b57\u8282\uff0c\u5e76\u4e14\u5c06\u5b83\u6620\u5c04\u5230\u7528\u6237\u5730\u5740\u7a7a\u95f4\u3002\u4f7f\u7528 readi \u6765\u9605\u8bfb\u6587\u4ef6\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a offset \uff08\u6ce8\u610f\u9501\uff09\u3002\u4e0d\u8981\u5fd8\u8bb0\u8bbe\u7f6e\u6b63\u786e\u7684\u6743\u9650\u3002\u8fd0\u884c mmaptest ,\u5e94\u8be5\u4f1a\u8fd0\u884c\u5230 munmap \u6d4b\u8bd5\u3002 \u5b9e\u73b0 munmap : \u67e5\u627eVMA\u6765\u83b7\u5f97\u5730\u5740\u8303\u56f4\uff0c\u5e76\u4e14unmap\u6307\u5b9a\u9875\uff08\u63d0\u793a\uff1a\u4f7f\u7528 uvmunmap \uff09\u3002\u5982\u679c munmap \u79fb\u9664\u4e86\u6240\u6709\u7684\u9875\uff0c\u90a3\u4e48\u9700\u8981\u964d\u4f4e\u6587\u4ef6\u7684reference\u8ba1\u6570\u5668\u3002\u5982\u679c\u9875\u88ab\u4fee\u6539\u8fc7\uff0c\u5e76\u4e14\u6587\u4ef6\u88ab\u6807\u8bb0\u4e3a MAP_SHARED \uff0c\u90a3\u4e48\u9700\u8981\u66f4\u65b0\u6587\u4ef6\u3002\u53ef\u4ee5\u53c2\u8003 filewrite \u3002 \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u88ab\u6807\u8bb0\u4e3a MAP_SHARED \u7684\u9875\u88ab\u4fee\u6539\u540e\u624d\u5199\u56de\u6587\u4ef6\u3002RISC-V\u7684PTE\u7684\u810f\u6bd4\u7279 D \u6807\u8bb0\u9875\u662f\u5426\u88ab\u5199\u5165\u3002\u4f46\u662f mmaptest \u4e0d\u67e5\u770b\u6ca1\u88ab\u4fee\u6539\u7684\u9875\u662f\u5426\u88ab\u5199\u56de\uff0c\u6240\u4ee5\u672c\u5b9e\u9a8c\u53ef\u4ee5\u4e0d\u8003\u8651\u7406\u60f3\u60c5\u51b5\u3002 \u4fee\u6539 exit \u6765\u5220\u9664\u8fdb\u7a0b\u4e2d\u7531 mmap \u6620\u5c04\u7684\u533a\u57df\u3002\u8fd9\u65f6\u5e94\u8be5\u80fd\u591f\u901a\u8fc7 mmaptest \u7684 mmap_test \u6d4b\u8bd5\uff0c\u4f46\u662f\u65e0\u6cd5\u901a\u8fc7 fork_test \u6d4b\u8bd5\u3002 \u4fee\u6539 fork \u6765\u4fdd\u8bc1\u5b50\u8fdb\u7a0b\u6709\u548c\u7236\u8fdb\u7a0b\u4e00\u6837\u7684 mapped \u7684\u533a\u57df\u3002\u4e0d\u8981\u5fd8\u8bb0 VMA \u7ed3\u6784\u4f53\u4e2d\u7684 reference \u8ba1\u6570\u5668\u3002\u5728\u5b50\u8fdb\u7a0b\u4e2d\u4ea7\u751f\u9875\u9519\u8bef\u540e\uff0c\u53ef\u4ee5\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u7269\u7406\u5185\u5b58\u9875\u6765\u6620\u5c04\uff0c\u800c\u4e0d\u4e00\u5b9a\u548c\u7236\u8fdb\u7a0b\u7684\u7269\u7406\u5185\u5b58\u9875\u76f8\u540c\u3002\u867d\u7136\u4fdd\u6301\u76f8\u540c\u7684\u529f\u80fd\u5f88\u597d\uff0c\u4f46\u662f\u9700\u8981\u989d\u5916\u7684\u5b9e\u73b0\u3002\u8fd0\u884c mmaptest \uff0c\u80fd\u901a\u8fc7 mmap_test \u548c fork_test \u4e24\u4e2a\u547d\u4ee4\u3002 \u53c2\u8003\u7b54\u6848 \u521b\u5efaVMA\u7ed3\u6784\u4f53\u3002\u5177\u4f53\u5305\u62ec\u4e00\u4e0b\u51e0\u4e2a\u6b65\u9aa4 a. \u5728 kernel/proc.h \u4e2d\u58f0\u660e\uff1a struct VMA { uint64 addr ; uint length ; int prot ; int flags ; struct file * f ; uint offset ; uint used ; }; b. \u5728 kernel/proc.h \u4e2d\u58f0\u660e\u5b8f\uff1a #define NVMAS 16 \u3002 c. \u5728 struct proc \u4e2d\u6dfb\u52a0 VMA \u6570\u7ec4\u6210\u5458\u53d8\u91cf\uff1a struct VMA vmas [ NVMAS ]; // Virtual memory areas d. \u5728 kernel/defs.h \u4e2d\u6dfb\u52a0\u58f0\u660e\uff1a struct VMA; \u3002 \u5b9e\u73b0 kernel/sysfile.c:sysmmap() \u51fd\u6570\u3002 uint64 sys_mmap ( void ) { uint64 addr ; uint length , offset ; int prot , flags , i ; struct file * f ; struct proc * p = myproc (); if ( argaddr ( 0 , & addr ) < 0 || argint ( 1 , ( int * ) & length ) < 0 || argint ( 2 , & prot ) < 0 || argint ( 3 , & flags ) < 0 || argfd ( 4 , 0 , & f ) < 0 || argint ( 5 , ( int * ) & offset ) < 0 ){ return MAP_FAILED ; } if ( f -> type != FD_INODE || ( ! f -> writable && ( prot & PROT_WRITE ) && ( flags & MAP_SHARED ))){ return MAP_FAILED ; } if ( addr == 0 ){ addr = p -> sz ; p -> sz += length ; } else { // panic(\"sys_mmap: addr != 0\"); return MAP_FAILED ; } for ( i = 0 ; i < NVMAS ; ++ i ) { if ( p -> vmas [ i ]. addr == 0 ) { p -> vmas [ i ]. addr = addr ; p -> vmas [ i ]. length = PGROUNDUP ( length ); p -> vmas [ i ]. prot = prot ; p -> vmas [ i ]. flags = flags ; p -> vmas [ i ]. f = filedup ( f ); p -> vmas [ i ]. offset = offset ; break ; } } if ( i == NVMAS ) return MAP_FAILED ; return addr ; } \u5b9e\u73b0\u9677\u9631\u5904\u7406\u7a0b\u5e8f kernel/trap.c:usertrap() \uff0c\u540c\u65f6\u8981\u6dfb\u52a0\u4e00\u4e9b\u5934\u6587\u4ef6\u3002 #include \"sleeplock.h\" #include \"fs.h\" #include \"file.h\" //... void usertrap ( void ) { //... } else if ( r_scause () == 13 || r_scause () == 15 ){ char * mem ; uint64 va = r_stval (); if ( va >= p -> sz ){ p -> killed = 1 ; } else { mem = kalloc (); if ( mem == 0 ){ // run out of physical memory, // wait for an empty page. p -> killed = 1 ; } else { int i ; memset ( mem , 0 , PGSIZE ); // mmap for ( i = 0 ; i < NVMAS ; ++ i ){ if ( p -> vmas [ i ]. addr != 0 && va >= p -> vmas [ i ]. addr && va < p -> vmas [ i ]. addr + p -> vmas [ i ]. length ){ va = PGROUNDDOWN ( va ); ilock ( p -> vmas [ i ]. f -> ip ); if ( readi ( p -> vmas [ i ]. f -> ip , 0 , ( uint64 ) mem , va + p -> vmas [ i ]. offset - p -> vmas [ i ]. addr , PGSIZE ) < 0 ){ panic ( \"mmap read failed\" ); } iunlock ( p -> vmas [ i ]. f -> ip ); p -> vmas [ i ]. used += PGSIZE ; if ( mappages ( p -> pagetable , va , PGSIZE , ( uint64 ) mem , ( p -> vmas [ i ]. prot << 1 ) | PTE_U ) != 0 ){ kfree ( mem ); p -> killed = 1 ; } break ; } } // not mmap if ( i == NVMAS ){ if ( mappages ( p -> pagetable , PGROUNDDOWN ( va ), PGSIZE , ( uint64 ) mem , PTE_W | PTE_X | PTE_R | PTE_U ) != 0 ){ kfree ( mem ); p -> killed = 1 ; } } } } } else if (( which_dev = devintr ()) != 0 ){ //... } \u5b9e\u73b0 sys_munmap() \u7a0b\u5e8f\uff0c\u5177\u4f53\u5305\u62ec\u4e24\u4e2a\u6b65\u9aa4\u3002\u6211\u7684\u5b9e\u73b0\u53ef\u4ee5\u5904\u7406\u6709\u6d1e\u7684\u60c5\u5f62\uff0c\u4ee5 PGSIZE \u5927\u5c0f\u5199\u56de\uff0c\u4f46\u662f writei \u4f1a\u8c03\u7528\u5f88\u591a\u6b21\u3002 a. \u5728 kernel/vm.c \u4e2d\u6dfb\u52a0\u8f85\u52a9\u51fd\u6570 uvmmunmap() \u3002 void uvmmunmap ( pagetable_t pagetable , uint64 va , uint64 length , struct VMA * vma ) { uint64 a ; pte_t * pte ; if (( va % PGSIZE ) != 0 ) panic ( \"uvmmunmap: not aligned\" ); for ( a = va ; a < va + length && a < va + vma -> length ; a += PGSIZE ){ if (( pte = walk ( pagetable , a , 0 )) == 0 ) continue ; if (( * pte & PTE_V ) == 0 ) continue ; if ( PTE_FLAGS ( * pte ) == PTE_V ) panic ( \"uvmunmap: not a leaf\" ); if (( vma -> flags & MAP_SHARED ) && vma -> f -> writable && ( vma -> prot & PROT_WRITE )){ begin_op (); ilock ( vma -> f -> ip ); writei ( vma -> f -> ip , 1 , a , a + vma -> offset - vma -> addr , PGSIZE ); iunlock ( vma -> f -> ip ); end_op (); } vma -> used -= PGSIZE ; if ( vma -> used < 0 ) panic ( \"uvmmunmap: vma->used < 0\" ); uint64 pa = PTE2PA ( * pte ); kfree (( void * ) pa ); * pte = 0 ; } } b. \u5728 kernel/def.h \u4e2d\u6dfb\u52a0 uvmmunmap() \u7684\u58f0\u660e\u3002 void uvmmunmap ( pagetable_t , uint64 , uint64 , struct VMA * ); c. \u5b9e\u73b0 kernel/sysfile.c:sys_munmap() \u3002 uint64 sys_munmap ( void ) { uint64 va ; uint length ; struct proc * p = myproc (); if ( argaddr ( 0 , & va ) < 0 || argint ( 1 , ( int * ) & length ) < 0 ){ return -1 ; } va = PGROUNDDOWN ( va ); for ( int i = 0 ; i < NVMAS ; ++ i ){ if ( p -> vmas [ i ]. addr != 0 && va >= p -> vmas [ i ]. addr && va < p -> vmas [ i ]. addr + p -> vmas [ i ]. length ){ uvmmunmap ( p -> pagetable , va , length , & ( p -> vmas [ i ])); if ( p -> vmas [ i ]. used == 0 ){ fileclose ( p -> vmas [ i ]. f ); p -> vmas [ i ]. addr = 0 ; p -> vmas [ i ]. length = 0 ; p -> vmas [ i ]. prot = 0 ; p -> vmas [ i ]. flags = 0 ; p -> vmas [ i ]. f = 0 ; p -> vmas [ i ]. offset = 0 ; break ; } } } return 0 ; } \u8865\u5145 kernel/proc.c:exit() \u51fd\u6570\u4e2d\u91ca\u653e vma \u7684\u4ee3\u7801\u3002 for ( int i = 0 ; i < NVMAS ; ++ i ){ if ( p -> vmas [ i ]. addr ){ uvmmunmap ( p -> pagetable , p -> vmas [ i ]. addr , p -> vmas [ i ]. length , & ( p -> vmas [ i ])); fileclose ( p -> vmas [ i ]. f ); p -> vmas [ i ]. addr = 0 ; p -> vmas [ i ]. length = 0 ; p -> vmas [ i ]. prot = 0 ; p -> vmas [ i ]. flags = 0 ; p -> vmas [ i ]. f = 0 ; p -> vmas [ i ]. offset = 0 ; } } \u8865\u5145 kernel/proc.c:fork() \u51fd\u6570\u4e2d\u590d\u5236 vma \u7684\u4ee3\u7801\u3002 // mmap for ( i = 0 ; i < NVMAS ; ++ i ) { if ( p -> vmas [ i ]. addr ) { np -> vmas [ i ]. addr = p -> vmas [ i ]. addr ; np -> vmas [ i ]. length = p -> vmas [ i ]. length ; np -> vmas [ i ]. prot = p -> vmas [ i ]. prot ; np -> vmas [ i ]. flags = p -> vmas [ i ]. flags ; np -> vmas [ i ]. f = filedup ( p -> vmas [ i ]. f ); np -> vmas [ i ]. offset = p -> vmas [ i ]. offset ; } }","title":"Lab10 mmap"},{"location":"6.S081/Lab10-mmap/#lab10-mmap","text":"\u7cfb\u7edf\u8c03\u7528 mmap \u548c munmap \u5141\u8bb8UNIX\u7a0b\u5e8f\u5bf9\u5b83\u4eec\u7684\u5730\u5740\u7a7a\u95f4\u6267\u884c\u66f4\u7cbe\u81f4\u7684\u63a7\u5236\u3002\u5b83\u4eec\u53ef\u4ee5\u88ab\u7528\u6765\u5728\u8fdb\u7a0b\u95f4\u5171\u4eab\u5185\u5b58\uff0c\u5c06\u6587\u4ef6\u6620\u5c04\u5728\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u4ee5\u53ca\u4f5c\u4e3a\u7528\u6237\u7ea7\u522b\u9875\u9519\u8bef\u673a\u5236\u7684\u4e00\u90e8\u5206\uff0c\u4f8b\u5982\u516c\u5f00\u8bfe\u4e2d\u8ba8\u8bba\u7684\u5783\u573e\u56de\u6536\u7b97\u6cd5\u3002\u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0 mmap \u548c munmap \u5230xv6\u4e2d\uff0c\u4e3b\u8981\u662f\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u3002 \u5b9e\u9a8c\u4ee3\u7801\u5728 mmap \u5206\u652f\u4e0a\u3002 make clean git fetch git checkout mmap \u5e2e\u52a9\u6587\u6863\uff08 man 2 mmap \uff09\u8bf4\u660e\u4e86 mmap \u7684\u5177\u4f53\u4f7f\u7528\u65b9\u5f0f\u3002\u73b0\u5728\u4eba\u4eec\u4f7f\u7528\u7684 mmap \u7684\u58f0\u660e\u5982\u4e0b\uff1a void * mmap ( void * addr , size_t length , int prot , int flags , int fd , off_t offset ); mmap \u6709\u975e\u5e38\u591a\u7684\u8c03\u7528\u65b9\u5f0f\uff0c\u672c\u6b21\u5b9e\u9a8c\u53ea\u9700\u8981\u5b9e\u73b0\u90e8\u5206\u529f\u80fd\u5373\u53ef\uff0c\u5177\u4f53\u6d89\u53ca\u7684\u662f\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u7684\u529f\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a addr \u59cb\u7ec8\u672a0\uff0c\u4e5f\u5c31\u662f\u8bf4\u5185\u6838\u5e94\u8be5\u51b3\u5b9a\u6587\u4ef6\u5e94\u8be5\u6620\u5c04\u5230\u865a\u62df\u5730\u5740\u7684\u4f4d\u7f6e\u3002 mmap \u5728\u6267\u884c\u6210\u529f\u540e\u8fd4\u56de\u8be5\u865a\u62df\u5730\u5740\uff0c\u5931\u8d25\u65f6\u8fd4\u56de 0xffffffffffffffff \u3002 length \u662f\u6620\u5c04\u7684\u6bd4\u7279\u6570\uff0c\u5b83\u548c\u6587\u4ef6\u7684\u957f\u5ea6\u4e0d\u4e00\u5b9a\u76f8\u540c\u3002 prot \u8868\u793a\u88ab\u6620\u5c04\u7684\u5185\u5b58\u7684\u6743\u9650\uff0c\u9009\u9879\u6709\uff1a\u662f\u5426\u53ef\u8bfb\u3001\u662f\u5426\u53ef\u5199\u3001\u662f\u5426\u53ef\u6267\u884c\uff0c\u5bf9\u5e94\u7684\u5b8f\u6709 PROT_READ \u548c PROT_WRITE \u6216\u8005\u90fd\u6709\u3002 flag \u53ef\u4ee5\u662f MAP_SHARED (\u8868\u793a\u5185\u5b58\u7684\u4fee\u6539\u9700\u8981\u540c\u6b65\u5230\u6587\u4ef6\u4e2d)\u6216\u8005 MAP_PRIVATE (\u4e0d\u540c\u6b65)\uff0c\u5176\u4ed6\u4f4d\u7684\u529f\u80fd\u4e0d\u9700\u8981\u5b9e\u73b0\u3002 fd \u662f\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a offset \u59cb\u7ec8\u4e3a0\u3002 \u8fdb\u7a0b\u6620\u5c04\u76f8\u540c\u7684 MAP_SHARED \u6587\u4ef6\u5230\u4e0d\u540c\u7684\u7269\u7406\u9875\u662f\u53ef\u4ee5\u7684\u3002 munmap(addr, length) \u5e94\u8be5\u79fb\u9664 mmap \u6620\u5c04\u7684\u5730\u5740\u3002\u5982\u679c\u8fdb\u7a0b\u4fee\u6539\u4e86\u5c5e\u6027\u4e3a MAP_SHARED \u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u6240\u505a\u7684\u4fee\u6539\u9700\u8981\u66f4\u65b0\u5230\u6587\u4ef6\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6620\u5c04\u7684\u533a\u57df\u53ea\u4f1a\u5728\u5f00\u5934\u3001\u7ed3\u5c3e\u6216\u8005\u6574\u4e2a\u533a\u57df\uff0c\u4e0d\u4f1a\u6709\u6d1e\u3002 \u9898\u76ee\u63cf\u8ff0 \u6211\u4eec\u9700\u8981\u5b9e\u73b0 mmap \u548c munmap \u8db3\u591f\u591a\u7684\u529f\u80fd\u6765\u901a\u8fc7 mmaptest \u548c usertests \u8fd9\u4e24\u4e2a\u7a0b\u5e8f\u3002 \u63d0\u793a\uff1a \u9996\u5148\u6dfb\u52a0 _mmaptest \u5230 UPROGS \uff0c\u7136\u540e\u6dfb\u52a0 mmap \u548c munmap \u7cfb\u7edf\u8c03\u7528\u7684\u5916\u58f3\uff0c\u5b9e\u73b0 user/mmaptest.c \u7f16\u8bd1\u901a\u8fc7\u3002(\u5728 kernel/fcntl.h \u4e2d\u5df2\u7ecf\u6709\u4e00\u4e9b\u5b8f\u5b9a\u4e49 PROT_READ \u3002) \u53c2\u8003\u7b54\u6848 Makefile \u4e2d\u6dfb\u52a0\uff1a $U/_mmaptest\\ \u3002 user/user.h \u4e2d\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528\u7684\u58f0\u660e\uff1a void * mmap ( void * , uint , int , int , int , uint ); int munmap ( void * , uint ); \u5728 user/usys.pl \u4e2d\u6dfb\u52a0\uff1a entry ( \"mmap\" ); entry ( \"munmap\" ); \u5728 kernel/syscall.h \u4e2d\u6dfb\u52a0\uff1a #define SYS_mmap 22 #define SYS_munmap 23 \u5728 kernel/syscall.c \u4e2d\u6dfb\u52a0\uff1a extern uint64 sys_mmap ( void ); extern uint64 sys_munmap ( void ); static uint64 ( * syscalls [])( void ) = { //... [ SYS_mmap ] sys_mmap , [ SYS_munmap ] sys_munmap , }; \u5728 kernel/sysfile.c \u4e2d\u6dfb\u52a0\uff1a uint64 sys_mmap ( void ) { return 0 ; } uint64 sys_munmap ( void ) { return 0 ; } \u5ef6\u8fdf\u6dfb\u52a0\u9875\u8868\uff0c\u54cd\u5e94\u9875\u9519\u8bef\u3002 mmap \u4e0d\u9700\u8981\u5206\u914d\u7269\u7406\u5185\u5b58\u4e5f\u4ee5\u53ca\u8bfb\u6587\u4ef6\u3002\u5728 usertrap \u7684\u9875\u9519\u8bef\u5904\u7406\u4ee3\u7801\u4e2d\u5b9e\u73b0 lazy page \u7684\u4ee3\u7801\u3002\u5b9e\u73b0 lazy page \u53ef\u4ee5\u8ba9 mmap \u5904\u7406\u5927\u6587\u4ef6\u5feb\u4e00\u4e9b\uff0c\u5e76\u4e14\u53ef\u4ee5\u5904\u7406\u5927\u4e8e\u5185\u5b58\u5927\u5c0f\u7684\u6587\u4ef6\u3002 \u53c2\u8003\u7b54\u6848 \u53ef\u4ee5\u53c2\u8003 Lab05 Lazy Allocation \u3002 \u4fdd\u6301\u8ffd\u8e2a mmap \u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u6620\u5c04\u7684\u5185\u5bb9\u3002\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 VMA (virtual memory area)\uff0c\u8bb0\u5f55 mmap \u521b\u5efa\u7684\u865a\u62df\u5185\u5b58\u7684\u5730\u5740\u3001\u957f\u5ea6\u3001\u6743\u9650\u548c\u6587\u4ef6\u7b49\u4fe1\u606f\u3002\u56e0\u4e3a\u5185\u6838\u6ca1\u6709\u5185\u5b58\u5206\u914d\u5668\uff0c\u6240\u4ee5\u53ef\u4ee5\u58f0\u660e\u56fa\u5b9a\u957f\u5ea6\u7684\u6570\u7ec4\u7ed9 VMAs \u5e76\u4e14\u4ece\u6570\u7ec4\u4e2d\u5206\u914d\u9700\u8981\u7684\u7a7a\u95f4\u3002\u4f8b\u598216\u7684\u957f\u5ea6\u5df2\u7ecf\u8db3\u591f\u3002 \u5b9e\u73b0 mmap \uff1a\u67e5\u627e\u8fdb\u7a0b\u5730\u5740\u672a\u4f7f\u7528\u7684\u90e8\u5206\u6765\u6620\u5c04\u6587\u4ef6\uff0c\u6dfb\u52a0VMA\u5230\u8fdb\u7a0b\u7684\u6620\u5c04\u533a\u57df\u8868\u4e2d\u3002VMA\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u6307\u5411\u88ab\u6620\u5c04\u6587\u4ef6\u7684\u7ed3\u6784\u4f53struct file\u7684\u6307\u9488\u3002 mmap \u5e94\u8be5\u8981\u589e\u52a0\u6587\u4ef6\u7684 reference \u6570\u91cf\uff0c\u4fdd\u8bc1\u6587\u4ef6\u5173\u95ed\u7684\u65f6\u5019\u7ed3\u6784\u4f53\u4e0d\u4f1a\u6d88\u5931\u3002\u8fd0\u884c mmaptest \uff1a\u7b2c\u4e00\u4e2a mmap \u6d4b\u8bd5\u5e94\u8be5\u80fd\u6210\u529f\uff0c\u4f46\u662f\u540e\u9762\u7684\u9875\u8868\u9519\u8bef\u8fd8\u4e0d\u80fd\u5904\u7406\u3002 \u6dfb\u52a0\u5904\u7406\u8bbf\u95ee mmap \u6620\u5c04\u7684\u9875\u5f15\u8d77\u9875\u9519\u8bef\u7684\u4ee3\u7801\uff0c\u7528\u6765\u5206\u914d\u7269\u7406\u5185\u5b58\u3002\u8bfb\u51654096\u4e2a\u5b57\u8282\uff0c\u5e76\u4e14\u5c06\u5b83\u6620\u5c04\u5230\u7528\u6237\u5730\u5740\u7a7a\u95f4\u3002\u4f7f\u7528 readi \u6765\u9605\u8bfb\u6587\u4ef6\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a offset \uff08\u6ce8\u610f\u9501\uff09\u3002\u4e0d\u8981\u5fd8\u8bb0\u8bbe\u7f6e\u6b63\u786e\u7684\u6743\u9650\u3002\u8fd0\u884c mmaptest ,\u5e94\u8be5\u4f1a\u8fd0\u884c\u5230 munmap \u6d4b\u8bd5\u3002 \u5b9e\u73b0 munmap : \u67e5\u627eVMA\u6765\u83b7\u5f97\u5730\u5740\u8303\u56f4\uff0c\u5e76\u4e14unmap\u6307\u5b9a\u9875\uff08\u63d0\u793a\uff1a\u4f7f\u7528 uvmunmap \uff09\u3002\u5982\u679c munmap \u79fb\u9664\u4e86\u6240\u6709\u7684\u9875\uff0c\u90a3\u4e48\u9700\u8981\u964d\u4f4e\u6587\u4ef6\u7684reference\u8ba1\u6570\u5668\u3002\u5982\u679c\u9875\u88ab\u4fee\u6539\u8fc7\uff0c\u5e76\u4e14\u6587\u4ef6\u88ab\u6807\u8bb0\u4e3a MAP_SHARED \uff0c\u90a3\u4e48\u9700\u8981\u66f4\u65b0\u6587\u4ef6\u3002\u53ef\u4ee5\u53c2\u8003 filewrite \u3002 \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u88ab\u6807\u8bb0\u4e3a MAP_SHARED \u7684\u9875\u88ab\u4fee\u6539\u540e\u624d\u5199\u56de\u6587\u4ef6\u3002RISC-V\u7684PTE\u7684\u810f\u6bd4\u7279 D \u6807\u8bb0\u9875\u662f\u5426\u88ab\u5199\u5165\u3002\u4f46\u662f mmaptest \u4e0d\u67e5\u770b\u6ca1\u88ab\u4fee\u6539\u7684\u9875\u662f\u5426\u88ab\u5199\u56de\uff0c\u6240\u4ee5\u672c\u5b9e\u9a8c\u53ef\u4ee5\u4e0d\u8003\u8651\u7406\u60f3\u60c5\u51b5\u3002 \u4fee\u6539 exit \u6765\u5220\u9664\u8fdb\u7a0b\u4e2d\u7531 mmap \u6620\u5c04\u7684\u533a\u57df\u3002\u8fd9\u65f6\u5e94\u8be5\u80fd\u591f\u901a\u8fc7 mmaptest \u7684 mmap_test \u6d4b\u8bd5\uff0c\u4f46\u662f\u65e0\u6cd5\u901a\u8fc7 fork_test \u6d4b\u8bd5\u3002 \u4fee\u6539 fork \u6765\u4fdd\u8bc1\u5b50\u8fdb\u7a0b\u6709\u548c\u7236\u8fdb\u7a0b\u4e00\u6837\u7684 mapped \u7684\u533a\u57df\u3002\u4e0d\u8981\u5fd8\u8bb0 VMA \u7ed3\u6784\u4f53\u4e2d\u7684 reference \u8ba1\u6570\u5668\u3002\u5728\u5b50\u8fdb\u7a0b\u4e2d\u4ea7\u751f\u9875\u9519\u8bef\u540e\uff0c\u53ef\u4ee5\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u7269\u7406\u5185\u5b58\u9875\u6765\u6620\u5c04\uff0c\u800c\u4e0d\u4e00\u5b9a\u548c\u7236\u8fdb\u7a0b\u7684\u7269\u7406\u5185\u5b58\u9875\u76f8\u540c\u3002\u867d\u7136\u4fdd\u6301\u76f8\u540c\u7684\u529f\u80fd\u5f88\u597d\uff0c\u4f46\u662f\u9700\u8981\u989d\u5916\u7684\u5b9e\u73b0\u3002\u8fd0\u884c mmaptest \uff0c\u80fd\u901a\u8fc7 mmap_test \u548c fork_test \u4e24\u4e2a\u547d\u4ee4\u3002 \u53c2\u8003\u7b54\u6848 \u521b\u5efaVMA\u7ed3\u6784\u4f53\u3002\u5177\u4f53\u5305\u62ec\u4e00\u4e0b\u51e0\u4e2a\u6b65\u9aa4 a. \u5728 kernel/proc.h \u4e2d\u58f0\u660e\uff1a struct VMA { uint64 addr ; uint length ; int prot ; int flags ; struct file * f ; uint offset ; uint used ; }; b. \u5728 kernel/proc.h \u4e2d\u58f0\u660e\u5b8f\uff1a #define NVMAS 16 \u3002 c. \u5728 struct proc \u4e2d\u6dfb\u52a0 VMA \u6570\u7ec4\u6210\u5458\u53d8\u91cf\uff1a struct VMA vmas [ NVMAS ]; // Virtual memory areas d. \u5728 kernel/defs.h \u4e2d\u6dfb\u52a0\u58f0\u660e\uff1a struct VMA; \u3002 \u5b9e\u73b0 kernel/sysfile.c:sysmmap() \u51fd\u6570\u3002 uint64 sys_mmap ( void ) { uint64 addr ; uint length , offset ; int prot , flags , i ; struct file * f ; struct proc * p = myproc (); if ( argaddr ( 0 , & addr ) < 0 || argint ( 1 , ( int * ) & length ) < 0 || argint ( 2 , & prot ) < 0 || argint ( 3 , & flags ) < 0 || argfd ( 4 , 0 , & f ) < 0 || argint ( 5 , ( int * ) & offset ) < 0 ){ return MAP_FAILED ; } if ( f -> type != FD_INODE || ( ! f -> writable && ( prot & PROT_WRITE ) && ( flags & MAP_SHARED ))){ return MAP_FAILED ; } if ( addr == 0 ){ addr = p -> sz ; p -> sz += length ; } else { // panic(\"sys_mmap: addr != 0\"); return MAP_FAILED ; } for ( i = 0 ; i < NVMAS ; ++ i ) { if ( p -> vmas [ i ]. addr == 0 ) { p -> vmas [ i ]. addr = addr ; p -> vmas [ i ]. length = PGROUNDUP ( length ); p -> vmas [ i ]. prot = prot ; p -> vmas [ i ]. flags = flags ; p -> vmas [ i ]. f = filedup ( f ); p -> vmas [ i ]. offset = offset ; break ; } } if ( i == NVMAS ) return MAP_FAILED ; return addr ; } \u5b9e\u73b0\u9677\u9631\u5904\u7406\u7a0b\u5e8f kernel/trap.c:usertrap() \uff0c\u540c\u65f6\u8981\u6dfb\u52a0\u4e00\u4e9b\u5934\u6587\u4ef6\u3002 #include \"sleeplock.h\" #include \"fs.h\" #include \"file.h\" //... void usertrap ( void ) { //... } else if ( r_scause () == 13 || r_scause () == 15 ){ char * mem ; uint64 va = r_stval (); if ( va >= p -> sz ){ p -> killed = 1 ; } else { mem = kalloc (); if ( mem == 0 ){ // run out of physical memory, // wait for an empty page. p -> killed = 1 ; } else { int i ; memset ( mem , 0 , PGSIZE ); // mmap for ( i = 0 ; i < NVMAS ; ++ i ){ if ( p -> vmas [ i ]. addr != 0 && va >= p -> vmas [ i ]. addr && va < p -> vmas [ i ]. addr + p -> vmas [ i ]. length ){ va = PGROUNDDOWN ( va ); ilock ( p -> vmas [ i ]. f -> ip ); if ( readi ( p -> vmas [ i ]. f -> ip , 0 , ( uint64 ) mem , va + p -> vmas [ i ]. offset - p -> vmas [ i ]. addr , PGSIZE ) < 0 ){ panic ( \"mmap read failed\" ); } iunlock ( p -> vmas [ i ]. f -> ip ); p -> vmas [ i ]. used += PGSIZE ; if ( mappages ( p -> pagetable , va , PGSIZE , ( uint64 ) mem , ( p -> vmas [ i ]. prot << 1 ) | PTE_U ) != 0 ){ kfree ( mem ); p -> killed = 1 ; } break ; } } // not mmap if ( i == NVMAS ){ if ( mappages ( p -> pagetable , PGROUNDDOWN ( va ), PGSIZE , ( uint64 ) mem , PTE_W | PTE_X | PTE_R | PTE_U ) != 0 ){ kfree ( mem ); p -> killed = 1 ; } } } } } else if (( which_dev = devintr ()) != 0 ){ //... } \u5b9e\u73b0 sys_munmap() \u7a0b\u5e8f\uff0c\u5177\u4f53\u5305\u62ec\u4e24\u4e2a\u6b65\u9aa4\u3002\u6211\u7684\u5b9e\u73b0\u53ef\u4ee5\u5904\u7406\u6709\u6d1e\u7684\u60c5\u5f62\uff0c\u4ee5 PGSIZE \u5927\u5c0f\u5199\u56de\uff0c\u4f46\u662f writei \u4f1a\u8c03\u7528\u5f88\u591a\u6b21\u3002 a. \u5728 kernel/vm.c \u4e2d\u6dfb\u52a0\u8f85\u52a9\u51fd\u6570 uvmmunmap() \u3002 void uvmmunmap ( pagetable_t pagetable , uint64 va , uint64 length , struct VMA * vma ) { uint64 a ; pte_t * pte ; if (( va % PGSIZE ) != 0 ) panic ( \"uvmmunmap: not aligned\" ); for ( a = va ; a < va + length && a < va + vma -> length ; a += PGSIZE ){ if (( pte = walk ( pagetable , a , 0 )) == 0 ) continue ; if (( * pte & PTE_V ) == 0 ) continue ; if ( PTE_FLAGS ( * pte ) == PTE_V ) panic ( \"uvmunmap: not a leaf\" ); if (( vma -> flags & MAP_SHARED ) && vma -> f -> writable && ( vma -> prot & PROT_WRITE )){ begin_op (); ilock ( vma -> f -> ip ); writei ( vma -> f -> ip , 1 , a , a + vma -> offset - vma -> addr , PGSIZE ); iunlock ( vma -> f -> ip ); end_op (); } vma -> used -= PGSIZE ; if ( vma -> used < 0 ) panic ( \"uvmmunmap: vma->used < 0\" ); uint64 pa = PTE2PA ( * pte ); kfree (( void * ) pa ); * pte = 0 ; } } b. \u5728 kernel/def.h \u4e2d\u6dfb\u52a0 uvmmunmap() \u7684\u58f0\u660e\u3002 void uvmmunmap ( pagetable_t , uint64 , uint64 , struct VMA * ); c. \u5b9e\u73b0 kernel/sysfile.c:sys_munmap() \u3002 uint64 sys_munmap ( void ) { uint64 va ; uint length ; struct proc * p = myproc (); if ( argaddr ( 0 , & va ) < 0 || argint ( 1 , ( int * ) & length ) < 0 ){ return -1 ; } va = PGROUNDDOWN ( va ); for ( int i = 0 ; i < NVMAS ; ++ i ){ if ( p -> vmas [ i ]. addr != 0 && va >= p -> vmas [ i ]. addr && va < p -> vmas [ i ]. addr + p -> vmas [ i ]. length ){ uvmmunmap ( p -> pagetable , va , length , & ( p -> vmas [ i ])); if ( p -> vmas [ i ]. used == 0 ){ fileclose ( p -> vmas [ i ]. f ); p -> vmas [ i ]. addr = 0 ; p -> vmas [ i ]. length = 0 ; p -> vmas [ i ]. prot = 0 ; p -> vmas [ i ]. flags = 0 ; p -> vmas [ i ]. f = 0 ; p -> vmas [ i ]. offset = 0 ; break ; } } } return 0 ; } \u8865\u5145 kernel/proc.c:exit() \u51fd\u6570\u4e2d\u91ca\u653e vma \u7684\u4ee3\u7801\u3002 for ( int i = 0 ; i < NVMAS ; ++ i ){ if ( p -> vmas [ i ]. addr ){ uvmmunmap ( p -> pagetable , p -> vmas [ i ]. addr , p -> vmas [ i ]. length , & ( p -> vmas [ i ])); fileclose ( p -> vmas [ i ]. f ); p -> vmas [ i ]. addr = 0 ; p -> vmas [ i ]. length = 0 ; p -> vmas [ i ]. prot = 0 ; p -> vmas [ i ]. flags = 0 ; p -> vmas [ i ]. f = 0 ; p -> vmas [ i ]. offset = 0 ; } } \u8865\u5145 kernel/proc.c:fork() \u51fd\u6570\u4e2d\u590d\u5236 vma \u7684\u4ee3\u7801\u3002 // mmap for ( i = 0 ; i < NVMAS ; ++ i ) { if ( p -> vmas [ i ]. addr ) { np -> vmas [ i ]. addr = p -> vmas [ i ]. addr ; np -> vmas [ i ]. length = p -> vmas [ i ]. length ; np -> vmas [ i ]. prot = p -> vmas [ i ]. prot ; np -> vmas [ i ]. flags = p -> vmas [ i ]. flags ; np -> vmas [ i ]. f = filedup ( p -> vmas [ i ]. f ); np -> vmas [ i ]. offset = p -> vmas [ i ]. offset ; } }","title":"Lab10: mmap"},{"location":"6.S081/Lab11-Networking/","text":"Lab11: Networking \u00b6 \u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\u6211\u4eec\u4e3axv6\u5b9e\u73b0\u4e00\u4e2a\u7f51\u5361(network interface card, NIC)\u9a71\u52a8\u3002 \u83b7\u53d6\u4ee3\u7801\uff1a make clean git fetch git checkout net \u80cc\u666f \u00b6 \u53ef\u4ee5\u53c2\u8003 xv6-book \u7684\u7b2c\u4e94\u7ae0\u5185\u5bb9\uff1a\u4e2d\u65ad\u548c\u8bbe\u5907\u9a71\u52a8\u3002 \u6211\u4eec\u9700\u8981\u4f7f\u7528 E1000 \u7f51\u5361\u9a71\u52a8\u6765\u5904\u7406\u7f51\u7edc\u8fde\u63a5\u3002\u5bf9\u4e8exv6\uff0c E1000 \u5c31\u662f\u4e00\u4e2a\u771f\u5b9e\u7684\u7f51\u5361\u8bbe\u5907\uff0c\u53ef\u4ee5\u548c\u771f\u5b9e\u7684\u5c40\u57df\u7f51\uff08Ethernet local area network\uff09\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u4f7f\u7528\u7684 E1000 \u8bbe\u5907\u662f\u7531qemu\u63d0\u4f9b\u7684\u865a\u62df\u8bbe\u5907\uff0c\u8fde\u63a5\u7684\u5c40\u57df\u7f51\u4e5f\u662f\u7531qemu\u865a\u62df\u7684\u3002\u5728\u8fd9\u4e2a\u865a\u62df\u7684\u5c40\u57df\u7f51\u4e0a\uff0cxv6\u7684\u5c40\u57df\u7f51IP\u5730\u5740\u662f 10.0.2.15 \u3002\u8fd0\u884cqemu\u7684\u4e3b\u673a\u5728\u8fd9\u4e2a\u865a\u62df\u5c40\u57df\u7f51\u4e0a\u7684IP\u5730\u5740\u662f 10.0.2.2 \u3002\u5f53xv6\u4f7f\u7528E1000\u53d1\u9001\u4e00\u4e2a\u7f51\u7edc\u5305\u5230 10.0.2.2 \u65f6\uff0cqemu\u4f1a\u5c06\u8fd9\u4e2a\u5305\u53d1\u9001\u5230\u8fd0\u884c\u8fd9\u4e2aqemu\u7a0b\u5e8f\u7684\u4e3b\u673a\u4e0a\u7684\u5408\u9002\u7684\u5e94\u7528\u4e0a\u3002 \u6211\u4eec\u5c06\u4f7f\u7528QEMU\u7684 user-mode network stack \u3002QEMU\u5173\u4e8e\u7528\u6237\u6a21\u5f0f\u7684\u6808\u7684\u8bf4\u660e\u5728 \u8fd9\u4e2a\u7f51\u7ad9 \u4e0a\u3002\u5b9e\u9a8c\u4ee3\u7801\u5df2\u7ecf\u4fee\u6539Makefile\u652f\u6301QEMU\u7684\u7528\u6237\u6a21\u5f0f\u7f51\u7edc\u6808\u548cE1000\u7f51\u5361\u3002 Makefile\u914d\u7f6e\u7684QEMU\u5c06\u6240\u6709\u8f93\u5165\u8f93\u51fa\u7684\u7f51\u7edc\u5305\u8bb0\u5f55\u5728\u6587\u4ef6 packets.pcap \u4e2d\u3002\u8981\u56de\u987e\u8fd9\u4e9b\u8bb0\u5f55\u6765\u786e\u8ba4xv6\u6210\u529f\u53d1\u9001\u5e76\u83b7\u5f97\u671f\u671b\u83b7\u5f97\u7684\u6b63\u786e\u7684\u7f51\u7edc\u5305\u3002\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u89e3\u6790\u7f51\u7edc\u5305\uff1a tcpdump -XXnr packets.pcap \u5b9e\u9a8c\u4ee3\u7801\u6dfb\u52a0\u4e86\u4e00\u4e9b\u91cd\u8981\u7684\u6587\u4ef6\uff0c\u503c\u5f97\u6211\u4eec\u5173\u6ce8\u3002\u6587\u4ef6 kernel/e1000.c \u5305\u542b E1000 \u521d\u59cb\u5316\u7684\u4ee3\u7801\u4ee5\u53ca\u6e05\u7a7a\u53d1\u9001\u548c\u83b7\u5f97\u7684\u7f51\u7edc\u5305\u3002\u5b83\u4f7f\u7528\u4e86\u4e00\u4e9b\u5b9a\u4e49\u5728 kernel/e1000_dev.h \u4e2d\u7684\u5b8f\u5b9a\u4e49\u548c\u58f0\u660e\u3002\u5177\u4f53\u9700\u8981\u7684\u5bc4\u5b58\u5668\u3001\u5b8f\u7b49\u4fe1\u606f\u5728E1000\u7684 \u8f6f\u4ef6\u5f00\u53d1\u6587\u6863 \u3002 kernel/net.c \u548c kernel/net.h \u5305\u542b\u4e00\u4e9b\u7b80\u5355\u7684\u7f51\u7edc\u6808\uff0c\u5b9e\u73b0\u4e86IP\u3001UDP\u548cARP\u534f\u8bae\u3002\u8fd9\u4e9b\u6587\u4ef6\u5305\u542b\u4e00\u4e2a\u7075\u6d3b\u7684\u6570\u636e\u7ed3\u6784 mbuf \u6765\u4fdd\u5b58\u8fd9\u4e9b\u5305\u3002\u6700\u540e kernel/pci.c \u5305\u542b\u7684\u4ee3\u7801\u7528\u4e8e\u5728xv6\u542f\u52a8\u7684\u65f6\u5019\u67e5\u627e\u6302\u8f7d\u5728PCI\u4e3b\u7ebf\u4e0a\u7684E1000\u7f51\u5361\u3002 \u4efb\u52a1 \u00b6 \u95ee\u9898\u63cf\u8ff0 \u6211\u4eec\u8981\u5b8c\u5584 e1000_transmit() \u548c e1000_recv() \uff0c\u4ee5\u53ca kernel/e1000.c \uff0c\u4f7f\u5f97\u9a71\u52a8\u80fd\u591f\u53d1\u9001\u548c\u63a5\u6536\u7f51\u7edc\u5305\u3002\u6700\u540e\u901a\u8fc7 make grade \u6d4b\u8bd5\u3002 \u91cd\u8981\u63d0\u793a \u6211\u4eec\u53ef\u4ee5\u53c2\u8003E100\u7684 \u8f6f\u4ef6\u5f00\u53d1\u6587\u6863 \u3002\u4f46\u662f\u6587\u6863\u975e\u5e38\u957f\uff0c\u8fd9\u91cc\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u51e0\u4e2a\u7ae0\u8282\uff1a Section 2 \u662f\u6700\u91cd\u8981\u7684\uff0c\u63cf\u8ff0\u4e86\u6574\u4e2a\u8bbe\u5907\u7684\u5927\u4f53\u60c5\u51b5\u3002 Section 3.2 \u63cf\u8ff0\u4e86\u7f51\u7edc\u5305\u7684\u63a5\u6536\u6d41\u7a0b\u3002 Section 3.3 \u548c Section 3.4 \u63cf\u8ff0\u4e86\u7f51\u7edc\u5305\u7684\u53d1\u9001\u6d41\u7a0b\u3002 Section 13 \u5217\u51fa\u4e86E1000\u63d0\u4f9b\u7684\u5bc4\u5b58\u5668\u3002 Section 14 \u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u5b9e\u9a8c\u4ee3\u7801\u63d0\u4f9b\u7684\u521d\u59cb\u5316\u4ee3\u7801\u3002 \u6d4f\u89c8E100\u7684 \u8f6f\u4ef6\u5f00\u53d1\u6587\u6863 \u7684\u518d\u6b21\u8bf4\u660e\u3002QEMU\u6a21\u62df\u7684\u662f 82540EM \u3002\u6d4f\u89c8\u4e00\u4e0b Section 2 \u7684\u5185\u5bb9\u6765\u5927\u4f53\u4e86\u89e3\u8fd9\u4e9b\u5185\u5bb9\u3002\u5728\u5b9e\u73b0\u9a71\u52a8\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u719f\u6089 Section 3 \uff0c Section 14 \u548c Section 4.1 \u7684\u5185\u5bb9\u3002\u53ef\u80fd\u8fd8\u9700\u8981 Section 13 \u4f5c\u4e3a\u53c2\u8003\u3002\u4e0d\u9700\u8981\u5b8c\u5168\u641e\u6e05\u695a\u6587\u6863\u7684\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u4e86\u89e3\u4e00\u4e2a\u5927\u6982\u3002E1000\u6709\u975e\u5e38\u591a\u7684\u7279\u70b9\uff0c\u6211\u4eec\u53ea\u4f1a\u7528\u5230\u4e00\u4e9b\u975e\u5e38\u57fa\u7840\u7684\u529f\u80fd\u3002 \u5728 e1000.c \u4e2d\u5b9e\u73b0\u7684 e1000_init() \u5b9e\u76f4\u63a5\u4eceRAM\u4e2d\u8bfb\u5199\u4fe1\u606f\u3002\u8fd9\u79cd\u6280\u672f\u53eb\u505aDMA(direct memory access)\uff0c\u8868\u793a\u7f51\u5361E1000\u76f4\u63a5\u4eceRAM\u4e2d\u8bfb\u5199\u4fe1\u606f\u3002 \u7531\u4e8e\u6570\u636e\u5305\u7684\u7a81\u53d1\u5230\u8fbe\u53ef\u80fd\u6bd4\u9a71\u52a8\u7a0b\u5e8f\u5904\u7406\u5b83\u4eec\u7684\u901f\u5ea6\u5feb\uff0ce1000_init()\u4e3aE1000\u63d0\u4f9b\u4e86\u591a\u4e2a\u7f13\u51b2\u533a\uff0cE1000\u53ef\u4ee5\u5c06\u6570\u636e\u5305\u5199\u5165\u5176\u4e2d\u3002E1000\u8981\u6c42\u8fd9\u4e9b\u7f13\u51b2\u533a\u5728RAM\u4e2d\u7531\u4e00\u7ec4\u201c\u63cf\u8ff0\u7b26\u201d\u6765\u63cf\u8ff0;\u6bcf\u4e2a\u63cf\u8ff0\u7b26\u5728RAM\u4e2d\u5305\u542b\u4e00\u4e2a\u5730\u5740\uff0cE1000\u53ef\u4ee5\u5728\u5176\u4e2d\u5199\u4e00\u4e2a\u63a5\u6536\u5230\u7684\u5305\u3002struct rx_desc\u63cf\u8ff0\u63cf\u8ff0\u7b26\u683c\u5f0f\u3002\u63cf\u8ff0\u7b26\u6570\u7ec4\u79f0\u4e3a\u63a5\u6536\u73af\uff0c\u6216\u63a5\u6536\u961f\u5217\u3002\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u5b83\u662f\u4e00\u4e2a\u5706\u73af\uff0c\u5f53\u5361\u6216\u9a71\u52a8\u7a0b\u5e8f\u5230\u8fbe\u6570\u7ec4\u7684\u672b\u5c3e\u65f6\uff0c\u5b83\u5c31\u4f1a\u56de\u5230\u6570\u7ec4\u7684\u5f00\u5934\u3002e1000_init()\u4f7f\u7528mbufalloc()\u4e3aE1000\u5206\u914d\u7528\u4e8eDMA\u7684mbuf\u5305\u7f13\u51b2\u533a\u3002\u8fd8\u6709\u4e00\u4e2a\u4f20\u8f93\u73af\uff0c\u9a71\u52a8\u7a0b\u5e8f\u5728\u5176\u4e2d\u653e\u7f6eE1000\u8981\u53d1\u9001\u7684\u6570\u636e\u5305\u3002e1000_init()\u914d\u7f6e\u4e24\u4e2a\u73af\u7684\u5927\u5c0f\u4e3aRX_RING_SIZE\u548cTX_RING_SIZE\u3002 \u5f53net.c\u4e2d\u7684\u7f51\u7edc\u5806\u6808\u9700\u8981\u53d1\u9001\u6570\u636e\u5305\u65f6\uff0c\u5b83\u4f7f\u7528\u4e00\u4e2a\u5305\u542b\u8981\u53d1\u9001\u7684\u6570\u636e\u5305\u7684mbuf\u8c03\u7528e1000_transmit()\u3002\u60a8\u7684\u4f20\u8f93\u4ee3\u7801\u5fc5\u987b\u5728TX(\u4f20\u8f93)\u73af\u7684\u63cf\u8ff0\u7b26\u4e2d\u653e\u7f6e\u4e00\u4e2a\u6307\u5411\u6570\u636e\u5305\u6570\u636e\u7684\u6307\u9488\u3002tx_desc\u63cf\u8ff0\u63cf\u8ff0\u7b26\u683c\u5f0f\u3002\u60a8\u9700\u8981\u786e\u4fdd\u6700\u7ec8\u91ca\u653e\u6bcf\u4e2ambuf\uff0c\u4f46\u53ea\u6709\u5728E1000\u5b8c\u6210\u4e86\u6570\u636e\u5305\u7684\u4f20\u8f93\u4e4b\u540e(E1000\u5728\u63cf\u8ff0\u7b26\u4e2d\u8bbe\u7f6eE1000_TXD_STAT_DD\u4f4d\u6765\u8868\u793a\u8fd9\u4e00\u70b9)\u3002 \u5f53E1000\u4ece\u4ee5\u592a\u7f51\u63a5\u6536\u5230\u6bcf\u4e2a\u5305\u65f6\uff0c\u5b83\u9996\u5148\u5c06\u5305dma\u5230\u4e0b\u4e00\u4e2aRX(\u63a5\u6536)\u73af\u63cf\u8ff0\u7b26\u6307\u5411\u7684mbuf\uff0c\u7136\u540e\u751f\u6210\u4e00\u4e2a\u4e2d\u65ad\u3002\u60a8\u7684e1000_recv()\u4ee3\u7801\u5fc5\u987b\u626b\u63cfRX\u73af\uff0c\u5e76\u901a\u8fc7\u8c03\u7528net_rx()\u5c06\u6bcf\u4e2a\u65b0\u5305\u7684mbuf\u53d1\u9001\u5230\u7f51\u7edc\u5806\u6808(net.c)\u3002\u7136\u540e\uff0c\u60a8\u9700\u8981\u5206\u914d\u4e00\u4e2a\u65b0\u7684mbuf\uff0c\u5e76\u5c06\u5176\u653e\u5165\u63cf\u8ff0\u7b26\u4e2d\uff0c\u4ee5\u4fbf\u5f53E1000\u518d\u6b21\u5230\u8fbeRX\u73af\u4e0a\u7684\u90a3\u4e2a\u70b9\u65f6\uff0c\u5b83\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u533a\uff0c\u4ee5\u4fbfDMA\u65b0\u6570\u636e\u5305\u3002 \u9664\u4e86\u8bfb\u5199RAM\u4e2d\u7684\u63cf\u8ff0\u7b26\u73af\u4e4b\u5916\uff0c\u4f60\u7684\u9a71\u52a8\u7a0b\u5e8f\u8fd8\u9700\u8981\u901a\u8fc7\u5b83\u7684\u5185\u5b58\u6620\u5c04\u63a7\u5236\u5bc4\u5b58\u5668\u4e0eE1000\u4ea4\u4e92\uff0c\u6765\u68c0\u6d4b\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u4f55\u65f6\u53ef\u7528\uff0c\u5e76\u901a\u77e5E1000\u9a71\u52a8\u7a0b\u5e8f\u5df2\u7ecf\u7528\u6570\u636e\u5305\u586b\u5145\u4e86\u4e00\u4e9bTX\u63cf\u8ff0\u7b26\u6765\u53d1\u9001\u3002\u5168\u5c40\u53d8\u91cfregs\u4fdd\u5b58\u7740\u4e00\u4e2a\u6307\u5411E1000\u7b2c\u4e00\u4e2a\u63a7\u5236\u5bc4\u5b58\u5668\u7684\u6307\u9488;\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u5c06regs\u7d22\u5f15\u4e3a\u4e00\u4e2a\u6570\u7ec4\u6765\u83b7\u53d6\u5176\u4ed6\u5bc4\u5b58\u5668\u3002\u60a8\u7279\u522b\u9700\u8981\u4f7f\u7528\u7d22\u5f15E1000_RDT\u548cE1000_TDT\u3002 \u8981\u6d4b\u8bd5\u9a71\u52a8\u7a0b\u5e8f\uff0c\u8bf7\u5728\u4e00\u4e2a\u7a97\u53e3\u4e2d\u8fd0\u884cmake server\uff0c\u5728\u53e6\u4e00\u4e2a\u7a97\u53e3\u4e2d\u8fd0\u884cmake qemu\uff0c\u7136\u540e\u5728xv6\u4e2d\u8fd0\u884cnettests\u3002nettests\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u5c1d\u8bd5\u5411\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u53d1\u9001UDP\u6570\u636e\u5305\uff0c\u8be5\u6570\u636e\u5305\u6307\u5411\u4f7f\u670d\u52a1\u5668\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u5b8c\u6210\u5b9e\u9a8c\uff0cE1000\u9a71\u52a8\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u53d1\u9001\u6570\u636e\u5305\uff0c\u4e5f\u4e0d\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\u60c5\u3002 \u5728\u4f60\u5b8c\u6210\u5b9e\u9a8c\u4e4b\u540e\uff0cE1000\u9a71\u52a8\u7a0b\u5e8f\u5c06\u53d1\u9001\u6570\u636e\u5305\uff0cqemu\u5c06\u628a\u5b83\u53d1\u9001\u5230\u4f60\u7684\u4e3b\u673a\uff0cmake server\u5c06\u770b\u5230\u5b83\uff0c\u5b83\u5c06\u53d1\u9001\u4e00\u4e2a\u54cd\u5e94\u6570\u636e\u5305\uff0c\u7136\u540eE1000\u9a71\u52a8\u7a0b\u5e8f\u548cnettests\u5c06\u770b\u5230\u54cd\u5e94\u6570\u636e\u5305\u3002\u4f46\u662f\uff0c\u5728\u4e3b\u673a\u53d1\u9001\u5e94\u7b54\u4e4b\u524d\uff0c\u5b83\u5411xv6\u53d1\u9001\u4e00\u4e2a\u201cARP\u201d\u8bf7\u6c42\u5305\uff0c\u4ee5\u627e\u51fa\u5b83\u768448\u4f4d\u4ee5\u592a\u7f51\u5730\u5740\uff0c\u5e76\u671f\u671bxv6\u54cd\u5e94\u4e00\u4e2aARP\u5e94\u7b54\u3002\u4e00\u65e6\u4f60\u5b8c\u6210\u4e86E1000\u9a71\u52a8\u7a0b\u5e8f\u7684\u5de5\u4f5c\uff0ckernel/net.c\u5c31\u4f1a\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u5982\u679c\u4e00\u5207\u987a\u5229\uff0cnettests\u5c06\u6253\u5370\u6d4b\u8bd5ping: OK, make server\u5c06\u6253\u5370\u4e00\u6761\u6765\u81eaxv6!\u7684\u6d88\u606f\u3002 \u547d\u4ee4 tcpdump -XXnr packets.pcap \u5c06\u4f1a\u8f93\u51fa\u5982\u4e0b\u5185\u5bb9\uff1a reading from file packets.pcap, link-type EN10MB ( Ethernet ) 15 :27:40.861988 IP 10 .0.2.15.2000 > 10 .0.2.2.25603: UDP, length 19 0x0000: ffff ffff ffff 5254 0012 3456 0800 4500 ......RT..4V..E. 0x0010: 002f 0000 0000 6411 3eae 0a00 020f 0a00 ./....d.>....... 0x0020: 0202 07d0 6403 001b 0000 6120 6d65 7373 ....d.....a.mess 0x0030: 6167 6520 6672 6f6d 2078 7636 21 age.from.xv6! 15 :27:40.862370 ARP, Request who-has 10 .0.2.15 tell 10 .0.2.2, length 28 0x0000: ffff ffff ffff 5255 0a00 0202 0806 0001 ......RU........ 0x0010: 0800 0604 0001 5255 0a00 0202 0a00 0202 ......RU........ 0x0020: 0000 0000 0000 0a00 020f .......... 15 :27:40.862844 ARP, Reply 10 .0.2.15 is-at 52 :54:00:12:34:56, length 28 0x0000: ffff ffff ffff 5254 0012 3456 0806 0001 ......RT..4V.... 0x0010: 0800 0604 0002 5254 0012 3456 0a00 020f ......RT..4V.... 0x0020: 5255 0a00 0202 0a00 0202 RU........ 15 :27:40.863036 IP 10 .0.2.2.25603 > 10 .0.2.15.2000: UDP, length 17 0x0000: 5254 0012 3456 5255 0a00 0202 0800 4500 RT..4VRU......E. 0x0010: 002d 0000 0000 4011 62b0 0a00 0202 0a00 .-....@.b....... 0x0020: 020f 6403 07d0 0019 3406 7468 6973 2069 ..d.....4.this.i 0x0030: 7320 7468 6520 686f 7374 21 s.the.host! \u6211\u4eec\u7684\u8f93\u51fa\u5e94\u8be5\u8fd8\u4f1a\u5305\u542b ARP,Request , ARP,Reply \uff0c UDP , a.message.from, xv6 \u548c this.is.the.host \u3002 nettests \u6267\u884c\u4e00\u4e9b\u5176\u4ed6\u6d4b\u8bd5\uff0c\u6700\u7ec8\u901a\u8fc7(\u771f\u5b9e\u7684)Internet\u5411\u8c37\u6b4c\u7684\u540d\u79f0\u670d\u52a1\u5668\u4e4b\u4e00\u53d1\u9001DNS\u8bf7\u6c42\u3002\u4f60\u5e94\u8be5\u786e\u4fdd\u4f60\u7684\u4ee3\u7801\u901a\u8fc7\u4e86\u6240\u6709\u8fd9\u4e9b\u6d4b\u8bd5\uff0c\u4e4b\u540e\u4f60\u5e94\u8be5\u770b\u5230\u4ee5\u4e0b\u8f93\u51fa: $ nettests nettests running on port 25603 testing ping: OK testing single-process pings: OK testing multi-process pings: OK testing DNS DNS arecord for pdos.csail.mit.edu. is 128 .52.129.126 DNS OK all tests passed. \u786e\u4fdd make grade \u901a\u8fc7\u6240\u6709\u7684\u6d4b\u8bd5\u3002 \u63d0\u793a \u00b6 \u6211\u4eec\u5148\u6765\u5b9e\u73b0 e1000_transmit() \u548c e1000_recv() \u4e24\u4e2a\u51fd\u6570\uff0c\u8fd0\u884c make server \u4ee5\u53ca\u5728xv6\u4e2d\u8fd0\u884c nettests \u3002\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u770b\u5230 nettests \u8c03\u7528\u7684 e1000_transmit() \u8f93\u51fa\u7684\u6587\u5b57\u3002 \u5b9e\u73b0 e1000_transmit \u7684\u63d0\u793a\uff1a \u9996\u5148\u901a\u8fc7\u8bfb\u53d6E1000_TDT\u63a7\u5236\u5bc4\u5b58\u5668\uff0c\u5411E1000\u8bf7\u6c42\u5b83\u671f\u5f85\u4e0b\u4e00\u4e2a\u5305\u7684TX\u73af\u7d22\u5f15\u3002 \u7136\u540e\u68c0\u67e5\u73af\u662f\u5426\u6ea2\u51fa\u3002\u5982\u679cE1000_TDT\u7d22\u5f15\u7684\u63cf\u8ff0\u7b26\u4e2d\u6ca1\u6709\u8bbe\u7f6eE1000_TXD_STAT_DD\uff0c\u5219E1000\u8fd8\u6ca1\u6709\u5b8c\u6210\u4e4b\u524d\u76f8\u5e94\u7684\u4f20\u8f93\u8bf7\u6c42\uff0c\u56e0\u6b64\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u3002 \u5426\u5219\uff0c\u4f7f\u7528mbuffree()\u91ca\u653e\u4ece\u63cf\u8ff0\u7b26(\u5982\u679c\u6709\u7684\u8bdd)\u4f20\u8f93\u7684\u6700\u540e\u4e00\u4e2ambuf\u3002 \u7136\u540e\u586b\u5199\u63cf\u8ff0\u7b26\u3002m->head\u8868\u793a\u6570\u636e\u5305\u5728\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\uff0cm->len\u8868\u793a\u6570\u636e\u5305\u7684\u957f\u5ea6\u3002\u8bbe\u7f6e\u5fc5\u8981\u7684cmd\u6807\u5fd7(\u53c2\u89c1E1000\u624b\u518c\u4e2d\u76843.3\u8282)\uff0c\u5e76\u4fdd\u5b58\u4e00\u4e2a\u6307\u5411mbuf\u7684\u6307\u9488\uff0c\u4ee5\u4fbf\u7a0d\u540e\u91ca\u653e\u3002 \u6700\u540e\uff0c\u901a\u8fc7\u5411E1000_TDT\u7684TX_RING_SIZE\u6a21\u6570\u4e2d\u6dfb\u52a01\u6765\u66f4\u65b0\u73af\u7684\u4f4d\u7f6e\u3002 \u5982\u679ce1000_transmit()\u6210\u529f\u5730\u5c06mbuf\u6dfb\u52a0\u5230\u73af\u4e2d\uff0c\u5219\u8fd4\u56de0\u3002\u5982\u679c\u5931\u8d25(\u4f8b\u5982\uff0c\u6ca1\u6709\u53ef\u7528\u7684\u63cf\u8ff0\u7b26\u6765\u4f20\u8f93mbuf)\uff0c\u8fd4\u56de-1\uff0c\u4ee5\u4fbf\u8c03\u7528\u8005\u77e5\u9053\u91ca\u653embuf\u3002 \u5b9e\u73b0 e1000_recv \u7684\u63d0\u793a\uff1a \u9996\u5148\uff0c\u901a\u8fc7\u83b7\u53d6E1000_RDT\u63a7\u5236\u5bc4\u5b58\u5668\u5e76\u6dfb\u52a0\u4e00\u4e2a\u6a21RX_RING_SIZE\uff0c\u5411E1000\u8bf7\u6c42\u4e0b\u4e00\u4e2a\u7b49\u5f85\u63a5\u6536\u5305(\u5982\u679c\u6709\u7684\u8bdd)\u6240\u5728\u7684\u73af\u7d22\u5f15\u3002 \u7136\u540e\u901a\u8fc7\u68c0\u67e5\u63cf\u8ff0\u7b26\u7684\u72b6\u6001\u90e8\u5206\u4e2d\u7684E1000_RXD_STAT_DD\u4f4d\u6765\u68c0\u67e5\u662f\u5426\u6709\u65b0\u7684\u5305\u53ef\u7528\u3002\u5982\u679c\u6ca1\u6709,\u505c\u6b62\u3002 \u5426\u5219\uff0c\u5c06mbuf\u7684m->len\u66f4\u65b0\u4e3a\u63cf\u8ff0\u7b26\u4e2d\u62a5\u544a\u7684\u957f\u5ea6\u3002\u4f7f\u7528net_rx()\u5c06mbuf\u4ea4\u4ed8\u5230\u7f51\u7edc\u5806\u6808\u3002 \u7136\u540e\u4f7f\u7528mbufalloc()\u5206\u914d\u4e00\u4e2a\u65b0\u7684mbuf\u6765\u66ff\u6362net_rx()\u6240\u5206\u914d\u7684mbuf\u3002\u5c06\u5b83\u7684\u6570\u636e\u6307\u9488(m->\u5934)\u5199\u5165\u63cf\u8ff0\u7b26\u3002\u5c06\u63cf\u8ff0\u7b26\u7684\u72b6\u6001\u4f4d\u6e05\u9664\u4e3a\u96f6\u3002 \u6700\u540e\uff0c\u5c06E1000_RDT\u5bc4\u5b58\u5668\u66f4\u65b0\u4e3a\u6240\u5904\u7406\u7684\u6700\u540e\u4e00\u4e2a\u73af\u63cf\u8ff0\u7b26\u7684\u7d22\u5f15\u3002 e1000_init()\u4f7f\u7528mbufs\u521d\u59cb\u5316RX\u73af\uff0c\u60a8\u5c06\u9700\u8981\u4e86\u89e3\u5b83\u662f\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u501f\u7528\u4ee3\u7801\u3002 \u5728\u67d0\u4e2a\u70b9\u4e0a\uff0c\u5df2\u7ecf\u5230\u8fbe\u7684\u6570\u636e\u5305\u7684\u603b\u6570\u5c06\u8d85\u8fc7\u73af\u7684\u5927\u5c0f(16);\u786e\u4fdd\u4f60\u7684\u4ee3\u7801\u53ef\u4ee5\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002 \u6211\u4eec\u9700\u8981\u4f7f\u7528\u9501\u6765\u5e94\u5bf9\u4ee5\u4e0b\u60c5\u51b5:xv6\u53ef\u80fd\u4ece\u591a\u4e2a\u8fdb\u7a0b\u4f7f\u7528E1000\uff0c\u6216\u8005\u53ef\u80fd\u5728\u4e2d\u65ad\u5230\u8fbe\u65f6\u5728\u5185\u6838\u7ebf\u7a0b\u4e2d\u4f7f\u7528E1000\u3002 \u5982\u679c\u60f3\u8981\u4f7f\u7528\u6211\u7684 docker \u73af\u5883\u6765\u6d4b\u8bd5\uff0c\u9700\u8981\u4fee\u6539 Makefile \uff0c\u76f8\u6bd4\u4e8e\u5176\u4ed6\u5b9e\u9a8c\uff0c\u589e\u52a0\u4e86 make docker-server \u547d\u4ee4\u3002\u9700\u8981\u5148\u6267\u884c make docker-qemu \u7136\u540e\u6267\u884c make docker-server \uff0c\u518d\u6267\u884c nettests \u6765\u6d4b\u8bd5\u4ee3\u7801\u3002\u5177\u4f53 Makefile \u6dfb\u52a0\u7684\u5185\u5bb9\u5982\u4e0b\uff1a ## ==================Docker Commands Start====================================== docker : -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash docker-grade : -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make grade\" docker-qemu : -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make qemu\" docker-qemu-gdb : -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make qemu-gdb\" docker-gdb : . gdbinit docker exec -it xv6-labs-2020 /bin/bash -c \"gdb-multiarch --command .gdbinit\" docker-server : docker exec -it xv6-labs-2020 /bin/bash -c \"make server\" docker-rm : docker rm -f xv6-labs-2020 ## ==================Docker Commands End======================================== \u53c2\u8003\u7b54\u6848 \u672c\u6b21\u5b9e\u9a8c\uff0c\u6211\u57fa\u672c\u4e0a\u53c2\u8003\u4e86\u522b\u4eba\u7684\u7b54\u6848\u3002\u672c\u6587\u5217\u4e3e\u4e86\u975e\u5e38\u591a\u7684\u53c2\u8003\u6587\u732e\uff0c\u6ca1\u6709\u5fc5\u8981\u53bb\u67e5\u770b\u3002\u66f4\u91cd\u8981\u7684\u662f\u5bf9\u6e90\u7801\u7684\u9605\u8bfb\u3002\u6211\u5bf9\u7f51\u5361\u9a71\u52a8\u8fd8\u662f\u4e0d\u592a\u4e86\u89e3\uff0c\u9677\u5165\u53c2\u8003\u8d44\u6599\u5f88\u4e45\u4e5f\u6ca1\u6709\u8fdb\u5c55\uff0c\u7d22\u6027\u4e0d\u597d\u610f\u601d\u5730\u76f4\u63a5\u53c2\u8003\u4e86 \u522b\u4eba\u7684\u7b54\u6848 \u3002 \u5b9e\u73b0\u51fd\u6570 kernel/e10000.c\uff1ae1000_transmit() \u3002\u8fd9\u91cc\u57fa\u672c\u4e0a\u5c31\u6309\u7167\u63d0\u793a\u52a0\u4e0a\u4e00\u4e9b\u731c\u6d4b\u6765\u5b9e\u73b0\u3002 int e1000_transmit ( struct mbuf * m ) { // // Your code here. // // the mbuf contains an ethernet frame; program it into // the TX descriptor ring so that the e1000 sends it. Stash // a pointer so that it can be freed after sending. // int idx ; acquire ( & e1000_lock ); idx = regs [ E1000_TDT ]; if (( tx_ring [ idx ]. status & E1000_TXD_STAT_DD ) == 0 ){ release ( & e1000_lock ); return -1 ; } if ( tx_mbufs [ idx ] != 0 ) mbuffree ( tx_mbufs [ idx ]); tx_mbufs [ idx ] = m ; tx_ring [ idx ]. addr = ( uint64 ) m -> head ; tx_ring [ idx ]. length = ( uint16 ) m -> len ; tx_ring [ idx ]. cmd = E1000_TXD_CMD_EOP | E1000_TXD_CMD_RS ; regs [ E1000_TDT ] = ( idx + 1 ) % TX_RING_SIZE ; release ( & e1000_lock ); return 0 ; } \u5b9e\u73b0\u51fd\u6570 kernel/e1000.c:e1000_recv() \u3002\u8fd9\u91cc\u6839\u636e\u63d0\u793a\u7684\u8bdd\uff0c\u6211\u662f\u4e00\u4e0b\u5b50\u60f3\u4e0d\u5230\u4e0d\u7528\u9501\u7684\u7248\u672c\u3002 static void e1000_recv ( void ) { // // Your code here. // // Check for packets that have arrived from the e1000 // Create and deliver an mbuf for each packet (using net_rx()). // int idx ; while ( 1 ) { idx = ( regs [ E1000_RDT ] + 1 ) % RX_RING_SIZE ; if (( rx_ring [ idx ]. status & E1000_RXD_STAT_DD ) == 0 ){ break ; } rx_mbufs [ idx ] -> len = rx_ring [ idx ]. length ; net_rx ( rx_mbufs [ idx ]); rx_mbufs [ idx ] = mbufalloc ( 0 ); rx_ring [ idx ]. addr = ( uint64 ) rx_mbufs [ idx ] -> head ; rx_ring [ idx ]. status = 0 ; regs [ E1000_RDT ] = idx ; } }","title":"Lab11 Networking"},{"location":"6.S081/Lab11-Networking/#lab11-networking","text":"\u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\u6211\u4eec\u4e3axv6\u5b9e\u73b0\u4e00\u4e2a\u7f51\u5361(network interface card, NIC)\u9a71\u52a8\u3002 \u83b7\u53d6\u4ee3\u7801\uff1a make clean git fetch git checkout net","title":"Lab11: Networking"},{"location":"6.S081/Lab11-Networking/#_1","text":"\u53ef\u4ee5\u53c2\u8003 xv6-book \u7684\u7b2c\u4e94\u7ae0\u5185\u5bb9\uff1a\u4e2d\u65ad\u548c\u8bbe\u5907\u9a71\u52a8\u3002 \u6211\u4eec\u9700\u8981\u4f7f\u7528 E1000 \u7f51\u5361\u9a71\u52a8\u6765\u5904\u7406\u7f51\u7edc\u8fde\u63a5\u3002\u5bf9\u4e8exv6\uff0c E1000 \u5c31\u662f\u4e00\u4e2a\u771f\u5b9e\u7684\u7f51\u5361\u8bbe\u5907\uff0c\u53ef\u4ee5\u548c\u771f\u5b9e\u7684\u5c40\u57df\u7f51\uff08Ethernet local area network\uff09\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u4f7f\u7528\u7684 E1000 \u8bbe\u5907\u662f\u7531qemu\u63d0\u4f9b\u7684\u865a\u62df\u8bbe\u5907\uff0c\u8fde\u63a5\u7684\u5c40\u57df\u7f51\u4e5f\u662f\u7531qemu\u865a\u62df\u7684\u3002\u5728\u8fd9\u4e2a\u865a\u62df\u7684\u5c40\u57df\u7f51\u4e0a\uff0cxv6\u7684\u5c40\u57df\u7f51IP\u5730\u5740\u662f 10.0.2.15 \u3002\u8fd0\u884cqemu\u7684\u4e3b\u673a\u5728\u8fd9\u4e2a\u865a\u62df\u5c40\u57df\u7f51\u4e0a\u7684IP\u5730\u5740\u662f 10.0.2.2 \u3002\u5f53xv6\u4f7f\u7528E1000\u53d1\u9001\u4e00\u4e2a\u7f51\u7edc\u5305\u5230 10.0.2.2 \u65f6\uff0cqemu\u4f1a\u5c06\u8fd9\u4e2a\u5305\u53d1\u9001\u5230\u8fd0\u884c\u8fd9\u4e2aqemu\u7a0b\u5e8f\u7684\u4e3b\u673a\u4e0a\u7684\u5408\u9002\u7684\u5e94\u7528\u4e0a\u3002 \u6211\u4eec\u5c06\u4f7f\u7528QEMU\u7684 user-mode network stack \u3002QEMU\u5173\u4e8e\u7528\u6237\u6a21\u5f0f\u7684\u6808\u7684\u8bf4\u660e\u5728 \u8fd9\u4e2a\u7f51\u7ad9 \u4e0a\u3002\u5b9e\u9a8c\u4ee3\u7801\u5df2\u7ecf\u4fee\u6539Makefile\u652f\u6301QEMU\u7684\u7528\u6237\u6a21\u5f0f\u7f51\u7edc\u6808\u548cE1000\u7f51\u5361\u3002 Makefile\u914d\u7f6e\u7684QEMU\u5c06\u6240\u6709\u8f93\u5165\u8f93\u51fa\u7684\u7f51\u7edc\u5305\u8bb0\u5f55\u5728\u6587\u4ef6 packets.pcap \u4e2d\u3002\u8981\u56de\u987e\u8fd9\u4e9b\u8bb0\u5f55\u6765\u786e\u8ba4xv6\u6210\u529f\u53d1\u9001\u5e76\u83b7\u5f97\u671f\u671b\u83b7\u5f97\u7684\u6b63\u786e\u7684\u7f51\u7edc\u5305\u3002\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u89e3\u6790\u7f51\u7edc\u5305\uff1a tcpdump -XXnr packets.pcap \u5b9e\u9a8c\u4ee3\u7801\u6dfb\u52a0\u4e86\u4e00\u4e9b\u91cd\u8981\u7684\u6587\u4ef6\uff0c\u503c\u5f97\u6211\u4eec\u5173\u6ce8\u3002\u6587\u4ef6 kernel/e1000.c \u5305\u542b E1000 \u521d\u59cb\u5316\u7684\u4ee3\u7801\u4ee5\u53ca\u6e05\u7a7a\u53d1\u9001\u548c\u83b7\u5f97\u7684\u7f51\u7edc\u5305\u3002\u5b83\u4f7f\u7528\u4e86\u4e00\u4e9b\u5b9a\u4e49\u5728 kernel/e1000_dev.h \u4e2d\u7684\u5b8f\u5b9a\u4e49\u548c\u58f0\u660e\u3002\u5177\u4f53\u9700\u8981\u7684\u5bc4\u5b58\u5668\u3001\u5b8f\u7b49\u4fe1\u606f\u5728E1000\u7684 \u8f6f\u4ef6\u5f00\u53d1\u6587\u6863 \u3002 kernel/net.c \u548c kernel/net.h \u5305\u542b\u4e00\u4e9b\u7b80\u5355\u7684\u7f51\u7edc\u6808\uff0c\u5b9e\u73b0\u4e86IP\u3001UDP\u548cARP\u534f\u8bae\u3002\u8fd9\u4e9b\u6587\u4ef6\u5305\u542b\u4e00\u4e2a\u7075\u6d3b\u7684\u6570\u636e\u7ed3\u6784 mbuf \u6765\u4fdd\u5b58\u8fd9\u4e9b\u5305\u3002\u6700\u540e kernel/pci.c \u5305\u542b\u7684\u4ee3\u7801\u7528\u4e8e\u5728xv6\u542f\u52a8\u7684\u65f6\u5019\u67e5\u627e\u6302\u8f7d\u5728PCI\u4e3b\u7ebf\u4e0a\u7684E1000\u7f51\u5361\u3002","title":"\u80cc\u666f"},{"location":"6.S081/Lab11-Networking/#_2","text":"\u95ee\u9898\u63cf\u8ff0 \u6211\u4eec\u8981\u5b8c\u5584 e1000_transmit() \u548c e1000_recv() \uff0c\u4ee5\u53ca kernel/e1000.c \uff0c\u4f7f\u5f97\u9a71\u52a8\u80fd\u591f\u53d1\u9001\u548c\u63a5\u6536\u7f51\u7edc\u5305\u3002\u6700\u540e\u901a\u8fc7 make grade \u6d4b\u8bd5\u3002 \u91cd\u8981\u63d0\u793a \u6211\u4eec\u53ef\u4ee5\u53c2\u8003E100\u7684 \u8f6f\u4ef6\u5f00\u53d1\u6587\u6863 \u3002\u4f46\u662f\u6587\u6863\u975e\u5e38\u957f\uff0c\u8fd9\u91cc\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u51e0\u4e2a\u7ae0\u8282\uff1a Section 2 \u662f\u6700\u91cd\u8981\u7684\uff0c\u63cf\u8ff0\u4e86\u6574\u4e2a\u8bbe\u5907\u7684\u5927\u4f53\u60c5\u51b5\u3002 Section 3.2 \u63cf\u8ff0\u4e86\u7f51\u7edc\u5305\u7684\u63a5\u6536\u6d41\u7a0b\u3002 Section 3.3 \u548c Section 3.4 \u63cf\u8ff0\u4e86\u7f51\u7edc\u5305\u7684\u53d1\u9001\u6d41\u7a0b\u3002 Section 13 \u5217\u51fa\u4e86E1000\u63d0\u4f9b\u7684\u5bc4\u5b58\u5668\u3002 Section 14 \u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u5b9e\u9a8c\u4ee3\u7801\u63d0\u4f9b\u7684\u521d\u59cb\u5316\u4ee3\u7801\u3002 \u6d4f\u89c8E100\u7684 \u8f6f\u4ef6\u5f00\u53d1\u6587\u6863 \u7684\u518d\u6b21\u8bf4\u660e\u3002QEMU\u6a21\u62df\u7684\u662f 82540EM \u3002\u6d4f\u89c8\u4e00\u4e0b Section 2 \u7684\u5185\u5bb9\u6765\u5927\u4f53\u4e86\u89e3\u8fd9\u4e9b\u5185\u5bb9\u3002\u5728\u5b9e\u73b0\u9a71\u52a8\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u719f\u6089 Section 3 \uff0c Section 14 \u548c Section 4.1 \u7684\u5185\u5bb9\u3002\u53ef\u80fd\u8fd8\u9700\u8981 Section 13 \u4f5c\u4e3a\u53c2\u8003\u3002\u4e0d\u9700\u8981\u5b8c\u5168\u641e\u6e05\u695a\u6587\u6863\u7684\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u4e86\u89e3\u4e00\u4e2a\u5927\u6982\u3002E1000\u6709\u975e\u5e38\u591a\u7684\u7279\u70b9\uff0c\u6211\u4eec\u53ea\u4f1a\u7528\u5230\u4e00\u4e9b\u975e\u5e38\u57fa\u7840\u7684\u529f\u80fd\u3002 \u5728 e1000.c \u4e2d\u5b9e\u73b0\u7684 e1000_init() \u5b9e\u76f4\u63a5\u4eceRAM\u4e2d\u8bfb\u5199\u4fe1\u606f\u3002\u8fd9\u79cd\u6280\u672f\u53eb\u505aDMA(direct memory access)\uff0c\u8868\u793a\u7f51\u5361E1000\u76f4\u63a5\u4eceRAM\u4e2d\u8bfb\u5199\u4fe1\u606f\u3002 \u7531\u4e8e\u6570\u636e\u5305\u7684\u7a81\u53d1\u5230\u8fbe\u53ef\u80fd\u6bd4\u9a71\u52a8\u7a0b\u5e8f\u5904\u7406\u5b83\u4eec\u7684\u901f\u5ea6\u5feb\uff0ce1000_init()\u4e3aE1000\u63d0\u4f9b\u4e86\u591a\u4e2a\u7f13\u51b2\u533a\uff0cE1000\u53ef\u4ee5\u5c06\u6570\u636e\u5305\u5199\u5165\u5176\u4e2d\u3002E1000\u8981\u6c42\u8fd9\u4e9b\u7f13\u51b2\u533a\u5728RAM\u4e2d\u7531\u4e00\u7ec4\u201c\u63cf\u8ff0\u7b26\u201d\u6765\u63cf\u8ff0;\u6bcf\u4e2a\u63cf\u8ff0\u7b26\u5728RAM\u4e2d\u5305\u542b\u4e00\u4e2a\u5730\u5740\uff0cE1000\u53ef\u4ee5\u5728\u5176\u4e2d\u5199\u4e00\u4e2a\u63a5\u6536\u5230\u7684\u5305\u3002struct rx_desc\u63cf\u8ff0\u63cf\u8ff0\u7b26\u683c\u5f0f\u3002\u63cf\u8ff0\u7b26\u6570\u7ec4\u79f0\u4e3a\u63a5\u6536\u73af\uff0c\u6216\u63a5\u6536\u961f\u5217\u3002\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u5b83\u662f\u4e00\u4e2a\u5706\u73af\uff0c\u5f53\u5361\u6216\u9a71\u52a8\u7a0b\u5e8f\u5230\u8fbe\u6570\u7ec4\u7684\u672b\u5c3e\u65f6\uff0c\u5b83\u5c31\u4f1a\u56de\u5230\u6570\u7ec4\u7684\u5f00\u5934\u3002e1000_init()\u4f7f\u7528mbufalloc()\u4e3aE1000\u5206\u914d\u7528\u4e8eDMA\u7684mbuf\u5305\u7f13\u51b2\u533a\u3002\u8fd8\u6709\u4e00\u4e2a\u4f20\u8f93\u73af\uff0c\u9a71\u52a8\u7a0b\u5e8f\u5728\u5176\u4e2d\u653e\u7f6eE1000\u8981\u53d1\u9001\u7684\u6570\u636e\u5305\u3002e1000_init()\u914d\u7f6e\u4e24\u4e2a\u73af\u7684\u5927\u5c0f\u4e3aRX_RING_SIZE\u548cTX_RING_SIZE\u3002 \u5f53net.c\u4e2d\u7684\u7f51\u7edc\u5806\u6808\u9700\u8981\u53d1\u9001\u6570\u636e\u5305\u65f6\uff0c\u5b83\u4f7f\u7528\u4e00\u4e2a\u5305\u542b\u8981\u53d1\u9001\u7684\u6570\u636e\u5305\u7684mbuf\u8c03\u7528e1000_transmit()\u3002\u60a8\u7684\u4f20\u8f93\u4ee3\u7801\u5fc5\u987b\u5728TX(\u4f20\u8f93)\u73af\u7684\u63cf\u8ff0\u7b26\u4e2d\u653e\u7f6e\u4e00\u4e2a\u6307\u5411\u6570\u636e\u5305\u6570\u636e\u7684\u6307\u9488\u3002tx_desc\u63cf\u8ff0\u63cf\u8ff0\u7b26\u683c\u5f0f\u3002\u60a8\u9700\u8981\u786e\u4fdd\u6700\u7ec8\u91ca\u653e\u6bcf\u4e2ambuf\uff0c\u4f46\u53ea\u6709\u5728E1000\u5b8c\u6210\u4e86\u6570\u636e\u5305\u7684\u4f20\u8f93\u4e4b\u540e(E1000\u5728\u63cf\u8ff0\u7b26\u4e2d\u8bbe\u7f6eE1000_TXD_STAT_DD\u4f4d\u6765\u8868\u793a\u8fd9\u4e00\u70b9)\u3002 \u5f53E1000\u4ece\u4ee5\u592a\u7f51\u63a5\u6536\u5230\u6bcf\u4e2a\u5305\u65f6\uff0c\u5b83\u9996\u5148\u5c06\u5305dma\u5230\u4e0b\u4e00\u4e2aRX(\u63a5\u6536)\u73af\u63cf\u8ff0\u7b26\u6307\u5411\u7684mbuf\uff0c\u7136\u540e\u751f\u6210\u4e00\u4e2a\u4e2d\u65ad\u3002\u60a8\u7684e1000_recv()\u4ee3\u7801\u5fc5\u987b\u626b\u63cfRX\u73af\uff0c\u5e76\u901a\u8fc7\u8c03\u7528net_rx()\u5c06\u6bcf\u4e2a\u65b0\u5305\u7684mbuf\u53d1\u9001\u5230\u7f51\u7edc\u5806\u6808(net.c)\u3002\u7136\u540e\uff0c\u60a8\u9700\u8981\u5206\u914d\u4e00\u4e2a\u65b0\u7684mbuf\uff0c\u5e76\u5c06\u5176\u653e\u5165\u63cf\u8ff0\u7b26\u4e2d\uff0c\u4ee5\u4fbf\u5f53E1000\u518d\u6b21\u5230\u8fbeRX\u73af\u4e0a\u7684\u90a3\u4e2a\u70b9\u65f6\uff0c\u5b83\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u533a\uff0c\u4ee5\u4fbfDMA\u65b0\u6570\u636e\u5305\u3002 \u9664\u4e86\u8bfb\u5199RAM\u4e2d\u7684\u63cf\u8ff0\u7b26\u73af\u4e4b\u5916\uff0c\u4f60\u7684\u9a71\u52a8\u7a0b\u5e8f\u8fd8\u9700\u8981\u901a\u8fc7\u5b83\u7684\u5185\u5b58\u6620\u5c04\u63a7\u5236\u5bc4\u5b58\u5668\u4e0eE1000\u4ea4\u4e92\uff0c\u6765\u68c0\u6d4b\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u4f55\u65f6\u53ef\u7528\uff0c\u5e76\u901a\u77e5E1000\u9a71\u52a8\u7a0b\u5e8f\u5df2\u7ecf\u7528\u6570\u636e\u5305\u586b\u5145\u4e86\u4e00\u4e9bTX\u63cf\u8ff0\u7b26\u6765\u53d1\u9001\u3002\u5168\u5c40\u53d8\u91cfregs\u4fdd\u5b58\u7740\u4e00\u4e2a\u6307\u5411E1000\u7b2c\u4e00\u4e2a\u63a7\u5236\u5bc4\u5b58\u5668\u7684\u6307\u9488;\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u5c06regs\u7d22\u5f15\u4e3a\u4e00\u4e2a\u6570\u7ec4\u6765\u83b7\u53d6\u5176\u4ed6\u5bc4\u5b58\u5668\u3002\u60a8\u7279\u522b\u9700\u8981\u4f7f\u7528\u7d22\u5f15E1000_RDT\u548cE1000_TDT\u3002 \u8981\u6d4b\u8bd5\u9a71\u52a8\u7a0b\u5e8f\uff0c\u8bf7\u5728\u4e00\u4e2a\u7a97\u53e3\u4e2d\u8fd0\u884cmake server\uff0c\u5728\u53e6\u4e00\u4e2a\u7a97\u53e3\u4e2d\u8fd0\u884cmake qemu\uff0c\u7136\u540e\u5728xv6\u4e2d\u8fd0\u884cnettests\u3002nettests\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u5c1d\u8bd5\u5411\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u53d1\u9001UDP\u6570\u636e\u5305\uff0c\u8be5\u6570\u636e\u5305\u6307\u5411\u4f7f\u670d\u52a1\u5668\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u5b8c\u6210\u5b9e\u9a8c\uff0cE1000\u9a71\u52a8\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u53d1\u9001\u6570\u636e\u5305\uff0c\u4e5f\u4e0d\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\u60c5\u3002 \u5728\u4f60\u5b8c\u6210\u5b9e\u9a8c\u4e4b\u540e\uff0cE1000\u9a71\u52a8\u7a0b\u5e8f\u5c06\u53d1\u9001\u6570\u636e\u5305\uff0cqemu\u5c06\u628a\u5b83\u53d1\u9001\u5230\u4f60\u7684\u4e3b\u673a\uff0cmake server\u5c06\u770b\u5230\u5b83\uff0c\u5b83\u5c06\u53d1\u9001\u4e00\u4e2a\u54cd\u5e94\u6570\u636e\u5305\uff0c\u7136\u540eE1000\u9a71\u52a8\u7a0b\u5e8f\u548cnettests\u5c06\u770b\u5230\u54cd\u5e94\u6570\u636e\u5305\u3002\u4f46\u662f\uff0c\u5728\u4e3b\u673a\u53d1\u9001\u5e94\u7b54\u4e4b\u524d\uff0c\u5b83\u5411xv6\u53d1\u9001\u4e00\u4e2a\u201cARP\u201d\u8bf7\u6c42\u5305\uff0c\u4ee5\u627e\u51fa\u5b83\u768448\u4f4d\u4ee5\u592a\u7f51\u5730\u5740\uff0c\u5e76\u671f\u671bxv6\u54cd\u5e94\u4e00\u4e2aARP\u5e94\u7b54\u3002\u4e00\u65e6\u4f60\u5b8c\u6210\u4e86E1000\u9a71\u52a8\u7a0b\u5e8f\u7684\u5de5\u4f5c\uff0ckernel/net.c\u5c31\u4f1a\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u5982\u679c\u4e00\u5207\u987a\u5229\uff0cnettests\u5c06\u6253\u5370\u6d4b\u8bd5ping: OK, make server\u5c06\u6253\u5370\u4e00\u6761\u6765\u81eaxv6!\u7684\u6d88\u606f\u3002 \u547d\u4ee4 tcpdump -XXnr packets.pcap \u5c06\u4f1a\u8f93\u51fa\u5982\u4e0b\u5185\u5bb9\uff1a reading from file packets.pcap, link-type EN10MB ( Ethernet ) 15 :27:40.861988 IP 10 .0.2.15.2000 > 10 .0.2.2.25603: UDP, length 19 0x0000: ffff ffff ffff 5254 0012 3456 0800 4500 ......RT..4V..E. 0x0010: 002f 0000 0000 6411 3eae 0a00 020f 0a00 ./....d.>....... 0x0020: 0202 07d0 6403 001b 0000 6120 6d65 7373 ....d.....a.mess 0x0030: 6167 6520 6672 6f6d 2078 7636 21 age.from.xv6! 15 :27:40.862370 ARP, Request who-has 10 .0.2.15 tell 10 .0.2.2, length 28 0x0000: ffff ffff ffff 5255 0a00 0202 0806 0001 ......RU........ 0x0010: 0800 0604 0001 5255 0a00 0202 0a00 0202 ......RU........ 0x0020: 0000 0000 0000 0a00 020f .......... 15 :27:40.862844 ARP, Reply 10 .0.2.15 is-at 52 :54:00:12:34:56, length 28 0x0000: ffff ffff ffff 5254 0012 3456 0806 0001 ......RT..4V.... 0x0010: 0800 0604 0002 5254 0012 3456 0a00 020f ......RT..4V.... 0x0020: 5255 0a00 0202 0a00 0202 RU........ 15 :27:40.863036 IP 10 .0.2.2.25603 > 10 .0.2.15.2000: UDP, length 17 0x0000: 5254 0012 3456 5255 0a00 0202 0800 4500 RT..4VRU......E. 0x0010: 002d 0000 0000 4011 62b0 0a00 0202 0a00 .-....@.b....... 0x0020: 020f 6403 07d0 0019 3406 7468 6973 2069 ..d.....4.this.i 0x0030: 7320 7468 6520 686f 7374 21 s.the.host! \u6211\u4eec\u7684\u8f93\u51fa\u5e94\u8be5\u8fd8\u4f1a\u5305\u542b ARP,Request , ARP,Reply \uff0c UDP , a.message.from, xv6 \u548c this.is.the.host \u3002 nettests \u6267\u884c\u4e00\u4e9b\u5176\u4ed6\u6d4b\u8bd5\uff0c\u6700\u7ec8\u901a\u8fc7(\u771f\u5b9e\u7684)Internet\u5411\u8c37\u6b4c\u7684\u540d\u79f0\u670d\u52a1\u5668\u4e4b\u4e00\u53d1\u9001DNS\u8bf7\u6c42\u3002\u4f60\u5e94\u8be5\u786e\u4fdd\u4f60\u7684\u4ee3\u7801\u901a\u8fc7\u4e86\u6240\u6709\u8fd9\u4e9b\u6d4b\u8bd5\uff0c\u4e4b\u540e\u4f60\u5e94\u8be5\u770b\u5230\u4ee5\u4e0b\u8f93\u51fa: $ nettests nettests running on port 25603 testing ping: OK testing single-process pings: OK testing multi-process pings: OK testing DNS DNS arecord for pdos.csail.mit.edu. is 128 .52.129.126 DNS OK all tests passed. \u786e\u4fdd make grade \u901a\u8fc7\u6240\u6709\u7684\u6d4b\u8bd5\u3002","title":"\u4efb\u52a1"},{"location":"6.S081/Lab11-Networking/#_3","text":"\u6211\u4eec\u5148\u6765\u5b9e\u73b0 e1000_transmit() \u548c e1000_recv() \u4e24\u4e2a\u51fd\u6570\uff0c\u8fd0\u884c make server \u4ee5\u53ca\u5728xv6\u4e2d\u8fd0\u884c nettests \u3002\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u770b\u5230 nettests \u8c03\u7528\u7684 e1000_transmit() \u8f93\u51fa\u7684\u6587\u5b57\u3002 \u5b9e\u73b0 e1000_transmit \u7684\u63d0\u793a\uff1a \u9996\u5148\u901a\u8fc7\u8bfb\u53d6E1000_TDT\u63a7\u5236\u5bc4\u5b58\u5668\uff0c\u5411E1000\u8bf7\u6c42\u5b83\u671f\u5f85\u4e0b\u4e00\u4e2a\u5305\u7684TX\u73af\u7d22\u5f15\u3002 \u7136\u540e\u68c0\u67e5\u73af\u662f\u5426\u6ea2\u51fa\u3002\u5982\u679cE1000_TDT\u7d22\u5f15\u7684\u63cf\u8ff0\u7b26\u4e2d\u6ca1\u6709\u8bbe\u7f6eE1000_TXD_STAT_DD\uff0c\u5219E1000\u8fd8\u6ca1\u6709\u5b8c\u6210\u4e4b\u524d\u76f8\u5e94\u7684\u4f20\u8f93\u8bf7\u6c42\uff0c\u56e0\u6b64\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u3002 \u5426\u5219\uff0c\u4f7f\u7528mbuffree()\u91ca\u653e\u4ece\u63cf\u8ff0\u7b26(\u5982\u679c\u6709\u7684\u8bdd)\u4f20\u8f93\u7684\u6700\u540e\u4e00\u4e2ambuf\u3002 \u7136\u540e\u586b\u5199\u63cf\u8ff0\u7b26\u3002m->head\u8868\u793a\u6570\u636e\u5305\u5728\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\uff0cm->len\u8868\u793a\u6570\u636e\u5305\u7684\u957f\u5ea6\u3002\u8bbe\u7f6e\u5fc5\u8981\u7684cmd\u6807\u5fd7(\u53c2\u89c1E1000\u624b\u518c\u4e2d\u76843.3\u8282)\uff0c\u5e76\u4fdd\u5b58\u4e00\u4e2a\u6307\u5411mbuf\u7684\u6307\u9488\uff0c\u4ee5\u4fbf\u7a0d\u540e\u91ca\u653e\u3002 \u6700\u540e\uff0c\u901a\u8fc7\u5411E1000_TDT\u7684TX_RING_SIZE\u6a21\u6570\u4e2d\u6dfb\u52a01\u6765\u66f4\u65b0\u73af\u7684\u4f4d\u7f6e\u3002 \u5982\u679ce1000_transmit()\u6210\u529f\u5730\u5c06mbuf\u6dfb\u52a0\u5230\u73af\u4e2d\uff0c\u5219\u8fd4\u56de0\u3002\u5982\u679c\u5931\u8d25(\u4f8b\u5982\uff0c\u6ca1\u6709\u53ef\u7528\u7684\u63cf\u8ff0\u7b26\u6765\u4f20\u8f93mbuf)\uff0c\u8fd4\u56de-1\uff0c\u4ee5\u4fbf\u8c03\u7528\u8005\u77e5\u9053\u91ca\u653embuf\u3002 \u5b9e\u73b0 e1000_recv \u7684\u63d0\u793a\uff1a \u9996\u5148\uff0c\u901a\u8fc7\u83b7\u53d6E1000_RDT\u63a7\u5236\u5bc4\u5b58\u5668\u5e76\u6dfb\u52a0\u4e00\u4e2a\u6a21RX_RING_SIZE\uff0c\u5411E1000\u8bf7\u6c42\u4e0b\u4e00\u4e2a\u7b49\u5f85\u63a5\u6536\u5305(\u5982\u679c\u6709\u7684\u8bdd)\u6240\u5728\u7684\u73af\u7d22\u5f15\u3002 \u7136\u540e\u901a\u8fc7\u68c0\u67e5\u63cf\u8ff0\u7b26\u7684\u72b6\u6001\u90e8\u5206\u4e2d\u7684E1000_RXD_STAT_DD\u4f4d\u6765\u68c0\u67e5\u662f\u5426\u6709\u65b0\u7684\u5305\u53ef\u7528\u3002\u5982\u679c\u6ca1\u6709,\u505c\u6b62\u3002 \u5426\u5219\uff0c\u5c06mbuf\u7684m->len\u66f4\u65b0\u4e3a\u63cf\u8ff0\u7b26\u4e2d\u62a5\u544a\u7684\u957f\u5ea6\u3002\u4f7f\u7528net_rx()\u5c06mbuf\u4ea4\u4ed8\u5230\u7f51\u7edc\u5806\u6808\u3002 \u7136\u540e\u4f7f\u7528mbufalloc()\u5206\u914d\u4e00\u4e2a\u65b0\u7684mbuf\u6765\u66ff\u6362net_rx()\u6240\u5206\u914d\u7684mbuf\u3002\u5c06\u5b83\u7684\u6570\u636e\u6307\u9488(m->\u5934)\u5199\u5165\u63cf\u8ff0\u7b26\u3002\u5c06\u63cf\u8ff0\u7b26\u7684\u72b6\u6001\u4f4d\u6e05\u9664\u4e3a\u96f6\u3002 \u6700\u540e\uff0c\u5c06E1000_RDT\u5bc4\u5b58\u5668\u66f4\u65b0\u4e3a\u6240\u5904\u7406\u7684\u6700\u540e\u4e00\u4e2a\u73af\u63cf\u8ff0\u7b26\u7684\u7d22\u5f15\u3002 e1000_init()\u4f7f\u7528mbufs\u521d\u59cb\u5316RX\u73af\uff0c\u60a8\u5c06\u9700\u8981\u4e86\u89e3\u5b83\u662f\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u501f\u7528\u4ee3\u7801\u3002 \u5728\u67d0\u4e2a\u70b9\u4e0a\uff0c\u5df2\u7ecf\u5230\u8fbe\u7684\u6570\u636e\u5305\u7684\u603b\u6570\u5c06\u8d85\u8fc7\u73af\u7684\u5927\u5c0f(16);\u786e\u4fdd\u4f60\u7684\u4ee3\u7801\u53ef\u4ee5\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002 \u6211\u4eec\u9700\u8981\u4f7f\u7528\u9501\u6765\u5e94\u5bf9\u4ee5\u4e0b\u60c5\u51b5:xv6\u53ef\u80fd\u4ece\u591a\u4e2a\u8fdb\u7a0b\u4f7f\u7528E1000\uff0c\u6216\u8005\u53ef\u80fd\u5728\u4e2d\u65ad\u5230\u8fbe\u65f6\u5728\u5185\u6838\u7ebf\u7a0b\u4e2d\u4f7f\u7528E1000\u3002 \u5982\u679c\u60f3\u8981\u4f7f\u7528\u6211\u7684 docker \u73af\u5883\u6765\u6d4b\u8bd5\uff0c\u9700\u8981\u4fee\u6539 Makefile \uff0c\u76f8\u6bd4\u4e8e\u5176\u4ed6\u5b9e\u9a8c\uff0c\u589e\u52a0\u4e86 make docker-server \u547d\u4ee4\u3002\u9700\u8981\u5148\u6267\u884c make docker-qemu \u7136\u540e\u6267\u884c make docker-server \uff0c\u518d\u6267\u884c nettests \u6765\u6d4b\u8bd5\u4ee3\u7801\u3002\u5177\u4f53 Makefile \u6dfb\u52a0\u7684\u5185\u5bb9\u5982\u4e0b\uff1a ## ==================Docker Commands Start====================================== docker : -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash docker-grade : -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make grade\" docker-qemu : -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make qemu\" docker-qemu-gdb : -docker rm -f xv6-labs-2020 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make qemu-gdb\" docker-gdb : . gdbinit docker exec -it xv6-labs-2020 /bin/bash -c \"gdb-multiarch --command .gdbinit\" docker-server : docker exec -it xv6-labs-2020 /bin/bash -c \"make server\" docker-rm : docker rm -f xv6-labs-2020 ## ==================Docker Commands End======================================== \u53c2\u8003\u7b54\u6848 \u672c\u6b21\u5b9e\u9a8c\uff0c\u6211\u57fa\u672c\u4e0a\u53c2\u8003\u4e86\u522b\u4eba\u7684\u7b54\u6848\u3002\u672c\u6587\u5217\u4e3e\u4e86\u975e\u5e38\u591a\u7684\u53c2\u8003\u6587\u732e\uff0c\u6ca1\u6709\u5fc5\u8981\u53bb\u67e5\u770b\u3002\u66f4\u91cd\u8981\u7684\u662f\u5bf9\u6e90\u7801\u7684\u9605\u8bfb\u3002\u6211\u5bf9\u7f51\u5361\u9a71\u52a8\u8fd8\u662f\u4e0d\u592a\u4e86\u89e3\uff0c\u9677\u5165\u53c2\u8003\u8d44\u6599\u5f88\u4e45\u4e5f\u6ca1\u6709\u8fdb\u5c55\uff0c\u7d22\u6027\u4e0d\u597d\u610f\u601d\u5730\u76f4\u63a5\u53c2\u8003\u4e86 \u522b\u4eba\u7684\u7b54\u6848 \u3002 \u5b9e\u73b0\u51fd\u6570 kernel/e10000.c\uff1ae1000_transmit() \u3002\u8fd9\u91cc\u57fa\u672c\u4e0a\u5c31\u6309\u7167\u63d0\u793a\u52a0\u4e0a\u4e00\u4e9b\u731c\u6d4b\u6765\u5b9e\u73b0\u3002 int e1000_transmit ( struct mbuf * m ) { // // Your code here. // // the mbuf contains an ethernet frame; program it into // the TX descriptor ring so that the e1000 sends it. Stash // a pointer so that it can be freed after sending. // int idx ; acquire ( & e1000_lock ); idx = regs [ E1000_TDT ]; if (( tx_ring [ idx ]. status & E1000_TXD_STAT_DD ) == 0 ){ release ( & e1000_lock ); return -1 ; } if ( tx_mbufs [ idx ] != 0 ) mbuffree ( tx_mbufs [ idx ]); tx_mbufs [ idx ] = m ; tx_ring [ idx ]. addr = ( uint64 ) m -> head ; tx_ring [ idx ]. length = ( uint16 ) m -> len ; tx_ring [ idx ]. cmd = E1000_TXD_CMD_EOP | E1000_TXD_CMD_RS ; regs [ E1000_TDT ] = ( idx + 1 ) % TX_RING_SIZE ; release ( & e1000_lock ); return 0 ; } \u5b9e\u73b0\u51fd\u6570 kernel/e1000.c:e1000_recv() \u3002\u8fd9\u91cc\u6839\u636e\u63d0\u793a\u7684\u8bdd\uff0c\u6211\u662f\u4e00\u4e0b\u5b50\u60f3\u4e0d\u5230\u4e0d\u7528\u9501\u7684\u7248\u672c\u3002 static void e1000_recv ( void ) { // // Your code here. // // Check for packets that have arrived from the e1000 // Create and deliver an mbuf for each packet (using net_rx()). // int idx ; while ( 1 ) { idx = ( regs [ E1000_RDT ] + 1 ) % RX_RING_SIZE ; if (( rx_ring [ idx ]. status & E1000_RXD_STAT_DD ) == 0 ){ break ; } rx_mbufs [ idx ] -> len = rx_ring [ idx ]. length ; net_rx ( rx_mbufs [ idx ]); rx_mbufs [ idx ] = mbufalloc ( 0 ); rx_ring [ idx ]. addr = ( uint64 ) rx_mbufs [ idx ] -> head ; rx_ring [ idx ]. status = 0 ; regs [ E1000_RDT ] = idx ; } }","title":"\u63d0\u793a"},{"location":"6.S081/Xv6%E7%9A%84%E8%B5%B7%E5%A7%8B%E9%99%B7%E9%98%B1%E6%9C%BA%E5%88%B6/","text":"Xv6\u7684\u8d77\u59cb\u9677\u9631\u673a\u5236 \u00b6 \u95ee\u9898\u63cf\u8ff0\uff1a uservec \u662f\u4ec0\u4e48\u65f6\u5019\u88ab\u8bbe\u7f6e\u7684\uff1f \u00b6 \u5728\u524d\u9762\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u95ee\u9898\u6ca1\u6709\u641e\u6e05\u695a\uff0c\u6700\u7ec8\u53cd\u6620\u5230\u9677\u9631\u673a\u5236\u91cc\u9762\uff0c\u5c31\u662f\u7b2c\u4e00\u4e2a usertrap \u600e\u4e48\u6765\u7684\u3002 Xv6-book \u7684\u7b2c\u56db\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4ece\u7528\u6237\u6001\u4ea7\u751f\u9677\u9631\uff0c\u603b\u4f53\u6d41\u7a0b\u662f\uff1a \\[ uservec \\rightarrow usertrap \\rightarrow usertrapret \\rightarrow userret. \\] \u4f46\u662fXv6\u542f\u52a8\u7684\u6574\u4f53\u6d41\u7a0b\uff08\u7b2c\u4e8c\u7ae0\uff09\u662f \\[ bookloader \\rightarrow \\_entry \\rightarrow start \\rightarrow main \\rightarrow userinit, \\] \u5e76\u4e14\u5176\u4e2d\u6700\u540e\u7684\u4e3b\u51fd\u6570 main \u4e2d\u53ea\u8c03\u7528\u4e86 trapinithart \u51fd\u6570\u5c06\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5bc4\u5b58\u5668 stvec \u8bbe\u7f6e\u6210\u4e86\u5185\u6838\u6001\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f kernelvec \uff0c\u5e76\u6ca1\u6709\u8bbe\u5b9a\u7528\u6237\u6001\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f uservec \u3002\u90a3\u4e48 uservec \u662f\u4ec0\u4e48\u65f6\u5019\u88ab\u8bbe\u7f6e\u7684\u5462\uff1f \u89e3\u91ca \u00b6 \u4ece\u4ee3\u7801\u6765\u770b\uff0c\u5185\u6838\u4ec5\u4ec5\u5728 kernel/trap.c:usertrapret() \u51fd\u6570\u4e2d\u6709\u4ee3\u7801\u8bbe\u7f6e uservec \uff1a w_stvec ( TRAMPOLINE + ( uservec - trampoline )); \u4f46\u662f\u4ece\u7b2c\u56db\u7ae0\u6765\u770b usertrapret \u53c8\u662f\u7531 uservec \u51fd\u6570\u4ea7\u751f\u7684\uff0c\u53d8\u6210\u4e86\u4e00\u4e2a \u9e21\u751f\u86cb\u86cb\u751f\u9e21 \u7684\u95ee\u9898\u3002\u6211\u4ea7\u751f\u8fd9\u4e2a\u56f0\u60d1\u7684\u539f\u56e0\u5c31\u662f\u6211\u6ca1\u6709\u641e\u6e05\u695a Xv6 \u7684\u542f\u52a8\u673a\u5236\u3002 \u4ece\u4ee3\u7801\u6765\u770b\uff0c\u8fd8\u6709\u4e00\u4e2a\u5730\u65b9\u8c03\u7528\u4e86\u51fd\u6570 usertrapret \uff0c\u90a3\u5c31\u662f proc.c:forkret() \u4e2d\u3002\u800c forkret() \u88ab allocproc \u8bbe\u7f6e\u5728\u4e86\u8fdb\u7a0b\u7ed3\u6784\u4e2d\u3002\u6700\u540e\u56de\u6eaf\u53d1\u73b0\uff0c uservec \u4e2d\u8c03\u7528\u4e86 allocproc \u3002\u6700\u7ec8\u7834\u89e3\u7591\u95ee\uff0c\u5176\u5b9e\u5728 userinit \u4e2d\u9690\u5f0f\u5730\u8bbe\u5b9a\u4e86 uservec \u3002\u6574\u4f53\u6d41\u7a0b\u662f \\[ bootloader \\rightarrow \\_entry \\rightarrow start \\rightarrow main \\rightarrow userinit \\rightarrow allocproc \\rightarrow forkret \\rightarrow usertrapret \\rightarrow uservec. \\] \u867d\u7136\u8fd9\u4e48\u7b80\u5355\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u5206\u6790\u4e86\u5f88\u4e45\u624d\u641e\u6e05\u695a\uff0c\u5173\u952e\u662f\u6ca1\u6709\u627e\u5bf9\u5206\u6790\u65b9\u6cd5\uff0c\u6ca1\u6709\u6cbf\u7740 usertrapret \u8fd9\u6761\u7ebf\u5f80\u524d\u56de\u6eaf\uff0c\u800c\u662f\u778e\u627e\u4e00\u901a\u3002","title":"Xv6\u7684\u8d77\u59cb\u9677\u9631\u673a\u5236"},{"location":"6.S081/Xv6%E7%9A%84%E8%B5%B7%E5%A7%8B%E9%99%B7%E9%98%B1%E6%9C%BA%E5%88%B6/#xv6","text":"","title":"Xv6\u7684\u8d77\u59cb\u9677\u9631\u673a\u5236"},{"location":"6.S081/Xv6%E7%9A%84%E8%B5%B7%E5%A7%8B%E9%99%B7%E9%98%B1%E6%9C%BA%E5%88%B6/#uservec","text":"\u5728\u524d\u9762\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u95ee\u9898\u6ca1\u6709\u641e\u6e05\u695a\uff0c\u6700\u7ec8\u53cd\u6620\u5230\u9677\u9631\u673a\u5236\u91cc\u9762\uff0c\u5c31\u662f\u7b2c\u4e00\u4e2a usertrap \u600e\u4e48\u6765\u7684\u3002 Xv6-book \u7684\u7b2c\u56db\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4ece\u7528\u6237\u6001\u4ea7\u751f\u9677\u9631\uff0c\u603b\u4f53\u6d41\u7a0b\u662f\uff1a \\[ uservec \\rightarrow usertrap \\rightarrow usertrapret \\rightarrow userret. \\] \u4f46\u662fXv6\u542f\u52a8\u7684\u6574\u4f53\u6d41\u7a0b\uff08\u7b2c\u4e8c\u7ae0\uff09\u662f \\[ bookloader \\rightarrow \\_entry \\rightarrow start \\rightarrow main \\rightarrow userinit, \\] \u5e76\u4e14\u5176\u4e2d\u6700\u540e\u7684\u4e3b\u51fd\u6570 main \u4e2d\u53ea\u8c03\u7528\u4e86 trapinithart \u51fd\u6570\u5c06\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5bc4\u5b58\u5668 stvec \u8bbe\u7f6e\u6210\u4e86\u5185\u6838\u6001\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f kernelvec \uff0c\u5e76\u6ca1\u6709\u8bbe\u5b9a\u7528\u6237\u6001\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f uservec \u3002\u90a3\u4e48 uservec \u662f\u4ec0\u4e48\u65f6\u5019\u88ab\u8bbe\u7f6e\u7684\u5462\uff1f","title":"\u95ee\u9898\u63cf\u8ff0\uff1auservec\u662f\u4ec0\u4e48\u65f6\u5019\u88ab\u8bbe\u7f6e\u7684\uff1f"},{"location":"6.S081/Xv6%E7%9A%84%E8%B5%B7%E5%A7%8B%E9%99%B7%E9%98%B1%E6%9C%BA%E5%88%B6/#_1","text":"\u4ece\u4ee3\u7801\u6765\u770b\uff0c\u5185\u6838\u4ec5\u4ec5\u5728 kernel/trap.c:usertrapret() \u51fd\u6570\u4e2d\u6709\u4ee3\u7801\u8bbe\u7f6e uservec \uff1a w_stvec ( TRAMPOLINE + ( uservec - trampoline )); \u4f46\u662f\u4ece\u7b2c\u56db\u7ae0\u6765\u770b usertrapret \u53c8\u662f\u7531 uservec \u51fd\u6570\u4ea7\u751f\u7684\uff0c\u53d8\u6210\u4e86\u4e00\u4e2a \u9e21\u751f\u86cb\u86cb\u751f\u9e21 \u7684\u95ee\u9898\u3002\u6211\u4ea7\u751f\u8fd9\u4e2a\u56f0\u60d1\u7684\u539f\u56e0\u5c31\u662f\u6211\u6ca1\u6709\u641e\u6e05\u695a Xv6 \u7684\u542f\u52a8\u673a\u5236\u3002 \u4ece\u4ee3\u7801\u6765\u770b\uff0c\u8fd8\u6709\u4e00\u4e2a\u5730\u65b9\u8c03\u7528\u4e86\u51fd\u6570 usertrapret \uff0c\u90a3\u5c31\u662f proc.c:forkret() \u4e2d\u3002\u800c forkret() \u88ab allocproc \u8bbe\u7f6e\u5728\u4e86\u8fdb\u7a0b\u7ed3\u6784\u4e2d\u3002\u6700\u540e\u56de\u6eaf\u53d1\u73b0\uff0c uservec \u4e2d\u8c03\u7528\u4e86 allocproc \u3002\u6700\u7ec8\u7834\u89e3\u7591\u95ee\uff0c\u5176\u5b9e\u5728 userinit \u4e2d\u9690\u5f0f\u5730\u8bbe\u5b9a\u4e86 uservec \u3002\u6574\u4f53\u6d41\u7a0b\u662f \\[ bootloader \\rightarrow \\_entry \\rightarrow start \\rightarrow main \\rightarrow userinit \\rightarrow allocproc \\rightarrow forkret \\rightarrow usertrapret \\rightarrow uservec. \\] \u867d\u7136\u8fd9\u4e48\u7b80\u5355\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u5206\u6790\u4e86\u5f88\u4e45\u624d\u641e\u6e05\u695a\uff0c\u5173\u952e\u662f\u6ca1\u6709\u627e\u5bf9\u5206\u6790\u65b9\u6cd5\uff0c\u6ca1\u6709\u6cbf\u7740 usertrapret \u8fd9\u6761\u7ebf\u5f80\u524d\u56de\u6eaf\uff0c\u800c\u662f\u778e\u627e\u4e00\u901a\u3002","title":"\u89e3\u91ca"},{"location":"Algorithms/01-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/","text":"\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217 \u00b6 \u539f\u59cb\u95ee\u9898 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode 300 \u3002 \u95ee\u9898\u63cf\u8ff0 \uff1a\u4e00\u4e2a\u6570\u7ec4 \\(\\{x_0, x_1, \\ldots, x_n\\}\\) , \u6c42\u5b83\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217 \\(\\{x_{i_0}, x_{i_1}, \\ldots, x_{i_k}\\}\\) \uff0c\u6ee1\u8db3 \\(i_0 < i_1 < \\ldots i_k\\) \u5e76\u4e14 \\(x_{i_0} < x_{i_1} < \\ldots < x_{i_k}\\) \u3002 \u76ee\u6807 \uff1a\u52a8\u6001\u89c4\u5212\uff0c\u8ba1\u7b97\u590d\u6742\u5ea6 \\(O(n \\log n)\\) \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u3002 \u9996\u5148\uff0c\u7b80\u5355\u7684\u52a8\u6001\u89c4\u5212\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) \u3002 for ( int i = 1 ; i < n ; ++ i ) { for ( int j = 0 ; j < i ; ++ j ) { if ( dp [ i ] > dp [ j ]) { dp [ i ] = max ( dp [ i ], dp [ j ] + 1 ); } } } \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684 \\(O(n \\log n)\\) \u7b97\u6cd5\u5c31\u6bd4\u8f83\u5f3a\u4e86\uff0c\u7528\u5230\u4e86\u8d2a\u5fc3\u6cd5\u548c\u4e8c\u5206\u67e5\u627e\u6765\u964d\u4f4e\u590d\u6742\u5ea6\u3002 \u5177\u4f53\u6d41\u7a0b\u53ef\u4ee5\u770b \u666e\u6797\u65af\u987f\u5927\u5b66\u7684\u7b97\u6cd5\u8bfe\u7a0b\u7684\u4e00\u4e2appt \u3002 \u7b97\u6cd5\u6838\u5fc3\u601d\u60f3 \uff1a\u7ef4\u62a4\u51e0\u4e2a\u4e0b\u964d\u6808\uff08\u521a\u5f00\u59cb\u662f0\u4e2a\u4e0b\u964d\u6808\uff09\u3002\u4ece\u5de6\u5230\u53f3\u904d\u5386\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u5c3d\u91cf\u538b\u5165\u5de6\u8fb9\u7684\u6808\uff08\u8fd9\u4e00\u6b65\u53ef\u4ee5\u7528\u4e8c\u5206\u6cd5\u627e\u80fd\u538b\u5165\u7684\u6808\uff09\uff0c\u5982\u679c\u6ca1\u6709\u6808\u53ef\u538b\u5165\uff0c\u90a3\u5c31\u65b0\u5efa\u4e00\u4e2a\u6808\u3002 \u5f31\u5bf9\u5076 \uff1a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u6808\u7684\u4e2a\u6570\uff0c\u56e0\u4e3a\u4efb\u4f55\u4e0a\u5347\u5b50\u5e8f\u5217\u6700\u591a\u53ea\u80fd\u5305\u542b\u6bcf\u4e2a\u4e0b\u964d\u6808\u91cc\u7684\u4e00\u4e2a\u5143\u7d20\u3002 \u5f3a\u5bf9\u5076 \uff1a\u6bcf\u4e2a\u6570\u8981\u4e48\u5728\u7b2c\u4e00\u4e2a\u6808\uff0c\u8981\u4e48\u5b83\u524d\u9762\u7684\u6808\u5df2\u7ecf\u5b58\u5728\u6bd4\u5b83\u5c0f\u7684\u6570\u3002\u90a3\u4e48\u5f52\u7eb3\u603b\u7ed3\u6cd5\u53ef\u5f97\uff0c\u6bcf\u4e2a\u6570\u90fd\u6709\u5230\u7b2c\u4e00\u4e2a\u6808\u7684''\u901a\u8def''\uff08\u5f62\u6210\u9012\u589e\u5b50\u5e8f\u5217\uff09\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u6808\u7ec4\u7684\u6570\u636e\u7ed3\u6784\u5b58\u5728\u4e00\u4e2a\u957f\u5ea6\u7b49\u4e8e\u6808\u4e2a\u6570\u7684\u9012\u589e\u5b50\u5e8f\u5217\u3002\u518d\u6839\u636e\u5f31\u5bf9\u5076\u53ef\u77e5\uff0c\u6808\u7684\u4e2a\u6570\u4e5f\u662f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e0a\u754c\u3002 class Solution { public : int lengthOfLIS ( vector < int >& nums ) { vector < int > s ; //\u53ea\u9700\u8981\u4fdd\u5b58\u6808\u9876\u7684\u6570\u3002 int n = nums . size (); for ( int i = 0 ; i < n ; ++ i ) { int idx = binary_search_left_bound ( s , nums [ i ]); // \u67e5\u627e\u6700\u5de6\u8fb9\u53ef\u63d2\u5165\u7684\u4e0b\u964d\u6808 if ( idx == s . size ()) { s . push_back ( nums [ i ]); //\u589e\u52a0\u6808 } else { s [ idx ] = nums [ i ]; //\u538b\u5165\u6808 } } return s . size (); } private : int binary_search_left_bound ( vector < int > & s , int target ) { // \u6700\u5de6\u4fa7\u8fb9\u754c int l = 0 , r = s . size (); while ( l < r ) { int m = l + (( r - l ) >> 1 ); if ( s [ m ] >= target ) { r = m ; } else { l = m + 1 ; } } return l ; } }; Python\u4e2d\u6709\u4e00\u4e2a\u4e8c\u5206\u6cd5\u7684\u5b9e\u73b0\u6a21\u5757 bisect : bisect.bisect_left(a, num, lo=0, hi=len(a)) \u548c bisect.bisect_right(a, num, lo=0, hi=len(a)) \u3002 \u5b98\u65b9\u6587\u6863\u94fe\u63a5 \u53d8\u79cd\u95ee\u98981\uff1a\u4fc4\u7f57\u65af\u5957\u5a03\u4fe1\u5c01 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode 354 \u3002 \u95ee\u9898\u63cf\u8ff0 \uff1a\u6211\u4eec\u62e5\u6709\u4e00\u7cfb\u5217\u4fe1\u5c01 \\(\\{(w_0, h_0), (w_1, h_1), \\ldots, (w_n, h_n)\\}\\) , \u6211\u4eec\u9700\u8981\u627e\u4e00\u4e2a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217 \\(\\{(w_{i_0}, h_{i_0}), (w_{i_1}, h_{i_1}), \\ldots, (w_{i_k}, h_{i_k})\\}\\) \uff0c\u6ee1\u8db3 \\(w_{i_0} < w_{i_1} < \\ldots < w_{i_k}\\) \u5e76\u4e14 \\(h_{i_0} < h_{i_1} < \\ldots < h_{i_k}\\) \uff0c\u5373\u5b50\u5e8f\u5217\u91cc\u7684\u4fe1\u5c01\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u5957\u8d77\u6765\u3002 \u5206\u6790 \uff1a\u8fd9\u4e2a\u95ee\u9898\u548c\u539f\u95ee\u9898\u7684\u5dee\u522b\u5728\u4e8e\uff0c\u5982\u679c\u5c06 \\(h\\) \u770b\u6210\u539f\u95ee\u9898\u7684 \\(x\\) , \u90a3\u4e48\u539f\u95ee\u9898\u7684\u4e0b\u6807\u7ea6\u675f\u6362\u6210\u4e86 \\(w\\) \u7684\u7ea6\u675f\u3002\u4e3a\u4e86\u8f6c\u5316\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6839\u636e \\(w\\) \u5bf9\u6570\u7ec4\u8fdb\u884c \u5347\u5e8f\u6392\u5e8f \u3002\u5f53\u7136\u6211\u4eec\u8fd8\u662f\u9700\u8981\u4e00\u4e2a\u5fae\u5999\u7684\u8c03\u6574\uff1a\u8fd9\u4e2a \\(w\\) \u4e0d\u540c\u4e8e\u4e0b\u6807\uff0c\u5b83\u662f\u4f1a\u91cd\u590d\u7684\u3002\u5f53 \\(w_i = w_j\\) \u65f6\uff0c \\((w_i, h_i)\\) \u548c \\((w_j, h_j)\\) \u662f\u4e0d\u80fd\u5957\u5728\u4e00\u8d77\u7684\uff0c\u5373\u4e0d\u80fd\u51fa\u73b0\u5728\u540c\u4e00\u4e2a\u5b50\u5e8f\u5217\u4e2d\uff0c\u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\uff0c\u6211\u4eec\u9700\u8981\u5bf9 \\((w_i, h_i)\\) \u548c \\((w_j, h_j)\\) \u6839\u636e \\(h\\) \u8fdb\u884c \u964d\u5e8f\u6392\u5e8f \u3002 \u6392\u5e8f\u5b8c\u6210\u540e\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u95ee\u9898\u4e86\u3002 int maxEnvelopes ( vector < vector < int >>& envelopes ) { if ( envelopes . empty ()) return 0 ; int n = envelopes . size (); sort ( envelopes . begin (), envelopes . end (), []( vector < int >& a , vector < int >& b ) { if ( a [ 0 ] == b [ 0 ]) { return a [ 1 ] > b [ 1 ]; } return a [ 0 ] < b [ 0 ]; }); return lengthOfLIS ( envelopes ); } \u53d8\u79cd\u95ee\u98982\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode 673 \u3002 \u95ee\u9898\u63cf\u8ff0 : \u4e0d\u4ec5\u8981\u627e\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u540c\u65f6\u8981\u627e\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002 \u89e3\u9898\u601d\u8def : \u5176\u5b9e\u7528\u6700\u57fa\u672c\u7684\u52a8\u6001\u89c4\u5212\u5c31\u53ef\u4ee5\u4e86\uff0c\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2)\\) \u3002 length[i] \u8868\u793a\u4ee5 nums[i] \u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff1b count[i] \u8868\u793a\u4ee5 nums[j] \u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570; nums[0 ... j ... i-1] \u4e2d\u904d\u5386\uff0c\u5982\u679cnums[j] < nums[i]\u90a3\u4e48\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8003\u8651\u3002 \u5982\u679c length[j] >= length[i], \u90a3\u4e48 i \u627e\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u66f4\u957f\u7684\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u505a\u5bf9\u5e94\u66f4\u65b0\uff1b \u5982\u679c length[j] + 1 == length[i], \u90a3\u4e48 i \u627e\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u540c\u6837\u957f\u7684\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u505a\u5bf9\u5e94\u66f4\u65b0\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : int findNumberOfLIS ( vector < int >& nums ) { if ( nums . empty ()) return 0 ; int n = nums . size (), max_length = 1 ; vector < int > length ( n , 1 ); vector < int > count ( n , 1 ); for ( int i = 0 ; i < n ; ++ i ) { for ( int j = 0 ; j < i ; ++ j ) { if ( nums [ j ] < nums [ i ]) { if ( length [ j ] >= length [ i ]) { length [ i ] = length [ j ] + 1 ; count [ i ] = count [ j ]; } else if ( length [ j ] + 1 == length [ i ]) { count [ i ] += count [ j ]; } } } max_length = max ( max_length , length [ i ]); } int rst = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( length [ i ] == max_length ) { rst += count [ i ]; } } return rst ; } }; \u53c2\u8003\u4e0a\u9762\u7684\u7b97\u6cd5\u548c\u5355\u8c03\u6808\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230 \\(O(n \\log n)\\) \u3002 \u9996\u5148\uff0c\u6211\u4eec\u7684\u5355\u8c03\u6808\u7684\u6bcf\u4e2a\u5143\u7d20\u65e2\u5305\u542b\u6570\u503c\uff0c\u540c\u65f6\u4e5f\u5e94\u8be5\u5305\u542b\u4ee5\u8be5\u6570\u503c\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u6bcf\u6b21\u63d2\u5165\u65b0\u7684\u5143\u7d20\u7684\u65f6\u5019\uff0c\u9700\u8981\u8ba1\u7b97\u4ee5\u8be5\u6570\u503c\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002 \u8fd9\u91cc\u9700\u8981\u5728\u65b0\u5143\u7d20\u6240\u5728\u6808\u7684\u524d\u4e00\u4e2a\u6808\u4e2d\uff0c\u627e\u5230\u6240\u6709\u6bd4\u5b83\u5c0f\u7684\u5143\u7d20\uff0c\u8fd9\u4e9b\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u4e2a\u6570\u7684\u548c\u5c31\u662f\u4ee5\u65b0\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002 \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u5355\u8c03\u6808\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5305\u542b\u7684\u4e0d\u518d\u662f\u4ee5\u8be5\u6570\u503c\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u800c\u662f\u5f53\u524d\u5143\u7d20\u53ca\u5176\u4ee5\u4e0b\u7684\u6240\u6709\u5143\u7d20\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u4e2a\u6570\u7684\u548c\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : int findNumberOfLIS ( vector < int >& nums ) { if ( nums . empty ()) return 0 ; vector < vector < pair < int , int >>> tables ; for ( auto & num : nums ) { auto pos = distance ( tables . begin (), lower_bound ( tables . begin (), tables . end (), num , []( vector < pair < int , int >>& a , const int & b ) { return a . back (). first < b ; })); // \u9996\u4e2a\u4e0d\u5927\u4e8e if ( pos >= tables . size ()) { tables . push_back ( vector < pair < int , int >> ()); } // \u8ba1\u7b97\u4ee5num\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002 int tmp = 1 ; // \u7b2c\u4e00\u4e2a\u5143\u7d20 if ( pos > 0 ) { vector < pair < int , int >> & pre_vector = tables [ pos -1 ]; auto pos2 = distance ( pre_vector . begin (), upper_bound ( pre_vector . begin (), pre_vector . end (), num , []( const int & b , const pair < int , int >& a ) { return b > a . first ; })); // \u9996\u4e2a\u5c0f\u4e8e tmp = pre_vector . back (). second ; if ( pos2 > 0 ) tmp -= pre_vector [ pos2 -1 ]. second ; } int m = tables [ pos ]. size (); if ( ! tables [ pos ]. empty ()) { tmp += tables [ pos ]. back (). second ; } tables [ pos ]. push_back ( make_pair ( num , tmp )); } return tables . back (). back (). second ; } };","title":"\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217"},{"location":"Algorithms/01-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/#_1","text":"","title":"\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217"},{"location":"Algorithms/01-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/#_2","text":"\u8be6\u60c5\u53c2\u8003 LeetCode 300 \u3002 \u95ee\u9898\u63cf\u8ff0 \uff1a\u4e00\u4e2a\u6570\u7ec4 \\(\\{x_0, x_1, \\ldots, x_n\\}\\) , \u6c42\u5b83\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217 \\(\\{x_{i_0}, x_{i_1}, \\ldots, x_{i_k}\\}\\) \uff0c\u6ee1\u8db3 \\(i_0 < i_1 < \\ldots i_k\\) \u5e76\u4e14 \\(x_{i_0} < x_{i_1} < \\ldots < x_{i_k}\\) \u3002 \u76ee\u6807 \uff1a\u52a8\u6001\u89c4\u5212\uff0c\u8ba1\u7b97\u590d\u6742\u5ea6 \\(O(n \\log n)\\) \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(n)\\) \u3002 \u9996\u5148\uff0c\u7b80\u5355\u7684\u52a8\u6001\u89c4\u5212\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) \u3002 for ( int i = 1 ; i < n ; ++ i ) { for ( int j = 0 ; j < i ; ++ j ) { if ( dp [ i ] > dp [ j ]) { dp [ i ] = max ( dp [ i ], dp [ j ] + 1 ); } } } \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684 \\(O(n \\log n)\\) \u7b97\u6cd5\u5c31\u6bd4\u8f83\u5f3a\u4e86\uff0c\u7528\u5230\u4e86\u8d2a\u5fc3\u6cd5\u548c\u4e8c\u5206\u67e5\u627e\u6765\u964d\u4f4e\u590d\u6742\u5ea6\u3002 \u5177\u4f53\u6d41\u7a0b\u53ef\u4ee5\u770b \u666e\u6797\u65af\u987f\u5927\u5b66\u7684\u7b97\u6cd5\u8bfe\u7a0b\u7684\u4e00\u4e2appt \u3002 \u7b97\u6cd5\u6838\u5fc3\u601d\u60f3 \uff1a\u7ef4\u62a4\u51e0\u4e2a\u4e0b\u964d\u6808\uff08\u521a\u5f00\u59cb\u662f0\u4e2a\u4e0b\u964d\u6808\uff09\u3002\u4ece\u5de6\u5230\u53f3\u904d\u5386\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u5c3d\u91cf\u538b\u5165\u5de6\u8fb9\u7684\u6808\uff08\u8fd9\u4e00\u6b65\u53ef\u4ee5\u7528\u4e8c\u5206\u6cd5\u627e\u80fd\u538b\u5165\u7684\u6808\uff09\uff0c\u5982\u679c\u6ca1\u6709\u6808\u53ef\u538b\u5165\uff0c\u90a3\u5c31\u65b0\u5efa\u4e00\u4e2a\u6808\u3002 \u5f31\u5bf9\u5076 \uff1a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u6808\u7684\u4e2a\u6570\uff0c\u56e0\u4e3a\u4efb\u4f55\u4e0a\u5347\u5b50\u5e8f\u5217\u6700\u591a\u53ea\u80fd\u5305\u542b\u6bcf\u4e2a\u4e0b\u964d\u6808\u91cc\u7684\u4e00\u4e2a\u5143\u7d20\u3002 \u5f3a\u5bf9\u5076 \uff1a\u6bcf\u4e2a\u6570\u8981\u4e48\u5728\u7b2c\u4e00\u4e2a\u6808\uff0c\u8981\u4e48\u5b83\u524d\u9762\u7684\u6808\u5df2\u7ecf\u5b58\u5728\u6bd4\u5b83\u5c0f\u7684\u6570\u3002\u90a3\u4e48\u5f52\u7eb3\u603b\u7ed3\u6cd5\u53ef\u5f97\uff0c\u6bcf\u4e2a\u6570\u90fd\u6709\u5230\u7b2c\u4e00\u4e2a\u6808\u7684''\u901a\u8def''\uff08\u5f62\u6210\u9012\u589e\u5b50\u5e8f\u5217\uff09\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u6808\u7ec4\u7684\u6570\u636e\u7ed3\u6784\u5b58\u5728\u4e00\u4e2a\u957f\u5ea6\u7b49\u4e8e\u6808\u4e2a\u6570\u7684\u9012\u589e\u5b50\u5e8f\u5217\u3002\u518d\u6839\u636e\u5f31\u5bf9\u5076\u53ef\u77e5\uff0c\u6808\u7684\u4e2a\u6570\u4e5f\u662f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e0a\u754c\u3002 class Solution { public : int lengthOfLIS ( vector < int >& nums ) { vector < int > s ; //\u53ea\u9700\u8981\u4fdd\u5b58\u6808\u9876\u7684\u6570\u3002 int n = nums . size (); for ( int i = 0 ; i < n ; ++ i ) { int idx = binary_search_left_bound ( s , nums [ i ]); // \u67e5\u627e\u6700\u5de6\u8fb9\u53ef\u63d2\u5165\u7684\u4e0b\u964d\u6808 if ( idx == s . size ()) { s . push_back ( nums [ i ]); //\u589e\u52a0\u6808 } else { s [ idx ] = nums [ i ]; //\u538b\u5165\u6808 } } return s . size (); } private : int binary_search_left_bound ( vector < int > & s , int target ) { // \u6700\u5de6\u4fa7\u8fb9\u754c int l = 0 , r = s . size (); while ( l < r ) { int m = l + (( r - l ) >> 1 ); if ( s [ m ] >= target ) { r = m ; } else { l = m + 1 ; } } return l ; } }; Python\u4e2d\u6709\u4e00\u4e2a\u4e8c\u5206\u6cd5\u7684\u5b9e\u73b0\u6a21\u5757 bisect : bisect.bisect_left(a, num, lo=0, hi=len(a)) \u548c bisect.bisect_right(a, num, lo=0, hi=len(a)) \u3002 \u5b98\u65b9\u6587\u6863\u94fe\u63a5","title":"\u539f\u59cb\u95ee\u9898"},{"location":"Algorithms/01-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/#1","text":"\u8be6\u60c5\u53c2\u8003 LeetCode 354 \u3002 \u95ee\u9898\u63cf\u8ff0 \uff1a\u6211\u4eec\u62e5\u6709\u4e00\u7cfb\u5217\u4fe1\u5c01 \\(\\{(w_0, h_0), (w_1, h_1), \\ldots, (w_n, h_n)\\}\\) , \u6211\u4eec\u9700\u8981\u627e\u4e00\u4e2a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217 \\(\\{(w_{i_0}, h_{i_0}), (w_{i_1}, h_{i_1}), \\ldots, (w_{i_k}, h_{i_k})\\}\\) \uff0c\u6ee1\u8db3 \\(w_{i_0} < w_{i_1} < \\ldots < w_{i_k}\\) \u5e76\u4e14 \\(h_{i_0} < h_{i_1} < \\ldots < h_{i_k}\\) \uff0c\u5373\u5b50\u5e8f\u5217\u91cc\u7684\u4fe1\u5c01\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u5957\u8d77\u6765\u3002 \u5206\u6790 \uff1a\u8fd9\u4e2a\u95ee\u9898\u548c\u539f\u95ee\u9898\u7684\u5dee\u522b\u5728\u4e8e\uff0c\u5982\u679c\u5c06 \\(h\\) \u770b\u6210\u539f\u95ee\u9898\u7684 \\(x\\) , \u90a3\u4e48\u539f\u95ee\u9898\u7684\u4e0b\u6807\u7ea6\u675f\u6362\u6210\u4e86 \\(w\\) \u7684\u7ea6\u675f\u3002\u4e3a\u4e86\u8f6c\u5316\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6839\u636e \\(w\\) \u5bf9\u6570\u7ec4\u8fdb\u884c \u5347\u5e8f\u6392\u5e8f \u3002\u5f53\u7136\u6211\u4eec\u8fd8\u662f\u9700\u8981\u4e00\u4e2a\u5fae\u5999\u7684\u8c03\u6574\uff1a\u8fd9\u4e2a \\(w\\) \u4e0d\u540c\u4e8e\u4e0b\u6807\uff0c\u5b83\u662f\u4f1a\u91cd\u590d\u7684\u3002\u5f53 \\(w_i = w_j\\) \u65f6\uff0c \\((w_i, h_i)\\) \u548c \\((w_j, h_j)\\) \u662f\u4e0d\u80fd\u5957\u5728\u4e00\u8d77\u7684\uff0c\u5373\u4e0d\u80fd\u51fa\u73b0\u5728\u540c\u4e00\u4e2a\u5b50\u5e8f\u5217\u4e2d\uff0c\u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\uff0c\u6211\u4eec\u9700\u8981\u5bf9 \\((w_i, h_i)\\) \u548c \\((w_j, h_j)\\) \u6839\u636e \\(h\\) \u8fdb\u884c \u964d\u5e8f\u6392\u5e8f \u3002 \u6392\u5e8f\u5b8c\u6210\u540e\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u95ee\u9898\u4e86\u3002 int maxEnvelopes ( vector < vector < int >>& envelopes ) { if ( envelopes . empty ()) return 0 ; int n = envelopes . size (); sort ( envelopes . begin (), envelopes . end (), []( vector < int >& a , vector < int >& b ) { if ( a [ 0 ] == b [ 0 ]) { return a [ 1 ] > b [ 1 ]; } return a [ 0 ] < b [ 0 ]; }); return lengthOfLIS ( envelopes ); }","title":"\u53d8\u79cd\u95ee\u98981\uff1a\u4fc4\u7f57\u65af\u5957\u5a03\u4fe1\u5c01"},{"location":"Algorithms/01-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/#2","text":"\u8be6\u60c5\u53c2\u8003 LeetCode 673 \u3002 \u95ee\u9898\u63cf\u8ff0 : \u4e0d\u4ec5\u8981\u627e\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u540c\u65f6\u8981\u627e\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002 \u89e3\u9898\u601d\u8def : \u5176\u5b9e\u7528\u6700\u57fa\u672c\u7684\u52a8\u6001\u89c4\u5212\u5c31\u53ef\u4ee5\u4e86\uff0c\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2)\\) \u3002 length[i] \u8868\u793a\u4ee5 nums[i] \u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff1b count[i] \u8868\u793a\u4ee5 nums[j] \u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570; nums[0 ... j ... i-1] \u4e2d\u904d\u5386\uff0c\u5982\u679cnums[j] < nums[i]\u90a3\u4e48\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8003\u8651\u3002 \u5982\u679c length[j] >= length[i], \u90a3\u4e48 i \u627e\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u66f4\u957f\u7684\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u505a\u5bf9\u5e94\u66f4\u65b0\uff1b \u5982\u679c length[j] + 1 == length[i], \u90a3\u4e48 i \u627e\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u540c\u6837\u957f\u7684\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u505a\u5bf9\u5e94\u66f4\u65b0\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : int findNumberOfLIS ( vector < int >& nums ) { if ( nums . empty ()) return 0 ; int n = nums . size (), max_length = 1 ; vector < int > length ( n , 1 ); vector < int > count ( n , 1 ); for ( int i = 0 ; i < n ; ++ i ) { for ( int j = 0 ; j < i ; ++ j ) { if ( nums [ j ] < nums [ i ]) { if ( length [ j ] >= length [ i ]) { length [ i ] = length [ j ] + 1 ; count [ i ] = count [ j ]; } else if ( length [ j ] + 1 == length [ i ]) { count [ i ] += count [ j ]; } } } max_length = max ( max_length , length [ i ]); } int rst = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( length [ i ] == max_length ) { rst += count [ i ]; } } return rst ; } }; \u53c2\u8003\u4e0a\u9762\u7684\u7b97\u6cd5\u548c\u5355\u8c03\u6808\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230 \\(O(n \\log n)\\) \u3002 \u9996\u5148\uff0c\u6211\u4eec\u7684\u5355\u8c03\u6808\u7684\u6bcf\u4e2a\u5143\u7d20\u65e2\u5305\u542b\u6570\u503c\uff0c\u540c\u65f6\u4e5f\u5e94\u8be5\u5305\u542b\u4ee5\u8be5\u6570\u503c\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u6bcf\u6b21\u63d2\u5165\u65b0\u7684\u5143\u7d20\u7684\u65f6\u5019\uff0c\u9700\u8981\u8ba1\u7b97\u4ee5\u8be5\u6570\u503c\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002 \u8fd9\u91cc\u9700\u8981\u5728\u65b0\u5143\u7d20\u6240\u5728\u6808\u7684\u524d\u4e00\u4e2a\u6808\u4e2d\uff0c\u627e\u5230\u6240\u6709\u6bd4\u5b83\u5c0f\u7684\u5143\u7d20\uff0c\u8fd9\u4e9b\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u4e2a\u6570\u7684\u548c\u5c31\u662f\u4ee5\u65b0\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002 \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u5355\u8c03\u6808\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5305\u542b\u7684\u4e0d\u518d\u662f\u4ee5\u8be5\u6570\u503c\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u800c\u662f\u5f53\u524d\u5143\u7d20\u53ca\u5176\u4ee5\u4e0b\u7684\u6240\u6709\u5143\u7d20\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u4e2a\u6570\u7684\u548c\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : int findNumberOfLIS ( vector < int >& nums ) { if ( nums . empty ()) return 0 ; vector < vector < pair < int , int >>> tables ; for ( auto & num : nums ) { auto pos = distance ( tables . begin (), lower_bound ( tables . begin (), tables . end (), num , []( vector < pair < int , int >>& a , const int & b ) { return a . back (). first < b ; })); // \u9996\u4e2a\u4e0d\u5927\u4e8e if ( pos >= tables . size ()) { tables . push_back ( vector < pair < int , int >> ()); } // \u8ba1\u7b97\u4ee5num\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002 int tmp = 1 ; // \u7b2c\u4e00\u4e2a\u5143\u7d20 if ( pos > 0 ) { vector < pair < int , int >> & pre_vector = tables [ pos -1 ]; auto pos2 = distance ( pre_vector . begin (), upper_bound ( pre_vector . begin (), pre_vector . end (), num , []( const int & b , const pair < int , int >& a ) { return b > a . first ; })); // \u9996\u4e2a\u5c0f\u4e8e tmp = pre_vector . back (). second ; if ( pos2 > 0 ) tmp -= pre_vector [ pos2 -1 ]. second ; } int m = tables [ pos ]. size (); if ( ! tables [ pos ]. empty ()) { tmp += tables [ pos ]. back (). second ; } tables [ pos ]. push_back ( make_pair ( num , tmp )); } return tables . back (). back (). second ; } };","title":"\u53d8\u79cd\u95ee\u98982\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570"},{"location":"Algorithms/02-%E5%8C%BA%E9%97%B4%E8%B0%83%E5%BA%A6%E9%97%AE%E9%A2%98/","text":"\u533a\u95f4\u8c03\u5ea6\u95ee\u9898 \u00b6 \u539f\u95ee\u9898 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode435 \u3002 \u95ee\u9898\u63cf\u8ff0 \uff1a\u6709n\u9879\u5de5\u4f5c \\(\\{(s_0, e_0), (s_1, e_1), \\ldots, (s_n, e_n)\\}\\) \uff0c\u5176\u4e2d \\(s\\) \u8868\u793a\u8d77\u59cb\u8be5\u5de5\u4f5c\u7684\u8d77\u59cb\u65f6\u95f4\uff0c \\(e\\) \u8868\u793a\u8be5\u5de5\u4f5c\u7684\u7ed3\u675f\u65f6\u95f4\u3002\u9009\u53d6\u4e00\u4e2a\u6700\u957f\u5b50\u5e8f\u5217 \\(\\{(s_{i_0}, e_{i_0}), (s_{i_1}, e_{i_1}), \\ldots, (s_{i_k}, e{i_k})\\}\\) \uff0c\u6ee1\u8db3\u8fd9\u4e9b\u5de5\u4f5c\u7684\u65f6\u95f4\u4e92\u4e0d\u76f8\u4ea4\u3002 \u76ee\u6807 \uff1a\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u6765\u505a\uff0c\u4f46\u662f\u6709\u66f4\u5de7\u5999\u7684\u8d2a\u5fc3\u7b97\u6cd5\u3002\u9664\u53bb\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n\\log n)\\) \uff0c\u8d2a\u5fc3\u7b97\u6cd5\u53ef\u4ee5\u5230 \\(O(n)\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \u7b97\u6cd5\u6838\u5fc3\u601d\u60f3 \uff1a\u5c06\u8fd9\u4e9b\u5de5\u4f5c\u6309\u7167\u7ed3\u675f\u65f6\u95f4 \\(e\\) \u505a\u5347\u5e8f\u6392\u5e8f\u3002\u4e0d\u65ad\u9009\u53d6\u5f53\u524d\u5269\u4f59\u5de5\u4f5c\u4e2d\uff0c\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u5de5\u4f5c\uff0c\u7136\u540e\u628a\u4e0e\u8fd9\u4e2a\u5de5\u4f5c\u51b2\u7a81\u7684\u5de5\u4f5c\u53bb\u6389\u3002 \u8bc1\u660e \uff1a \u9996\u5148\uff0c\u4ece\u7b97\u6cd5\u6d41\u7a0b\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u9009\u51fa\u6765\u7684\u5b50\u5e8f\u5217\u4e92\u4e0d\u51b2\u7a81\u3002 \u5176\u6b21\uff1a\u89c4\u5b9a\u8fd9\u4e2a\u8d2a\u5fc3\u6cd5\u6240\u6784\u9020\u7684\u7ed3\u679c\u4e3a \\(\\{(s_{i_0}, e_{i_0}), (s_{i_1}, e_{i_1}), \\ldots, (s_{i_k}, e_{i_k})\\}\\) \uff0c\u4ee5\u53ca\u6700\u4f18\u89e3\u4e3a \\(\\{(s_{j_0}, e_{j_0}), (s_{j_1}, e_{j_1}), \\ldots, (s_{j_m}, e_{j_m})\\}\\) \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5bf9\u4e8e\u4efb\u610f\u7684 \\(idx\\) , \u6211\u4eec\u53ef\u5f97 \\(e_{i_{idx}} \\le e_{j_{idx}}\\) \u3002\u7531\u6570\u5b66\u5f52\u7eb3\u6cd5\u53ef\u5f97: \\(idx = 0\\) \u6ee1\u8db3\u8981\u6c42\uff1b\u5f53 \\(idx > 0\\) \u65f6\u5047\u8bbe \\(e_{i_{idx - 1}} \\le e_{j_{idx - 1}}\\) \u90a3\u4e48 \u6700\u4f18\u89e3\u7684\u5269\u4f59\u53ef\u9009\u533a\u95f4 \u5c11\u4e8e \u8d2a\u5fc3\u6cd5\u7684\u5269\u4f59\u53ef\u9009\u7a7a\u95f4\uff0c\u800c\u8d2a\u5fc3\u6cd5\u53c8\u662f\u5728\u5269\u4f59\u53ef\u9009\u7a7a\u95f4\u4e2d\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u533a\u95f4\uff0c\u90a3\u4e48 \\(e_{i_{idx}} \\le e_{j_{idx}}\\) \u3002 \u6700\u540e\uff0c\u6211\u4eec\u8bc1\u660e \\(k = m\\) \u3002\u6211\u4eec\u7528\u53cd\u8bc1\u6cd5\uff0c\u5982\u679c \\(k < m\\) \uff0c\u53c8\u7531\u4e8e \\(e_{i_{k}} < e_{j_{k}}\\) , \u90a3\u4e48 \\(e_{i_{k}} < s_{j_{k+1}}\\) \uff0c\u5373\u6700\u4f18\u89e3\u7684\u5269\u4f59\u533a\u95f4\u53ef\u4ee5\u7eed\u7ed9\u8d2a\u5fc3\u6cd5\u7684\u7ed3\u679c\uff0c\u8fd9\u5c31\u548c\u6211\u4eec\u8d2a\u5fc3\u6cd5\u7684\u6d41\u7a0b\u77db\u76fe\u4e86\u3002 \u53d8\u79cd1\uff1a\u5c04\u6c14\u7403\u95ee\u9898 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode452 \u3002 \u95ee\u9898\u63cf\u8ff0 \uff1a\u5927\u5c0f\u4e0d\u540c\u7684\u6c14\u7403\u6392\u5728\u540c\u4e00\u4e2a\u6c34\u5e73\u9762\u4e0a\uff08\u7403\u5fc3\u7684 \\(z\\) \u5750\u6807\u76f8\u540c\uff09\uff0c\u90a3\u4e48\u5728 \\(x-y\\) \u5e73\u9762\u6bcf\u4e2a\u6c14\u7403\u5c31\u662f\u4e00\u4e2a\u4e2a\u5927\u5c0f\u4e0d\u540c\u4e92\u4e0d\u76f8\u4ea4\u7684\u5706\u3002\u5982\u679c\u6211\u4eec\u5728 \\(x\\) \u8f74\u4e0a\u5782\u76f4\u4e8e \\(x\\) \u8f74\u5c04\u51fb\uff0c\u6bcf\u6b21\u5c04\u51fb\u65f6\uff0c\u76f4\u7ebf\u4e0a\u7a7f\u8fc7\u7684\u6c14\u7403\u90fd\u4f1a\u88ab\u5c04\u7206\uff0c\u90a3\u4e48\u6700\u591a\u9700\u8981\u5f00\u51e0\u67aa\u624d\u80fd\u628a\u6240\u6709\u6c14\u7403\u5c04\u7206\u3002 \u5206\u6790 \uff1a\u6bcf\u4e2a\u6c14\u7403\u5728 \\(x\\) \u8f74\u4e0a\u7684\u6295\u5f71\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u6709\u91cd\u53e0\u533a\u95f4\u7684\u6c14\u7403\u53ea\u9700\u8981\u4e00\u67aa\u5c31\u53ef\u4ee5\u5168\u90e8\u5c04\u7206\uff0c\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u662f\u6c42\u6700\u5927\u4e0d\u91cd\u53e0\u533a\u95f4\u7684\u4e2a\u6570\u3002","title":"\u533a\u95f4\u8c03\u5ea6\u95ee\u9898"},{"location":"Algorithms/02-%E5%8C%BA%E9%97%B4%E8%B0%83%E5%BA%A6%E9%97%AE%E9%A2%98/#_1","text":"","title":"\u533a\u95f4\u8c03\u5ea6\u95ee\u9898"},{"location":"Algorithms/02-%E5%8C%BA%E9%97%B4%E8%B0%83%E5%BA%A6%E9%97%AE%E9%A2%98/#_2","text":"\u8be6\u60c5\u53c2\u8003 LeetCode435 \u3002 \u95ee\u9898\u63cf\u8ff0 \uff1a\u6709n\u9879\u5de5\u4f5c \\(\\{(s_0, e_0), (s_1, e_1), \\ldots, (s_n, e_n)\\}\\) \uff0c\u5176\u4e2d \\(s\\) \u8868\u793a\u8d77\u59cb\u8be5\u5de5\u4f5c\u7684\u8d77\u59cb\u65f6\u95f4\uff0c \\(e\\) \u8868\u793a\u8be5\u5de5\u4f5c\u7684\u7ed3\u675f\u65f6\u95f4\u3002\u9009\u53d6\u4e00\u4e2a\u6700\u957f\u5b50\u5e8f\u5217 \\(\\{(s_{i_0}, e_{i_0}), (s_{i_1}, e_{i_1}), \\ldots, (s_{i_k}, e{i_k})\\}\\) \uff0c\u6ee1\u8db3\u8fd9\u4e9b\u5de5\u4f5c\u7684\u65f6\u95f4\u4e92\u4e0d\u76f8\u4ea4\u3002 \u76ee\u6807 \uff1a\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u6765\u505a\uff0c\u4f46\u662f\u6709\u66f4\u5de7\u5999\u7684\u8d2a\u5fc3\u7b97\u6cd5\u3002\u9664\u53bb\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n\\log n)\\) \uff0c\u8d2a\u5fc3\u7b97\u6cd5\u53ef\u4ee5\u5230 \\(O(n)\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \u7b97\u6cd5\u6838\u5fc3\u601d\u60f3 \uff1a\u5c06\u8fd9\u4e9b\u5de5\u4f5c\u6309\u7167\u7ed3\u675f\u65f6\u95f4 \\(e\\) \u505a\u5347\u5e8f\u6392\u5e8f\u3002\u4e0d\u65ad\u9009\u53d6\u5f53\u524d\u5269\u4f59\u5de5\u4f5c\u4e2d\uff0c\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u5de5\u4f5c\uff0c\u7136\u540e\u628a\u4e0e\u8fd9\u4e2a\u5de5\u4f5c\u51b2\u7a81\u7684\u5de5\u4f5c\u53bb\u6389\u3002 \u8bc1\u660e \uff1a \u9996\u5148\uff0c\u4ece\u7b97\u6cd5\u6d41\u7a0b\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u9009\u51fa\u6765\u7684\u5b50\u5e8f\u5217\u4e92\u4e0d\u51b2\u7a81\u3002 \u5176\u6b21\uff1a\u89c4\u5b9a\u8fd9\u4e2a\u8d2a\u5fc3\u6cd5\u6240\u6784\u9020\u7684\u7ed3\u679c\u4e3a \\(\\{(s_{i_0}, e_{i_0}), (s_{i_1}, e_{i_1}), \\ldots, (s_{i_k}, e_{i_k})\\}\\) \uff0c\u4ee5\u53ca\u6700\u4f18\u89e3\u4e3a \\(\\{(s_{j_0}, e_{j_0}), (s_{j_1}, e_{j_1}), \\ldots, (s_{j_m}, e_{j_m})\\}\\) \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5bf9\u4e8e\u4efb\u610f\u7684 \\(idx\\) , \u6211\u4eec\u53ef\u5f97 \\(e_{i_{idx}} \\le e_{j_{idx}}\\) \u3002\u7531\u6570\u5b66\u5f52\u7eb3\u6cd5\u53ef\u5f97: \\(idx = 0\\) \u6ee1\u8db3\u8981\u6c42\uff1b\u5f53 \\(idx > 0\\) \u65f6\u5047\u8bbe \\(e_{i_{idx - 1}} \\le e_{j_{idx - 1}}\\) \u90a3\u4e48 \u6700\u4f18\u89e3\u7684\u5269\u4f59\u53ef\u9009\u533a\u95f4 \u5c11\u4e8e \u8d2a\u5fc3\u6cd5\u7684\u5269\u4f59\u53ef\u9009\u7a7a\u95f4\uff0c\u800c\u8d2a\u5fc3\u6cd5\u53c8\u662f\u5728\u5269\u4f59\u53ef\u9009\u7a7a\u95f4\u4e2d\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u533a\u95f4\uff0c\u90a3\u4e48 \\(e_{i_{idx}} \\le e_{j_{idx}}\\) \u3002 \u6700\u540e\uff0c\u6211\u4eec\u8bc1\u660e \\(k = m\\) \u3002\u6211\u4eec\u7528\u53cd\u8bc1\u6cd5\uff0c\u5982\u679c \\(k < m\\) \uff0c\u53c8\u7531\u4e8e \\(e_{i_{k}} < e_{j_{k}}\\) , \u90a3\u4e48 \\(e_{i_{k}} < s_{j_{k+1}}\\) \uff0c\u5373\u6700\u4f18\u89e3\u7684\u5269\u4f59\u533a\u95f4\u53ef\u4ee5\u7eed\u7ed9\u8d2a\u5fc3\u6cd5\u7684\u7ed3\u679c\uff0c\u8fd9\u5c31\u548c\u6211\u4eec\u8d2a\u5fc3\u6cd5\u7684\u6d41\u7a0b\u77db\u76fe\u4e86\u3002","title":"\u539f\u95ee\u9898"},{"location":"Algorithms/02-%E5%8C%BA%E9%97%B4%E8%B0%83%E5%BA%A6%E9%97%AE%E9%A2%98/#1","text":"\u8be6\u60c5\u53c2\u8003 LeetCode452 \u3002 \u95ee\u9898\u63cf\u8ff0 \uff1a\u5927\u5c0f\u4e0d\u540c\u7684\u6c14\u7403\u6392\u5728\u540c\u4e00\u4e2a\u6c34\u5e73\u9762\u4e0a\uff08\u7403\u5fc3\u7684 \\(z\\) \u5750\u6807\u76f8\u540c\uff09\uff0c\u90a3\u4e48\u5728 \\(x-y\\) \u5e73\u9762\u6bcf\u4e2a\u6c14\u7403\u5c31\u662f\u4e00\u4e2a\u4e2a\u5927\u5c0f\u4e0d\u540c\u4e92\u4e0d\u76f8\u4ea4\u7684\u5706\u3002\u5982\u679c\u6211\u4eec\u5728 \\(x\\) \u8f74\u4e0a\u5782\u76f4\u4e8e \\(x\\) \u8f74\u5c04\u51fb\uff0c\u6bcf\u6b21\u5c04\u51fb\u65f6\uff0c\u76f4\u7ebf\u4e0a\u7a7f\u8fc7\u7684\u6c14\u7403\u90fd\u4f1a\u88ab\u5c04\u7206\uff0c\u90a3\u4e48\u6700\u591a\u9700\u8981\u5f00\u51e0\u67aa\u624d\u80fd\u628a\u6240\u6709\u6c14\u7403\u5c04\u7206\u3002 \u5206\u6790 \uff1a\u6bcf\u4e2a\u6c14\u7403\u5728 \\(x\\) \u8f74\u4e0a\u7684\u6295\u5f71\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u6709\u91cd\u53e0\u533a\u95f4\u7684\u6c14\u7403\u53ea\u9700\u8981\u4e00\u67aa\u5c31\u53ef\u4ee5\u5168\u90e8\u5c04\u7206\uff0c\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u662f\u6c42\u6700\u5927\u4e0d\u91cd\u53e0\u533a\u95f4\u7684\u4e2a\u6570\u3002","title":"\u53d8\u79cd1\uff1a\u5c04\u6c14\u7403\u95ee\u9898"},{"location":"Algorithms/03-%E8%A3%B4%E8%9C%80%E5%AE%9A%E7%90%86/","text":"\u88f4\u8700\u5b9a\u7406 \u00b6 \u9996\u5148\u5b9a\u4e49\u4e00\u4e9b\u7b26\u53f7\uff1a \u6700\u5927\u516c\u7ea6\u6570(Greatest Common Divisor): \\(gcd(a, b)\\) ; \u53d6\u4f59\uff1a \\(a \\mod b = a - \\left\\lfloor a/b \\right\\rfloor \\cdot b\\) ; \u6574\u9664\uff1a \\(a \\vert b\\) \u8868\u793a \\(a\\) \u80fd\u88ab \\(b\\) \u6574\u9664\u3002 \u6b27\u51e0\u91cc\u5f97\u5b9a\u7406 \u00b6 \u5b9a\u74061 ( \u6b27\u51e0\u91cc\u5f97\u5b9a\u7406 ) \\[ \\tag{1} \\label{gcd} gcd(a, b) = gcd(b, a \\bmod b). \\] \u8bc1\u660e \u8bbe \\(r = a \\bmod b\\) \uff0c\u90a3\u4e48 \u9700\u8981\u8bc1\u660e \\(gcd(a, b) = gcd(b, r)\\) \u3002 \u518d\u8bbe \\(m = gcd(a, b)\\) \u4ee5\u53ca \\(n = gcd(b, r)\\) \u3002 \u6b63\u6574\u6570 \\(a = kb + r\\) \uff0c\u5176\u4e2d \\(k\\) \u4e3a\u6b63\u6574\u6570\uff0c\u5e76\u4e14 \\(r = a - kb\\) \u3002 \u7531 \\(m \\vert a\\) \u4e0e \\(m \\vert b\\) \u53ef\u5f97 \\(m \\vert (a - kb)\\) \uff0c\u5373 \\(m \\vert r\\) \u3002 \u6240\u4ee5 \\(m\\) \u4e5f\u662f \\(b\\) \u4e0e \\(r\\) \u7684\u516c\u7ea6\u6570\uff0c\u5e76\u4e14 \\(m \\le n\\) \u3002 \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u7531 \\(n \\vert b\\) , \\(n \\vert r\\) \u53ef\u5f97 \\(n \\vert (kb + r)\\) \uff0c\u5373 \\(n \\vert a\\) \u3002 \u6240\u4ee5 \\(n\\) \u4e5f\u662f \\(a\\) \u4e0e \\(b\\) \u7684\u516c\u7ea6\u6570\uff0c\u5e76\u4e14 \\(n \\le m\\) \u3002 \u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u5f97 \\(m = n\\) \u3002 int gcd ( int a , int b ) { return ( b == 0 ) ? a : gcd ( b , a % b );} \u88f4\u8700\u5b9a\u7406 \u00b6 \u5b9a\u74062 ( \u88f4\u8700\u5b9a\u7406 ) \u7ed9\u5b9a\u6574\u6570 \\(a\\) \u548c \\(b\\) , \u5bf9\u4e8e \\(ax + by = c\\) \u6709\u6574\u6570\u89e3\u7684\u5145\u8981\u6761\u4ef6\u662f \\(c = k_c \\cdot gcd(a, b)\\) \uff0c \\(k_c\\) \u4e3a\u6574\u6570\u3002 \u8bc1\u660e \u4e0d\u5931\u4e00\u822c\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a \\(a \\ge 0\\) , \\(b \\ge 0\\) , \\(c \\ge 0\\) \u3002 \u5fc5\u8981\u6027 \uff1a\u5047\u8bbe \\(c\\) \u4e0d\u4e3a \\(gcd(a, b)\\) \u7684\u6574\u6570\u500d\u3002 \u8bbe \\(d = gcd(a, b)\\) , \u90a3\u4e48 \\(a = k_a d\\) , \\(b = k_b d\\) \u4ee5\u53ca \\(c = k_c d + c'\\) \u3002\u5176\u4e2d \\(c' = c \\mod d\\) \uff0c\u5e76\u4e14 \\(c' > 0\\) \u3002\u90a3\u4e48 \\[ k_a x + k_b y = k_c + c'/d, \\] \u5176\u4e2d \\(c'/d\\) \u662f\u5c0f\u6570\u3002\u56e0\u4e3a\u5de6\u8fb9\u5fc5\u7136\u662f\u6574\u6570\uff0c\u6240\u4ee5\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002 \u5145\u5206\u6027 : \u7ee7\u627f\u4e0a\u9762\u7684\u7b26\u53f7, \u53ef\u5f97 \\[ k_a x + k_b y = k_c. \\] \u62bd\u8c61\u53ef\u5f97\uff1a \\(m_0\\) , \\(n_0\\) \u4e92\u8d28\u65f6\uff0c\u4e0d\u5b9a\u65b9\u7a0b \\(m_0 x_0 + n_0 y_0 = 1\\) \u4e00\u5b9a\u6709\u89e3\u3002 \\[\\begin{cases} m_0 x_0 + n_0 y_0 = 1;\\\\ m_1 x_1 + n_1 y_1 = 1, &m_1 = n_0, n_1 = m_0 \\bmod n_0;\\\\ \\vdots\\\\ m_t x_t + n_t y_t = 1, &m_t = n_{t-1}, n_t = m_{t-1} \\bmod n_{t-1}. \\end{cases}\\] \u7531\u6b27\u51e0\u91cc\u5f97\u5b9a\u7406\u53ef\u5f97\uff0c\u603b\u80fd\u5199\u5230\u67d0\u4e2a \\(t\\) \u6ee1\u8db3 \\(m_t = 1, n_t = 0\\) \uff0c\u90a3\u4e48\u7b2ct\u4e2a\u65b9\u7a0b\u5b58\u5728\u67d0\u4e00\u7ec4\u6574\u6570\u89e3 \\((1, 0)\\) \u3002 \u7531 \\((i+1)\\) th \u65b9\u7a0b\u7684\u89e3\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(i\\) th \u65b9\u7a0b\u7684\u89e3: \\[\\begin{align*} & m_i x_i + n_i y_i = m_{i+1} x_{i+1} + n_{i+1} y_{i+1} \\\\ \\Rightarrow& m_i x_i + n_i y_i = n_i x_{i+1} + (m_i - \\lfloor m_i / n_i \\rfloor n_i)y_{i+1} \\\\ \\Rightarrow& m_i x_i + n_i y_i = m_i y_{i+1} + n_i (x_{i+1} - \\lfloor m_i / n_i \\rfloor y_{i+1}) \\\\ \\Rightarrow& \\begin{cases} x_i = y_{i+1}, \\\\ y_i = x_{i+1} - \\lfloor m_i / n_i \\rfloor y_{i+1}. \\end{cases} \\end{align*}\\] \u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u539f\u65b9\u7a0b\u7684\u89e3 \\((x_0, y_0)\\) \u3002 Note \u7531\u88f4\u7956\u5b9a\u7406\u7684\u8bc1\u660e\u8fc7\u7a0b\uff0c\u6211\u4eec\u540c\u65f6\u4e5f\u83b7\u5f97\u4e86 \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 \uff0c\u7528\u6765\u6c42\u89e3\u4e0d\u5b9a\u65b9\u7a0b \\(a_0 x_0 + b_0 y_0 = gcd(a_0, b_0)\\) \u3002 \u552f\u4e00\u4e0d\u540c\u5728\u4e8e\u6211\u4eec\u6784\u9020\u7684\u65b9\u7a0b\u7ec4\u662f\uff1a \\[\\begin{cases} a_0 x_0 + b_0 y_0 = gcd(a_0, b_0);\\\\ a_1 x_1 + b_1 y_1 = gcd(a_1, b_1), &a_1 = b_0, b_1 = a_0 \\bmod b_0;\\\\ \\vdots\\\\ a_t x_t + b_t y_t = gcd(a_t, b_t), &a_t = b_{t-1}, b_t = a_{t-1} \\bmod b_{t-1}. \\end{cases}\\] void exgcd ( int a , int b , int & x , int & y ) { if ( ! b ) { x = 1 , y = 0 ; } else { exgcd ( b , a % b , y , x ); y -= a / b * x ; } } Cite [1] \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u2014\u2014\u88f4\u8700\uff08\u8d1d\u7956\uff09\u5b9a\u7406 [2] \u88f4\u8700\u5b9a\u7406\uff08\u8d1d\u7956\u5b9a\u7406\uff09 \u8bc1\u660e\u4e0e\u5e94\u7528 [3] \u88f4\u8700\u5b9a\u7406(\u8d1d\u7956\u5b9a\u7406)\u53ca\u8bc1\u660e \u5012\u6c34\u95ee\u9898 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode 365 . \u95ee\u9898\u63cf\u8ff0 \uff1a\u6709\u5927\u5c0f\u5206\u522b\u4e3a \\(a\\) \u548c \\(b\\) \u7684\u4e24\u4e2a\u5bb9\u5668\uff0c\u4ee5\u53ca\u65e0\u9650\u7684\u6c34\uff0c\u95ee\u80fd\u5426\u5012\u51fa\u4f53\u79ef\u4e3a \\(c\\) \u7684\u6c34\u3002 \u5012\u5165\u4f53\u79ef\u4e3a \\(c\\) \u7684\u6c34\u610f\u5473\u7740\u67d0\u4e00\u4e2a\u5bb9\u5668\u91cc\u7684\u6c34\u4f53\u79ef\u4e3a \\(c\\) , \u6216\u8005\u4e24\u4e2a\u5bb9\u5668\u4e2d\u6c34\u7684\u4f53\u79ef\u4e00\u5171\u4e3a \\(c\\) \u3002\u80fd\u505a\u5982\u4e0b\u64cd\u4f5c\uff1a \u88c5\u6ee1\u67d0\u4e00\u4e2a\u5bb9\u5668\uff1b \u5012\u7a7a\u67d0\u4e00\u4e2a\u5bb9\u5668\uff1b \u5c06\u67d0\u4e00\u4e2a\u5bb9\u5668\u7684\u6c34\u5012\u5230\u53e6\u4e00\u4e2a\u5bb9\u5668\u4e2d\uff0c\u76f4\u81f3\u51fa\u73b0\u4e00\u4e2a\u5bb9\u5668\u6ee1\u6216\u4e00\u4e2a\u5bb9\u5668\u7a7a\u3002 \u5206\u6790 \uff1a\u8fd9\u4e2a\u95ee\u9898\u5145\u8981\u6761\u4ef6\u4e3a \\(ax + by = c\\) \u6709\u6574\u6570\u89e3 \u5e76\u4e14 \\(c \\le a + b\\) \u3002 \u5fc5\u8981\u6027 \uff1a\u4e24\u4e2a\u5bb9\u5668\u4e2d\u6c34\u7684\u603b\u4f53\u79ef\u4e00\u5b9a\u6ee1\u8db3 \\(ax + by\\) , \u5176\u4e2d \\(x\\) \u548c \\(y\\) \u662f\u6574\u6570\u3002 \u4e0d\u53ef\u80fd\u51fa\u73b0\u4e24\u4e2a\u5bb9\u5668\u540c\u65f6\u4e0d\u6ee1\u7684\u65f6\u5019\uff1b \u5f80\u4e0d\u6ee1\u7684\u5bb9\u5668\u91cc\u52a0\u6c34\u6ca1\u6709\u610f\u4e49\uff0c\u7b49\u4ef7\u4e8e\u521d\u59cb\u72b6\u6001\u65f6\u7ed9\u5bf9\u5e94\u5bb9\u5668\u52a0\u6ee1\uff1b \u6e05\u7a7a\u4e0d\u6ee1\u7684\u5bb9\u5668\u6ca1\u6709\u610f\u4e49\uff0c\u7b49\u4ef7\u4e8e\u521d\u59cb\u72b6\u6001\u3002 \u7efc\u4e0a\uff0c\u4e24\u5bb9\u5668\u4e2d\u6c34\u7684\u603b\u4f53\u79ef\u4e00\u5b9a\u6ee1\u8db3 \\(ax + by\\) \u3002 \u5145\u5206\u6027 \uff1a\u5982\u679c \\(x \\ge 0\\) \u5e76\u4e14 \\(y \\ge 0\\) \uff0c\u8868\u793a\u628a\u5bf9\u5e94\u7684\u5bb9\u5668\u63a5\u6ee1\u5c31\u53ef\u4ee5\u4e86\uff1b\u5982\u679c \\(x < 0\\) \u6216 \\(y < 0\\) \uff0c\u4ee5 \\(y\\) \u4e3a\u91cf\u676f\u589e\u52a0\u6c34\uff0c\u518d\u4ee5 \\(x\\) \u4e3a\u91cf\u676f\u51cf\u5c11\u6c34\uff08\u8fd9\u4e2a\u64cd\u4f5c\u9700\u8981\u601d\u8003\u4e00\u4e0b\uff0c\u786e\u5b9e\u80fd\u591f\u505a\u5230\uff09\u3002 \u5b98\u65b9\u9898\u89e3\u9700\u8981\u8003\u8651\u5f88\u591a\u56e0\u7d20\uff1a class Solution { public : bool canMeasureWater ( int x , int y , int z ) { if ( x + y < z ) { return false ; } if ( x == 0 || y == 0 ) { return z == 0 || x + y == z ; } int a = gcd ( x , y ); return z % a == 0 ; } private : int gcd ( int x , int y ) { return ( y == 0 ) ? x : gcd ( y , x % y ); } }; Cite [1] LeetCode 365 [2] LeetCode \u5b98\u65b9\u9898\u89e3","title":"\u88f4\u8700\u5b9a\u7406"},{"location":"Algorithms/03-%E8%A3%B4%E8%9C%80%E5%AE%9A%E7%90%86/#_1","text":"\u9996\u5148\u5b9a\u4e49\u4e00\u4e9b\u7b26\u53f7\uff1a \u6700\u5927\u516c\u7ea6\u6570(Greatest Common Divisor): \\(gcd(a, b)\\) ; \u53d6\u4f59\uff1a \\(a \\mod b = a - \\left\\lfloor a/b \\right\\rfloor \\cdot b\\) ; \u6574\u9664\uff1a \\(a \\vert b\\) \u8868\u793a \\(a\\) \u80fd\u88ab \\(b\\) \u6574\u9664\u3002","title":"\u88f4\u8700\u5b9a\u7406"},{"location":"Algorithms/03-%E8%A3%B4%E8%9C%80%E5%AE%9A%E7%90%86/#_2","text":"\u5b9a\u74061 ( \u6b27\u51e0\u91cc\u5f97\u5b9a\u7406 ) \\[ \\tag{1} \\label{gcd} gcd(a, b) = gcd(b, a \\bmod b). \\] \u8bc1\u660e \u8bbe \\(r = a \\bmod b\\) \uff0c\u90a3\u4e48 \u9700\u8981\u8bc1\u660e \\(gcd(a, b) = gcd(b, r)\\) \u3002 \u518d\u8bbe \\(m = gcd(a, b)\\) \u4ee5\u53ca \\(n = gcd(b, r)\\) \u3002 \u6b63\u6574\u6570 \\(a = kb + r\\) \uff0c\u5176\u4e2d \\(k\\) \u4e3a\u6b63\u6574\u6570\uff0c\u5e76\u4e14 \\(r = a - kb\\) \u3002 \u7531 \\(m \\vert a\\) \u4e0e \\(m \\vert b\\) \u53ef\u5f97 \\(m \\vert (a - kb)\\) \uff0c\u5373 \\(m \\vert r\\) \u3002 \u6240\u4ee5 \\(m\\) \u4e5f\u662f \\(b\\) \u4e0e \\(r\\) \u7684\u516c\u7ea6\u6570\uff0c\u5e76\u4e14 \\(m \\le n\\) \u3002 \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u7531 \\(n \\vert b\\) , \\(n \\vert r\\) \u53ef\u5f97 \\(n \\vert (kb + r)\\) \uff0c\u5373 \\(n \\vert a\\) \u3002 \u6240\u4ee5 \\(n\\) \u4e5f\u662f \\(a\\) \u4e0e \\(b\\) \u7684\u516c\u7ea6\u6570\uff0c\u5e76\u4e14 \\(n \\le m\\) \u3002 \u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u5f97 \\(m = n\\) \u3002 int gcd ( int a , int b ) { return ( b == 0 ) ? a : gcd ( b , a % b );}","title":"\u6b27\u51e0\u91cc\u5f97\u5b9a\u7406"},{"location":"Algorithms/03-%E8%A3%B4%E8%9C%80%E5%AE%9A%E7%90%86/#_3","text":"\u5b9a\u74062 ( \u88f4\u8700\u5b9a\u7406 ) \u7ed9\u5b9a\u6574\u6570 \\(a\\) \u548c \\(b\\) , \u5bf9\u4e8e \\(ax + by = c\\) \u6709\u6574\u6570\u89e3\u7684\u5145\u8981\u6761\u4ef6\u662f \\(c = k_c \\cdot gcd(a, b)\\) \uff0c \\(k_c\\) \u4e3a\u6574\u6570\u3002 \u8bc1\u660e \u4e0d\u5931\u4e00\u822c\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a \\(a \\ge 0\\) , \\(b \\ge 0\\) , \\(c \\ge 0\\) \u3002 \u5fc5\u8981\u6027 \uff1a\u5047\u8bbe \\(c\\) \u4e0d\u4e3a \\(gcd(a, b)\\) \u7684\u6574\u6570\u500d\u3002 \u8bbe \\(d = gcd(a, b)\\) , \u90a3\u4e48 \\(a = k_a d\\) , \\(b = k_b d\\) \u4ee5\u53ca \\(c = k_c d + c'\\) \u3002\u5176\u4e2d \\(c' = c \\mod d\\) \uff0c\u5e76\u4e14 \\(c' > 0\\) \u3002\u90a3\u4e48 \\[ k_a x + k_b y = k_c + c'/d, \\] \u5176\u4e2d \\(c'/d\\) \u662f\u5c0f\u6570\u3002\u56e0\u4e3a\u5de6\u8fb9\u5fc5\u7136\u662f\u6574\u6570\uff0c\u6240\u4ee5\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002 \u5145\u5206\u6027 : \u7ee7\u627f\u4e0a\u9762\u7684\u7b26\u53f7, \u53ef\u5f97 \\[ k_a x + k_b y = k_c. \\] \u62bd\u8c61\u53ef\u5f97\uff1a \\(m_0\\) , \\(n_0\\) \u4e92\u8d28\u65f6\uff0c\u4e0d\u5b9a\u65b9\u7a0b \\(m_0 x_0 + n_0 y_0 = 1\\) \u4e00\u5b9a\u6709\u89e3\u3002 \\[\\begin{cases} m_0 x_0 + n_0 y_0 = 1;\\\\ m_1 x_1 + n_1 y_1 = 1, &m_1 = n_0, n_1 = m_0 \\bmod n_0;\\\\ \\vdots\\\\ m_t x_t + n_t y_t = 1, &m_t = n_{t-1}, n_t = m_{t-1} \\bmod n_{t-1}. \\end{cases}\\] \u7531\u6b27\u51e0\u91cc\u5f97\u5b9a\u7406\u53ef\u5f97\uff0c\u603b\u80fd\u5199\u5230\u67d0\u4e2a \\(t\\) \u6ee1\u8db3 \\(m_t = 1, n_t = 0\\) \uff0c\u90a3\u4e48\u7b2ct\u4e2a\u65b9\u7a0b\u5b58\u5728\u67d0\u4e00\u7ec4\u6574\u6570\u89e3 \\((1, 0)\\) \u3002 \u7531 \\((i+1)\\) th \u65b9\u7a0b\u7684\u89e3\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(i\\) th \u65b9\u7a0b\u7684\u89e3: \\[\\begin{align*} & m_i x_i + n_i y_i = m_{i+1} x_{i+1} + n_{i+1} y_{i+1} \\\\ \\Rightarrow& m_i x_i + n_i y_i = n_i x_{i+1} + (m_i - \\lfloor m_i / n_i \\rfloor n_i)y_{i+1} \\\\ \\Rightarrow& m_i x_i + n_i y_i = m_i y_{i+1} + n_i (x_{i+1} - \\lfloor m_i / n_i \\rfloor y_{i+1}) \\\\ \\Rightarrow& \\begin{cases} x_i = y_{i+1}, \\\\ y_i = x_{i+1} - \\lfloor m_i / n_i \\rfloor y_{i+1}. \\end{cases} \\end{align*}\\] \u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u539f\u65b9\u7a0b\u7684\u89e3 \\((x_0, y_0)\\) \u3002 Note \u7531\u88f4\u7956\u5b9a\u7406\u7684\u8bc1\u660e\u8fc7\u7a0b\uff0c\u6211\u4eec\u540c\u65f6\u4e5f\u83b7\u5f97\u4e86 \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 \uff0c\u7528\u6765\u6c42\u89e3\u4e0d\u5b9a\u65b9\u7a0b \\(a_0 x_0 + b_0 y_0 = gcd(a_0, b_0)\\) \u3002 \u552f\u4e00\u4e0d\u540c\u5728\u4e8e\u6211\u4eec\u6784\u9020\u7684\u65b9\u7a0b\u7ec4\u662f\uff1a \\[\\begin{cases} a_0 x_0 + b_0 y_0 = gcd(a_0, b_0);\\\\ a_1 x_1 + b_1 y_1 = gcd(a_1, b_1), &a_1 = b_0, b_1 = a_0 \\bmod b_0;\\\\ \\vdots\\\\ a_t x_t + b_t y_t = gcd(a_t, b_t), &a_t = b_{t-1}, b_t = a_{t-1} \\bmod b_{t-1}. \\end{cases}\\] void exgcd ( int a , int b , int & x , int & y ) { if ( ! b ) { x = 1 , y = 0 ; } else { exgcd ( b , a % b , y , x ); y -= a / b * x ; } } Cite [1] \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u2014\u2014\u88f4\u8700\uff08\u8d1d\u7956\uff09\u5b9a\u7406 [2] \u88f4\u8700\u5b9a\u7406\uff08\u8d1d\u7956\u5b9a\u7406\uff09 \u8bc1\u660e\u4e0e\u5e94\u7528 [3] \u88f4\u8700\u5b9a\u7406(\u8d1d\u7956\u5b9a\u7406)\u53ca\u8bc1\u660e","title":"\u88f4\u8700\u5b9a\u7406"},{"location":"Algorithms/03-%E8%A3%B4%E8%9C%80%E5%AE%9A%E7%90%86/#_4","text":"\u8be6\u60c5\u53c2\u8003 LeetCode 365 . \u95ee\u9898\u63cf\u8ff0 \uff1a\u6709\u5927\u5c0f\u5206\u522b\u4e3a \\(a\\) \u548c \\(b\\) \u7684\u4e24\u4e2a\u5bb9\u5668\uff0c\u4ee5\u53ca\u65e0\u9650\u7684\u6c34\uff0c\u95ee\u80fd\u5426\u5012\u51fa\u4f53\u79ef\u4e3a \\(c\\) \u7684\u6c34\u3002 \u5012\u5165\u4f53\u79ef\u4e3a \\(c\\) \u7684\u6c34\u610f\u5473\u7740\u67d0\u4e00\u4e2a\u5bb9\u5668\u91cc\u7684\u6c34\u4f53\u79ef\u4e3a \\(c\\) , \u6216\u8005\u4e24\u4e2a\u5bb9\u5668\u4e2d\u6c34\u7684\u4f53\u79ef\u4e00\u5171\u4e3a \\(c\\) \u3002\u80fd\u505a\u5982\u4e0b\u64cd\u4f5c\uff1a \u88c5\u6ee1\u67d0\u4e00\u4e2a\u5bb9\u5668\uff1b \u5012\u7a7a\u67d0\u4e00\u4e2a\u5bb9\u5668\uff1b \u5c06\u67d0\u4e00\u4e2a\u5bb9\u5668\u7684\u6c34\u5012\u5230\u53e6\u4e00\u4e2a\u5bb9\u5668\u4e2d\uff0c\u76f4\u81f3\u51fa\u73b0\u4e00\u4e2a\u5bb9\u5668\u6ee1\u6216\u4e00\u4e2a\u5bb9\u5668\u7a7a\u3002 \u5206\u6790 \uff1a\u8fd9\u4e2a\u95ee\u9898\u5145\u8981\u6761\u4ef6\u4e3a \\(ax + by = c\\) \u6709\u6574\u6570\u89e3 \u5e76\u4e14 \\(c \\le a + b\\) \u3002 \u5fc5\u8981\u6027 \uff1a\u4e24\u4e2a\u5bb9\u5668\u4e2d\u6c34\u7684\u603b\u4f53\u79ef\u4e00\u5b9a\u6ee1\u8db3 \\(ax + by\\) , \u5176\u4e2d \\(x\\) \u548c \\(y\\) \u662f\u6574\u6570\u3002 \u4e0d\u53ef\u80fd\u51fa\u73b0\u4e24\u4e2a\u5bb9\u5668\u540c\u65f6\u4e0d\u6ee1\u7684\u65f6\u5019\uff1b \u5f80\u4e0d\u6ee1\u7684\u5bb9\u5668\u91cc\u52a0\u6c34\u6ca1\u6709\u610f\u4e49\uff0c\u7b49\u4ef7\u4e8e\u521d\u59cb\u72b6\u6001\u65f6\u7ed9\u5bf9\u5e94\u5bb9\u5668\u52a0\u6ee1\uff1b \u6e05\u7a7a\u4e0d\u6ee1\u7684\u5bb9\u5668\u6ca1\u6709\u610f\u4e49\uff0c\u7b49\u4ef7\u4e8e\u521d\u59cb\u72b6\u6001\u3002 \u7efc\u4e0a\uff0c\u4e24\u5bb9\u5668\u4e2d\u6c34\u7684\u603b\u4f53\u79ef\u4e00\u5b9a\u6ee1\u8db3 \\(ax + by\\) \u3002 \u5145\u5206\u6027 \uff1a\u5982\u679c \\(x \\ge 0\\) \u5e76\u4e14 \\(y \\ge 0\\) \uff0c\u8868\u793a\u628a\u5bf9\u5e94\u7684\u5bb9\u5668\u63a5\u6ee1\u5c31\u53ef\u4ee5\u4e86\uff1b\u5982\u679c \\(x < 0\\) \u6216 \\(y < 0\\) \uff0c\u4ee5 \\(y\\) \u4e3a\u91cf\u676f\u589e\u52a0\u6c34\uff0c\u518d\u4ee5 \\(x\\) \u4e3a\u91cf\u676f\u51cf\u5c11\u6c34\uff08\u8fd9\u4e2a\u64cd\u4f5c\u9700\u8981\u601d\u8003\u4e00\u4e0b\uff0c\u786e\u5b9e\u80fd\u591f\u505a\u5230\uff09\u3002 \u5b98\u65b9\u9898\u89e3\u9700\u8981\u8003\u8651\u5f88\u591a\u56e0\u7d20\uff1a class Solution { public : bool canMeasureWater ( int x , int y , int z ) { if ( x + y < z ) { return false ; } if ( x == 0 || y == 0 ) { return z == 0 || x + y == z ; } int a = gcd ( x , y ); return z % a == 0 ; } private : int gcd ( int x , int y ) { return ( y == 0 ) ? x : gcd ( y , x % y ); } }; Cite [1] LeetCode 365 [2] LeetCode \u5b98\u65b9\u9898\u89e3","title":"\u5012\u6c34\u95ee\u9898"},{"location":"Algorithms/04-%E5%89%AA%E7%BB%B3%E5%AD%90%E9%97%AE%E9%A2%98/","text":"\u526a\u7ef3\u5b50\u95ee\u9898 \u00b6 \u95ee\u9898\u63cf\u8ff0 \uff1a\u4e00\u6bb5\u957f\u5ea6\u4e3an\u7684\u7ef3\u5b50\uff0c\u6211\u4eec\u628a\u5b83\u6210m\u6bb5\uff0c\u5176\u4e2d \\(m > 1\\) \uff0c\u6bcf\u4e00\u6bb5\u7684\u957f\u5ea6\u4e3a\u6b63\u6574\u6570\uff0c\u5373 \\(\\{n_1, n_2, \\ldots, n_m\\}\\) \u3002\u6c42\u5982\u4f55\u526a\u7ef3\u5b50\uff0c\u80fd\u591f\u7ef3\u5b50\u6bb5\u7684\u4e58\u79ef \\(\\prod^{m}_{i=1} n_i\\) \u6700\u5927\u3002 \u8fd9\u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212\u6765\u505a\uff0c\u4f46\u662f\u5982\u679c\u901a\u8fc7\u6570\u5b66\u5206\u6790\uff0c\u90a3\u4e48\u80fd\u591f\u83b7\u5f97\u9ad8\u6548\u7684\u7b97\u6cd5\u3002 \u5206\u6790 \uff1a\u9996\u5148\uff0c\u6211\u4eec\u56fa\u5b9a\u7ef3\u5b50\u7684\u6bb5\u6570 \\(m\\) \uff0c\u6211\u4eec\u5f97\u5230\u4f18\u5316\u76ee\u6807\uff1a \\[ \\tag{1} \\label{objective1} \\max_{n_i:i\\in[1,m]} \\prod^{m}_{i=1} {n_i}, \\quad s.t. \\sum^{m}_{i=1} n_i = n. \\] \u5bf9\u5e94\u7684\u62c9\u683c\u6717\u65e5\u5f62\u5f0f\u4e3a \\[ \\tag{2} \\label{objective2} \\max_{n_i:i\\in[1,m]}\\min_{\\lambda\\ne 0} \\prod^{m}_{i=1} {n_i} + \\lambda (\\sum^{m}_{i=1} n_i - n). \\] \u7531\u5f3a\u5bf9\u5076\u6027\u53ef\u5f97\u7b49\u4ef7\u7684\u95ee\u9898\u4e3a \\[ \\tag{3} \\label{objective3} \\min_{\\lambda\\ne 0} \\max_{n_i:i\\in[1,m]} \\prod^{m}_{i=1} {n_i} + \\lambda (n - \\sum^{m}_{i=1} n_i). \\] \u5bf9\u5185\u90e8\u5b50\u95ee\u9898\u6c42\u5bfc\u53ef\u5f97: \\[\\begin{cases} \\tag{4} \\label{step1} \\prod^{m}_{i=1} {n^*_i} / n^*_1 - \\lambda = 0 \\\\ \\prod^{m}_{i=1} {n^*_i} / n^*_2 - \\lambda = 0 \\\\ \\vdots\\\\ \\prod^{m}_{i=1} {n^*_i} / n^*_m - \\lambda = 0 \\end{cases}\\] \u5c06\u6240\u6709\u7b49\u5f0f\u8fde\u4e58\u53ef\u5f97 \\[ \\tag{5} \\label{step2} (\\prod^{m}_{i=1} {n^*_i})^{m-1} = \\lambda^m \\Rightarrow \\prod^{m}_{i=1} {n^*_i} = \\lambda^{m / (m - 1)}. \\] \u6211\u4eec\u53ef\u4ee5\u9884\u89c1\u628a\u4e0a\u5f0f\u5e26\u5165\u95ee\u9898 \\(\\eqref{objective3}\\) \u53ef\u4ee5\u6c42\u5f97\u4e00\u4e2a\u6700\u4f18\u89e3 \\(\\lambda^*\\) \uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u6c42\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u53ef\u5f97 \\(n^*_1 = n^*_2 = \\ldots = n^*_m\\) \u3002 \u7efc\u4e0a\uff0c\u5982\u679c\u5206\u7684\u6bb5\u6570\u786e\u5b9a\uff0c\u90a3\u4e48\u6700\u4f18\u7684\u5206\u6cd5\u5c31\u662f\u5747\u7b49\u5206\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u7814\u7a76\u6700\u597d\u5206\u51e0\u6bb5\uff0c\u5bf9\u5e94\u7684\u4f18\u5316\u95ee\u9898\u4e3a \\[ \\tag{6} \\label{objective4} \\max_{m} (n / m)^m. \\] \u6211\u4eec\u4e00\u773c\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u6700\u4f18\u503c\u53d6\u5230 \\(m^* = n / e\\) , \u5176\u4e2d \\(e\\) \u4e3a\u81ea\u7136\u5e95\u6570\u3002 \u63a5\u4e0b\u6765\u9000\u5316\u5230\u6574\u6570\u4f18\u5316\u7684\u73af\u8282\u6709\u4e9b\u4e0d\u90a3\u4e48\u4e25\u8c28\uff0c\u6211\u4eec\u53ef\u5f97\u5e73\u5747\u957f\u5ea6\u6700\u597d\u4e3a \\(e\\) \uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5c3d\u91cf\u53d6\u5230 \\(3\\) \u6216 \\(2\\) , \u5f53\u7136\u8981\u5c3d\u91cf\u591a\u53d6 \\(3\\) \u3002 \u7531\u88f4\u7956\u5b9a\u7406\u53ef\u5f97 \\(2x + 3y = n\\) \u603b\u6709\u6574\u6570\u89e3\uff0c\u81f3\u4e8e\u6709\u6ca1\u6709\u6b63\u6574\u6570\u89e3\u5c31\u8981\u518d\u5206\u6790\u3002","title":"\u526a\u7ef3\u5b50\u95ee\u9898"},{"location":"Algorithms/04-%E5%89%AA%E7%BB%B3%E5%AD%90%E9%97%AE%E9%A2%98/#_1","text":"\u95ee\u9898\u63cf\u8ff0 \uff1a\u4e00\u6bb5\u957f\u5ea6\u4e3an\u7684\u7ef3\u5b50\uff0c\u6211\u4eec\u628a\u5b83\u6210m\u6bb5\uff0c\u5176\u4e2d \\(m > 1\\) \uff0c\u6bcf\u4e00\u6bb5\u7684\u957f\u5ea6\u4e3a\u6b63\u6574\u6570\uff0c\u5373 \\(\\{n_1, n_2, \\ldots, n_m\\}\\) \u3002\u6c42\u5982\u4f55\u526a\u7ef3\u5b50\uff0c\u80fd\u591f\u7ef3\u5b50\u6bb5\u7684\u4e58\u79ef \\(\\prod^{m}_{i=1} n_i\\) \u6700\u5927\u3002 \u8fd9\u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212\u6765\u505a\uff0c\u4f46\u662f\u5982\u679c\u901a\u8fc7\u6570\u5b66\u5206\u6790\uff0c\u90a3\u4e48\u80fd\u591f\u83b7\u5f97\u9ad8\u6548\u7684\u7b97\u6cd5\u3002 \u5206\u6790 \uff1a\u9996\u5148\uff0c\u6211\u4eec\u56fa\u5b9a\u7ef3\u5b50\u7684\u6bb5\u6570 \\(m\\) \uff0c\u6211\u4eec\u5f97\u5230\u4f18\u5316\u76ee\u6807\uff1a \\[ \\tag{1} \\label{objective1} \\max_{n_i:i\\in[1,m]} \\prod^{m}_{i=1} {n_i}, \\quad s.t. \\sum^{m}_{i=1} n_i = n. \\] \u5bf9\u5e94\u7684\u62c9\u683c\u6717\u65e5\u5f62\u5f0f\u4e3a \\[ \\tag{2} \\label{objective2} \\max_{n_i:i\\in[1,m]}\\min_{\\lambda\\ne 0} \\prod^{m}_{i=1} {n_i} + \\lambda (\\sum^{m}_{i=1} n_i - n). \\] \u7531\u5f3a\u5bf9\u5076\u6027\u53ef\u5f97\u7b49\u4ef7\u7684\u95ee\u9898\u4e3a \\[ \\tag{3} \\label{objective3} \\min_{\\lambda\\ne 0} \\max_{n_i:i\\in[1,m]} \\prod^{m}_{i=1} {n_i} + \\lambda (n - \\sum^{m}_{i=1} n_i). \\] \u5bf9\u5185\u90e8\u5b50\u95ee\u9898\u6c42\u5bfc\u53ef\u5f97: \\[\\begin{cases} \\tag{4} \\label{step1} \\prod^{m}_{i=1} {n^*_i} / n^*_1 - \\lambda = 0 \\\\ \\prod^{m}_{i=1} {n^*_i} / n^*_2 - \\lambda = 0 \\\\ \\vdots\\\\ \\prod^{m}_{i=1} {n^*_i} / n^*_m - \\lambda = 0 \\end{cases}\\] \u5c06\u6240\u6709\u7b49\u5f0f\u8fde\u4e58\u53ef\u5f97 \\[ \\tag{5} \\label{step2} (\\prod^{m}_{i=1} {n^*_i})^{m-1} = \\lambda^m \\Rightarrow \\prod^{m}_{i=1} {n^*_i} = \\lambda^{m / (m - 1)}. \\] \u6211\u4eec\u53ef\u4ee5\u9884\u89c1\u628a\u4e0a\u5f0f\u5e26\u5165\u95ee\u9898 \\(\\eqref{objective3}\\) \u53ef\u4ee5\u6c42\u5f97\u4e00\u4e2a\u6700\u4f18\u89e3 \\(\\lambda^*\\) \uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u6c42\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u53ef\u5f97 \\(n^*_1 = n^*_2 = \\ldots = n^*_m\\) \u3002 \u7efc\u4e0a\uff0c\u5982\u679c\u5206\u7684\u6bb5\u6570\u786e\u5b9a\uff0c\u90a3\u4e48\u6700\u4f18\u7684\u5206\u6cd5\u5c31\u662f\u5747\u7b49\u5206\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u7814\u7a76\u6700\u597d\u5206\u51e0\u6bb5\uff0c\u5bf9\u5e94\u7684\u4f18\u5316\u95ee\u9898\u4e3a \\[ \\tag{6} \\label{objective4} \\max_{m} (n / m)^m. \\] \u6211\u4eec\u4e00\u773c\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u6700\u4f18\u503c\u53d6\u5230 \\(m^* = n / e\\) , \u5176\u4e2d \\(e\\) \u4e3a\u81ea\u7136\u5e95\u6570\u3002 \u63a5\u4e0b\u6765\u9000\u5316\u5230\u6574\u6570\u4f18\u5316\u7684\u73af\u8282\u6709\u4e9b\u4e0d\u90a3\u4e48\u4e25\u8c28\uff0c\u6211\u4eec\u53ef\u5f97\u5e73\u5747\u957f\u5ea6\u6700\u597d\u4e3a \\(e\\) \uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5c3d\u91cf\u53d6\u5230 \\(3\\) \u6216 \\(2\\) , \u5f53\u7136\u8981\u5c3d\u91cf\u591a\u53d6 \\(3\\) \u3002 \u7531\u88f4\u7956\u5b9a\u7406\u53ef\u5f97 \\(2x + 3y = n\\) \u603b\u6709\u6574\u6570\u89e3\uff0c\u81f3\u4e8e\u6709\u6ca1\u6709\u6b63\u6574\u6570\u89e3\u5c31\u8981\u518d\u5206\u6790\u3002","title":"\u526a\u7ef3\u5b50\u95ee\u9898"},{"location":"Algorithms/05-%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/","text":"\u6b27\u62c9\u51fd\u6570 \u00b6 \u6b27\u62c9\u51fd\u6570 \u00b6 \u5b9a\u4e491 ( Euler's totient function ). \u6b27\u62c9\u51fd\u6570 \\(\\phi(n)\\) \u8868\u793a\u5c0f\u4e8e\u7b49\u4e8e \\(n\\) \u7684\u6574\u6570\u4e2d\uff0c\u4e0e \\(n\\) \u4e92\u8d28\u7684\u6b63\u6574\u6570\u7684\u4e2a\u6570\u3002 \u6ce8\u610f \\(\\phi(1) = 1\\) \uff0c\u5e76\u4e14\u5982\u679c \\(p\\) \u662f\u8d28\u6570\u7684\u8bdd\uff0c \\(\\phi(n) = n - 1\\) \u3002 \u6027\u8d281 ( \u6b27\u62c9\u51fd\u6570\u7684\u79ef\u6027 ). \u5982\u679c \\(p\\) \u548c \\(q\\) \u4e92\u8d28\uff0c\u90a3\u4e48 \\(\\phi(p \\times q) = \\phi(p) \\times \\phi(q)\\) \u3002 \u6027\u8d282 \u5982\u679c \\(p\\) \u662f\u8d28\u6570\uff0c\u90a3\u4e48 \\(\\phi(p^k) = p^{k-1} \\times (p-1)\\) . \u8fd9\u4e2a\u6027\u8d28\u5f88\u597d\u8bc1\u660e\uff0c\u6211\u4eec\u53ef\u4ee5\u628a \\(p^k\\) \u5728\u6570\u8f74\u4e0a\u5747\u5206\u6210 \\(p^{k-1}\\) \u6bb5\uff0c\u90a3\u4e48\u6bcf\u4e00\u6bb5\u90fd\u6709 \\(p-1\\) \u4e2a\u6570\u4e0e \\(p^k\\) \u4e92\u8d28\u3002 \u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u6c42\u6b27\u62c9\u51fd\u6570\u503c\u7684\u5feb\u6377\u65b9\u6cd5\u3002 \u7531\u552f\u4e00\u5206\u89e3\u5b9a\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u62c6\u5206\u76ee\u6807\u503c \\(n = \\prod^{}_{i} p^{k_i}_i\\) \uff0c\u90a3\u4e48 \\[ \\tag{1} \\label{euler} \\phi(n) = n \\prod^{}_{i} \\frac{p_{i} - 1}{p_{i}}. \\] \u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fb9\u6c42\u89e3 \\(n\\) \u7684\u8d28\u56e0\u6570\uff0c\u8fb9\u6c42\u89e3 \\(\\phi(n)\\) : int eulerPhi ( int n ) { int top = sqrt ( n + 0.5 ); // \u9632\u6b62\u8ba1\u7b97\u7cbe\u5ea6\u8bef\u5dee int ans = n ; for ( int i = 2 ; i <= top ; ++ i ) { if ( n % i == 0 ) { ans = ans / i * ( i - 1 ); while ( n % i == 0 ) n /= i ; } } if ( n > 1 ) ans = ans / n * ( n - 1 ); //\u8d28\u6570 return ans ; } \u6269\u5c55\u6b27\u62c9\u5b9a\u7406 \u00b6 \\[ a^b\\equiv \\begin{cases} a^{b\\bmod\\varphi(p)},\\,&\\gcd(a,\\,p)=1\\\\ a^b,&\\gcd(a,\\,p)\\ne1,\\,b<\\varphi(p)\\\\ a^{b\\bmod\\varphi(p)+\\varphi(p)},&\\gcd(a,\\,p)\\ne1,\\,b\\ge\\varphi(p) \\end{cases} \\pmod p \\] Cite [1] \u6b27\u62c9\u51fd\u6570 [2] \u6b27\u62c9\u5b9a\u7406 \u8d85\u7ea7\u6b21\u65b9 \u00b6 \u9898\u76ee\u63cf\u8ff0 : \u8ba1\u7b97 \\(a^b\\) \u5bf9 1337 \u53d6\u6a21\uff0c\u5176\u4e2d \\(a\\) \u662f\u6b63\u6574\u6570\uff0c \\(b\\) \u662f\u8d85\u5927\u6574\u6570\uff0c\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u7ed9\u51fa\u3002 \u5206\u6790 : \u7b2c\u4e00\u6b65\uff1a\u5316\u7b80\u6307\u6570 \\(\\phi(1337) = 1140\\) \uff0c\u5bf9\u5927\u6570 \\(b\\) \u4f7f\u7528 \\({b \\bmod 1140 + 1140}\\) \uff1b \u7b2c\u4e8c\u6b65\uff1a\u6c42 \\(a\\) \u7684\u6307\u6570\uff0c\u4e3a\u4e86\u9632\u6b62\u8d85\u51fa\u6570\u5b57\u7684\u8868\u8fbe\u8303\u56f4\uff0c\u4f7f\u7528\u516c\u5f0f \\((A \\times B) \\bmod C = [(A \\bmod C) \\times (B \\bmod C)] \\bmod C\\) \u3002\u5728\u7b2c\u4e00\u6b65\u4e5f\u7528\u5230\u4e86\u8fd9\u4e2a\u516c\u5f0f\u3002","title":"\u6b27\u62c9\u51fd\u6570"},{"location":"Algorithms/05-%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_1","text":"","title":"\u6b27\u62c9\u51fd\u6570"},{"location":"Algorithms/05-%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_2","text":"\u5b9a\u4e491 ( Euler's totient function ). \u6b27\u62c9\u51fd\u6570 \\(\\phi(n)\\) \u8868\u793a\u5c0f\u4e8e\u7b49\u4e8e \\(n\\) \u7684\u6574\u6570\u4e2d\uff0c\u4e0e \\(n\\) \u4e92\u8d28\u7684\u6b63\u6574\u6570\u7684\u4e2a\u6570\u3002 \u6ce8\u610f \\(\\phi(1) = 1\\) \uff0c\u5e76\u4e14\u5982\u679c \\(p\\) \u662f\u8d28\u6570\u7684\u8bdd\uff0c \\(\\phi(n) = n - 1\\) \u3002 \u6027\u8d281 ( \u6b27\u62c9\u51fd\u6570\u7684\u79ef\u6027 ). \u5982\u679c \\(p\\) \u548c \\(q\\) \u4e92\u8d28\uff0c\u90a3\u4e48 \\(\\phi(p \\times q) = \\phi(p) \\times \\phi(q)\\) \u3002 \u6027\u8d282 \u5982\u679c \\(p\\) \u662f\u8d28\u6570\uff0c\u90a3\u4e48 \\(\\phi(p^k) = p^{k-1} \\times (p-1)\\) . \u8fd9\u4e2a\u6027\u8d28\u5f88\u597d\u8bc1\u660e\uff0c\u6211\u4eec\u53ef\u4ee5\u628a \\(p^k\\) \u5728\u6570\u8f74\u4e0a\u5747\u5206\u6210 \\(p^{k-1}\\) \u6bb5\uff0c\u90a3\u4e48\u6bcf\u4e00\u6bb5\u90fd\u6709 \\(p-1\\) \u4e2a\u6570\u4e0e \\(p^k\\) \u4e92\u8d28\u3002 \u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u6c42\u6b27\u62c9\u51fd\u6570\u503c\u7684\u5feb\u6377\u65b9\u6cd5\u3002 \u7531\u552f\u4e00\u5206\u89e3\u5b9a\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u62c6\u5206\u76ee\u6807\u503c \\(n = \\prod^{}_{i} p^{k_i}_i\\) \uff0c\u90a3\u4e48 \\[ \\tag{1} \\label{euler} \\phi(n) = n \\prod^{}_{i} \\frac{p_{i} - 1}{p_{i}}. \\] \u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fb9\u6c42\u89e3 \\(n\\) \u7684\u8d28\u56e0\u6570\uff0c\u8fb9\u6c42\u89e3 \\(\\phi(n)\\) : int eulerPhi ( int n ) { int top = sqrt ( n + 0.5 ); // \u9632\u6b62\u8ba1\u7b97\u7cbe\u5ea6\u8bef\u5dee int ans = n ; for ( int i = 2 ; i <= top ; ++ i ) { if ( n % i == 0 ) { ans = ans / i * ( i - 1 ); while ( n % i == 0 ) n /= i ; } } if ( n > 1 ) ans = ans / n * ( n - 1 ); //\u8d28\u6570 return ans ; }","title":"\u6b27\u62c9\u51fd\u6570"},{"location":"Algorithms/05-%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_3","text":"\\[ a^b\\equiv \\begin{cases} a^{b\\bmod\\varphi(p)},\\,&\\gcd(a,\\,p)=1\\\\ a^b,&\\gcd(a,\\,p)\\ne1,\\,b<\\varphi(p)\\\\ a^{b\\bmod\\varphi(p)+\\varphi(p)},&\\gcd(a,\\,p)\\ne1,\\,b\\ge\\varphi(p) \\end{cases} \\pmod p \\] Cite [1] \u6b27\u62c9\u51fd\u6570 [2] \u6b27\u62c9\u5b9a\u7406","title":"\u6269\u5c55\u6b27\u62c9\u5b9a\u7406"},{"location":"Algorithms/05-%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_4","text":"\u9898\u76ee\u63cf\u8ff0 : \u8ba1\u7b97 \\(a^b\\) \u5bf9 1337 \u53d6\u6a21\uff0c\u5176\u4e2d \\(a\\) \u662f\u6b63\u6574\u6570\uff0c \\(b\\) \u662f\u8d85\u5927\u6574\u6570\uff0c\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u7ed9\u51fa\u3002 \u5206\u6790 : \u7b2c\u4e00\u6b65\uff1a\u5316\u7b80\u6307\u6570 \\(\\phi(1337) = 1140\\) \uff0c\u5bf9\u5927\u6570 \\(b\\) \u4f7f\u7528 \\({b \\bmod 1140 + 1140}\\) \uff1b \u7b2c\u4e8c\u6b65\uff1a\u6c42 \\(a\\) \u7684\u6307\u6570\uff0c\u4e3a\u4e86\u9632\u6b62\u8d85\u51fa\u6570\u5b57\u7684\u8868\u8fbe\u8303\u56f4\uff0c\u4f7f\u7528\u516c\u5f0f \\((A \\times B) \\bmod C = [(A \\bmod C) \\times (B \\bmod C)] \\bmod C\\) \u3002\u5728\u7b2c\u4e00\u6b65\u4e5f\u7528\u5230\u4e86\u8fd9\u4e2a\u516c\u5f0f\u3002","title":"\u8d85\u7ea7\u6b21\u65b9"},{"location":"Algorithms/06-%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7/","text":"\u84c4\u6c34\u6c60\u62bd\u6837 \u00b6 \u95ee\u9898\u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e00\u4e2a\u672a\u77e5\u7684\u6570\u636e\u6d41 \\([a_1, a_2, \\ldots, a_n]\\) \uff0c\u5728\u53ea\u904d\u5386\u4e00\u904d\u6570\u636e\u7684\u60c5\u51b5\u4e0b\uff0c\u62bd\u53d6m\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u8981\u6c42\u5747\u5300\u91c7\u6837\u3002\u8fd9\u91cc\u7684\u4e0d\u540c\uff0c\u6307\u7684\u662f\u6570\u636e\u6d41\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c\u800c\u4e0d\u662f\u503c\u4e0d\u540c\u3002 \u5206\u6790 \uff1a\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5c31\u662f\u5728\u4e0d\u77e5\u9053\u6570\u636e\u957f\u5ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u5b8c\u6210\u5747\u5300\u91c7\u6837\u3002 \u62bd\u4e00\u4e2a\u6837\u672c \u00b6 \u5148\u7814\u7a76 \\(m = 1\\) \u7684\u60c5\u51b5\uff0c\u6bcf\u589e\u52a0\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6b63\u6982\u7387\uff1a \\[\\begin{cases} n=1: & 1 \\\\ n=2: & 1 \\times \\frac{1}{2} & \\frac{1}{2} \\\\ n=3: & \\frac{1}{2} \\times \\frac{2}{3} & \\frac{1}{2} \\times \\frac{2}{3} & \\frac{1}{3} \\\\ \\vdots \\end{cases}\\] \u5047\u8bbe\uff0c\u6211\u4eec\u5df2\u7ecf\u4ece \\([a_1, \\ldots, a_{n-1}]\\) \u7684\u5e8f\u5217\u4e2d\u5747\u5300\u91c7\u6837\u4e00\u4e2a\u6570 \\(b\\) \u3002 \u73b0\u5728\u8bfb\u5230\u4e86\u7b2c \\(n\\) \u4e2a\u6570 \\(a_{n}\\) , \u90a3\u4e48\u6211\u4eec\u4ee5 \\(\\frac{1}{n}\\) \u7684\u6982\u7387\u9009\u62e9\u65b0\u7684\u6570 \\(a_{n}\\) , \u518d\u4ee5 \\(\\frac{n-1}{n}\\) \u7684\u6982\u7387\u9009 \\(b\\) \u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86 \\(n\\) \u4e2a\u6570\u7684\u5747\u5300\u91c7\u6837\u3002 \u8fd9\u79cd\u53e0\u52a0\u7684\u9009\u62e9\u64cd\u4f5c\uff0c\u80fd\u591f\u6539\u53d8\u6982\u7387\uff0c\u662f\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6838\u5fc3\u3002 \u62bdm\u4e2a\u4e0d\u540c\u7684\u6837\u672c \u00b6 \u6211\u4eec\u5148\u7814\u7a76 \\(m=2\\) \u7684\u60c5\u51b5\uff1a \\[\\begin{cases} n=2: & 1 & 1\\\\ n=3: & 1 \\times \\frac{2}{3} & 1 \\times \\frac{2}{3} & \\frac{2}{3} \\\\ n=4: & \\frac{2}{3} \\times \\frac{3}{4} & \\frac{2}{3} \\times \\frac{3}{4} &\\frac{2}{3} \\times \\frac{3}{4} & \\frac{2}{4} \\\\ \\vdots \\end{cases}\\] \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u5047\u8bbe\u5df2\u7ecf\u4ece \\([a_1, a_2, \\ldots, a_{n-1}]\\) \u7684\u5e8f\u5217\u4e2d\u5747\u5300\u91c7\u96c6\u4e86 \\(m\\) \u4e2a\u6570 \\([b_1, b_2, \\ldots, b_m]\\) \u3002\u73b0\u5728\u6211\u4eec\u8bfb\u5230\u4e86\u7b2c \\(n\\) \u4e2a\u6570 \\(a_{n}\\) \uff0c\u6211\u4eec\u9996\u5148\u51b3\u5b9a \\(a_{n}\\) \u662f\u5426\u8981\u51fa\u73b0\u5728\u91c7\u6837\u6837\u672c\u4e2d\uff0c\u4fdd\u8bc1\u51fa\u73b0\u7684\u6982\u7387\u4e3a \\(m / n\\) \u3002\u5982\u679c\u8981\u66ff\u6362\uff0c\u90a3\u4e48\u6211\u4eec\u4ece \\([b_1, b_2, \\ldots, b_m]\\) \u5747\u5300\u9009\u62e9\u4e00\u4e2a\u6570\u88ab \\(a_{n}\\) \u66ff\u6362\u3002 \u5206\u5e03\u5f0f\u84c4\u6c34\u6c60\u62bd\u6837 \u00b6 \u95ee\u9898\u63cf\u8ff0 \uff1a\u73b0\u5728\u53c8 \\(K\\) \u53f0\u670d\u52a1\u5668\uff0c\u6bcf\u53f0\u670d\u52a1\u5668\u5df2\u7ecf\u5904\u7406\u7684\u6570\u636e\u91cf\u5206\u522b\u4e3a \\(N_1, N_2, \\ldots, N_K\\) \u3002\u9700\u8981\u603b\u4f53\u6837\u672c\u4e2d\u91c7\u96c6 \\(m\\) \u4e2a\u4e0d\u540c\u7684\u6570\u3002 \u5206\u6790 \uff1a\u6211\u4eec\u80af\u5b9a\u8981\u5148\u8ba9\u5404\u4e2a\u670d\u52a1\u5668\u5404\u81ea\u91c7\u96c6 \\(m\\) \u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u90a3\u4e48\u5173\u952e\u8fd8\u662f\u8981\u901a\u8fc7\u9009\u62e9\uff0c\u6765\u628a\u6982\u7387\u4fee\u6b63\u56de\u6765\u3002\u5148\u5206\u6790\u5df2\u7ecf\u91c7\u96c6\u5230\u7684\u6570\u636e\u7684\u6982\u7387\uff1a \\[\\begin{cases} site1: &\\frac{m}{N_1}, &\\frac{m}{N_1}, &\\ldots, &\\frac{m}{N_1} \\\\ site2: &\\frac{m}{N_2}, &\\frac{m}{N_2}, &\\ldots, &\\frac{m}{N_2} \\\\ \\vdots \\\\ siteK: &\\frac{m}{N_K}, &\\frac{m}{N_K}, &\\ldots, &\\frac{m}{N_K} \\\\ \\end{cases}\\] \u5b9a\u4e49 \\(N = \\sum^K_{i=1} N_i\\) \uff0c\u90a3\u4e48\u6211\u4eec\u7684\u76ee\u6807\u662f\u6bcf\u4e2a\u6837\u672c\u51fa\u73b0\u7684\u6982\u7387\u662f \\(\\frac{m}{N}\\) \u3002 \u6709\u70b9\u91cd\u8981\u6027\u91c7\u6837\u7684\u610f\u5473: \u6211\u4eec\u4ee5 \\(\\frac{N_i}{N}\\) \u7684\u6982\u7387\u9009\u62e9\u96c6\u5408 \\(site_i\\) \uff0c\u7136\u540e\u4ece \\(site_i\\) \u4e0d\u653e\u56de\u5730\u5747\u5300\u91c7\u6837\u4e00\u4e2a\u503c\u653e\u5165\u6700\u7ec8\u7684\u7ed3\u679c\u4e2d\u3002","title":"\u84c4\u6c34\u6c60\u62bd\u6837"},{"location":"Algorithms/06-%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7/#_1","text":"\u95ee\u9898\u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e00\u4e2a\u672a\u77e5\u7684\u6570\u636e\u6d41 \\([a_1, a_2, \\ldots, a_n]\\) \uff0c\u5728\u53ea\u904d\u5386\u4e00\u904d\u6570\u636e\u7684\u60c5\u51b5\u4e0b\uff0c\u62bd\u53d6m\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u8981\u6c42\u5747\u5300\u91c7\u6837\u3002\u8fd9\u91cc\u7684\u4e0d\u540c\uff0c\u6307\u7684\u662f\u6570\u636e\u6d41\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c\u800c\u4e0d\u662f\u503c\u4e0d\u540c\u3002 \u5206\u6790 \uff1a\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5c31\u662f\u5728\u4e0d\u77e5\u9053\u6570\u636e\u957f\u5ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u5b8c\u6210\u5747\u5300\u91c7\u6837\u3002","title":"\u84c4\u6c34\u6c60\u62bd\u6837"},{"location":"Algorithms/06-%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7/#_2","text":"\u5148\u7814\u7a76 \\(m = 1\\) \u7684\u60c5\u51b5\uff0c\u6bcf\u589e\u52a0\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6b63\u6982\u7387\uff1a \\[\\begin{cases} n=1: & 1 \\\\ n=2: & 1 \\times \\frac{1}{2} & \\frac{1}{2} \\\\ n=3: & \\frac{1}{2} \\times \\frac{2}{3} & \\frac{1}{2} \\times \\frac{2}{3} & \\frac{1}{3} \\\\ \\vdots \\end{cases}\\] \u5047\u8bbe\uff0c\u6211\u4eec\u5df2\u7ecf\u4ece \\([a_1, \\ldots, a_{n-1}]\\) \u7684\u5e8f\u5217\u4e2d\u5747\u5300\u91c7\u6837\u4e00\u4e2a\u6570 \\(b\\) \u3002 \u73b0\u5728\u8bfb\u5230\u4e86\u7b2c \\(n\\) \u4e2a\u6570 \\(a_{n}\\) , \u90a3\u4e48\u6211\u4eec\u4ee5 \\(\\frac{1}{n}\\) \u7684\u6982\u7387\u9009\u62e9\u65b0\u7684\u6570 \\(a_{n}\\) , \u518d\u4ee5 \\(\\frac{n-1}{n}\\) \u7684\u6982\u7387\u9009 \\(b\\) \u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86 \\(n\\) \u4e2a\u6570\u7684\u5747\u5300\u91c7\u6837\u3002 \u8fd9\u79cd\u53e0\u52a0\u7684\u9009\u62e9\u64cd\u4f5c\uff0c\u80fd\u591f\u6539\u53d8\u6982\u7387\uff0c\u662f\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6838\u5fc3\u3002","title":"\u62bd\u4e00\u4e2a\u6837\u672c"},{"location":"Algorithms/06-%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7/#m","text":"\u6211\u4eec\u5148\u7814\u7a76 \\(m=2\\) \u7684\u60c5\u51b5\uff1a \\[\\begin{cases} n=2: & 1 & 1\\\\ n=3: & 1 \\times \\frac{2}{3} & 1 \\times \\frac{2}{3} & \\frac{2}{3} \\\\ n=4: & \\frac{2}{3} \\times \\frac{3}{4} & \\frac{2}{3} \\times \\frac{3}{4} &\\frac{2}{3} \\times \\frac{3}{4} & \\frac{2}{4} \\\\ \\vdots \\end{cases}\\] \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u5047\u8bbe\u5df2\u7ecf\u4ece \\([a_1, a_2, \\ldots, a_{n-1}]\\) \u7684\u5e8f\u5217\u4e2d\u5747\u5300\u91c7\u96c6\u4e86 \\(m\\) \u4e2a\u6570 \\([b_1, b_2, \\ldots, b_m]\\) \u3002\u73b0\u5728\u6211\u4eec\u8bfb\u5230\u4e86\u7b2c \\(n\\) \u4e2a\u6570 \\(a_{n}\\) \uff0c\u6211\u4eec\u9996\u5148\u51b3\u5b9a \\(a_{n}\\) \u662f\u5426\u8981\u51fa\u73b0\u5728\u91c7\u6837\u6837\u672c\u4e2d\uff0c\u4fdd\u8bc1\u51fa\u73b0\u7684\u6982\u7387\u4e3a \\(m / n\\) \u3002\u5982\u679c\u8981\u66ff\u6362\uff0c\u90a3\u4e48\u6211\u4eec\u4ece \\([b_1, b_2, \\ldots, b_m]\\) \u5747\u5300\u9009\u62e9\u4e00\u4e2a\u6570\u88ab \\(a_{n}\\) \u66ff\u6362\u3002","title":"\u62bdm\u4e2a\u4e0d\u540c\u7684\u6837\u672c"},{"location":"Algorithms/06-%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7/#_3","text":"\u95ee\u9898\u63cf\u8ff0 \uff1a\u73b0\u5728\u53c8 \\(K\\) \u53f0\u670d\u52a1\u5668\uff0c\u6bcf\u53f0\u670d\u52a1\u5668\u5df2\u7ecf\u5904\u7406\u7684\u6570\u636e\u91cf\u5206\u522b\u4e3a \\(N_1, N_2, \\ldots, N_K\\) \u3002\u9700\u8981\u603b\u4f53\u6837\u672c\u4e2d\u91c7\u96c6 \\(m\\) \u4e2a\u4e0d\u540c\u7684\u6570\u3002 \u5206\u6790 \uff1a\u6211\u4eec\u80af\u5b9a\u8981\u5148\u8ba9\u5404\u4e2a\u670d\u52a1\u5668\u5404\u81ea\u91c7\u96c6 \\(m\\) \u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u90a3\u4e48\u5173\u952e\u8fd8\u662f\u8981\u901a\u8fc7\u9009\u62e9\uff0c\u6765\u628a\u6982\u7387\u4fee\u6b63\u56de\u6765\u3002\u5148\u5206\u6790\u5df2\u7ecf\u91c7\u96c6\u5230\u7684\u6570\u636e\u7684\u6982\u7387\uff1a \\[\\begin{cases} site1: &\\frac{m}{N_1}, &\\frac{m}{N_1}, &\\ldots, &\\frac{m}{N_1} \\\\ site2: &\\frac{m}{N_2}, &\\frac{m}{N_2}, &\\ldots, &\\frac{m}{N_2} \\\\ \\vdots \\\\ siteK: &\\frac{m}{N_K}, &\\frac{m}{N_K}, &\\ldots, &\\frac{m}{N_K} \\\\ \\end{cases}\\] \u5b9a\u4e49 \\(N = \\sum^K_{i=1} N_i\\) \uff0c\u90a3\u4e48\u6211\u4eec\u7684\u76ee\u6807\u662f\u6bcf\u4e2a\u6837\u672c\u51fa\u73b0\u7684\u6982\u7387\u662f \\(\\frac{m}{N}\\) \u3002 \u6709\u70b9\u91cd\u8981\u6027\u91c7\u6837\u7684\u610f\u5473: \u6211\u4eec\u4ee5 \\(\\frac{N_i}{N}\\) \u7684\u6982\u7387\u9009\u62e9\u96c6\u5408 \\(site_i\\) \uff0c\u7136\u540e\u4ece \\(site_i\\) \u4e0d\u653e\u56de\u5730\u5747\u5300\u91c7\u6837\u4e00\u4e2a\u503c\u653e\u5165\u6700\u7ec8\u7684\u7ed3\u679c\u4e2d\u3002","title":"\u5206\u5e03\u5f0f\u84c4\u6c34\u6c60\u62bd\u6837"},{"location":"Algorithms/07-%E9%87%8D%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A7/","text":"\u91cd\u7f16\u7801\u6280\u5de7 \u00b6 \u6709\u4e00\u7c7b\u7b97\u6cd5\u9898\uff0c\u4f7f\u7528\u91cd\u7f16\u7801\u6280\u5de7\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u95ee\u9898\u3002 \u5bb9\u6211\u901a\u8fc7\u4f8b\u5b50\u6765\u89e3\u91ca\u4e00\u4e0b\u8fd9\u662f\u4ec0\u4e48\u6280\u672f\u3002 \u6d88\u9664\u6e38\u620f \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode 390 \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u4ece 1 \u5230 n \u6392\u5e8f\u7684\u6574\u6570\u5217\u8868\uff0c\u6211\u4eec\u5148\u4ece\u5de6\u5230\u53f3\uff0c\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\uff0c\u6bcf\u9694\u4e00\u4e2a\u6570\u5b57\u5220\u9664\uff1b\u63a5\u7740\u6211\u4eec\u4ece\u53f3\u5230\u5de6\uff0c\u4ece\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u5f00\u59cb\uff0c\u6bcf\u9694\u4e00\u4e2a\u6570\u5b57\u5220\u9664\u3002\u95ee\u6700\u540e\u5269\u4e0b\u7684\u662f\u54ea\u4e2a\u6570\u5b57\u3002 n = 8 Step 0: 1 2 3 4 5 6 7 8 Step 1: 2 4 6 8 Step 2: 2 6 Step 3: 6 \u5206\u6790 : \u6211\u4eec\u53ea\u9700\u8981\u5bf9\u524d\u4e24\u6b65\u8fdb\u884c\u5206\u6790\u3002 \u539f\u95ee\u9898: 2 4 6 8 \u5b50\u95ee\u9898: 4 3 2 1 Step 1 \u5b8c\u6bd5\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6c42\u89e3\u4e00\u4e2a\u5b50\u95ee\u9898 \\(\\left\\lfloor n / 2 \\right\\rfloor\\) \u6765\u89e3\u51b3\uff0c\u89e3\u51b3\u7684\u5b50\u95ee\u9898\u662f\u5212\u6570\u7ec4 [1, 2, 3, 4] , \u90a3\u4e48\u6211\u4eec\u9700\u8981\u628a\u5b83\u6620\u5c04\u56de\u539f\u6570\u7ec4 [8, 6, 4, 2] \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6784\u9020\u4e00\u4e2a\u51fd\u6570\u6ee1\u8db3 \\(f(1) = 8\\) \u3001 \\(f(2) = 6\\) \u3001 \\(f(3) = 4\\) \u548c \\(f(4) = 2\\) \u3002\u8fd9\u4e2a\u51fd\u6570\u5f88\u7b80\u5355: \\[ f(x) = 2 * (\\lfloor n / 2 \\rfloor + 1 - x). \\] \u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u9012\u5f52\u7684\u6c42\u89e3\u7b97\u6cd5: int lastRemaining ( int n ) { if ( n <= 2 ) return n ; return 2 * ( n / 2 + 1 - lastRemaining ( n / 2 )); } \u6d88\u9664\u6e38\u620f2 \u00b6 \u95ee\u9898\u63cf\u8ff0 : 1 \u5230 n \u7684 n \u4e2a\u6570\u987a\u65f6\u9488\u6392\u6210\u4e00\u5708\uff0c\u4ece 1 \u5f00\u59cb\uff0c\u987a\u65f6\u9488\u4f9d\u6b21\u5220\u9664\u7b2c k \u4e2a\u6570\uff0c\u6c42\u6700\u540e\u5269\u4e0b\u7684\u6570\u3002 n = 8, k = 3. Step 0: 1 2 3 4 5 6 7 8 Step 1: 1 2 4 5 6 7 8 Step 2: 1 2 4 5 7 8 Step 3: 2 4 5 7 8 Step 4: 2 4 7 8 Step 5: 4 7 8 Step 6: 4 7 Step 7: 7 \u5206\u6790 : \u6211\u4eec\u8fd8\u662f\u53ea\u9700\u8981\u770b\u524d\u4e24\u6b65\u3002Step 1 \u5b8c\u6bd5\u540e\uff0c\u7b49\u4ef7\u4e8e\u6211\u4eec\u6c42\u89e3\u4e00\u4e2a\u89c4\u6a21\u4e3a n - 1 \u7684\u5b50\u95ee\u9898\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u95ee\u9898\u548c\u539f\u95ee\u9898\u6709\u4ec0\u4e48\u8054\u7cfb\u5462\uff1f\u5982\u4e0b\u6240\u793a\uff1a \u539f\u95ee\u9898: 4 5 6 7 8 1 2 \u5b50\u95ee\u9898: 1 2 3 4 5 6 7 \u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u628a\u5b50\u95ee\u9898\u7684\u89e3\u901a\u8fc7\u67d0\u4e2a\u91cd\u7f16\u7801\u51fd\u6570\u6620\u5c04\u56de\u539f\u95ee\u9898\u7684\u89e3\u3002 \u8fd9\u4e2a\u51fd\u6570\u5f88\u7b80\u5355\uff0c\u5373: \\[ f(x) = (k - 1 + x) \\bmod n + 1. \\] \u8fd9\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u9012\u5f52\u7684\u6c42\u89e3\u7b97\u6cd5\u3002 int lastRemaining ( int n , int k ) { return ( n == 1 ) ? 1 : ( k - 1 + lastRemaining ( n - 1 , k )) % n + 1 ; } \u7c7b\u4f3c\u7684\u5212\u6570\u5b57\u7684\u95ee\u9898\u53d8\u79cd\u5f88\u591a\uff0c\u8fd9\u91cc\u53ef\u4ee5\u4e3e\u4e00\u53cd\u4e09\u3002 \u6446\u52a8\u6392\u5e8f \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode 324 \u8fd9\u4e2a\u95ee\u9898\u662f\u6211\u89c1\u8fc7\u7684\u6ca1\u4ec0\u4e48\u5b9e\u7528\u4ef7\u503c\uff0c\u4f46\u662f\u5f00\u53d1\u601d\u7ef4\u5f88\u6709\u6548\u7684\u4e00\u9053\u9898\u76ee\u3002 \u95ee\u9898\u63cf\u8ff0 \uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6570\u7ec4 \\([a_0, a_1, \\ldots, a_{n-1}]\\) \uff0c\u6211\u4eec\u9700\u8981\u8c03\u6574\u987a\u5e8f\uff0c\u4f7f\u5f97\u6570\u7ec4\u6ee1\u8db3 \\(a_{n-1} < a_{n} > a_{n+1}\\) \u6216\u8005 \\(a_{n-1} > a_{n} < a_{n+1}\\) \uff0c\u5373\u628a\u6570\u7ec4\u6392\u5e8f\u5f97\u53c2\u5dee\u4e0d\u9f50\u3002\u6ce8\u610f\uff0c\u6570\u7ec4\u6ca1\u6709\u6392\u5e8f\u8fc7\uff0c\u540c\u65f6\u6709\u53ef\u80fd\u53c8\u91cd\u590d\u7684\u5143\u7d20\u3002 \u5206\u6790 : \u4e00\u4e2a\u5148\u9a8c\u77e5\u8bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u82b1\u8d39 \\(O(n)\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u627e\u5230\u4e00\u4e2a\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570\uff08\u5feb\u6392\u7684\u601d\u60f3\uff09\u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6570\u7ec4\u5206\u6210\u4e09\u4e2a\u90e8\u5206\uff1a \\[ a'_0, a'_1, \\ldots, a'_{p-1} < a'_{p} = \\ldots = a'_{q} < a'_{q+1}, \\ldots, a'_{n-1}. \\] \u63a5\u4e0b\u6765\u7684\u91cd\u7f16\u7801\u5c31\u5de7\u5999\u4e86\uff0c\u5047\u8bbe\u6570\u7ec4\u957f\u5ea6\u4e3a10, \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u4e0a\u9762\u6392\u5e8f\u597d\u7684\u6570\u7ec4\u8fdb\u884c\u5982\u4e0b\u7684\u91cd\u7f16\u7801: \u539f\u95ee\u9898\uff1aa''[0] a''[1] a''[2] a''[3] a''[4] a''[5] a''[6] a''[7] a''[8] a''[9] \u5b50\u95ee\u9898\uff1a a'[5] a'[0] a'[6] a'[1] a'[7] a'[2] a'[8] a'[3] a'[9] a'[4] \u4e00\u770b\u5c31\u53ef\u4ee5\u5f97\u5230\uff0c\u6211\u4eec\u6700\u540e\u9700\u8981\u8fd4\u56de\u6570\u7ec4 \\(a''\\) \u662f\u6ee1\u8db3\u8981\u6c42\u7684\uff1a\u56e0\u4e3a \\(a''[i]\\) \u4e0e \\(a''[i+1]\\) \u5bf9\u5e94\u7684 \\(a'[m]\\) \u4e0e \\(a'[n]\\) \u81f3\u5c11\u76f8\u5dee \\(n/2\\) , \u5373 \\(\\vert m - n \\vert \\ge n/2\\) ; \u53e6\u5916\uff0c\u4e2d\u4f4d\u6570\u6700\u591a\u4e5f\u53ea\u6709 \\(n/2\\) \u4e2a\uff0c\u5426\u5219\u65e0\u6cd5\u6ee1\u8db3\u9898\u610f\uff0c\u6240\u4ee5 \\(a''[i]\\) \u4e0e \\(a''[i+1]\\) \u4e0d\u53ef\u80fd\u540c\u65f6\u662f\u4e2d\u4f4d\u6570\u3002 \u5728\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u53e6\u5916\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4 \\(a''\\) \uff0c\u4f46\u662f\u4e3a\u4e86\u907f\u5f00\u989d\u5916\u7684\u5730\u5740\u5f00\u9500\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u865a\u5b9e\u5730\u5740\u7684\u65b9\u5f0f\u3002 \u8fd9\u91cc\u6709\u70b9\u7ed5\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u4e0a\u9762\u7684\u7f16\u7801\u8868\u793a\uff1a\u6211\u4eec\u5e0c\u671b\u6392\u5e8f\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4 \\(a''\\) \u6ee1\u8db3 \\(a''[0] = a'[5]\\) \uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 \u6211\u4eec\u5e0c\u671b\uff0c \\(a'\\) \u7684\u4e0b\u6807\u662f\u865a\u62df\u5730\u5740\uff1a\u6211\u4eec\u5bf9 \\(a'[5]\\) \u8fdb\u884c\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u8bbf\u95ee\u7684\u662f \\(a''[0]\\) \u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u6ee1\u8db3 \\(f(5) = 0\\) \u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u5f53\u6211\u4eec\u5728\u6784\u9020 \\(a'\\) \u65f6\uff0c\u771f\u5b9e\u5730\u5740\u7684 \\(a''\\) \u5df2\u7ecf\u6784\u9020\u597d\u4e86\u3002 \u8fd9\u4e2a\u51fd\u6570\u4e3a: \\[ f(x) = \\begin{cases} 2x + 1, & x < n / 2; \\\\ 2x - n + n \\bmod 2, & x >= n / 2; \\end{cases} \\] \u6216\u8005 \\[ f(x) = (2x + 1) \\bmod (n \\vert 1). \\] \u6ce8\u610f \uff1a\u8fd9\u91ccLeetCode\u7684\u9898\u76ee\u8981\u6c42 \\(a''[0] < a''[1] > a''[2] \\ldots\\) \uff0c \u5373 \\(a'[5] < a'[0] > a'[6] \\ldots\\) \uff0c\u6240\u4ee5\u6211\u4eec\u5bf9 \\(a'\\) \u505a \\(Three-Partition\\) \u64cd\u4f5c\u65f6\uff0c\u6bd4\u4e2d\u4f4d\u6570\u5927\u7684\u6570\u653e\u5728\u5de6\u8fb9\uff0c\u6bd4\u4e2d\u4f4d\u6570\u5c0f\u7684\u6570\u653e\u5728\u53f3\u8fb9\u3002 \u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a void wiggleSort ( vector < int > & nums ) { int n = nums . size (); // int mid = findMid(nums); auto midptr = nums . begin () + n / 2 ; nth_element ( nums . begin (), midptr , nums . end ()); int mid = * midptr ; int left = 0 , right = n - 1 ; // Index-rewiring. #define f(i) ((1+2*(i)) % (n|1)) for ( int i = 0 ; i <= right ; ) { if ( nums [ f ( i )] < mid ) { swap ( nums [ f ( i )], nums [ f ( right -- )]); } else if ( nums [ f ( i )] > mid ) { swap ( nums [ f ( i ++ )], nums [ f ( left ++ )]); } else { ++ i ; } } return ; } \u6700\u540e\u518d\u8865\u5145\u4e00\u4e2a\u624b\u5199\u7684\u627e\u4e2d\u4f4d\u6570\u7684\u4ee3\u7801\u3002 \u627e\u4e2d\u4f4d\u6570 int findMid ( vector < int > & nums ) { int n = nums . size (); int left = 0 , right = n -1 , mid = left + ( right - left ) / 2 ; while ( left < right ) { int num = nums [ left ]; int l = left , r = right ; for ( int i = l ; i <= r ;) { if ( nums [ i ] > num ) { swap ( nums [ i ], nums [ r -- ]); } else if ( nums [ i ] < num ) { swap ( nums [ i ++ ], nums [ l ++ ]); } else { i ++ ; } } if ( l == mid ) { break ; } else if ( l < mid ) { left = l + 1 ; } else { right = l - 1 ; } } return nums [ mid ]; }","title":"\u91cd\u7f16\u7801\u6280\u5de7"},{"location":"Algorithms/07-%E9%87%8D%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A7/#_1","text":"\u6709\u4e00\u7c7b\u7b97\u6cd5\u9898\uff0c\u4f7f\u7528\u91cd\u7f16\u7801\u6280\u5de7\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u95ee\u9898\u3002 \u5bb9\u6211\u901a\u8fc7\u4f8b\u5b50\u6765\u89e3\u91ca\u4e00\u4e0b\u8fd9\u662f\u4ec0\u4e48\u6280\u672f\u3002","title":"\u91cd\u7f16\u7801\u6280\u5de7"},{"location":"Algorithms/07-%E9%87%8D%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A7/#_2","text":"\u8be6\u60c5\u53c2\u8003 LeetCode 390 \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u4ece 1 \u5230 n \u6392\u5e8f\u7684\u6574\u6570\u5217\u8868\uff0c\u6211\u4eec\u5148\u4ece\u5de6\u5230\u53f3\uff0c\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\uff0c\u6bcf\u9694\u4e00\u4e2a\u6570\u5b57\u5220\u9664\uff1b\u63a5\u7740\u6211\u4eec\u4ece\u53f3\u5230\u5de6\uff0c\u4ece\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u5f00\u59cb\uff0c\u6bcf\u9694\u4e00\u4e2a\u6570\u5b57\u5220\u9664\u3002\u95ee\u6700\u540e\u5269\u4e0b\u7684\u662f\u54ea\u4e2a\u6570\u5b57\u3002 n = 8 Step 0: 1 2 3 4 5 6 7 8 Step 1: 2 4 6 8 Step 2: 2 6 Step 3: 6 \u5206\u6790 : \u6211\u4eec\u53ea\u9700\u8981\u5bf9\u524d\u4e24\u6b65\u8fdb\u884c\u5206\u6790\u3002 \u539f\u95ee\u9898: 2 4 6 8 \u5b50\u95ee\u9898: 4 3 2 1 Step 1 \u5b8c\u6bd5\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6c42\u89e3\u4e00\u4e2a\u5b50\u95ee\u9898 \\(\\left\\lfloor n / 2 \\right\\rfloor\\) \u6765\u89e3\u51b3\uff0c\u89e3\u51b3\u7684\u5b50\u95ee\u9898\u662f\u5212\u6570\u7ec4 [1, 2, 3, 4] , \u90a3\u4e48\u6211\u4eec\u9700\u8981\u628a\u5b83\u6620\u5c04\u56de\u539f\u6570\u7ec4 [8, 6, 4, 2] \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6784\u9020\u4e00\u4e2a\u51fd\u6570\u6ee1\u8db3 \\(f(1) = 8\\) \u3001 \\(f(2) = 6\\) \u3001 \\(f(3) = 4\\) \u548c \\(f(4) = 2\\) \u3002\u8fd9\u4e2a\u51fd\u6570\u5f88\u7b80\u5355: \\[ f(x) = 2 * (\\lfloor n / 2 \\rfloor + 1 - x). \\] \u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u9012\u5f52\u7684\u6c42\u89e3\u7b97\u6cd5: int lastRemaining ( int n ) { if ( n <= 2 ) return n ; return 2 * ( n / 2 + 1 - lastRemaining ( n / 2 )); }","title":"\u6d88\u9664\u6e38\u620f"},{"location":"Algorithms/07-%E9%87%8D%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A7/#2","text":"\u95ee\u9898\u63cf\u8ff0 : 1 \u5230 n \u7684 n \u4e2a\u6570\u987a\u65f6\u9488\u6392\u6210\u4e00\u5708\uff0c\u4ece 1 \u5f00\u59cb\uff0c\u987a\u65f6\u9488\u4f9d\u6b21\u5220\u9664\u7b2c k \u4e2a\u6570\uff0c\u6c42\u6700\u540e\u5269\u4e0b\u7684\u6570\u3002 n = 8, k = 3. Step 0: 1 2 3 4 5 6 7 8 Step 1: 1 2 4 5 6 7 8 Step 2: 1 2 4 5 7 8 Step 3: 2 4 5 7 8 Step 4: 2 4 7 8 Step 5: 4 7 8 Step 6: 4 7 Step 7: 7 \u5206\u6790 : \u6211\u4eec\u8fd8\u662f\u53ea\u9700\u8981\u770b\u524d\u4e24\u6b65\u3002Step 1 \u5b8c\u6bd5\u540e\uff0c\u7b49\u4ef7\u4e8e\u6211\u4eec\u6c42\u89e3\u4e00\u4e2a\u89c4\u6a21\u4e3a n - 1 \u7684\u5b50\u95ee\u9898\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u95ee\u9898\u548c\u539f\u95ee\u9898\u6709\u4ec0\u4e48\u8054\u7cfb\u5462\uff1f\u5982\u4e0b\u6240\u793a\uff1a \u539f\u95ee\u9898: 4 5 6 7 8 1 2 \u5b50\u95ee\u9898: 1 2 3 4 5 6 7 \u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u628a\u5b50\u95ee\u9898\u7684\u89e3\u901a\u8fc7\u67d0\u4e2a\u91cd\u7f16\u7801\u51fd\u6570\u6620\u5c04\u56de\u539f\u95ee\u9898\u7684\u89e3\u3002 \u8fd9\u4e2a\u51fd\u6570\u5f88\u7b80\u5355\uff0c\u5373: \\[ f(x) = (k - 1 + x) \\bmod n + 1. \\] \u8fd9\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u9012\u5f52\u7684\u6c42\u89e3\u7b97\u6cd5\u3002 int lastRemaining ( int n , int k ) { return ( n == 1 ) ? 1 : ( k - 1 + lastRemaining ( n - 1 , k )) % n + 1 ; } \u7c7b\u4f3c\u7684\u5212\u6570\u5b57\u7684\u95ee\u9898\u53d8\u79cd\u5f88\u591a\uff0c\u8fd9\u91cc\u53ef\u4ee5\u4e3e\u4e00\u53cd\u4e09\u3002","title":"\u6d88\u9664\u6e38\u620f2"},{"location":"Algorithms/07-%E9%87%8D%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A7/#_3","text":"\u8be6\u60c5\u53c2\u8003 LeetCode 324 \u8fd9\u4e2a\u95ee\u9898\u662f\u6211\u89c1\u8fc7\u7684\u6ca1\u4ec0\u4e48\u5b9e\u7528\u4ef7\u503c\uff0c\u4f46\u662f\u5f00\u53d1\u601d\u7ef4\u5f88\u6709\u6548\u7684\u4e00\u9053\u9898\u76ee\u3002 \u95ee\u9898\u63cf\u8ff0 \uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6570\u7ec4 \\([a_0, a_1, \\ldots, a_{n-1}]\\) \uff0c\u6211\u4eec\u9700\u8981\u8c03\u6574\u987a\u5e8f\uff0c\u4f7f\u5f97\u6570\u7ec4\u6ee1\u8db3 \\(a_{n-1} < a_{n} > a_{n+1}\\) \u6216\u8005 \\(a_{n-1} > a_{n} < a_{n+1}\\) \uff0c\u5373\u628a\u6570\u7ec4\u6392\u5e8f\u5f97\u53c2\u5dee\u4e0d\u9f50\u3002\u6ce8\u610f\uff0c\u6570\u7ec4\u6ca1\u6709\u6392\u5e8f\u8fc7\uff0c\u540c\u65f6\u6709\u53ef\u80fd\u53c8\u91cd\u590d\u7684\u5143\u7d20\u3002 \u5206\u6790 : \u4e00\u4e2a\u5148\u9a8c\u77e5\u8bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u82b1\u8d39 \\(O(n)\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u627e\u5230\u4e00\u4e2a\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570\uff08\u5feb\u6392\u7684\u601d\u60f3\uff09\u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6570\u7ec4\u5206\u6210\u4e09\u4e2a\u90e8\u5206\uff1a \\[ a'_0, a'_1, \\ldots, a'_{p-1} < a'_{p} = \\ldots = a'_{q} < a'_{q+1}, \\ldots, a'_{n-1}. \\] \u63a5\u4e0b\u6765\u7684\u91cd\u7f16\u7801\u5c31\u5de7\u5999\u4e86\uff0c\u5047\u8bbe\u6570\u7ec4\u957f\u5ea6\u4e3a10, \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u4e0a\u9762\u6392\u5e8f\u597d\u7684\u6570\u7ec4\u8fdb\u884c\u5982\u4e0b\u7684\u91cd\u7f16\u7801: \u539f\u95ee\u9898\uff1aa''[0] a''[1] a''[2] a''[3] a''[4] a''[5] a''[6] a''[7] a''[8] a''[9] \u5b50\u95ee\u9898\uff1a a'[5] a'[0] a'[6] a'[1] a'[7] a'[2] a'[8] a'[3] a'[9] a'[4] \u4e00\u770b\u5c31\u53ef\u4ee5\u5f97\u5230\uff0c\u6211\u4eec\u6700\u540e\u9700\u8981\u8fd4\u56de\u6570\u7ec4 \\(a''\\) \u662f\u6ee1\u8db3\u8981\u6c42\u7684\uff1a\u56e0\u4e3a \\(a''[i]\\) \u4e0e \\(a''[i+1]\\) \u5bf9\u5e94\u7684 \\(a'[m]\\) \u4e0e \\(a'[n]\\) \u81f3\u5c11\u76f8\u5dee \\(n/2\\) , \u5373 \\(\\vert m - n \\vert \\ge n/2\\) ; \u53e6\u5916\uff0c\u4e2d\u4f4d\u6570\u6700\u591a\u4e5f\u53ea\u6709 \\(n/2\\) \u4e2a\uff0c\u5426\u5219\u65e0\u6cd5\u6ee1\u8db3\u9898\u610f\uff0c\u6240\u4ee5 \\(a''[i]\\) \u4e0e \\(a''[i+1]\\) \u4e0d\u53ef\u80fd\u540c\u65f6\u662f\u4e2d\u4f4d\u6570\u3002 \u5728\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u53e6\u5916\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4 \\(a''\\) \uff0c\u4f46\u662f\u4e3a\u4e86\u907f\u5f00\u989d\u5916\u7684\u5730\u5740\u5f00\u9500\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u865a\u5b9e\u5730\u5740\u7684\u65b9\u5f0f\u3002 \u8fd9\u91cc\u6709\u70b9\u7ed5\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u4e0a\u9762\u7684\u7f16\u7801\u8868\u793a\uff1a\u6211\u4eec\u5e0c\u671b\u6392\u5e8f\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4 \\(a''\\) \u6ee1\u8db3 \\(a''[0] = a'[5]\\) \uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 \u6211\u4eec\u5e0c\u671b\uff0c \\(a'\\) \u7684\u4e0b\u6807\u662f\u865a\u62df\u5730\u5740\uff1a\u6211\u4eec\u5bf9 \\(a'[5]\\) \u8fdb\u884c\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u8bbf\u95ee\u7684\u662f \\(a''[0]\\) \u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u6ee1\u8db3 \\(f(5) = 0\\) \u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u5f53\u6211\u4eec\u5728\u6784\u9020 \\(a'\\) \u65f6\uff0c\u771f\u5b9e\u5730\u5740\u7684 \\(a''\\) \u5df2\u7ecf\u6784\u9020\u597d\u4e86\u3002 \u8fd9\u4e2a\u51fd\u6570\u4e3a: \\[ f(x) = \\begin{cases} 2x + 1, & x < n / 2; \\\\ 2x - n + n \\bmod 2, & x >= n / 2; \\end{cases} \\] \u6216\u8005 \\[ f(x) = (2x + 1) \\bmod (n \\vert 1). \\] \u6ce8\u610f \uff1a\u8fd9\u91ccLeetCode\u7684\u9898\u76ee\u8981\u6c42 \\(a''[0] < a''[1] > a''[2] \\ldots\\) \uff0c \u5373 \\(a'[5] < a'[0] > a'[6] \\ldots\\) \uff0c\u6240\u4ee5\u6211\u4eec\u5bf9 \\(a'\\) \u505a \\(Three-Partition\\) \u64cd\u4f5c\u65f6\uff0c\u6bd4\u4e2d\u4f4d\u6570\u5927\u7684\u6570\u653e\u5728\u5de6\u8fb9\uff0c\u6bd4\u4e2d\u4f4d\u6570\u5c0f\u7684\u6570\u653e\u5728\u53f3\u8fb9\u3002 \u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a void wiggleSort ( vector < int > & nums ) { int n = nums . size (); // int mid = findMid(nums); auto midptr = nums . begin () + n / 2 ; nth_element ( nums . begin (), midptr , nums . end ()); int mid = * midptr ; int left = 0 , right = n - 1 ; // Index-rewiring. #define f(i) ((1+2*(i)) % (n|1)) for ( int i = 0 ; i <= right ; ) { if ( nums [ f ( i )] < mid ) { swap ( nums [ f ( i )], nums [ f ( right -- )]); } else if ( nums [ f ( i )] > mid ) { swap ( nums [ f ( i ++ )], nums [ f ( left ++ )]); } else { ++ i ; } } return ; } \u6700\u540e\u518d\u8865\u5145\u4e00\u4e2a\u624b\u5199\u7684\u627e\u4e2d\u4f4d\u6570\u7684\u4ee3\u7801\u3002 \u627e\u4e2d\u4f4d\u6570 int findMid ( vector < int > & nums ) { int n = nums . size (); int left = 0 , right = n -1 , mid = left + ( right - left ) / 2 ; while ( left < right ) { int num = nums [ left ]; int l = left , r = right ; for ( int i = l ; i <= r ;) { if ( nums [ i ] > num ) { swap ( nums [ i ], nums [ r -- ]); } else if ( nums [ i ] < num ) { swap ( nums [ i ++ ], nums [ l ++ ]); } else { i ++ ; } } if ( l == mid ) { break ; } else if ( l < mid ) { left = l + 1 ; } else { right = l - 1 ; } } return nums [ mid ]; }","title":"\u6446\u52a8\u6392\u5e8f"},{"location":"Algorithms/08-%E6%94%BE%E6%9D%BE%E6%9D%A1%E4%BB%B6%E6%B3%95/","text":"\u653e\u677e\u6761\u4ef6\u6cd5 \u00b6 \u6709\u4e00\u7c7b\u7b97\u6cd5\u9898\uff0c\u9898\u76ee\u8981\u6c42\u6bd4\u8f83\u591a\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6839\u636e\u4e00\u4e2a\u6bd4\u8f83\u5bb9\u6613\u8ba1\u7b97\u7684\u6761\u4ef6\uff0c\u5f97\u5230\u4e00\u4e2a\u4faf\u9009\u503c\uff0c\u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u4faf\u9009\u503c\u662f\u5426\u6ee1\u8db3\u5176\u4ed6\u6761\u4ef6\u7684\u8981\u6c42\u3002 \u770b\u5230\u8fd9\u91cc\uff0c\u5927\u5bb6\u4f1a\u89c9\u5f97\u5947\u602a\uff0c\u8fd9\u4e5f\u662f\u65b9\u6cd5\uff1f\u9996\u5148\u4e0d\u8981\u5c0f\u77a7\u8fd9\u79cd\u65b9\u6cd5\uff0c\u5b83\u5f80\u5f80\u5f88\u6709\u6548\u3002\u53e6\u5916\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u4f7f\u7528\u7684\uff0c\u56e0\u4e3a\u5bb9\u6613\u5224\u65ad\u7684\u6761\u4ef6\u5f80\u5f80\u662f\u9690\u85cf\u7684\uff0c\u4e0d\u4f1a\u660e\u660e\u767d\u767d\u5730\u5199\u51fa\u6765\u3002 \u5b8c\u7f8e\u77e9\u5f62 \u00b6 \u8be6\u60c5\u53c2\u8003: LeetCode 391 \u9898\u76ee\u63cf\u8ff0 : \u8f93\u5165n\u4e2a\u77e9\u5f62(\u4ee5\u5de6\u4e0a\u89d2\u4e0e\u53f3\u4e0b\u89d2\u8868\u793a, \u5747\u4e3a\u6574\u6570)\uff0c\u6211\u4eec\u9700\u8981\u5224\u65ad\u8fd9\u4e9b\u77e9\u5f62\u662f\u5426\u65e0\u91cd\u53e0\u5730\u62fc\u6210\u4e00\u4e2a\u5b8c\u6574\u5730\u5927\u77e9\u5f62\u3002 \u5206\u6790 : \u9996\u5148\uff0c\u6211\u4eec\u80fd\u5f88\u5bb9\u6613\u77e5\u9053: \u5982\u679c\u80fd\u62fc\u6210\u4e00\u4e2a\u5927\u77e9\u5f62\uff0c\u90a3\u4e48\u77e9\u5f62\u7684\u5de6\u4e0a\u89d2\u4e0e\u53f3\u4e0b\u89d2\u7684\u70b9\u5206\u522b\u5bf9\u5e94\u8fd9\u5806\u5c0f\u77e9\u5f62\u7684\u6700\u5de6\u4e0a\u89d2\u7684\u70b9\uff0c\u6700\u53f3\u4e0b\u89d2\u7684\u70b9\u3002\u8fd9\u4e2a\u77e9\u5f62\u5c31\u662f\u6211\u4eec\u7684\u5019\u9009\u503c\u3002 \u4e00\u4e2a\u5bb9\u6613\u5224\u65ad\u7684\u6761\u4ef6\uff1a\u8fd9\u4e2a\u5927\u77e9\u5f62\u7684\u9762\u79ef\u5e94\u8be5\u662f\u6240\u6709\u5c0f\u77e9\u5f62\u9762\u79ef\u7684\u548c\u3002 \u63a5\u7740\u6211\u4eec\u9700\u8981\u5224\u65ad\u8fd9\u4e9b\u5c0f\u77e9\u5f62\u662f\u5426\u6709\u91cd\u53e0\uff0c\u5982\u679c\u8fd9\u4e9b\u5c0f\u77e9\u5f62\u6ca1\u6709\u91cd\u53e0\uff0c\u90a3\u4e48\u4e00\u5b9a\u6ee1\u8db3\u4e0b\u9762\u7684\u6761\u4ef6\uff1a\u5982\u679c\u77e9\u5f62\u770b\u6210\u56db\u4e2a\u70b9\uff0c\u90a3\u4e48\u9664\u4e86\u4e0e\u5927\u77e9\u5f62\u5bf9\u5e94\u7684\u56db\u4e2a\u70b9\uff0c\u5176\u5b83\u7684\u70b9\u5e94\u8be5\u662f\u4e24\u4e24\u76f8\u62b5\u6d88\u7684\u3002 \u9898\u89e3\u4ee3\u7801 : class Solution { public : bool isRectangleCover ( vector < vector < int >>& rectangles ) { // \u83b7\u5f97\u6700\u5927\u77e9\u5f62, \u987a\u5e26\u7edf\u8ba1\u4e00\u4e0b\u5c0f\u77e9\u9635\u7684\u9762\u79ef\u548c\u3002 long long sum = 0 ; vector < int > largeRec = { INT_MAX , INT_MAX , 0 , 0 }; // \u5b9a\u4e49\u5728 <climits> \u5934\u6587\u4ef6\u4e2d\u3002 for ( auto & rec : rectangles ) { largeRec [ 0 ] = min ( largeRec [ 0 ], rec [ 0 ]); largeRec [ 1 ] = min ( largeRec [ 1 ], rec [ 1 ]); largeRec [ 2 ] = max ( largeRec [ 2 ], rec [ 2 ]); largeRec [ 3 ] = max ( largeRec [ 3 ], rec [ 3 ]); sum += area ( rec ); } if ( sum != area ( largeRec )) { return false ; } // \u5224\u65ad\u662f\u5426\u77e9\u5f62\u6709\u91cd\u53e0\u3002 set < pair < int , int >> s ; // unordered_set \u5bf9 pair \u6ca1\u6709\u5bf9\u5e94\u7684\u54c8\u5e0c\u51fd\u6570\uff0c // \u6240\u4ee5\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570\u3002 // \u4f46\u662f\u81ea\u5b9a\u4e49\u54c8\u5e0c\u51fd\u6570\u7684 unordered_set \u6548\u7387\u975e\u5e38\u4f4e, // \u8fdc\u8fdc\u4e0d\u53ca set<pari<int, int>>\u3002 rectangles . push_back ( largeRec ); for ( auto & rec : rectangles ) { for ( int i = 0 ; i <= 2 ; i += 2 ) { for ( int j = 1 ; j <= 3 ; j += 2 ) { auto a = make_pair ( rec [ i ], rec [ j ]); if ( s . find ( a ) != s . end ()) { s . erase ( s . find ( a )); } else { s . insert ( a ); } } } } return s . empty (); } private : inline long long area ( vector < int > & rec ) { return ( rec [ 2 ] - rec [ 0 ]) * ( rec [ 3 ] - rec [ 1 ]); } }; \u5206\u77f3\u5b50 \u00b6 \u8fd9\u4e2a\u9898\u76ee\u662f\u6211\u5728\u9762\u8bd5\u7684\u65f6\u5019\u9047\u5230\u7684\u95ee\u9898\u3002 \u9898\u76ee\u63cf\u8ff0 : \u6211\u4eec\u6709 n \u5806\u77f3\u5b50\uff0c\u6bcf\u5806\u77f3\u5b50\u7684\u4e2a\u6570\u5206\u522b\u4e3a a[0], a[1], ..., a[n-1] \u3002\u73b0\u5728\u8981\u6c42\u6211\u4eec\u8fd9 \\(n\\) \u5806\u77f3\u5b50\u5206\u6210 \\(m\\) \u5806\u77f3\u5b50 b[0], b[1], ..., b[m-1] , \u8981\u6c42\uff1a\u6bcf\u5806\u77f3\u5b50\u7684\u4e2a\u6570\u5927\u4e8e0\uff0c\u5e76\u4e14\u4e0d\u80fd\u5408\u5e76\u539f\u6765\u7684\u77f3\u5b50\u5806\uff0c\u53ea\u80fd\u62c6\u5206\u77f3\u5b50\u5806\u3002\u95ee\uff1a\u5728\u6240\u6709\u5206\u53d1\u4e2d\uff0c \\(\\min_{i} b[i]\\) \u6700\u5927\u53ef\u80fd\u662f\u591a\u5c11\uff1f\u793a\u4f8b\u5982\u4e0b\uff1a \u8f93\u5165\uff1an = 3, m = 5, a = [3, 5, 6]. \u8f93\u51fa\uff1a2 (b = [3, 5, 2, 2, 2]). \u5206\u6790 \uff1a \u6211\u4eec\u53ef\u4ee5\u7528\u653e\u677e\u6761\u4ef6\u6cd5\u6765\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002 \u9996\u5148\u83b7\u5f97\u4e00\u4e2a\u6700\u5927\u7684\u5019\u9009\u503c \\(avg = \\min(\\min_i a[i], \\lfloor\\sum^{n-1}_{i=0} a[i] / m\\rfloor)\\) ; \u6211\u4eec\u4ece\u5019\u9009\u533a\u95f4 \\([1, avg]\\) \u91c7\u7528\u4e8c\u5206\u6cd5\u6765\u9a8c\u8bc1\u8fd9\u4e9b\u4faf\u9009\u6570\uff1b \u6211\u4eec\u9a8c\u8bc1\u4faf\u9009\u6570 \\(num\\) \u7684\u65b9\u6cd5\u662f\uff1a\u4ee5\u5019\u9009\u6570\u4f5c\u4e3a\u62c6\u5206\u51fa\u7684 \\(\\min_i b[i]\\) \uff0c\u904d\u5386\u6bcf\u4e2a\u77f3\u5b50\u5806\uff0c\u770b\u770b\u6bcf\u4e2a\u77f3\u5b50\u5806\u6700\u591a\u80fd\u5206\u51fa\u591a\u5c11\u5806\uff0c\u5224\u65ad\u662f\u5426\u80fd\u591f\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002 \u4f8b\u5982\uff1a\u5728\u4e0a\u9762\u8fd9\u4e2a\u7684\u793a\u4f8b\u4e2d\uff0c\u4e00\u4e2a\u53ef\u9009\u7684\u4faf\u9009\u503c\u662f2\u3002\u90a3\u4e48 a[0] = 3 \u4e0d\u80fd\u88ab\u5206\uff0c\u56e0\u4e3a\u5206\u6210\u7684\u5806\u4e3a [1, 2] \u5b58\u5728\u6bd4\u5019\u9009\u6570\u8fd8\u5c0f\u7684\u6570\uff0c\u8fd9\u4e0d\u6ee1\u8db3\u5019\u9009\u6570\u7684\u8981\u6c42; a[1] = 5 \u53ef\u4ee5\u88ab\u5206\u6210\u4e24\u5806 [2, 3] ; \u6700\u540e a[2] = 6 \u53ef\u4ee5\u88ab\u5206\u6210\u4e09\u5806 [2, 2, 2] \u3002\u90a3\u4e48\u4ee5 2 \u62c6\u5206\u77f3\u5b50\u5806\uff0c\u6700\u591a\u53ef\u4ee5\u5206\u51fa 6 \u5806\uff0c\u8d85\u8fc7\u6211\u4eec\u7684\u9700\u6c42 5 \u5806\uff0c\u6240\u4ee5 \\(2\\) \u662f\u53ef\u4ee5\u7684\u3002 \u8fd9\u91cc\u6bcf\u4e2a\u6c42\u62c6\u5206\u5806\u6570\u7684\u516c\u5f0f\u6709 \\(\\max(\\lfloor a[i] / num \\rfloor, 1)\\) \u3002","title":"\u653e\u677e\u6761\u4ef6\u6cd5"},{"location":"Algorithms/08-%E6%94%BE%E6%9D%BE%E6%9D%A1%E4%BB%B6%E6%B3%95/#_1","text":"\u6709\u4e00\u7c7b\u7b97\u6cd5\u9898\uff0c\u9898\u76ee\u8981\u6c42\u6bd4\u8f83\u591a\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6839\u636e\u4e00\u4e2a\u6bd4\u8f83\u5bb9\u6613\u8ba1\u7b97\u7684\u6761\u4ef6\uff0c\u5f97\u5230\u4e00\u4e2a\u4faf\u9009\u503c\uff0c\u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u4faf\u9009\u503c\u662f\u5426\u6ee1\u8db3\u5176\u4ed6\u6761\u4ef6\u7684\u8981\u6c42\u3002 \u770b\u5230\u8fd9\u91cc\uff0c\u5927\u5bb6\u4f1a\u89c9\u5f97\u5947\u602a\uff0c\u8fd9\u4e5f\u662f\u65b9\u6cd5\uff1f\u9996\u5148\u4e0d\u8981\u5c0f\u77a7\u8fd9\u79cd\u65b9\u6cd5\uff0c\u5b83\u5f80\u5f80\u5f88\u6709\u6548\u3002\u53e6\u5916\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u4f7f\u7528\u7684\uff0c\u56e0\u4e3a\u5bb9\u6613\u5224\u65ad\u7684\u6761\u4ef6\u5f80\u5f80\u662f\u9690\u85cf\u7684\uff0c\u4e0d\u4f1a\u660e\u660e\u767d\u767d\u5730\u5199\u51fa\u6765\u3002","title":"\u653e\u677e\u6761\u4ef6\u6cd5"},{"location":"Algorithms/08-%E6%94%BE%E6%9D%BE%E6%9D%A1%E4%BB%B6%E6%B3%95/#_2","text":"\u8be6\u60c5\u53c2\u8003: LeetCode 391 \u9898\u76ee\u63cf\u8ff0 : \u8f93\u5165n\u4e2a\u77e9\u5f62(\u4ee5\u5de6\u4e0a\u89d2\u4e0e\u53f3\u4e0b\u89d2\u8868\u793a, \u5747\u4e3a\u6574\u6570)\uff0c\u6211\u4eec\u9700\u8981\u5224\u65ad\u8fd9\u4e9b\u77e9\u5f62\u662f\u5426\u65e0\u91cd\u53e0\u5730\u62fc\u6210\u4e00\u4e2a\u5b8c\u6574\u5730\u5927\u77e9\u5f62\u3002 \u5206\u6790 : \u9996\u5148\uff0c\u6211\u4eec\u80fd\u5f88\u5bb9\u6613\u77e5\u9053: \u5982\u679c\u80fd\u62fc\u6210\u4e00\u4e2a\u5927\u77e9\u5f62\uff0c\u90a3\u4e48\u77e9\u5f62\u7684\u5de6\u4e0a\u89d2\u4e0e\u53f3\u4e0b\u89d2\u7684\u70b9\u5206\u522b\u5bf9\u5e94\u8fd9\u5806\u5c0f\u77e9\u5f62\u7684\u6700\u5de6\u4e0a\u89d2\u7684\u70b9\uff0c\u6700\u53f3\u4e0b\u89d2\u7684\u70b9\u3002\u8fd9\u4e2a\u77e9\u5f62\u5c31\u662f\u6211\u4eec\u7684\u5019\u9009\u503c\u3002 \u4e00\u4e2a\u5bb9\u6613\u5224\u65ad\u7684\u6761\u4ef6\uff1a\u8fd9\u4e2a\u5927\u77e9\u5f62\u7684\u9762\u79ef\u5e94\u8be5\u662f\u6240\u6709\u5c0f\u77e9\u5f62\u9762\u79ef\u7684\u548c\u3002 \u63a5\u7740\u6211\u4eec\u9700\u8981\u5224\u65ad\u8fd9\u4e9b\u5c0f\u77e9\u5f62\u662f\u5426\u6709\u91cd\u53e0\uff0c\u5982\u679c\u8fd9\u4e9b\u5c0f\u77e9\u5f62\u6ca1\u6709\u91cd\u53e0\uff0c\u90a3\u4e48\u4e00\u5b9a\u6ee1\u8db3\u4e0b\u9762\u7684\u6761\u4ef6\uff1a\u5982\u679c\u77e9\u5f62\u770b\u6210\u56db\u4e2a\u70b9\uff0c\u90a3\u4e48\u9664\u4e86\u4e0e\u5927\u77e9\u5f62\u5bf9\u5e94\u7684\u56db\u4e2a\u70b9\uff0c\u5176\u5b83\u7684\u70b9\u5e94\u8be5\u662f\u4e24\u4e24\u76f8\u62b5\u6d88\u7684\u3002 \u9898\u89e3\u4ee3\u7801 : class Solution { public : bool isRectangleCover ( vector < vector < int >>& rectangles ) { // \u83b7\u5f97\u6700\u5927\u77e9\u5f62, \u987a\u5e26\u7edf\u8ba1\u4e00\u4e0b\u5c0f\u77e9\u9635\u7684\u9762\u79ef\u548c\u3002 long long sum = 0 ; vector < int > largeRec = { INT_MAX , INT_MAX , 0 , 0 }; // \u5b9a\u4e49\u5728 <climits> \u5934\u6587\u4ef6\u4e2d\u3002 for ( auto & rec : rectangles ) { largeRec [ 0 ] = min ( largeRec [ 0 ], rec [ 0 ]); largeRec [ 1 ] = min ( largeRec [ 1 ], rec [ 1 ]); largeRec [ 2 ] = max ( largeRec [ 2 ], rec [ 2 ]); largeRec [ 3 ] = max ( largeRec [ 3 ], rec [ 3 ]); sum += area ( rec ); } if ( sum != area ( largeRec )) { return false ; } // \u5224\u65ad\u662f\u5426\u77e9\u5f62\u6709\u91cd\u53e0\u3002 set < pair < int , int >> s ; // unordered_set \u5bf9 pair \u6ca1\u6709\u5bf9\u5e94\u7684\u54c8\u5e0c\u51fd\u6570\uff0c // \u6240\u4ee5\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570\u3002 // \u4f46\u662f\u81ea\u5b9a\u4e49\u54c8\u5e0c\u51fd\u6570\u7684 unordered_set \u6548\u7387\u975e\u5e38\u4f4e, // \u8fdc\u8fdc\u4e0d\u53ca set<pari<int, int>>\u3002 rectangles . push_back ( largeRec ); for ( auto & rec : rectangles ) { for ( int i = 0 ; i <= 2 ; i += 2 ) { for ( int j = 1 ; j <= 3 ; j += 2 ) { auto a = make_pair ( rec [ i ], rec [ j ]); if ( s . find ( a ) != s . end ()) { s . erase ( s . find ( a )); } else { s . insert ( a ); } } } } return s . empty (); } private : inline long long area ( vector < int > & rec ) { return ( rec [ 2 ] - rec [ 0 ]) * ( rec [ 3 ] - rec [ 1 ]); } };","title":"\u5b8c\u7f8e\u77e9\u5f62"},{"location":"Algorithms/08-%E6%94%BE%E6%9D%BE%E6%9D%A1%E4%BB%B6%E6%B3%95/#_3","text":"\u8fd9\u4e2a\u9898\u76ee\u662f\u6211\u5728\u9762\u8bd5\u7684\u65f6\u5019\u9047\u5230\u7684\u95ee\u9898\u3002 \u9898\u76ee\u63cf\u8ff0 : \u6211\u4eec\u6709 n \u5806\u77f3\u5b50\uff0c\u6bcf\u5806\u77f3\u5b50\u7684\u4e2a\u6570\u5206\u522b\u4e3a a[0], a[1], ..., a[n-1] \u3002\u73b0\u5728\u8981\u6c42\u6211\u4eec\u8fd9 \\(n\\) \u5806\u77f3\u5b50\u5206\u6210 \\(m\\) \u5806\u77f3\u5b50 b[0], b[1], ..., b[m-1] , \u8981\u6c42\uff1a\u6bcf\u5806\u77f3\u5b50\u7684\u4e2a\u6570\u5927\u4e8e0\uff0c\u5e76\u4e14\u4e0d\u80fd\u5408\u5e76\u539f\u6765\u7684\u77f3\u5b50\u5806\uff0c\u53ea\u80fd\u62c6\u5206\u77f3\u5b50\u5806\u3002\u95ee\uff1a\u5728\u6240\u6709\u5206\u53d1\u4e2d\uff0c \\(\\min_{i} b[i]\\) \u6700\u5927\u53ef\u80fd\u662f\u591a\u5c11\uff1f\u793a\u4f8b\u5982\u4e0b\uff1a \u8f93\u5165\uff1an = 3, m = 5, a = [3, 5, 6]. \u8f93\u51fa\uff1a2 (b = [3, 5, 2, 2, 2]). \u5206\u6790 \uff1a \u6211\u4eec\u53ef\u4ee5\u7528\u653e\u677e\u6761\u4ef6\u6cd5\u6765\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002 \u9996\u5148\u83b7\u5f97\u4e00\u4e2a\u6700\u5927\u7684\u5019\u9009\u503c \\(avg = \\min(\\min_i a[i], \\lfloor\\sum^{n-1}_{i=0} a[i] / m\\rfloor)\\) ; \u6211\u4eec\u4ece\u5019\u9009\u533a\u95f4 \\([1, avg]\\) \u91c7\u7528\u4e8c\u5206\u6cd5\u6765\u9a8c\u8bc1\u8fd9\u4e9b\u4faf\u9009\u6570\uff1b \u6211\u4eec\u9a8c\u8bc1\u4faf\u9009\u6570 \\(num\\) \u7684\u65b9\u6cd5\u662f\uff1a\u4ee5\u5019\u9009\u6570\u4f5c\u4e3a\u62c6\u5206\u51fa\u7684 \\(\\min_i b[i]\\) \uff0c\u904d\u5386\u6bcf\u4e2a\u77f3\u5b50\u5806\uff0c\u770b\u770b\u6bcf\u4e2a\u77f3\u5b50\u5806\u6700\u591a\u80fd\u5206\u51fa\u591a\u5c11\u5806\uff0c\u5224\u65ad\u662f\u5426\u80fd\u591f\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002 \u4f8b\u5982\uff1a\u5728\u4e0a\u9762\u8fd9\u4e2a\u7684\u793a\u4f8b\u4e2d\uff0c\u4e00\u4e2a\u53ef\u9009\u7684\u4faf\u9009\u503c\u662f2\u3002\u90a3\u4e48 a[0] = 3 \u4e0d\u80fd\u88ab\u5206\uff0c\u56e0\u4e3a\u5206\u6210\u7684\u5806\u4e3a [1, 2] \u5b58\u5728\u6bd4\u5019\u9009\u6570\u8fd8\u5c0f\u7684\u6570\uff0c\u8fd9\u4e0d\u6ee1\u8db3\u5019\u9009\u6570\u7684\u8981\u6c42; a[1] = 5 \u53ef\u4ee5\u88ab\u5206\u6210\u4e24\u5806 [2, 3] ; \u6700\u540e a[2] = 6 \u53ef\u4ee5\u88ab\u5206\u6210\u4e09\u5806 [2, 2, 2] \u3002\u90a3\u4e48\u4ee5 2 \u62c6\u5206\u77f3\u5b50\u5806\uff0c\u6700\u591a\u53ef\u4ee5\u5206\u51fa 6 \u5806\uff0c\u8d85\u8fc7\u6211\u4eec\u7684\u9700\u6c42 5 \u5806\uff0c\u6240\u4ee5 \\(2\\) \u662f\u53ef\u4ee5\u7684\u3002 \u8fd9\u91cc\u6bcf\u4e2a\u6c42\u62c6\u5206\u5806\u6570\u7684\u516c\u5f0f\u6709 \\(\\max(\\lfloor a[i] / num \\rfloor, 1)\\) \u3002","title":"\u5206\u77f3\u5b50"},{"location":"Algorithms/09-%E5%8D%95%E8%B0%83%E6%A0%88/","text":"\u5355\u8c03\u6808 \u00b6 \u5355\u8c03\u6808\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6808\uff0c\u53ef\u4ee5\u7528\u6765\u7ef4\u62a4\u67d0\u79cd\u903b\u8f91\u4fe1\u606f\uff0c\u5728\u5f88\u591a\u9898\u76ee\u4e2d\u975e\u5e38\u6709\u6548\u3002 \u8fd9\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u5b83\u901a\u5e38\u670d\u52a1\u4e8e\u9898\u76ee\u7684\u89e3\u6cd5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5148\u5206\u6790\u9898\u610f\uff0c\u8bbe\u8ba1\u51fa\u67d0\u79cd\u89e3\u6cd5\uff0c\u7136\u540e\u8981\u81ea\u884c\u5224\u65ad\u662f\u5426\u9700\u8981\u5355\u8c03\u6808\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u3002 \u4e0b\u9762\u51e0\u9053\u9898\u76ee\u5f88\u9002\u5408\u7528\u89c6\u9891\u6216\u8005\u52a8\u6001gif\u56fe\u6765\u8bb2\u89e3\uff0c\u6587\u5b57\u786e\u5b9e\u6709\u70b9\u5e72\u762a\u3002 \u63a5\u96e8\u6c34 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode 42 \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a n \u4e2a\u975e\u8d1f\u6574\u6570\u8868\u793a\u6bcf\u4e2a\u5bbd\u5ea6\u4e3a 1 \u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u56fe\uff0c\u8ba1\u7b97\u6309\u6b64\u6392\u5217\u7684\u67f1\u5b50\uff0c\u4e0b\u96e8\u4e4b\u540e\u80fd\u63a5\u591a\u5c11\u96e8\u6c34\u3002 \u793a\u4f8b : \u8f93\u5165: [0,1,0,2,1,0,1,3,2,1,2,1] \u8f93\u51fa: 6 \u9898\u89e3 \uff1a\u8fd9\u91cc\u9700\u8981\u4e00\u4e2a\u5355\u8c03\u51cf\u6808\uff0c\u9047\u5230\u6bd4\u6808\u9876\u9ad8\u7684\u67f1\u5b50\uff0c\u8bf4\u660e\u53ef\u4ee5\u524d\u9762\u6709\u67f1\u5b50\u53ef\u4ee5\u5b58\u96e8\u6c34, \u6211\u4eec\u5c31\u8981\u8fdb\u5165\u96e8\u6c34\u7684\u8ba1\u7b97\u3002 \u8ba1\u7b97\u96e8\u6c34\u7684\u6838\u5fc3\u662f\u628a\u96e8\u6c34\u5982\u56fe\u5206\u62104\u4e2a\u77e9\u5f62. \u53c2\u8003\u4ee3\u7801 class Solution { public : int trap ( vector < int >& height ) { if ( height . empty ()) return 0 ; int n = height . size (), cnt = 0 ; stack < int > s ; for ( int i = 0 ; i < n ; ++ i ) { int h = height [ i ]; while ( ! s . empty () && height [ s . top ()] < h ) { int j = s . top (); s . pop (); if ( ! s . empty ()) { int distance = i - s . top () - 1 ; int delta_h = min ( height [ s . top ()], h ) - height [ j ]; cnt += distance * delta_h ; } } s . push ( i ); } return cnt ; } }; \u67f1\u72b6\u56fe\u4e2d\u7684\u6700\u5927\u77e9\u5f62 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode 84 \u9898\u76ee\u63cf\u8ff0 \uff1a\u7ed9\u5b9a n \u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u7528\u6765\u8868\u793a\u67f1\u72b6\u56fe\u4e2d\u5404\u4e2a\u67f1\u5b50\u7684\u9ad8\u5ea6\u3002\u6bcf\u4e2a\u67f1\u5b50\u5f7c\u6b64\u76f8\u90bb\uff0c\u4e14\u5bbd\u5ea6\u4e3a 1\u3002\u6c42\u5728\u8be5\u67f1\u72b6\u56fe\u4e2d\uff0c\u80fd\u591f\u52fe\u52d2\u51fa\u6765\u7684\u77e9\u5f62\u7684\u6700\u5927\u9762\u79ef\u3002 \u793a\u4f8b \uff1a \u8f93\u5165: [2,1,5,6,2,3] \u8f93\u51fa: 10 \u9898\u89e3 \uff1a\u8fd9\u4e2a\u5355\u8c03\u9012\u589e\u6808\u4e5f\u4e0d\u96be\uff0c\u9047\u5230\u6bd4\u6808\u9876\u4f4e\u7684\u67f1\u5b50\uff0c\u5c31\u8981\u8fdb\u5165\u77e9\u5f62\u9762\u79ef\u7684\u8ba1\u7b97\u3002\u8fd9\u9053\u9898\u7684\u5173\u952e\u5728\u4e8e\u7406\u6e05\u695a\u5982\u4f55\u6c42\u77e9\u5f62\u9762\u79ef\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : int largestRectangleArea ( vector < int >& heights ) { if ( heights . empty ()) return false ; stack < int > s ; heights . push_back ( 0 ); int n = heights . size (), max_area = 0 ; for ( int current_i = 0 ; current_i < n ; ++ current_i ) { int current_h = heights [ current_i ]; while ( ! s . empty () && heights [ s . top ()] > current_h ) { int top_i = s . top (); s . pop (); int distance = ( s . empty ()) ? current_i : current_i - s . top () -1 ; int area = heights [ top_i ] * distance ; max_area = max ( max_area , area ); } s . push ( current_i ); } return max_area ; } }; \u6700\u5927\u77e9\u5f62 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode 85 \u9898\u76ee\u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b 0 \u548c 1 \u7684\u4e8c\u7ef4\u4e8c\u8fdb\u5236\u77e9\u9635\uff0c\u627e\u51fa\u53ea\u5305\u542b 1 \u7684\u6700\u5927\u77e9\u5f62\uff0c\u5e76\u8fd4\u56de\u5176\u9762\u79ef\u3002 \u793a\u4f8b \uff1a \u8f93\u5165: [ [\"1\",\"0\",\"1\",\"0\",\"0\"], [\"1\",\"0\",\"1\",\"1\",\"1\"], [\"1\",\"1\",\"1\",\"1\",\"1\"], [\"1\",\"0\",\"0\",\"1\",\"0\"] ] \u8f93\u51fa: 6 \u5206\u6790 \uff1a\u8fd9\u4e2a\u662f\u67f1\u72b6\u56fe\u6700\u5927\u77e9\u5f62\u7684\u6269\u5c55, \u4e0a\u9762\u7684\u77e9\u9635\u5bf9\u5e94\uff1a [ [\"1\",\"0\",\"1\",\"0\",\"0\"], [\"2\",\"0\",\"2\",\"1\",\"1\"], [\"3\",\"1\",\"3\",\"2\",\"2\"], [\"4\",\"0\",\"0\",\"3\",\"0\"] ] \u8fd9\u4e2a\u77e9\u5f62\u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u4e2a\u67f1\u72b6\u4f53\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : int maximalRectangle ( vector < vector < char >>& matrix ) { if ( matrix . empty ()) return 0 ; int n = matrix [ 0 ]. size (), rst = 0 ; vector < int > heights ( n , 0 ); for ( int i = 0 ; i < matrix . size (); ++ i ) { for ( int j = 0 ; j < n ; ++ j ) { if ( matrix [ i ][ j ] == '1' ) { heights [ j ] ++ ; } else { heights [ j ] = 0 ; } } rst = max ( rst , maxMatrix ( heights )); } return rst ; } private : int maxMatrix ( vector < int >& heights ) { if ( heights . empty ()) return 0 ; stack < int > s ; heights . push_back ( 0 ); int n = heights . size (), rst = 0 ; for ( int i = 0 ; i < n ; ++ i ) { int hi = heights [ i ]; while ( ! s . empty () && heights [ s . top ()] > hi ) { int j = s . top (); s . pop (); int distance = ( s . empty ()) ? i : i - s . top () - 1 ; rst = max ( rst , distance * heights [ j ]); } s . push ( i ); } return rst ; } }; \u79fb\u6389K\u4f4d\u6570\u5b57 \u00b6 \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u4ee5\u5b57\u7b26\u4e32\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570 num\uff0c\u79fb\u9664\u8fd9\u4e2a\u6570\u4e2d\u7684 k \u4f4d\u6570\u5b57\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u6570\u5b57\u6700\u5c0f\u3002 num \u7684\u957f\u5ea6\u5c0f\u4e8e 10002 \u4e14 \u2265 k\u3002 num \u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u524d\u5bfc\u96f6\u3002 \u793a\u4f8b : \u8f93\u5165: num = \"1432219\", k = 3 \u8f93\u51fa: \"1219\" \u89e3\u91ca: \u79fb\u9664\u6389\u4e09\u4e2a\u6570\u5b57 4, 3, \u548c 2 \u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u6700\u5c0f\u7684\u6570\u5b57 1219\u3002 \u8f93\u5165: num = \"10200\", k = 1 \u8f93\u51fa: \"200\" \u89e3\u91ca: \u79fb\u6389\u9996\u4f4d\u7684 1 \u5269\u4e0b\u7684\u6570\u5b57\u4e3a 200. \u6ce8\u610f\u8f93\u51fa\u4e0d\u80fd\u6709\u4efb\u4f55\u524d\u5bfc\u96f6\u3002 \u8f93\u5165: num = \"10\", k = 2 \u8f93\u51fa: \"0\" \u89e3\u91ca: \u4ece\u539f\u6570\u5b57\u79fb\u9664\u6240\u6709\u7684\u6570\u5b57\uff0c\u5269\u4f59\u4e3a\u7a7a\u5c31\u662f0\u3002 \u89e3\u6790 : \u8fd9\u91cc\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u6808\uff1a\u5982\u679c\u5f53\u524d\u5143\u7d20\u6bd4\u6808\u9876\u5143\u7d20\u5c0f\uff0c\u90a3\u5c31\u628a\u6808\u9876\u5143\u7d20\u5f39\u51fa\u3002\u88ab\u5f39\u51fa\u7684\u5143\u7d20\u5c31\u662f\u88ab\u5220\u9664\uff0c\u56e0\u4e3a\u5220\u9664\u6b21\u6570\u6709\u9650\uff0c\u6240\u4ee5\u907f\u514d\u5220\u9664\u8fc7\u591a\u7684\u5143\u7d20\u3002\u53e6\u5916\uff0c\u8981\u6ce8\u610f\u8fb9\u754c\u95ee\u9898\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : string removeKdigits ( string num , int k ) { stack < char > s ; int len = num . size () - k ; for ( auto & digit : num ) { while ( k > 0 && ! s . empty () && digit < s . top ()) { s . pop (); k -- ; } s . push ( digit ); } string rst ; while ( ! s . empty () > 0 ) { rst . push_back ( s . top ()); s . pop (); } rst = string ( rst . end () - len , rst . end ()); for ( int i = rst . size () -1 ; i >= 0 ; -- i ) { if ( rst [ i ] == '0' ) rst . pop_back (); else break ; } reverse ( rst . begin (), rst . end ()); return rst . empty () ? \"0\" : rst ; } }; 123\u6a21\u5f0f \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u5e8f\u5217\uff1aa1, a2, ..., an\uff0c\u4e00\u4e2a132\u6a21\u5f0f\u7684\u5b50\u5e8f\u5217 ai, aj, ak \u88ab\u5b9a\u4e49\u4e3a\uff1a\u5f53 i < j < k \u65f6\uff0cai < ak < aj\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5f53\u7ed9\u5b9a\u6709 n \u4e2a\u6570\u5b57\u7684\u5e8f\u5217\u65f6\uff0c\u9a8c\u8bc1\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u662f\u5426\u542b\u6709132\u6a21\u5f0f\u7684\u5b50\u5e8f\u5217\u3002 \u5206\u6790 : \u8fd9\u4e2a\u95ee\u9898\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u89e3\u51b3\u7684\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u627e\u51fa\u6bcf\u4e2a\u5143\u7d20\u7684\u5de6\u4fa7\u5143\u7d20\u7684\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u8bb0\u505a \\(premin[i] = min_{j < i} a[j]\\) ; \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8981\u5728 \\(a[i]\\) \u7684\u53f3\u4fa7\uff0c\u627e\u5230\u4e00\u4e2a\u6574\u6570 \\(j > i\\) \u6ee1\u8db3 \\(premin[i] < a[j] < a[i]\\) \u3002 \u5728\u7b2c\u4e8c\u6b65\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u5355\u8c03\u9012\u51cf\u6808\u3002\u6211\u4eec\u4ece\u53f3\u5230\u5de6\u904d\u5386\u6570\u7ec4\uff0c\u5f53\u4fbf\u5229\u5230 \\(a[i]\\) \u65f6\uff0c\u6211\u4eec\u5148\u6839\u636e \\(premin[i]\\) \u6765\u5f39\u51fa\u6808\u7684\u5143\u7d20\uff0c\u76f4\u5230\u6808\u9876\u5143\u7d20\u5927\u4e8e \\(premin[i]\\) \u3002\u63a5\u7740\u6211\u4eec\u5224\u65ad \\(a[i]\\) \u662f\u5426\u5927\u4e8e\u6808\u9876\u5143\u7d20\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : bool find132pattern ( vector < int >& nums ) { int n = nums . size (); if ( n < 3 ) return false ; vector < int > premin ( n ); //\u524d\u7f00\u6700\u5c0f\u6570\u7ec4 int mi = nums [ 0 ]; for ( int i = 1 ; i < n - 1 ; ++ i ) { premin [ i ] = mi ; mi = min ( mi , nums [ i ]); } stack < int > s ; //\u5355\u8c03\u9012\u51cf\u6808 s . push ( nums [ n - 1 ]); for ( int i = n - 2 ; i > 0 ; -- i ) { int mi = premin [ i ]; while ( ! s . empty () && mi >= s . top ()) { s . pop (); } if ( ! s . empty () && s . top () < nums [ i ]) { return true ; } if ( s . empty () || nums [ i ] < s . top ()) { s . push ( nums [ i ]); } } return false ; } }; \u6c42\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5143\u7d20 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u5faa\u73af\u6570\u7ec4\uff08\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u662f\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8f93\u51fa\u6bcf\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u3002\u6570\u5b57 x \u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5143\u7d20\u662f\u6309\u6570\u7ec4\u904d\u5386\u987a\u5e8f\uff0c\u8fd9\u4e2a\u6570\u5b57\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u66f4\u5927\u7684\u6570\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u5e94\u8be5\u5faa\u73af\u5730\u641c\u7d22\u5b83\u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u6570\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa -1\u3002 \u5206\u6790 : \u8fd9\u662f\u4e00\u4e2a\u7528\u5355\u8c03\u6808\u7684\u7ecf\u5178\u95ee\u9898\uff0c\u5f88\u591a\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\u8fd9\u4e2a\u95ee\u9898\u6765\u6c42\u89e3\u3002 \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u6808\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898: \u5982\u679c\u5f53\u524d\u7684\u5143\u7d20\u5927\u4e8e\u6808\u9876\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u6808\u9876\u7684\u5143\u7d20\u5c31\u5df2\u7ecf\u627e\u5230\u4e86\u5b83\u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5143\u7d20\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : vector < int > nextGreaterElements ( vector < int >& nums ) { if ( nums . empty ()) return {}; int n = nums . size (), index = 1 ; vector < int > rst ( n , -1 ); stack < int > s ; //\u5355\u8c03\u9012\u589e\u6808 for ( int i = 0 ; i < 2 * n ; ++ i ) { int index = i % n ; while ( ! s . empty () && nums [ s . top ()] < nums [ index ]) { if ( rst [ s . top ()] == -1 ) rst [ s . top ()] = nums [ index ]; s . pop (); } s . push ( index ); } return rst ; } }; \u53ef\u80fd\u7684\u4e8c\u5206\u6cd5 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode 886 \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u7ec4\u4eba\u7f16\u53f7\u4e3a 1, 2, ..., N , \u6211\u4eec\u60f3\u628a\u8fd9\u4e9b\u4eba\u5206\u6210\u4e24\u7ec4\uff0c\u8981\u6c42\u4e24\u4e2a\u4e92\u4e0d\u559c\u6b22\u7684\u4eba\u4e0d\u80fd\u5206\u5728\u4e00\u7ec4\u3002\u6211\u4eec\u7528\u6570\u7ec4 dislikes[i] = [a, b] \u6765\u8868\u793a a \u548c b \u4e4b\u95f4\u4e92\u4e0d\u559c\u6b22\u3002\u5224\u65ad\u80fd\u5426\u6210\u529f\u5206\u5272\u3002 \u793a\u4f8b : \u8f93\u5165\uff1aN = 4, dislikes = [[1,2],[1,3],[2,4]] \u8f93\u51fa\uff1atrue \u89e3\u91ca\uff1agroup1 [1,4], group2 [2,3] \u5206\u6790 : 1. \u53ef\u4ee5\u4f7f\u7528\u67d3\u8272\u6cd5\u8868\u793a\u4eba\u88ab\u5206\u5728\u54ea\u4e00\u7ec4; 2. \u4f7f\u7528\u6808\u6765\u5b8c\u6210dfs\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public: bool possibleBipartition(int N, vector<vector<int>>& dislikes) { vector<vector<int>> graph(N+1); vector<int> color(N+1, 0); // \u4f7f\u7528 +1/-1\u8868\u793a\u4e24\u7c7b for(auto edge: dislikes) { graph[edge[0]].push_back(edge[1]); graph[edge[1]].push_back(edge[0]); } for(int i = 1; i <= N; ++i) { if(color[i] != 0) continue; stack<int> s; //\u4f7f\u7528\u6808\u6765\u6a21\u62dfdfs s.push(i); color[i] = 1; // \u9ed8\u8ba4\u7c7b\u578b\u4e3a1 while(!s.empty()) { int node = s.top(); s.pop(); int c = color[node]; for(auto next: graph[node]) { if(color[next] * c > 0) { return false; } else if(color[next] == 0) { s.push(next); color[next] = -c; } } } } return true; } };","title":"\u5355\u8c03\u6808"},{"location":"Algorithms/09-%E5%8D%95%E8%B0%83%E6%A0%88/#_1","text":"\u5355\u8c03\u6808\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6808\uff0c\u53ef\u4ee5\u7528\u6765\u7ef4\u62a4\u67d0\u79cd\u903b\u8f91\u4fe1\u606f\uff0c\u5728\u5f88\u591a\u9898\u76ee\u4e2d\u975e\u5e38\u6709\u6548\u3002 \u8fd9\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u5b83\u901a\u5e38\u670d\u52a1\u4e8e\u9898\u76ee\u7684\u89e3\u6cd5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5148\u5206\u6790\u9898\u610f\uff0c\u8bbe\u8ba1\u51fa\u67d0\u79cd\u89e3\u6cd5\uff0c\u7136\u540e\u8981\u81ea\u884c\u5224\u65ad\u662f\u5426\u9700\u8981\u5355\u8c03\u6808\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u3002 \u4e0b\u9762\u51e0\u9053\u9898\u76ee\u5f88\u9002\u5408\u7528\u89c6\u9891\u6216\u8005\u52a8\u6001gif\u56fe\u6765\u8bb2\u89e3\uff0c\u6587\u5b57\u786e\u5b9e\u6709\u70b9\u5e72\u762a\u3002","title":"\u5355\u8c03\u6808"},{"location":"Algorithms/09-%E5%8D%95%E8%B0%83%E6%A0%88/#_2","text":"\u8be6\u60c5\u53c2\u8003 LeetCode 42 \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a n \u4e2a\u975e\u8d1f\u6574\u6570\u8868\u793a\u6bcf\u4e2a\u5bbd\u5ea6\u4e3a 1 \u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u56fe\uff0c\u8ba1\u7b97\u6309\u6b64\u6392\u5217\u7684\u67f1\u5b50\uff0c\u4e0b\u96e8\u4e4b\u540e\u80fd\u63a5\u591a\u5c11\u96e8\u6c34\u3002 \u793a\u4f8b : \u8f93\u5165: [0,1,0,2,1,0,1,3,2,1,2,1] \u8f93\u51fa: 6 \u9898\u89e3 \uff1a\u8fd9\u91cc\u9700\u8981\u4e00\u4e2a\u5355\u8c03\u51cf\u6808\uff0c\u9047\u5230\u6bd4\u6808\u9876\u9ad8\u7684\u67f1\u5b50\uff0c\u8bf4\u660e\u53ef\u4ee5\u524d\u9762\u6709\u67f1\u5b50\u53ef\u4ee5\u5b58\u96e8\u6c34, \u6211\u4eec\u5c31\u8981\u8fdb\u5165\u96e8\u6c34\u7684\u8ba1\u7b97\u3002 \u8ba1\u7b97\u96e8\u6c34\u7684\u6838\u5fc3\u662f\u628a\u96e8\u6c34\u5982\u56fe\u5206\u62104\u4e2a\u77e9\u5f62. \u53c2\u8003\u4ee3\u7801 class Solution { public : int trap ( vector < int >& height ) { if ( height . empty ()) return 0 ; int n = height . size (), cnt = 0 ; stack < int > s ; for ( int i = 0 ; i < n ; ++ i ) { int h = height [ i ]; while ( ! s . empty () && height [ s . top ()] < h ) { int j = s . top (); s . pop (); if ( ! s . empty ()) { int distance = i - s . top () - 1 ; int delta_h = min ( height [ s . top ()], h ) - height [ j ]; cnt += distance * delta_h ; } } s . push ( i ); } return cnt ; } };","title":"\u63a5\u96e8\u6c34"},{"location":"Algorithms/09-%E5%8D%95%E8%B0%83%E6%A0%88/#_3","text":"\u8be6\u60c5\u53c2\u8003 LeetCode 84 \u9898\u76ee\u63cf\u8ff0 \uff1a\u7ed9\u5b9a n \u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u7528\u6765\u8868\u793a\u67f1\u72b6\u56fe\u4e2d\u5404\u4e2a\u67f1\u5b50\u7684\u9ad8\u5ea6\u3002\u6bcf\u4e2a\u67f1\u5b50\u5f7c\u6b64\u76f8\u90bb\uff0c\u4e14\u5bbd\u5ea6\u4e3a 1\u3002\u6c42\u5728\u8be5\u67f1\u72b6\u56fe\u4e2d\uff0c\u80fd\u591f\u52fe\u52d2\u51fa\u6765\u7684\u77e9\u5f62\u7684\u6700\u5927\u9762\u79ef\u3002 \u793a\u4f8b \uff1a \u8f93\u5165: [2,1,5,6,2,3] \u8f93\u51fa: 10 \u9898\u89e3 \uff1a\u8fd9\u4e2a\u5355\u8c03\u9012\u589e\u6808\u4e5f\u4e0d\u96be\uff0c\u9047\u5230\u6bd4\u6808\u9876\u4f4e\u7684\u67f1\u5b50\uff0c\u5c31\u8981\u8fdb\u5165\u77e9\u5f62\u9762\u79ef\u7684\u8ba1\u7b97\u3002\u8fd9\u9053\u9898\u7684\u5173\u952e\u5728\u4e8e\u7406\u6e05\u695a\u5982\u4f55\u6c42\u77e9\u5f62\u9762\u79ef\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : int largestRectangleArea ( vector < int >& heights ) { if ( heights . empty ()) return false ; stack < int > s ; heights . push_back ( 0 ); int n = heights . size (), max_area = 0 ; for ( int current_i = 0 ; current_i < n ; ++ current_i ) { int current_h = heights [ current_i ]; while ( ! s . empty () && heights [ s . top ()] > current_h ) { int top_i = s . top (); s . pop (); int distance = ( s . empty ()) ? current_i : current_i - s . top () -1 ; int area = heights [ top_i ] * distance ; max_area = max ( max_area , area ); } s . push ( current_i ); } return max_area ; } };","title":"\u67f1\u72b6\u56fe\u4e2d\u7684\u6700\u5927\u77e9\u5f62"},{"location":"Algorithms/09-%E5%8D%95%E8%B0%83%E6%A0%88/#_4","text":"\u8be6\u60c5\u53c2\u8003 LeetCode 85 \u9898\u76ee\u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b 0 \u548c 1 \u7684\u4e8c\u7ef4\u4e8c\u8fdb\u5236\u77e9\u9635\uff0c\u627e\u51fa\u53ea\u5305\u542b 1 \u7684\u6700\u5927\u77e9\u5f62\uff0c\u5e76\u8fd4\u56de\u5176\u9762\u79ef\u3002 \u793a\u4f8b \uff1a \u8f93\u5165: [ [\"1\",\"0\",\"1\",\"0\",\"0\"], [\"1\",\"0\",\"1\",\"1\",\"1\"], [\"1\",\"1\",\"1\",\"1\",\"1\"], [\"1\",\"0\",\"0\",\"1\",\"0\"] ] \u8f93\u51fa: 6 \u5206\u6790 \uff1a\u8fd9\u4e2a\u662f\u67f1\u72b6\u56fe\u6700\u5927\u77e9\u5f62\u7684\u6269\u5c55, \u4e0a\u9762\u7684\u77e9\u9635\u5bf9\u5e94\uff1a [ [\"1\",\"0\",\"1\",\"0\",\"0\"], [\"2\",\"0\",\"2\",\"1\",\"1\"], [\"3\",\"1\",\"3\",\"2\",\"2\"], [\"4\",\"0\",\"0\",\"3\",\"0\"] ] \u8fd9\u4e2a\u77e9\u5f62\u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u4e2a\u67f1\u72b6\u4f53\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : int maximalRectangle ( vector < vector < char >>& matrix ) { if ( matrix . empty ()) return 0 ; int n = matrix [ 0 ]. size (), rst = 0 ; vector < int > heights ( n , 0 ); for ( int i = 0 ; i < matrix . size (); ++ i ) { for ( int j = 0 ; j < n ; ++ j ) { if ( matrix [ i ][ j ] == '1' ) { heights [ j ] ++ ; } else { heights [ j ] = 0 ; } } rst = max ( rst , maxMatrix ( heights )); } return rst ; } private : int maxMatrix ( vector < int >& heights ) { if ( heights . empty ()) return 0 ; stack < int > s ; heights . push_back ( 0 ); int n = heights . size (), rst = 0 ; for ( int i = 0 ; i < n ; ++ i ) { int hi = heights [ i ]; while ( ! s . empty () && heights [ s . top ()] > hi ) { int j = s . top (); s . pop (); int distance = ( s . empty ()) ? i : i - s . top () - 1 ; rst = max ( rst , distance * heights [ j ]); } s . push ( i ); } return rst ; } };","title":"\u6700\u5927\u77e9\u5f62"},{"location":"Algorithms/09-%E5%8D%95%E8%B0%83%E6%A0%88/#k","text":"\u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u4ee5\u5b57\u7b26\u4e32\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570 num\uff0c\u79fb\u9664\u8fd9\u4e2a\u6570\u4e2d\u7684 k \u4f4d\u6570\u5b57\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u6570\u5b57\u6700\u5c0f\u3002 num \u7684\u957f\u5ea6\u5c0f\u4e8e 10002 \u4e14 \u2265 k\u3002 num \u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u524d\u5bfc\u96f6\u3002 \u793a\u4f8b : \u8f93\u5165: num = \"1432219\", k = 3 \u8f93\u51fa: \"1219\" \u89e3\u91ca: \u79fb\u9664\u6389\u4e09\u4e2a\u6570\u5b57 4, 3, \u548c 2 \u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u6700\u5c0f\u7684\u6570\u5b57 1219\u3002 \u8f93\u5165: num = \"10200\", k = 1 \u8f93\u51fa: \"200\" \u89e3\u91ca: \u79fb\u6389\u9996\u4f4d\u7684 1 \u5269\u4e0b\u7684\u6570\u5b57\u4e3a 200. \u6ce8\u610f\u8f93\u51fa\u4e0d\u80fd\u6709\u4efb\u4f55\u524d\u5bfc\u96f6\u3002 \u8f93\u5165: num = \"10\", k = 2 \u8f93\u51fa: \"0\" \u89e3\u91ca: \u4ece\u539f\u6570\u5b57\u79fb\u9664\u6240\u6709\u7684\u6570\u5b57\uff0c\u5269\u4f59\u4e3a\u7a7a\u5c31\u662f0\u3002 \u89e3\u6790 : \u8fd9\u91cc\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u6808\uff1a\u5982\u679c\u5f53\u524d\u5143\u7d20\u6bd4\u6808\u9876\u5143\u7d20\u5c0f\uff0c\u90a3\u5c31\u628a\u6808\u9876\u5143\u7d20\u5f39\u51fa\u3002\u88ab\u5f39\u51fa\u7684\u5143\u7d20\u5c31\u662f\u88ab\u5220\u9664\uff0c\u56e0\u4e3a\u5220\u9664\u6b21\u6570\u6709\u9650\uff0c\u6240\u4ee5\u907f\u514d\u5220\u9664\u8fc7\u591a\u7684\u5143\u7d20\u3002\u53e6\u5916\uff0c\u8981\u6ce8\u610f\u8fb9\u754c\u95ee\u9898\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : string removeKdigits ( string num , int k ) { stack < char > s ; int len = num . size () - k ; for ( auto & digit : num ) { while ( k > 0 && ! s . empty () && digit < s . top ()) { s . pop (); k -- ; } s . push ( digit ); } string rst ; while ( ! s . empty () > 0 ) { rst . push_back ( s . top ()); s . pop (); } rst = string ( rst . end () - len , rst . end ()); for ( int i = rst . size () -1 ; i >= 0 ; -- i ) { if ( rst [ i ] == '0' ) rst . pop_back (); else break ; } reverse ( rst . begin (), rst . end ()); return rst . empty () ? \"0\" : rst ; } };","title":"\u79fb\u6389K\u4f4d\u6570\u5b57"},{"location":"Algorithms/09-%E5%8D%95%E8%B0%83%E6%A0%88/#123","text":"\u8be6\u60c5\u53c2\u8003 LeetCode \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u5e8f\u5217\uff1aa1, a2, ..., an\uff0c\u4e00\u4e2a132\u6a21\u5f0f\u7684\u5b50\u5e8f\u5217 ai, aj, ak \u88ab\u5b9a\u4e49\u4e3a\uff1a\u5f53 i < j < k \u65f6\uff0cai < ak < aj\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5f53\u7ed9\u5b9a\u6709 n \u4e2a\u6570\u5b57\u7684\u5e8f\u5217\u65f6\uff0c\u9a8c\u8bc1\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u662f\u5426\u542b\u6709132\u6a21\u5f0f\u7684\u5b50\u5e8f\u5217\u3002 \u5206\u6790 : \u8fd9\u4e2a\u95ee\u9898\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u89e3\u51b3\u7684\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u627e\u51fa\u6bcf\u4e2a\u5143\u7d20\u7684\u5de6\u4fa7\u5143\u7d20\u7684\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u8bb0\u505a \\(premin[i] = min_{j < i} a[j]\\) ; \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8981\u5728 \\(a[i]\\) \u7684\u53f3\u4fa7\uff0c\u627e\u5230\u4e00\u4e2a\u6574\u6570 \\(j > i\\) \u6ee1\u8db3 \\(premin[i] < a[j] < a[i]\\) \u3002 \u5728\u7b2c\u4e8c\u6b65\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u5355\u8c03\u9012\u51cf\u6808\u3002\u6211\u4eec\u4ece\u53f3\u5230\u5de6\u904d\u5386\u6570\u7ec4\uff0c\u5f53\u4fbf\u5229\u5230 \\(a[i]\\) \u65f6\uff0c\u6211\u4eec\u5148\u6839\u636e \\(premin[i]\\) \u6765\u5f39\u51fa\u6808\u7684\u5143\u7d20\uff0c\u76f4\u5230\u6808\u9876\u5143\u7d20\u5927\u4e8e \\(premin[i]\\) \u3002\u63a5\u7740\u6211\u4eec\u5224\u65ad \\(a[i]\\) \u662f\u5426\u5927\u4e8e\u6808\u9876\u5143\u7d20\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : bool find132pattern ( vector < int >& nums ) { int n = nums . size (); if ( n < 3 ) return false ; vector < int > premin ( n ); //\u524d\u7f00\u6700\u5c0f\u6570\u7ec4 int mi = nums [ 0 ]; for ( int i = 1 ; i < n - 1 ; ++ i ) { premin [ i ] = mi ; mi = min ( mi , nums [ i ]); } stack < int > s ; //\u5355\u8c03\u9012\u51cf\u6808 s . push ( nums [ n - 1 ]); for ( int i = n - 2 ; i > 0 ; -- i ) { int mi = premin [ i ]; while ( ! s . empty () && mi >= s . top ()) { s . pop (); } if ( ! s . empty () && s . top () < nums [ i ]) { return true ; } if ( s . empty () || nums [ i ] < s . top ()) { s . push ( nums [ i ]); } } return false ; } };","title":"123\u6a21\u5f0f"},{"location":"Algorithms/09-%E5%8D%95%E8%B0%83%E6%A0%88/#_5","text":"\u8be6\u60c5\u53c2\u8003 LeetCode \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u5faa\u73af\u6570\u7ec4\uff08\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u662f\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8f93\u51fa\u6bcf\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u3002\u6570\u5b57 x \u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5143\u7d20\u662f\u6309\u6570\u7ec4\u904d\u5386\u987a\u5e8f\uff0c\u8fd9\u4e2a\u6570\u5b57\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u66f4\u5927\u7684\u6570\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u5e94\u8be5\u5faa\u73af\u5730\u641c\u7d22\u5b83\u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u6570\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa -1\u3002 \u5206\u6790 : \u8fd9\u662f\u4e00\u4e2a\u7528\u5355\u8c03\u6808\u7684\u7ecf\u5178\u95ee\u9898\uff0c\u5f88\u591a\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\u8fd9\u4e2a\u95ee\u9898\u6765\u6c42\u89e3\u3002 \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u6808\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898: \u5982\u679c\u5f53\u524d\u7684\u5143\u7d20\u5927\u4e8e\u6808\u9876\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u6808\u9876\u7684\u5143\u7d20\u5c31\u5df2\u7ecf\u627e\u5230\u4e86\u5b83\u7684\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5143\u7d20\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : vector < int > nextGreaterElements ( vector < int >& nums ) { if ( nums . empty ()) return {}; int n = nums . size (), index = 1 ; vector < int > rst ( n , -1 ); stack < int > s ; //\u5355\u8c03\u9012\u589e\u6808 for ( int i = 0 ; i < 2 * n ; ++ i ) { int index = i % n ; while ( ! s . empty () && nums [ s . top ()] < nums [ index ]) { if ( rst [ s . top ()] == -1 ) rst [ s . top ()] = nums [ index ]; s . pop (); } s . push ( index ); } return rst ; } };","title":"\u6c42\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5143\u7d20"},{"location":"Algorithms/09-%E5%8D%95%E8%B0%83%E6%A0%88/#_6","text":"\u8be6\u60c5\u53c2\u8003 LeetCode 886 \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u7ec4\u4eba\u7f16\u53f7\u4e3a 1, 2, ..., N , \u6211\u4eec\u60f3\u628a\u8fd9\u4e9b\u4eba\u5206\u6210\u4e24\u7ec4\uff0c\u8981\u6c42\u4e24\u4e2a\u4e92\u4e0d\u559c\u6b22\u7684\u4eba\u4e0d\u80fd\u5206\u5728\u4e00\u7ec4\u3002\u6211\u4eec\u7528\u6570\u7ec4 dislikes[i] = [a, b] \u6765\u8868\u793a a \u548c b \u4e4b\u95f4\u4e92\u4e0d\u559c\u6b22\u3002\u5224\u65ad\u80fd\u5426\u6210\u529f\u5206\u5272\u3002 \u793a\u4f8b : \u8f93\u5165\uff1aN = 4, dislikes = [[1,2],[1,3],[2,4]] \u8f93\u51fa\uff1atrue \u89e3\u91ca\uff1agroup1 [1,4], group2 [2,3] \u5206\u6790 : 1. \u53ef\u4ee5\u4f7f\u7528\u67d3\u8272\u6cd5\u8868\u793a\u4eba\u88ab\u5206\u5728\u54ea\u4e00\u7ec4; 2. \u4f7f\u7528\u6808\u6765\u5b8c\u6210dfs\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public: bool possibleBipartition(int N, vector<vector<int>>& dislikes) { vector<vector<int>> graph(N+1); vector<int> color(N+1, 0); // \u4f7f\u7528 +1/-1\u8868\u793a\u4e24\u7c7b for(auto edge: dislikes) { graph[edge[0]].push_back(edge[1]); graph[edge[1]].push_back(edge[0]); } for(int i = 1; i <= N; ++i) { if(color[i] != 0) continue; stack<int> s; //\u4f7f\u7528\u6808\u6765\u6a21\u62dfdfs s.push(i); color[i] = 1; // \u9ed8\u8ba4\u7c7b\u578b\u4e3a1 while(!s.empty()) { int node = s.top(); s.pop(); int c = color[node]; for(auto next: graph[node]) { if(color[next] * c > 0) { return false; } else if(color[next] == 0) { s.push(next); color[next] = -c; } } } } return true; } };","title":"\u53ef\u80fd\u7684\u4e8c\u5206\u6cd5"},{"location":"Algorithms/10-%E6%9C%80%E9%95%BF%E5%85%A8%E6%8E%92%E5%88%97/","text":"\u6700\u957f\u5168\u6392\u5217 \u00b6 \u6700\u957f\u5168\u6392\u5217 \u00b6 \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u8282\u70b9\u6570\u4e3a N \u5168\u8fde\u63a5\u56fe\uff0c\u6bcf\u6761\u8fb9\u4e0a\u5bf9\u5e94\u4e00\u4e2a\u5956\u52b1\u503c\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u8282\u70b9\u7684\u6bcf\u4e00\u4e2a\u5168\u6392\u5217\uff08\u5982\uff1a\u5f53 N=5 \u65f6\uff0c\u5b83\u7684\u4e00\u4e2a\u5168\u6392\u5217\u662f [1, 3, 2, 4, 5] )\uff0c\u90fd\u6709\u4e00\u4e2a\u603b\u5956\u52b1\u503c\u3002\u90a3\u4e48, \u6c42\u5b83\u7684\u5956\u52b1\u6700\u5927\u7684\u5168\u6392\u5217\u3002( 1 <= N <= 12 ) \u793a\u4f8b :\u5982\u4e0b\u56fe\u8868\u793a\u4e86\u4ecei(\u884c)\u5230j(\u5217)\u7684\u8def\u5f84\u82b1\u8d39\uff0c\u90a3\u4e48\u6700\u957f\u8def\u5f84\u4e3a 2->1->3->0->4 \u3002 0 1 2 3 4 0 | -1, 0, 1, 0, 3 1 | 0,-1, 0, 1, 0 2 | 0, 3,-1, 0, 1 3 | 2, 0, 0,-1, 1 4 | 1, 1, 0, 0,-1 \u5206\u6790 : \u4e0d\u8981\u60f3\u7740 \\(O(N)\\) \u7684\u7b97\u6cd5\u4e86\uff1b \u5168\u6392\u5217\u6709 \\(N!\\) \u79cd\uff0c\u6700\u597d\u7684\u7b97\u6cd5\u662f \\(O(N^2 2^N + M)\\) ; \u52a8\u6001\u89c4\u5212\u7684\u72b6\u6001\u5f88\u5947\u5999 \\(dp[2^N][N]\\) \uff0c\u5176\u4e2d\u884c\u5750\u6807 s \u4e2d1\u6240\u5728\u7684\u4f4d\u7f6e\u8868\u793a\u5df2\u7ecf\u88ab\u9009\u62e9\u7684\u8282\u70b9\uff0c\u5217\u5750\u6807 i \u8868\u793a\u5df2\u7ecf\u88ab\u9009\u62e9\u7684\u8282\u70b9\u4e2d\uff0c\u7ec4\u6210\u7684\u6392\u5217\u662f\u4ee5 i \u7ed3\u5c3e\u7684; \u9a6c\u5c14\u79d1\u592b\u6027\uff1a\u63a5\u4e0b\u6765\u7684\u6392\u5217\u53ea\u548c\u5df2\u9009\u62e9\u7684\u8282\u70b9\u96c6\u5408\uff08\u5bf9\u5e94 s ) \u4ee5\u53ca\u6392\u5217\u7684\u672b\u5c3e\u6570 i \u6709\u5173\u3002 \u5c0f\u6280\u5de7\uff1a\u6700\u5916\u5c42\u5faa\u73af\u53ef\u4ee5\u662f for s = 1 to 2^N \uff0c\u56e0\u4e3a\u6bcf\u6b21\u65b0\u52a0\u4e00\u4e2a\u6570\uff0c\u4e00\u5b9a\u4f7f\u5f97 \\(s\\) \u53d8\u5927\uff0c\u6240\u4ee5\u904d\u5386\u7684\u65f6\u5019\u4e0d\u4f1a\u51fa\u73b0\u9700\u8981\u7684\u8282\u70b9\u8fd8\u6ca1\u6709\u904d\u5386\u3002 \u6700\u77ed\u8d85\u7ea7\u4e32 \u00b6 \u8be6\u60c5\u53c2\u8003 LeetCode 943 \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 A\uff0c\u627e\u5230\u4ee5 A \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u77ed\u5b57\u7b26\u4e32\u3002 \u6211\u4eec\u53ef\u4ee5\u5047\u8bbe A \u4e2d\u6ca1\u6709\u5b57\u7b26\u4e32\u662f A \u4e2d\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b : \u8f93\u5165\uff1a[\"alex\",\"loves\",\"leetcode\"] \u8f93\u51fa\uff1a\"alexlovesleetcode\" \u89e3\u91ca\uff1a\"alex\"\uff0c\"loves\"\uff0c\"leetcode\" \u7684\u6240\u6709\u6392\u5217\u90fd\u4f1a\u88ab\u63a5\u53d7\u3002 \u5206\u6790 : \u8fd9\u91cc\u6211\u4eec\u9996\u5148\u9700\u8981\u6784\u9020\u5956\u52b1\u56fe\uff0c\u7136\u540e\u6c42\u6700\u957f\u5168\u6392\u5217\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : string shortestSuperstring ( vector < string >& A ) { if ( A . empty ()) return \"\" ; int n = A . size (); if ( n == 1 ) return A [ 0 ]; vector < vector < int >> reward ( n , vector < int > ( n , -1 )); // \u9996\u5148\u6784\u9020Reward Function. for ( int i = 0 ; i < n ; ++ i ) { for ( int j = i + 1 ; j < n ; ++ j ) { reward [ i ][ j ] = getReward ( A [ i ], A [ j ]); reward [ j ][ i ] = getReward ( A [ j ], A [ i ]); } } //\u4ece\u6570\u7ec4\u7684\u5168\u6392\u5e8f\uff08full permutation)\u91cc\u627ereward\u6700\u5927\u7684\u6392\u5e8f\u3002 int S = 1 << n ; vector < vector < int >> dp ( S , vector < int > ( n , 0 )); vector < vector < pair < int , int >>> prev ( S , vector < pair < int , int >> ( n )); for ( int s = 1 ; s < S ; ++ s ) { // \u8fd9\u91cc\u7684\u5173\u952e\u662f s|(1<<j) \u4e00\u5b9a\u5927\u4e8e s,\u6240\u4ee5s\u4e00\u5b9a\u88ab\u904d\u5386\u8fc7\uff0c\u6240\u4ee5dp[s]\u662f\u5bf9\u7684\u3002 for ( int i = 0 ; i < n ; ++ i ) { if ((( s >> i ) & 1 ) == 0 ) continue ; for ( int j = 0 ; j < n ; ++ j ) { if (( s >> j ) & 1 ) continue ; int sj = s | ( 1 << j ); if ( dp [ sj ][ j ] <= dp [ s ][ i ] + reward [ i ][ j ]) { dp [ sj ][ j ] = dp [ s ][ i ] + reward [ i ][ j ]; prev [ sj ][ j ] = make_pair ( s , i ); } } } } // \u6784\u5efa\u5b57\u7b26\u4e32 int end = 0 ; int s = S - 1 ; for ( int i = 0 ; i < n ; ++ i ) { if ( dp [ s ][ end ] < dp [ s ][ i ]) end = i ; } string rst = A [ end ]; for ( int i = 0 ; i < n - 1 ; ++ i ) { auto p = prev [ s ][ end ]; rst = A [ p . second ] + rst . substr ( reward [ p . second ][ end ]); s = p . first ; end = p . second ; } return rst ; } private : int getReward ( string & t , string & p ) { int idx_p = 0 ; // Knuth-Morris-Pratt \u7b97\u6cd5 vector < int > next = getNext ( p ); for ( int i = 0 , j = 0 ; i < t . size (); ++ i ) { while ( idx_p >= 0 && t [ i ] != p [ idx_p ]) { idx_p = next [ idx_p ]; } idx_p ++ ; } return idx_p ; } vector < int > getNext ( string & s ) { if ( s . empty ()) return {}; int n = s . size (); vector < int > next ( n , -1 ); for ( int i = 1 ; i < n ; ++ i ) { int pre = next [ i - 1 ]; while ( pre >= 0 && s [ pre ] != s [ i ]) { pre = next [ pre ]; } next [ i ] = pre + 1 ; } return next ; } };","title":"\u6700\u957f\u5168\u6392\u5217"},{"location":"Algorithms/10-%E6%9C%80%E9%95%BF%E5%85%A8%E6%8E%92%E5%88%97/#_1","text":"","title":"\u6700\u957f\u5168\u6392\u5217"},{"location":"Algorithms/10-%E6%9C%80%E9%95%BF%E5%85%A8%E6%8E%92%E5%88%97/#_2","text":"\u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u8282\u70b9\u6570\u4e3a N \u5168\u8fde\u63a5\u56fe\uff0c\u6bcf\u6761\u8fb9\u4e0a\u5bf9\u5e94\u4e00\u4e2a\u5956\u52b1\u503c\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u8282\u70b9\u7684\u6bcf\u4e00\u4e2a\u5168\u6392\u5217\uff08\u5982\uff1a\u5f53 N=5 \u65f6\uff0c\u5b83\u7684\u4e00\u4e2a\u5168\u6392\u5217\u662f [1, 3, 2, 4, 5] )\uff0c\u90fd\u6709\u4e00\u4e2a\u603b\u5956\u52b1\u503c\u3002\u90a3\u4e48, \u6c42\u5b83\u7684\u5956\u52b1\u6700\u5927\u7684\u5168\u6392\u5217\u3002( 1 <= N <= 12 ) \u793a\u4f8b :\u5982\u4e0b\u56fe\u8868\u793a\u4e86\u4ecei(\u884c)\u5230j(\u5217)\u7684\u8def\u5f84\u82b1\u8d39\uff0c\u90a3\u4e48\u6700\u957f\u8def\u5f84\u4e3a 2->1->3->0->4 \u3002 0 1 2 3 4 0 | -1, 0, 1, 0, 3 1 | 0,-1, 0, 1, 0 2 | 0, 3,-1, 0, 1 3 | 2, 0, 0,-1, 1 4 | 1, 1, 0, 0,-1 \u5206\u6790 : \u4e0d\u8981\u60f3\u7740 \\(O(N)\\) \u7684\u7b97\u6cd5\u4e86\uff1b \u5168\u6392\u5217\u6709 \\(N!\\) \u79cd\uff0c\u6700\u597d\u7684\u7b97\u6cd5\u662f \\(O(N^2 2^N + M)\\) ; \u52a8\u6001\u89c4\u5212\u7684\u72b6\u6001\u5f88\u5947\u5999 \\(dp[2^N][N]\\) \uff0c\u5176\u4e2d\u884c\u5750\u6807 s \u4e2d1\u6240\u5728\u7684\u4f4d\u7f6e\u8868\u793a\u5df2\u7ecf\u88ab\u9009\u62e9\u7684\u8282\u70b9\uff0c\u5217\u5750\u6807 i \u8868\u793a\u5df2\u7ecf\u88ab\u9009\u62e9\u7684\u8282\u70b9\u4e2d\uff0c\u7ec4\u6210\u7684\u6392\u5217\u662f\u4ee5 i \u7ed3\u5c3e\u7684; \u9a6c\u5c14\u79d1\u592b\u6027\uff1a\u63a5\u4e0b\u6765\u7684\u6392\u5217\u53ea\u548c\u5df2\u9009\u62e9\u7684\u8282\u70b9\u96c6\u5408\uff08\u5bf9\u5e94 s ) \u4ee5\u53ca\u6392\u5217\u7684\u672b\u5c3e\u6570 i \u6709\u5173\u3002 \u5c0f\u6280\u5de7\uff1a\u6700\u5916\u5c42\u5faa\u73af\u53ef\u4ee5\u662f for s = 1 to 2^N \uff0c\u56e0\u4e3a\u6bcf\u6b21\u65b0\u52a0\u4e00\u4e2a\u6570\uff0c\u4e00\u5b9a\u4f7f\u5f97 \\(s\\) \u53d8\u5927\uff0c\u6240\u4ee5\u904d\u5386\u7684\u65f6\u5019\u4e0d\u4f1a\u51fa\u73b0\u9700\u8981\u7684\u8282\u70b9\u8fd8\u6ca1\u6709\u904d\u5386\u3002","title":"\u6700\u957f\u5168\u6392\u5217"},{"location":"Algorithms/10-%E6%9C%80%E9%95%BF%E5%85%A8%E6%8E%92%E5%88%97/#_3","text":"\u8be6\u60c5\u53c2\u8003 LeetCode 943 \u9898\u76ee\u63cf\u8ff0 : \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 A\uff0c\u627e\u5230\u4ee5 A \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u77ed\u5b57\u7b26\u4e32\u3002 \u6211\u4eec\u53ef\u4ee5\u5047\u8bbe A \u4e2d\u6ca1\u6709\u5b57\u7b26\u4e32\u662f A \u4e2d\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b : \u8f93\u5165\uff1a[\"alex\",\"loves\",\"leetcode\"] \u8f93\u51fa\uff1a\"alexlovesleetcode\" \u89e3\u91ca\uff1a\"alex\"\uff0c\"loves\"\uff0c\"leetcode\" \u7684\u6240\u6709\u6392\u5217\u90fd\u4f1a\u88ab\u63a5\u53d7\u3002 \u5206\u6790 : \u8fd9\u91cc\u6211\u4eec\u9996\u5148\u9700\u8981\u6784\u9020\u5956\u52b1\u56fe\uff0c\u7136\u540e\u6c42\u6700\u957f\u5168\u6392\u5217\u3002 \u53c2\u8003\u4ee3\u7801 class Solution { public : string shortestSuperstring ( vector < string >& A ) { if ( A . empty ()) return \"\" ; int n = A . size (); if ( n == 1 ) return A [ 0 ]; vector < vector < int >> reward ( n , vector < int > ( n , -1 )); // \u9996\u5148\u6784\u9020Reward Function. for ( int i = 0 ; i < n ; ++ i ) { for ( int j = i + 1 ; j < n ; ++ j ) { reward [ i ][ j ] = getReward ( A [ i ], A [ j ]); reward [ j ][ i ] = getReward ( A [ j ], A [ i ]); } } //\u4ece\u6570\u7ec4\u7684\u5168\u6392\u5e8f\uff08full permutation)\u91cc\u627ereward\u6700\u5927\u7684\u6392\u5e8f\u3002 int S = 1 << n ; vector < vector < int >> dp ( S , vector < int > ( n , 0 )); vector < vector < pair < int , int >>> prev ( S , vector < pair < int , int >> ( n )); for ( int s = 1 ; s < S ; ++ s ) { // \u8fd9\u91cc\u7684\u5173\u952e\u662f s|(1<<j) \u4e00\u5b9a\u5927\u4e8e s,\u6240\u4ee5s\u4e00\u5b9a\u88ab\u904d\u5386\u8fc7\uff0c\u6240\u4ee5dp[s]\u662f\u5bf9\u7684\u3002 for ( int i = 0 ; i < n ; ++ i ) { if ((( s >> i ) & 1 ) == 0 ) continue ; for ( int j = 0 ; j < n ; ++ j ) { if (( s >> j ) & 1 ) continue ; int sj = s | ( 1 << j ); if ( dp [ sj ][ j ] <= dp [ s ][ i ] + reward [ i ][ j ]) { dp [ sj ][ j ] = dp [ s ][ i ] + reward [ i ][ j ]; prev [ sj ][ j ] = make_pair ( s , i ); } } } } // \u6784\u5efa\u5b57\u7b26\u4e32 int end = 0 ; int s = S - 1 ; for ( int i = 0 ; i < n ; ++ i ) { if ( dp [ s ][ end ] < dp [ s ][ i ]) end = i ; } string rst = A [ end ]; for ( int i = 0 ; i < n - 1 ; ++ i ) { auto p = prev [ s ][ end ]; rst = A [ p . second ] + rst . substr ( reward [ p . second ][ end ]); s = p . first ; end = p . second ; } return rst ; } private : int getReward ( string & t , string & p ) { int idx_p = 0 ; // Knuth-Morris-Pratt \u7b97\u6cd5 vector < int > next = getNext ( p ); for ( int i = 0 , j = 0 ; i < t . size (); ++ i ) { while ( idx_p >= 0 && t [ i ] != p [ idx_p ]) { idx_p = next [ idx_p ]; } idx_p ++ ; } return idx_p ; } vector < int > getNext ( string & s ) { if ( s . empty ()) return {}; int n = s . size (); vector < int > next ( n , -1 ); for ( int i = 1 ; i < n ; ++ i ) { int pre = next [ i - 1 ]; while ( pre >= 0 && s [ pre ] != s [ i ]) { pre = next [ pre ]; } next [ i ] = pre + 1 ; } return next ; } };","title":"\u6700\u77ed\u8d85\u7ea7\u4e32"},{"location":"Algorithms/11-%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/","text":"\u5f3a\u8fde\u901a\u5206\u91cf \u00b6 \u5728\u4e00\u5f20\u6709\u5411\u56fe\u4e2d\uff0c\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u80fd\u591f\u4e92\u76f8\u5230\u8fbe\uff0c\u6211\u4eec\u79f0\u5b83\u4eec\u4e3a \u5f3a\u8fde\u901a \u3002 \u6211\u4eec\u89c4\u5b9a\uff0c\u4e00\u4e2a\u7ed3\u70b9\u548c\u5b83\u81ea\u5df1\u662f\u5f3a\u8fde\u901a\u7684\u3002 \u5982\u679c\u4e00\u4e2a\u6709\u5411\u56fe\u6ee1\u8db3\u5b83\u7684\u4efb\u4f55\u4e24\u4e2a\u8282\u70b9\u90fd\u662f\u5f3a\u8fde\u901a\u7684\uff0c \u90a3\u4e48\u8fd9\u4e2a\u6709\u5411\u56fe\u5c31\u662f\u4e00\u4e2a \u5f3a\u8fde\u901a\u56fe \u3002 \u7ed9\u5b9a\u4efb\u4f55\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u5206\u5272\u6210\u4e00\u4e2a\u4e2a\u5f3a\u8fde\u901a\u5b50\u56fe\u3002 \u5728\u6240\u6709\u7684\u5206\u5272\u65b9\u6848\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u4fdd\u7559\u6240\u6709\u7684\u5f3a\u8fde\u901a\u5173\u7cfb\uff1a \u5982\u679c\u4e24\u4e2a\u7ed3\u70b9\u5728\u539f\u56fe\u4e2d\u5f3a\u8fde\u901a\uff0c\u6211\u4eec\u5e0c\u671b\u5206\u5272\u540e\uff0c\u8fd9\u4e24\u4e2a\u7ed3\u70b9\u4e5f\u662f\u5f3a\u8fde\u901a\u7684\u3002 \u8fd9\u79cd\u5206\u5272\u4ea7\u751f\u7684\u5f3a\u8fde\u901a\u5b50\u56fe\u5c31\u79f0\u4e3a\u539f\u6709\u5411\u56fe\u7684 \u5f3a\u8fde\u901a\u5206\u91cf (Strongly Connected Compoenet)\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5206\u5272\u540e\u7684\u5f3a\u8fde\u901a\u5b50\u56fe\u4e0d\u4f1a\u76f8\u4ea4\u3002 \u5982\u679c\u5b58\u5728\u8282\u70b9\u540c\u65f6\u5728\u4e24\u5f20\u5f3a\u8fde\u901a\u5b50\u56fe\u4e2d\uff0c \u6211\u4eec\u5f88\u5bb9\u6613\u8bc1\u660e\u8fd9\u4e24\u5f20\u5f3a\u8fde\u901a\u5b50\u56fe\u7684\u5e76\u96c6\u4e5f\u662f\u5f3a\u8fde\u901a\u7684\uff0c \u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\uff0c\u5b83\u4eec\u8d77\u59cb\u662f\u4e00\u5f20\u5f3a\u8fde\u901a\u5b50\u56fe\u3002 Kosaraju \u7b97\u6cd5 \u00b6 \u56e0\u4e3a\u8fd9\u4e00\u8282\u7684\u5185\u5bb9\u5b8c\u5168\u662f\u4ece\u53e6\u4e00\u7bc7\u535a\u5ba2\u4e2d\u53c2\u8003\u6765\u7684\uff0c\u8fd8\u6ca1\u6709\u5185\u5316\u6210\u6211\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u628a\u5f15\u7528\u653e\u5728\u4e86\u8fd9\u4e00\u5c0f\u8282\u7684\u5f00\u5934\uff0c\u907f\u514d\u8bef\u4f1a\u53d1\u751f\u3002 Kosaragu\u7b97\u6cd5\u7684\u8bc1\u660e \u3002 \u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u7b97\u6cd5\u7684\u6d41\u7a0b\uff1a \u8f93\u5165\u4e00\u5f20\u6709\u5411\u56fe \\(G\\) \uff0c\u5b83\u53ef\u4ee5\u662f\u90bb\u63a5\u77e9\u9635\uff0c\u4e5f\u53ef\u4ee5\u662f\u90bb\u63a5\u8868\u3002 \u6211\u4eec\u9996\u5148\u4f1a\u6784\u9020\u4e00\u5f20\u53cd\u5411\u6709\u5411\u56fe \\(G^T\\) \uff0c\u5c06\u539f\u6709\u5411\u56fe\u7684\u7bad\u5934\u65b9\u5411\u53cd\u5411\u3002 \\(G\\) \u5982\u679c\u662f\u90bb\u63a5\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u9700\u8981\u7279\u522b\u6784\u9020 \\(G^T\\) \uff0c \u4f46\u662f\u5982\u679c \\(G\\) \u662f\u90bb\u63a5\u8868\u5f62\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u7279\u522b\u6784\u9020 \\(G^T\\) \u3002 \u63a5\u7740\u4f7f\u7528\u591a\u6b21\u4f7f\u7528 dfs \u7b56\u7565\u6765\u641c\u7d22\u539f\u56fe \\(G\\) \uff0c\u4ee5\u8282\u70b9 \u8bbf\u95ee\u7ed3\u675f\u7684\u987a\u5e8f \u5c06\u8282\u70b9\u538b\u5165\u4e00\u4e2a\u6808\uff0c\u76f4\u5230\u6240\u6709\u7684\u8282\u70b9\u88ab\u8bbf\u95ee\u3002 \u5c06\u6808\u7684\u5143\u7d20\u4f9d\u6b21\u5f39\u51fa\uff0c\u4ee5\u8be5\u8282\u70b9\u4e3a\u8d77\u59cb\u8282\u70b9\u5bf9 \\(G^T\\) \u8fdb\u884cdfs\u641c\u7d22\u3002\u5982\u679c\u5f39\u51fa\u7684\u8282\u70b9 \\(n\\) \u672a\u88ab\u8bbf\u95ee\u7b2c\u4e8c\u6b21\uff08\u7b2c\u4e00\u6b21\u53d1\u751f\u5728\u7b2c3\u6b65\uff0c\u4e5f\u5c31\u662f\u7b2c\u56db\u6b65\u4e2d\u6ca1\u6709\u8bbf\u95ee\u8fc7\u5b83\uff09\uff0c\u5c31\u4f7f\u7528 dfs \u7b56\u7565\u4ee5\u8282\u70b9 \\(n\\) \u4e3a\u8d77\u70b9\uff0c\u641c\u7d22\u53cd\u8f6c\u56fe \\(G^T\\) \u3002\u6bcf\u6b21 dfs \u7b56\u7565\u8bbf\u95ee\u5230\u7684\u8282\u70b9\u7ec4\u6210\u4e00\u4e2a\u539f\u56fe \\(G\\) \u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002 \u8fd9\u4e2a\u7b97\u6cd5\u7b2c\u4e00\u6b21\u770b\u4e0d\u662f\u90a3\u4e48\u76f4\u89c9\uff0c\u9700\u8981\u4e00\u70b9\u8bc1\u660e\u3002 \u547d\u9898 Kosaraju \u7b97\u6cd5\u7684\u7b2c4\u6b65\u4e2d\u6784\u9020\u7684\u5b50\u56fe\u4e00\u5b9a\u662f\u5f3a\u8fde\u901a\u5b50\u56fe \u3002 \u8bc1\u660e \u9996\u5148\uff0c\u8bbe\u6211\u4eec\u5728\u7b2c4\u6b65\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u5bf9 \\(G^T\\) dfs \u5148\u540e\u8bbf\u95ee\u4e86\u8282\u70b9 \\(\\mathbf{x}\\) \u548c \\(\\mathbf{y}\\) \uff0c \u5e76\u4e14 \\(\\mathbf{x}\\) \u662f dfs \u7684\u8d77\u70b9\u3002 \u90a3\u4e48\u5728 \\(G^T\\) \u4e2d\uff0c\u5b58\u5728\u4e00\u6761\u4ece \\(\\mathbf{x}\\) \u5230 \\(\\mathbf{y}\\) \u7684\u8def\u5f84\uff0c \u4e5f\u5c31\u662f\u8bf4\u539f\u56fe \\(G\\) \u4e2d\u5b58\u5728\u4e00\u6761\u4ece \\(\\mathbf{y}\\) \u5230 \\(\\mathbf{x}\\) \u7684\u8def\u5f84\u3002 \u53c8\u56e0\u4e3a \\(\\mathbf{x}\\) \u662f dfs \u7684\u8d77\u70b9\uff0c \u6240\u4ee5\u5728\u7b2c\u4e09\u6b65\u6784\u9020\u7684\u6808\u4e2d\uff0c \\(\\mathbf{x}\\) \u662f\u9ad8\u4e8e \\(\\mathbf{y}\\) \u7684\uff0c \u4e5f\u5c31\u662f\u8bf4 \\(\\mathbf{y}\\) \u65e9\u4e00\u6b65\u88ab\u538b\u5165\u6808\u4e2d\u3002 \u6211\u4eec\u56de\u8fc7\u5934\u6765\u7814\u7a76\u7b97\u6cd5\u7684\u7b2c3\u6b65\uff0c\u4ec0\u4e48\u65f6\u5019 \\(\\mathbf{y}\\) \u4f1a\u88ab\u65e9\u4e00\u6b65\u538b\u5165\u6808\u4e2d\uff1f \u9996\u5148\u6211\u4eec\u53ef\u4ee5\u80af\u5b9a\uff0c\u4ee5 \\(\\mathbf{y}\\) \u4e3a\u8d77\u70b9\u6df1\u5ea6\u641c\u7d22\u539f\u56fe \\(G\\) \u7684\u65f6\u5019\uff0c \\(\\mathbf{x}\\) \u8fd8\u4e0d\u5728\u6808\u4e2d\u3002 \\(\\mathbf{x}\\) \u4e0d\u5728\u6808\u4e2d\u7684\u53ef\u80fd\u6027\u6709\u4e24\u4e2a\uff1a \\(\\mathbf{x}\\) \u538b\u6839\u8fd8\u6ca1\u6709\u88ab\u8003\u8651\u5230\uff1b \\(\\mathbf{x}\\) \u4e3a\u8d77\u70b9 \\(dfs\\) \u641c\u7d22\u5230\u4e86 \\(\\mathbf{y}\\) \u3002 \u5176\u4e2d\u56e0\u4e3a\u539f\u56fe\u4e2d\u5b58\u5728\u4e00\u6761\u4ece \\(\\mathbf{y}\\) \u5230 \\(\\mathbf{x}\\) \u7684\u8def\u5f84\uff0c\u5982\u679c \\(\\mathbf{x}\\) \u538b\u6839\u6ca1\u6709\u88ab\u8003\u8651\u5230\uff0c\u90a3\u4e48\u4ee5 \\(\\mathbf{y}\\) \u4e3a\u6839\u7684dfs\u65f6\u5fc5\u7136\u4f1a\u641c\u7d22\u5230 \\(\\mathbf{x}\\) \uff0c\u90a3\u4e48 \\(\\mathbf{x}\\) \u4f1a\u88ab\u65e9\u538b\u5165\u6808\u4e2d\uff0c\u53c8\u4ea7\u751f\u4e86\u77db\u76fe\u3002\u6240\u4ee5\u4e00\u5b9a\u662f \\(\\mathbf{x}\\) \u4e3a\u8d77\u70b9 \\(dfs\\) \u641c\u7d22\u5230\u4e86 \\(\\mathbf{y}\\) \uff0c\u4e5f\u5c31\u662f\u539f\u56fe\u5b58\u5728\u4e00\u6761\u4ece \\(\\mathbf{x}\\) \u5230 \\(\\mathbf{y}\\) \u7684\u8def\u5f84\u3002 \u7efc\u4e0a\uff0c\u7b2c4\u6b65\u751f\u6210\u7684\u5b50\u56fe\u6ee1\u8db3\u8d77\u70b9 \\(\\mathbf{x}\\) \u4e0e\u5176\u4ed6\u8282\u70b9\u5f3a\u8fde\u901a\uff0c\u8fdb\u4e00\u6b65\u53ef\u5f97\u5b83\u662f\u5f3a\u8fde\u901a\u5b50\u56fe\u3002 \u547d\u9898 Kosaraju \u7b97\u6cd5\u7684\u7b2c4\u6b65\u4e2d\u6784\u9020\u7684\u5f3a\u8fde\u901a\u5b50\u56fe\u662f\u539f\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf \u3002 \u8bc1\u660e \u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u5f3a\u8fde\u901a\u8282\u70b9 \\(\\mathbf{x}\\) \u548c \\(\\mathbf{y}\\) \uff0c\u5728\u7b2c4\u6b65\u4e2d\uff0c\u4e24\u4e2a\u8282\u70b9\u4e2d\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u8282\u70b9\u5148\u88abdfs\u8bbf\u95ee\u3002 \u53c8\u7531\u4e8e\u4e24\u4e2a\u8282\u70b9\u662f\u5f3a\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u4ece\u5148\u88ab\u8bbf\u95ee\u7684\u7684\u8282\u70b9dfs\u4e00\u5b9a\u4f1a\u8bbf\u95ee\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\uff0c\u5728\u7b2c4\u6b65\u4e2d\uff0c\u610f\u5473\u7740\u5b83\u4eec\u4e00\u5b9a\u88ab\u653e\u5230\u4e86\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5b50\u56fe\u4e2d\u3002 \u6211\u4eec\u7efc\u5408\u4e0a\u9762\u4e24\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e Tosaraju \u7b97\u6cd5\u7684\u6b63\u786e\u6027\u3002 Tosaraju \u7b97\u6cd5\u4f7f\u7528\u4e86\u4e24\u8f6edfs\uff0c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(m + n)\\) \u5176\u4e2d \\(m\\) \u4e3a\u8fb9\u7684\u6570\u76ee\uff0c \\(n\\) \u4e3a\u8282\u70b9\u7684\u6570\u76ee\u3002 \u800c\u53e6\u4e00\u4e2a\u6c42\u6700\u5927\u8fde\u901a\u5206\u91cf\u7684\u7b97\u6cd5 Tarjan \u53ea\u9700\u8981\u6267\u884c\u4e00\u8f6edfs\u3002 \u4e0d\u8fc7 Tosaraju \u7b97\u6cd5\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u6027\u8d28\u800c Tarjan \u7b97\u6cd5\u6ca1\u6709\u3002 \u547d\u9898 Tosaraju\u7b97\u6cd5\u6c42\u51fa\u6765\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5df2\u7ecf\u662f \u62d3\u6251\u6392\u5e8f \u7684\u3002 \u8bc1\u660e \u8bbeTosaraju\u5148\u540e\u751f\u6210\u4e86\u4e24\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf \\(A\\) \u548c \\(B\\) \uff0c \u5e76\u4e14\u8bbe \\(A\\) \u4e2d\u6700\u63a5\u8fd1\u6808\u9876\u7684\u5143\u7d20\u662f \\(a_0\\) \uff0c\u4ee5\u53ca \\(B\\) \u4e2d\u6700\u63a5\u8fd1\u6808\u9876\u7684\u5143\u7d20\u662f \\(b_0\\) \u3002 \u6839\u636e \\(A\\) \u548c \\(B\\) \u751f\u6210\u7684\u5148\u540e\u987a\u5e8f\u53ef\u5f97 \\(a_0\\) \u6bd4 \\(b_0\\) \u66f4\u63a5\u8fd1\u6808\u9876\u3002 \u8fd9\u91cc\u53ea\u4f1a\u6709\u4e24\u79cd\u60c5\u51b5\u5bfc\u81f4 \\(a_0\\) \u6bd4 \\(b_0\\) \u66f4\u63a5\u8fd1\u6808\u9876\uff1a \u5728 Tosaraju \u7b97\u6cd5\u7684\u7b2c\u4e09\u6b65\u4e2d\uff0c\u6211\u4eec\u5148\u8bbf\u95ee\u5230\u4e86 \\(B\\) \u4f46\u662f\u5728\u5bf9 \\(B\\) \u8fdb\u884c dfs \u65f6\u6ca1\u6709\u8bbf\u95ee\u5230 \\(A\\) , \u8fd9\u79cd\u60c5\u51b5\u6697\u793a\u6ca1\u6709\u8def\u5f84\u4ece \\(B\\) \u5230 \\(A\\) ; \u5728 Tosaraju \u7b97\u6cd5\u7684\u7b2c\u4e09\u6b65\u4e2d\uff0c\u6211\u4eec\u5148\u8bbf\u95ee\u5230\u4e86 \\(A\\) \u4f46\u662f\u5728\u5bf9 \\(A\\) \u8fdb\u884c dfs \u65f6\u8bbf\u95ee\u5230\u4e86 \\(B\\) \uff0c\u8fd9\u79cd\u60c5\u51b5\u6309\u65f6\u5b58\u5728\u8def\u5f84\u4ece \\(A\\) \u5230 \\(B\\) \uff1b \u8fd9\u91cc\u56e0\u4e3a \\(A\\) \u548c \\(B\\) \u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u90a3\u4e48\u4e0d\u53ef\u80fd\u53c8\u5b58\u5728\u8def\u5f84\u4ece \\(B\\) \u5230 \\(A\\) \u3002 \u7efc\u4e0a\uff0c\u5982\u679c Tosaraju\u5148\u540e\u751f\u6210\u4e86\u4e24\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf \\(A\\) \u548c \\(B\\) \uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u5b58\u5728\u8def\u5f84\u4ece \\(B\\) \u5230 \\(A\\) \u3002 Tarjan \u7b97\u6cd5 \u00b6 Targan \u7b97\u6cd5\u53ea\u9700\u8981\u4e00\u6b21 dfs \u5c31\u53ef\u4ee5\u627e\u5230\u6709\u5411\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002 \u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u5728\u4e00\u8f6e dfs \u4e2d\u7684\u8fc7\u7a0b\u3002 \u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf U , \u6574\u8f6e dfs \u4e00\u5b9a\u4f1a\u8bbf\u95ee\u5230\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf U \uff0c\u6211\u4eec\u8bbe\u5f3a\u8fde\u901a\u5206\u91cfU\u91cc\u6700\u5148\u88ab\u8bbf\u95ee\u5230\u7684\u8282\u70b9\u4e3a u0 \u3002\u90a3\u4e48\uff0c\u6839\u636e\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u80af\u5b9a\uff0c\u5f3a\u8fde\u901a\u5206\u91cf U \u7684\u5269\u4f59\u8282\u70b9\u4e00\u5b9a\u662f\u5728\u4ee5\u8282\u70b9 u0 \u4e3a\u6839\u7684 dfs \u751f\u6210\u6811\u4e2d(\u5982\u679c\u4ee5 u0 \u4e3a\u6839\u7684 dfs \u751f\u6210\u6811\u4e0a\u4e0d\u5305\u542b\u6240\u6709\u7684\u5f3a\u8fde\u901a\u5206\u91cf U \u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u8868\u793a U \u4e0a\u5b58\u5728 u0 \u70b9\u65e0\u6cd5\u5230\u8fbe\u7684\u8282\u70b9\uff0c\u90a3\u4e48 U \u5c31\u4e0d\u662f\u5f3a\u8fde\u901a\u5206\u91cf)\u3002 \u4e0d\u540c\u7684 dfs \u751f\u6210\u6811\u4e0a\u7684\u8282\u70b9\u4e00\u5b9a\u5728\u4e0d\u540c\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u3002\u800c\u5bf9\u4e8e\u540c\u4e00\u68f5 dfs \u751f\u6210\u6811 T \u4e0a\u7684\u8282\u70b9 u, \u6211\u4eec\u9700\u8981\u786e\u5b9a\u8fd9\u4e2a\u8282\u70b9 u \u662f\u5426\u662f\u5b83\u6240\u5728\u5f3a\u8fde\u901a\u5206\u91cf U \u4e2d\uff0c\u88ab\u9996\u6b21\u8bbf\u95ee\u5230\u7684\u8282\u70b9 u0\u3002\u90a3\u6211\u4eec\u5c31\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u8282\u70b9 u \u4e3a\u6839\u7684 dfs \u751f\u6210\u5b50\u6811\u4e2d\u7684\u7279\u70b9\uff1a \u5982\u679c\u751f\u6210\u5b50\u6811\u4e2d\u5b58\u5728\u8282\u70b9 n \u80fd\u591f\u5230\u8fbe u \u7684\u7956\u4e0a\u8282\u70b9 m\uff0c\u90a3\u4e48 n\u3001u \u548c m \u4e92\u76f8\u5f3a\u8fde\u901a\uff0c\u5b83\u4eec\u4e00\u5b9a\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4 u \u4e0d\u662f u0\u3002 \u5982\u679c\u751f\u6210\u5b50\u6811\u4e2d\u4e0d\u5b58\u5728\u8282\u70b9(\u5305\u62ec u \u5b83\u81ea\u5df1) \u80fd\u591f\u5230\u8fbe u \u7684\u7956\u4e0a\u8282\u70b9\uff0c\u90a3\u4e48 u \u4e00\u5b9a\u662f u0\u3002\u8fd9\u91cc\u8868\u793a u \u548c u \u6240\u80fd\u5230\u8fbe\u7684\u6240\u6709\u8282\u70b9\u90fd\u4e0d\u80fd\u8bbf\u95ee\u5230\u80fd\u5230\u8fbe u \u7684\u8282\u70b9\uff0c\u90a3\u4e48 u \u7684\u7956\u4e0a\u8282\u70b9\u548c u \u4e00\u5b9a\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u3002(\u8fd9\u91cc\u9690\u542b\u4e00\u4e2a\u9012\u5f52\u6027\uff0c\u5927\u5bb6\u9700\u8981\u601d\u8003\u4e00\u4e0b) \u90a3\u4e48 Tarjan \u7b97\u6cd5\u7684\u6d41\u7a0b\u4e3a\uff1a \u8f93\u5165\u4e00\u5f20\u6709\u5411\u56fe \\(G\\) \uff1b \u4f7f\u7528 dfs \u7b56\u7565\u6765\u641c\u7d22\u56fe\uff0c\u53ef\u4ee5\u7528\u6808\u6765\u8bb0\u5f55dfs\u68ee\u6797\u7684\u8bbf\u95ee, \u4e5f\u9700\u8981\u5bf9\u8282\u70b9\u4ece\u5c0f\u5230\u5927\u7f16\u53f7\u3002 \u6211\u4eec\u9012\u5f52\u6c42\u89e3\u6bcf\u4e2a\u8282\u70b9\u80fd\u5230\u8fbe\u7684\u6700\u65e9\u7684\u7956\u4e0a\u8282\u70b9(\u540c\u4e00\u68f5\u751f\u6210\u6811)\uff0c\u8fd9\u91cc\u6307\u7f16\u53f7\u6700\u5c0f\u7684\u7956\u4e0a\u8282\u70b9\u3002 \u8fd9\u91cc\u6bcf\u8bbf\u95ee\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u5c06\u5b83\u538b\u5165\u6808\u4e2d\u3002 \u5982\u679c\u8282\u70b9 u \u6700\u65e9\u80fd\u5230\u8fbe\u7684\u7956\u4e0a\u8282\u70b9\u5c31\u662f\u5b83\u672c\u8eab\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4ee3\u8868\u8282\u70b9 u0\u3002 \u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6808\u4e2d\u7684\u5143\u7d20\u4e00\u4e00\u5f39\u51fa\uff0c\u76f4\u5230\u5f39\u5230 u\uff0c\u6240\u6709\u5f39\u51fa\u7684\u5143\u7d20\u6784\u6210\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002 \u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\uff0c\u540c\u4e00\u68f5 dfs \u751f\u6210\u6811\u4e2d\u5f39\u51fa\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u662f\u6ee1\u8db3\u9006\u62d3\u6251\u6392\u5e8f\u7684\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u624b\u6bb5\u6765\u7ef4\u62a4 dfs \u751f\u6210\u68ee\u6797\u5f39\u51fa\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u62d3\u6251\u6392\u5e8f\u3002","title":"\u5f3a\u8fde\u901a\u5206\u91cf"},{"location":"Algorithms/11-%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#_1","text":"\u5728\u4e00\u5f20\u6709\u5411\u56fe\u4e2d\uff0c\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u80fd\u591f\u4e92\u76f8\u5230\u8fbe\uff0c\u6211\u4eec\u79f0\u5b83\u4eec\u4e3a \u5f3a\u8fde\u901a \u3002 \u6211\u4eec\u89c4\u5b9a\uff0c\u4e00\u4e2a\u7ed3\u70b9\u548c\u5b83\u81ea\u5df1\u662f\u5f3a\u8fde\u901a\u7684\u3002 \u5982\u679c\u4e00\u4e2a\u6709\u5411\u56fe\u6ee1\u8db3\u5b83\u7684\u4efb\u4f55\u4e24\u4e2a\u8282\u70b9\u90fd\u662f\u5f3a\u8fde\u901a\u7684\uff0c \u90a3\u4e48\u8fd9\u4e2a\u6709\u5411\u56fe\u5c31\u662f\u4e00\u4e2a \u5f3a\u8fde\u901a\u56fe \u3002 \u7ed9\u5b9a\u4efb\u4f55\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u5206\u5272\u6210\u4e00\u4e2a\u4e2a\u5f3a\u8fde\u901a\u5b50\u56fe\u3002 \u5728\u6240\u6709\u7684\u5206\u5272\u65b9\u6848\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u4fdd\u7559\u6240\u6709\u7684\u5f3a\u8fde\u901a\u5173\u7cfb\uff1a \u5982\u679c\u4e24\u4e2a\u7ed3\u70b9\u5728\u539f\u56fe\u4e2d\u5f3a\u8fde\u901a\uff0c\u6211\u4eec\u5e0c\u671b\u5206\u5272\u540e\uff0c\u8fd9\u4e24\u4e2a\u7ed3\u70b9\u4e5f\u662f\u5f3a\u8fde\u901a\u7684\u3002 \u8fd9\u79cd\u5206\u5272\u4ea7\u751f\u7684\u5f3a\u8fde\u901a\u5b50\u56fe\u5c31\u79f0\u4e3a\u539f\u6709\u5411\u56fe\u7684 \u5f3a\u8fde\u901a\u5206\u91cf (Strongly Connected Compoenet)\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5206\u5272\u540e\u7684\u5f3a\u8fde\u901a\u5b50\u56fe\u4e0d\u4f1a\u76f8\u4ea4\u3002 \u5982\u679c\u5b58\u5728\u8282\u70b9\u540c\u65f6\u5728\u4e24\u5f20\u5f3a\u8fde\u901a\u5b50\u56fe\u4e2d\uff0c \u6211\u4eec\u5f88\u5bb9\u6613\u8bc1\u660e\u8fd9\u4e24\u5f20\u5f3a\u8fde\u901a\u5b50\u56fe\u7684\u5e76\u96c6\u4e5f\u662f\u5f3a\u8fde\u901a\u7684\uff0c \u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\uff0c\u5b83\u4eec\u8d77\u59cb\u662f\u4e00\u5f20\u5f3a\u8fde\u901a\u5b50\u56fe\u3002","title":"\u5f3a\u8fde\u901a\u5206\u91cf"},{"location":"Algorithms/11-%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#kosaraju","text":"\u56e0\u4e3a\u8fd9\u4e00\u8282\u7684\u5185\u5bb9\u5b8c\u5168\u662f\u4ece\u53e6\u4e00\u7bc7\u535a\u5ba2\u4e2d\u53c2\u8003\u6765\u7684\uff0c\u8fd8\u6ca1\u6709\u5185\u5316\u6210\u6211\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u628a\u5f15\u7528\u653e\u5728\u4e86\u8fd9\u4e00\u5c0f\u8282\u7684\u5f00\u5934\uff0c\u907f\u514d\u8bef\u4f1a\u53d1\u751f\u3002 Kosaragu\u7b97\u6cd5\u7684\u8bc1\u660e \u3002 \u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u7b97\u6cd5\u7684\u6d41\u7a0b\uff1a \u8f93\u5165\u4e00\u5f20\u6709\u5411\u56fe \\(G\\) \uff0c\u5b83\u53ef\u4ee5\u662f\u90bb\u63a5\u77e9\u9635\uff0c\u4e5f\u53ef\u4ee5\u662f\u90bb\u63a5\u8868\u3002 \u6211\u4eec\u9996\u5148\u4f1a\u6784\u9020\u4e00\u5f20\u53cd\u5411\u6709\u5411\u56fe \\(G^T\\) \uff0c\u5c06\u539f\u6709\u5411\u56fe\u7684\u7bad\u5934\u65b9\u5411\u53cd\u5411\u3002 \\(G\\) \u5982\u679c\u662f\u90bb\u63a5\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u9700\u8981\u7279\u522b\u6784\u9020 \\(G^T\\) \uff0c \u4f46\u662f\u5982\u679c \\(G\\) \u662f\u90bb\u63a5\u8868\u5f62\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u7279\u522b\u6784\u9020 \\(G^T\\) \u3002 \u63a5\u7740\u4f7f\u7528\u591a\u6b21\u4f7f\u7528 dfs \u7b56\u7565\u6765\u641c\u7d22\u539f\u56fe \\(G\\) \uff0c\u4ee5\u8282\u70b9 \u8bbf\u95ee\u7ed3\u675f\u7684\u987a\u5e8f \u5c06\u8282\u70b9\u538b\u5165\u4e00\u4e2a\u6808\uff0c\u76f4\u5230\u6240\u6709\u7684\u8282\u70b9\u88ab\u8bbf\u95ee\u3002 \u5c06\u6808\u7684\u5143\u7d20\u4f9d\u6b21\u5f39\u51fa\uff0c\u4ee5\u8be5\u8282\u70b9\u4e3a\u8d77\u59cb\u8282\u70b9\u5bf9 \\(G^T\\) \u8fdb\u884cdfs\u641c\u7d22\u3002\u5982\u679c\u5f39\u51fa\u7684\u8282\u70b9 \\(n\\) \u672a\u88ab\u8bbf\u95ee\u7b2c\u4e8c\u6b21\uff08\u7b2c\u4e00\u6b21\u53d1\u751f\u5728\u7b2c3\u6b65\uff0c\u4e5f\u5c31\u662f\u7b2c\u56db\u6b65\u4e2d\u6ca1\u6709\u8bbf\u95ee\u8fc7\u5b83\uff09\uff0c\u5c31\u4f7f\u7528 dfs \u7b56\u7565\u4ee5\u8282\u70b9 \\(n\\) \u4e3a\u8d77\u70b9\uff0c\u641c\u7d22\u53cd\u8f6c\u56fe \\(G^T\\) \u3002\u6bcf\u6b21 dfs \u7b56\u7565\u8bbf\u95ee\u5230\u7684\u8282\u70b9\u7ec4\u6210\u4e00\u4e2a\u539f\u56fe \\(G\\) \u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002 \u8fd9\u4e2a\u7b97\u6cd5\u7b2c\u4e00\u6b21\u770b\u4e0d\u662f\u90a3\u4e48\u76f4\u89c9\uff0c\u9700\u8981\u4e00\u70b9\u8bc1\u660e\u3002 \u547d\u9898 Kosaraju \u7b97\u6cd5\u7684\u7b2c4\u6b65\u4e2d\u6784\u9020\u7684\u5b50\u56fe\u4e00\u5b9a\u662f\u5f3a\u8fde\u901a\u5b50\u56fe \u3002 \u8bc1\u660e \u9996\u5148\uff0c\u8bbe\u6211\u4eec\u5728\u7b2c4\u6b65\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u5bf9 \\(G^T\\) dfs \u5148\u540e\u8bbf\u95ee\u4e86\u8282\u70b9 \\(\\mathbf{x}\\) \u548c \\(\\mathbf{y}\\) \uff0c \u5e76\u4e14 \\(\\mathbf{x}\\) \u662f dfs \u7684\u8d77\u70b9\u3002 \u90a3\u4e48\u5728 \\(G^T\\) \u4e2d\uff0c\u5b58\u5728\u4e00\u6761\u4ece \\(\\mathbf{x}\\) \u5230 \\(\\mathbf{y}\\) \u7684\u8def\u5f84\uff0c \u4e5f\u5c31\u662f\u8bf4\u539f\u56fe \\(G\\) \u4e2d\u5b58\u5728\u4e00\u6761\u4ece \\(\\mathbf{y}\\) \u5230 \\(\\mathbf{x}\\) \u7684\u8def\u5f84\u3002 \u53c8\u56e0\u4e3a \\(\\mathbf{x}\\) \u662f dfs \u7684\u8d77\u70b9\uff0c \u6240\u4ee5\u5728\u7b2c\u4e09\u6b65\u6784\u9020\u7684\u6808\u4e2d\uff0c \\(\\mathbf{x}\\) \u662f\u9ad8\u4e8e \\(\\mathbf{y}\\) \u7684\uff0c \u4e5f\u5c31\u662f\u8bf4 \\(\\mathbf{y}\\) \u65e9\u4e00\u6b65\u88ab\u538b\u5165\u6808\u4e2d\u3002 \u6211\u4eec\u56de\u8fc7\u5934\u6765\u7814\u7a76\u7b97\u6cd5\u7684\u7b2c3\u6b65\uff0c\u4ec0\u4e48\u65f6\u5019 \\(\\mathbf{y}\\) \u4f1a\u88ab\u65e9\u4e00\u6b65\u538b\u5165\u6808\u4e2d\uff1f \u9996\u5148\u6211\u4eec\u53ef\u4ee5\u80af\u5b9a\uff0c\u4ee5 \\(\\mathbf{y}\\) \u4e3a\u8d77\u70b9\u6df1\u5ea6\u641c\u7d22\u539f\u56fe \\(G\\) \u7684\u65f6\u5019\uff0c \\(\\mathbf{x}\\) \u8fd8\u4e0d\u5728\u6808\u4e2d\u3002 \\(\\mathbf{x}\\) \u4e0d\u5728\u6808\u4e2d\u7684\u53ef\u80fd\u6027\u6709\u4e24\u4e2a\uff1a \\(\\mathbf{x}\\) \u538b\u6839\u8fd8\u6ca1\u6709\u88ab\u8003\u8651\u5230\uff1b \\(\\mathbf{x}\\) \u4e3a\u8d77\u70b9 \\(dfs\\) \u641c\u7d22\u5230\u4e86 \\(\\mathbf{y}\\) \u3002 \u5176\u4e2d\u56e0\u4e3a\u539f\u56fe\u4e2d\u5b58\u5728\u4e00\u6761\u4ece \\(\\mathbf{y}\\) \u5230 \\(\\mathbf{x}\\) \u7684\u8def\u5f84\uff0c\u5982\u679c \\(\\mathbf{x}\\) \u538b\u6839\u6ca1\u6709\u88ab\u8003\u8651\u5230\uff0c\u90a3\u4e48\u4ee5 \\(\\mathbf{y}\\) \u4e3a\u6839\u7684dfs\u65f6\u5fc5\u7136\u4f1a\u641c\u7d22\u5230 \\(\\mathbf{x}\\) \uff0c\u90a3\u4e48 \\(\\mathbf{x}\\) \u4f1a\u88ab\u65e9\u538b\u5165\u6808\u4e2d\uff0c\u53c8\u4ea7\u751f\u4e86\u77db\u76fe\u3002\u6240\u4ee5\u4e00\u5b9a\u662f \\(\\mathbf{x}\\) \u4e3a\u8d77\u70b9 \\(dfs\\) \u641c\u7d22\u5230\u4e86 \\(\\mathbf{y}\\) \uff0c\u4e5f\u5c31\u662f\u539f\u56fe\u5b58\u5728\u4e00\u6761\u4ece \\(\\mathbf{x}\\) \u5230 \\(\\mathbf{y}\\) \u7684\u8def\u5f84\u3002 \u7efc\u4e0a\uff0c\u7b2c4\u6b65\u751f\u6210\u7684\u5b50\u56fe\u6ee1\u8db3\u8d77\u70b9 \\(\\mathbf{x}\\) \u4e0e\u5176\u4ed6\u8282\u70b9\u5f3a\u8fde\u901a\uff0c\u8fdb\u4e00\u6b65\u53ef\u5f97\u5b83\u662f\u5f3a\u8fde\u901a\u5b50\u56fe\u3002 \u547d\u9898 Kosaraju \u7b97\u6cd5\u7684\u7b2c4\u6b65\u4e2d\u6784\u9020\u7684\u5f3a\u8fde\u901a\u5b50\u56fe\u662f\u539f\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf \u3002 \u8bc1\u660e \u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u5f3a\u8fde\u901a\u8282\u70b9 \\(\\mathbf{x}\\) \u548c \\(\\mathbf{y}\\) \uff0c\u5728\u7b2c4\u6b65\u4e2d\uff0c\u4e24\u4e2a\u8282\u70b9\u4e2d\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u8282\u70b9\u5148\u88abdfs\u8bbf\u95ee\u3002 \u53c8\u7531\u4e8e\u4e24\u4e2a\u8282\u70b9\u662f\u5f3a\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u4ece\u5148\u88ab\u8bbf\u95ee\u7684\u7684\u8282\u70b9dfs\u4e00\u5b9a\u4f1a\u8bbf\u95ee\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\uff0c\u5728\u7b2c4\u6b65\u4e2d\uff0c\u610f\u5473\u7740\u5b83\u4eec\u4e00\u5b9a\u88ab\u653e\u5230\u4e86\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5b50\u56fe\u4e2d\u3002 \u6211\u4eec\u7efc\u5408\u4e0a\u9762\u4e24\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e Tosaraju \u7b97\u6cd5\u7684\u6b63\u786e\u6027\u3002 Tosaraju \u7b97\u6cd5\u4f7f\u7528\u4e86\u4e24\u8f6edfs\uff0c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(m + n)\\) \u5176\u4e2d \\(m\\) \u4e3a\u8fb9\u7684\u6570\u76ee\uff0c \\(n\\) \u4e3a\u8282\u70b9\u7684\u6570\u76ee\u3002 \u800c\u53e6\u4e00\u4e2a\u6c42\u6700\u5927\u8fde\u901a\u5206\u91cf\u7684\u7b97\u6cd5 Tarjan \u53ea\u9700\u8981\u6267\u884c\u4e00\u8f6edfs\u3002 \u4e0d\u8fc7 Tosaraju \u7b97\u6cd5\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u6027\u8d28\u800c Tarjan \u7b97\u6cd5\u6ca1\u6709\u3002 \u547d\u9898 Tosaraju\u7b97\u6cd5\u6c42\u51fa\u6765\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5df2\u7ecf\u662f \u62d3\u6251\u6392\u5e8f \u7684\u3002 \u8bc1\u660e \u8bbeTosaraju\u5148\u540e\u751f\u6210\u4e86\u4e24\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf \\(A\\) \u548c \\(B\\) \uff0c \u5e76\u4e14\u8bbe \\(A\\) \u4e2d\u6700\u63a5\u8fd1\u6808\u9876\u7684\u5143\u7d20\u662f \\(a_0\\) \uff0c\u4ee5\u53ca \\(B\\) \u4e2d\u6700\u63a5\u8fd1\u6808\u9876\u7684\u5143\u7d20\u662f \\(b_0\\) \u3002 \u6839\u636e \\(A\\) \u548c \\(B\\) \u751f\u6210\u7684\u5148\u540e\u987a\u5e8f\u53ef\u5f97 \\(a_0\\) \u6bd4 \\(b_0\\) \u66f4\u63a5\u8fd1\u6808\u9876\u3002 \u8fd9\u91cc\u53ea\u4f1a\u6709\u4e24\u79cd\u60c5\u51b5\u5bfc\u81f4 \\(a_0\\) \u6bd4 \\(b_0\\) \u66f4\u63a5\u8fd1\u6808\u9876\uff1a \u5728 Tosaraju \u7b97\u6cd5\u7684\u7b2c\u4e09\u6b65\u4e2d\uff0c\u6211\u4eec\u5148\u8bbf\u95ee\u5230\u4e86 \\(B\\) \u4f46\u662f\u5728\u5bf9 \\(B\\) \u8fdb\u884c dfs \u65f6\u6ca1\u6709\u8bbf\u95ee\u5230 \\(A\\) , \u8fd9\u79cd\u60c5\u51b5\u6697\u793a\u6ca1\u6709\u8def\u5f84\u4ece \\(B\\) \u5230 \\(A\\) ; \u5728 Tosaraju \u7b97\u6cd5\u7684\u7b2c\u4e09\u6b65\u4e2d\uff0c\u6211\u4eec\u5148\u8bbf\u95ee\u5230\u4e86 \\(A\\) \u4f46\u662f\u5728\u5bf9 \\(A\\) \u8fdb\u884c dfs \u65f6\u8bbf\u95ee\u5230\u4e86 \\(B\\) \uff0c\u8fd9\u79cd\u60c5\u51b5\u6309\u65f6\u5b58\u5728\u8def\u5f84\u4ece \\(A\\) \u5230 \\(B\\) \uff1b \u8fd9\u91cc\u56e0\u4e3a \\(A\\) \u548c \\(B\\) \u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u90a3\u4e48\u4e0d\u53ef\u80fd\u53c8\u5b58\u5728\u8def\u5f84\u4ece \\(B\\) \u5230 \\(A\\) \u3002 \u7efc\u4e0a\uff0c\u5982\u679c Tosaraju\u5148\u540e\u751f\u6210\u4e86\u4e24\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf \\(A\\) \u548c \\(B\\) \uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u5b58\u5728\u8def\u5f84\u4ece \\(B\\) \u5230 \\(A\\) \u3002","title":"Kosaraju \u7b97\u6cd5"},{"location":"Algorithms/11-%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#tarjan","text":"Targan \u7b97\u6cd5\u53ea\u9700\u8981\u4e00\u6b21 dfs \u5c31\u53ef\u4ee5\u627e\u5230\u6709\u5411\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002 \u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u5728\u4e00\u8f6e dfs \u4e2d\u7684\u8fc7\u7a0b\u3002 \u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf U , \u6574\u8f6e dfs \u4e00\u5b9a\u4f1a\u8bbf\u95ee\u5230\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf U \uff0c\u6211\u4eec\u8bbe\u5f3a\u8fde\u901a\u5206\u91cfU\u91cc\u6700\u5148\u88ab\u8bbf\u95ee\u5230\u7684\u8282\u70b9\u4e3a u0 \u3002\u90a3\u4e48\uff0c\u6839\u636e\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u80af\u5b9a\uff0c\u5f3a\u8fde\u901a\u5206\u91cf U \u7684\u5269\u4f59\u8282\u70b9\u4e00\u5b9a\u662f\u5728\u4ee5\u8282\u70b9 u0 \u4e3a\u6839\u7684 dfs \u751f\u6210\u6811\u4e2d(\u5982\u679c\u4ee5 u0 \u4e3a\u6839\u7684 dfs \u751f\u6210\u6811\u4e0a\u4e0d\u5305\u542b\u6240\u6709\u7684\u5f3a\u8fde\u901a\u5206\u91cf U \u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u8868\u793a U \u4e0a\u5b58\u5728 u0 \u70b9\u65e0\u6cd5\u5230\u8fbe\u7684\u8282\u70b9\uff0c\u90a3\u4e48 U \u5c31\u4e0d\u662f\u5f3a\u8fde\u901a\u5206\u91cf)\u3002 \u4e0d\u540c\u7684 dfs \u751f\u6210\u6811\u4e0a\u7684\u8282\u70b9\u4e00\u5b9a\u5728\u4e0d\u540c\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u3002\u800c\u5bf9\u4e8e\u540c\u4e00\u68f5 dfs \u751f\u6210\u6811 T \u4e0a\u7684\u8282\u70b9 u, \u6211\u4eec\u9700\u8981\u786e\u5b9a\u8fd9\u4e2a\u8282\u70b9 u \u662f\u5426\u662f\u5b83\u6240\u5728\u5f3a\u8fde\u901a\u5206\u91cf U \u4e2d\uff0c\u88ab\u9996\u6b21\u8bbf\u95ee\u5230\u7684\u8282\u70b9 u0\u3002\u90a3\u6211\u4eec\u5c31\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u8282\u70b9 u \u4e3a\u6839\u7684 dfs \u751f\u6210\u5b50\u6811\u4e2d\u7684\u7279\u70b9\uff1a \u5982\u679c\u751f\u6210\u5b50\u6811\u4e2d\u5b58\u5728\u8282\u70b9 n \u80fd\u591f\u5230\u8fbe u \u7684\u7956\u4e0a\u8282\u70b9 m\uff0c\u90a3\u4e48 n\u3001u \u548c m \u4e92\u76f8\u5f3a\u8fde\u901a\uff0c\u5b83\u4eec\u4e00\u5b9a\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4 u \u4e0d\u662f u0\u3002 \u5982\u679c\u751f\u6210\u5b50\u6811\u4e2d\u4e0d\u5b58\u5728\u8282\u70b9(\u5305\u62ec u \u5b83\u81ea\u5df1) \u80fd\u591f\u5230\u8fbe u \u7684\u7956\u4e0a\u8282\u70b9\uff0c\u90a3\u4e48 u \u4e00\u5b9a\u662f u0\u3002\u8fd9\u91cc\u8868\u793a u \u548c u \u6240\u80fd\u5230\u8fbe\u7684\u6240\u6709\u8282\u70b9\u90fd\u4e0d\u80fd\u8bbf\u95ee\u5230\u80fd\u5230\u8fbe u \u7684\u8282\u70b9\uff0c\u90a3\u4e48 u \u7684\u7956\u4e0a\u8282\u70b9\u548c u \u4e00\u5b9a\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u3002(\u8fd9\u91cc\u9690\u542b\u4e00\u4e2a\u9012\u5f52\u6027\uff0c\u5927\u5bb6\u9700\u8981\u601d\u8003\u4e00\u4e0b) \u90a3\u4e48 Tarjan \u7b97\u6cd5\u7684\u6d41\u7a0b\u4e3a\uff1a \u8f93\u5165\u4e00\u5f20\u6709\u5411\u56fe \\(G\\) \uff1b \u4f7f\u7528 dfs \u7b56\u7565\u6765\u641c\u7d22\u56fe\uff0c\u53ef\u4ee5\u7528\u6808\u6765\u8bb0\u5f55dfs\u68ee\u6797\u7684\u8bbf\u95ee, \u4e5f\u9700\u8981\u5bf9\u8282\u70b9\u4ece\u5c0f\u5230\u5927\u7f16\u53f7\u3002 \u6211\u4eec\u9012\u5f52\u6c42\u89e3\u6bcf\u4e2a\u8282\u70b9\u80fd\u5230\u8fbe\u7684\u6700\u65e9\u7684\u7956\u4e0a\u8282\u70b9(\u540c\u4e00\u68f5\u751f\u6210\u6811)\uff0c\u8fd9\u91cc\u6307\u7f16\u53f7\u6700\u5c0f\u7684\u7956\u4e0a\u8282\u70b9\u3002 \u8fd9\u91cc\u6bcf\u8bbf\u95ee\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u5c06\u5b83\u538b\u5165\u6808\u4e2d\u3002 \u5982\u679c\u8282\u70b9 u \u6700\u65e9\u80fd\u5230\u8fbe\u7684\u7956\u4e0a\u8282\u70b9\u5c31\u662f\u5b83\u672c\u8eab\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4ee3\u8868\u8282\u70b9 u0\u3002 \u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6808\u4e2d\u7684\u5143\u7d20\u4e00\u4e00\u5f39\u51fa\uff0c\u76f4\u5230\u5f39\u5230 u\uff0c\u6240\u6709\u5f39\u51fa\u7684\u5143\u7d20\u6784\u6210\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002 \u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\uff0c\u540c\u4e00\u68f5 dfs \u751f\u6210\u6811\u4e2d\u5f39\u51fa\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u662f\u6ee1\u8db3\u9006\u62d3\u6251\u6392\u5e8f\u7684\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u624b\u6bb5\u6765\u7ef4\u62a4 dfs \u751f\u6210\u68ee\u6797\u5f39\u51fa\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u62d3\u6251\u6392\u5e8f\u3002","title":"Tarjan \u7b97\u6cd5"},{"location":"Algorithms/12-%E5%A0%86%E6%8E%92%E5%BA%8F/","text":"\u5806\u6392\u5e8f \u00b6 \u8fd9\u4e00\u8282\u662f\u4ece\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u7b2c6\u7ae0\u6765\u7684\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u7f51\u9875\u7248\u7684\u6458\u8981\u3002 \u4e8c\u53c9\u5806 \u00b6 \u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u6570\u7ec4\u89e3\u91ca\u6210\u4e00\u4e2a\u5806\u3002\u9996\u5148\u6211\u4eec\u7684\u6570\u7ec4\u5982\u4e0b\uff1a a[i] = [a1, a2, ..., an], \u8282\u70b9 \\(i\\) \u7684\u7236\u7ed3\u70b9\u662f \\(\\lfloor i/2 \\rfloor\\) \uff0c\u5de6\u5b50\u7ed3\u70b9\u662f \\(2i\\) \uff0c\u53f3\u5b50\u7ed3\u70b9\u662f \\(2i+1\\) \u3002 \u8fd9\u79cd\u65b9\u5f0f\u5b9a\u4e49\u7684\u4e8c\u53c9\u6811\u662f\u4e00\u4e2a\u8fd1\u4f3c\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u9664\u4e86\u6700\u5e95\u5c42\u5916\u7684\u5176\u4ed6\u5c42\u662f\u5145\u6ee1\u7684\uff0c\u5e76\u4e14\u5b83\u7684\u6700\u5e95\u5c42\u662f\u4ece\u5de6\u5230\u53f3\u586b\u5145\u7684\u3002 \u6700\u5927\u5806 \uff1a \u9664\u4e86\u6839\u7ed3\u70b9\u5916\uff0c\u5176\u4ed6\u6240\u6709\u8282\u70b9\u9700\u8981\u6ee1\u8db3 \\(A[PARENT(i)] \\ge A[i]\\) \uff1b \u6700\u5c0f\u5806 \uff1a \u9664\u4e86\u6839\u7ed3\u70b9\u5916\uff0c\u5176\u4ed6\u6240\u6709\u8282\u70b9\u9700\u8981\u6ee1\u8db3 \\(A[PARENT(i)] \\le A[i]\\) \u3002 \u6211\u4eec\u6765\u4ecb\u7ecd\u5927\u9876\u5806\u548c\u5927\u4f18\u5148\u961f\u5217\u7684\u6784\u9020\u3002\u63a5\u4e0b\u6765\u7684\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\u5c06\u5728\u6392\u5e8f\u7b97\u6cd5\u548c\u4f18\u5148\u961f\u5217\u4e2d\u4f7f\u7528\uff1a MAX-HEAPIFY \u8fc7\u7a0b\uff1a \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(\\log_2 n)\\) \uff0c \u5b83\u662f\u7ef4\u62a4\u6700\u5927\u5806\u6027\u8d28\u7684\u5173\u952e\u3002 BUILD-MAX-HEAP \u8fc7\u7a0b\uff1a \u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6 \uff0c\u4ece\u65e0\u5e8f\u6570\u7ec4\u4e2d\u6784\u9020\u4e00\u4e2a\u6700\u5927\u5806\u3002 HEAPSORT \u8fc7\u7a0b\uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n \\log_2 n)\\) \uff0c\u5806\u6392\u5e8f\u3002 MAX-HEAP-INSERT , HEAP-EXTRACT-MAX , HEAP-INCREASE-KEY \u548c HEAP-MAXIMUM \uff1a \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(log_2 n)\\) \uff0c\u529f\u80fd\u662f\u5229\u7528\u5806\u5b9e\u73b0\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u3002 \u6784\u5efa\u5806\u9700\u8981\u89e3\u51b3\u7684\u4e00\u4e2a\u5173\u952e\u5b50\u95ee\u9898 \u00b6 \u6211\u4eec\u5047\u8bbe\u8282\u70b9 \\(i\\) \u7684\u5de6\u53f3\u5b50\u6811\u5df2\u7ecf\u662f\u4e00\u4e2a\u5927\u9876\u5806\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u64cd\u4f5c\u8282\u70b9 \\(i\\) \u4f7f\u5f97\u4ee5\u5b83\u4e3a\u6839\u7684\u4e8c\u53c9\u6811\u53d8\u6210\u4e00\u4e2a\u5927\u9876\u5806\u5462\uff1f \u5176\u5b9e\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u64cd\u4f5c\uff1a MAX-HEAPIFY(A, i) l = LEFT(A, i) r = RIGHT(A, i) largest = i if l <= A.heap_size and A[l] > A[largest] largest = l if r <= A.heap_size and A[r] > A[largest] largest = r if largest != i swap(A[i], A[largest]) MAX-HEAPIFY(A, largest) \u6784\u5efa\u5806 \u00b6 \u9996\u5148\u53f6\u5b50\u7ed3\u70b9\u80af\u5b9a\u662f\u4e00\u4e2a\u6700\u5927\u5806\uff0c\u6240\u4ee5\u6ee1\u8db3 \u5173\u952e\u5b50\u95ee\u9898 \u7684\u6761\u4ef6\u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u6784\u5efa\u5806\u7684\u64cd\u4f5c\u662f\uff1a BUILD-MAX-HEAP(A) A.heap-size = A.length for i = A.length/2 to 1 MAX-HEAPIFY(A, i) \u6784\u5efa\u5806\u662f\u7ebf\u6027\u590d\u6742\u5ea6\u3002 \u8bc1\u660e \u9ad8\u5ea6\u4e3a \\(h\\) \u7684\u8282\u70b9\u7684 MAX-HEAPIFY \u64cd\u4f5c\u82b1\u9500\u662f \\(O(h)\\) \uff0c \u90a3\u4e48\u603b\u4ee3\u4ef7\u4e3a \\[ \\sum_{h=0}^{\\lfloor lg n \\rfloor} \\left\\lceil \\frac{n}{2^{h+1}} \\right\\rceil O(h) = O\\left(n \\sum_{h=0}^{\\lfloor lg n \\rfloor} \\frac{h}{2^{h+1}} \\right) = O(n). \\] \u5806\u6392\u5e8f\u7b97\u6cd5 \u00b6 \u5806\u6392\u5e8f\u7b97\u6cd5\u5c31\u662f\u5c06\u5806\u9876\u5143\u7d20\u548c\u672b\u5c3e\u5143\u7d20\u4e92\u6362\uff0c\u5806\u957f\u5ea6\u51cf\u4e00\uff0c\u7136\u540e\u5bf9\u5806\u9876\u5143\u7d20\u4f7f\u7528 MAX-HEAPIFY \u64cd\u4f5c\u3002 \u8fd9\u4e2a\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n\\log_2 n)\\) \u3002 HEAPSORT(A) BUILD-MAX-HEAP(A) for i = A.length to 2 swap(A[1], A[i]) A.heap-size-- MAX-HEAPIFY(A, i) \u4f18\u5148\u961f\u5217 \u00b6 \u5bf9\u4e8e\u6700\u5927\u4f18\u5148\u961f\u5217\uff0c\u6211\u4eec\u5217\u4e3e\u4e00\u4e9b\u7b80\u5355\u7684\u64cd\u4f5c\uff1a HEAP-MAXIMUM(A) \uff1a\u8fd4\u56de A[1] , \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(1)\\) \u3002 HEAP-EXTRACT-MAX(A) : \u62bd\u53d6\u6700\u5927\u5143\u7d20, \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(log_2 n)\\) \u3002\u7b97\u6cd5\u6838\u5fc3\u662f\u8bb2\u7236\u7ed3\u70b9\u548c\u672b\u5c3e\u8282\u70b9\u4e92\u6362\u3002 HEAP-EXTRACT-MAX(A) if A.heap-size < 1 error \"heap overflow\" max = A[1] A[1] = A[A.heap-size] A.heap-size-- MAX-HEAPIFY(A, 1) return max HEAP-INCREASE-KEY(A, i, key) : \u5c06\u6307\u5b9a\u5143\u7d20\u7684\u503c\u63d0\u9ad8\u3002\u6211\u4eec\u4e0d\u65ad\u5c06\u8be5\u5143\u7d20\u4e0e\u7236\u7ed3\u70b9\u6bd4\u8f83\uff0c\u5982\u679c\u9700\u8981\u5c31\u8fdb\u884c\u4e92\u6362\u3002 MAX-HEAP-INSERT(A\uff0c key) : \u5c06key\u63d2\u5165\u5230\u672b\u5c3e\uff0c\u7136\u540e\u4e0d\u65ad\u548c\u5b83\u7684\u7236\u7ed3\u70b9\u6bd4\u8f83\uff0c\u5982\u679c\u6709\u9700\u8981\u5c31\u8fdb\u884c\u4e92\u6362\u3002","title":"\u5806\u6392\u5e8f"},{"location":"Algorithms/12-%E5%A0%86%E6%8E%92%E5%BA%8F/#_1","text":"\u8fd9\u4e00\u8282\u662f\u4ece\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u7b2c6\u7ae0\u6765\u7684\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u7f51\u9875\u7248\u7684\u6458\u8981\u3002","title":"\u5806\u6392\u5e8f"},{"location":"Algorithms/12-%E5%A0%86%E6%8E%92%E5%BA%8F/#_2","text":"\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u6570\u7ec4\u89e3\u91ca\u6210\u4e00\u4e2a\u5806\u3002\u9996\u5148\u6211\u4eec\u7684\u6570\u7ec4\u5982\u4e0b\uff1a a[i] = [a1, a2, ..., an], \u8282\u70b9 \\(i\\) \u7684\u7236\u7ed3\u70b9\u662f \\(\\lfloor i/2 \\rfloor\\) \uff0c\u5de6\u5b50\u7ed3\u70b9\u662f \\(2i\\) \uff0c\u53f3\u5b50\u7ed3\u70b9\u662f \\(2i+1\\) \u3002 \u8fd9\u79cd\u65b9\u5f0f\u5b9a\u4e49\u7684\u4e8c\u53c9\u6811\u662f\u4e00\u4e2a\u8fd1\u4f3c\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u9664\u4e86\u6700\u5e95\u5c42\u5916\u7684\u5176\u4ed6\u5c42\u662f\u5145\u6ee1\u7684\uff0c\u5e76\u4e14\u5b83\u7684\u6700\u5e95\u5c42\u662f\u4ece\u5de6\u5230\u53f3\u586b\u5145\u7684\u3002 \u6700\u5927\u5806 \uff1a \u9664\u4e86\u6839\u7ed3\u70b9\u5916\uff0c\u5176\u4ed6\u6240\u6709\u8282\u70b9\u9700\u8981\u6ee1\u8db3 \\(A[PARENT(i)] \\ge A[i]\\) \uff1b \u6700\u5c0f\u5806 \uff1a \u9664\u4e86\u6839\u7ed3\u70b9\u5916\uff0c\u5176\u4ed6\u6240\u6709\u8282\u70b9\u9700\u8981\u6ee1\u8db3 \\(A[PARENT(i)] \\le A[i]\\) \u3002 \u6211\u4eec\u6765\u4ecb\u7ecd\u5927\u9876\u5806\u548c\u5927\u4f18\u5148\u961f\u5217\u7684\u6784\u9020\u3002\u63a5\u4e0b\u6765\u7684\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\u5c06\u5728\u6392\u5e8f\u7b97\u6cd5\u548c\u4f18\u5148\u961f\u5217\u4e2d\u4f7f\u7528\uff1a MAX-HEAPIFY \u8fc7\u7a0b\uff1a \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(\\log_2 n)\\) \uff0c \u5b83\u662f\u7ef4\u62a4\u6700\u5927\u5806\u6027\u8d28\u7684\u5173\u952e\u3002 BUILD-MAX-HEAP \u8fc7\u7a0b\uff1a \u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6 \uff0c\u4ece\u65e0\u5e8f\u6570\u7ec4\u4e2d\u6784\u9020\u4e00\u4e2a\u6700\u5927\u5806\u3002 HEAPSORT \u8fc7\u7a0b\uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n \\log_2 n)\\) \uff0c\u5806\u6392\u5e8f\u3002 MAX-HEAP-INSERT , HEAP-EXTRACT-MAX , HEAP-INCREASE-KEY \u548c HEAP-MAXIMUM \uff1a \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(log_2 n)\\) \uff0c\u529f\u80fd\u662f\u5229\u7528\u5806\u5b9e\u73b0\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u3002","title":"\u4e8c\u53c9\u5806"},{"location":"Algorithms/12-%E5%A0%86%E6%8E%92%E5%BA%8F/#_3","text":"\u6211\u4eec\u5047\u8bbe\u8282\u70b9 \\(i\\) \u7684\u5de6\u53f3\u5b50\u6811\u5df2\u7ecf\u662f\u4e00\u4e2a\u5927\u9876\u5806\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u64cd\u4f5c\u8282\u70b9 \\(i\\) \u4f7f\u5f97\u4ee5\u5b83\u4e3a\u6839\u7684\u4e8c\u53c9\u6811\u53d8\u6210\u4e00\u4e2a\u5927\u9876\u5806\u5462\uff1f \u5176\u5b9e\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u64cd\u4f5c\uff1a MAX-HEAPIFY(A, i) l = LEFT(A, i) r = RIGHT(A, i) largest = i if l <= A.heap_size and A[l] > A[largest] largest = l if r <= A.heap_size and A[r] > A[largest] largest = r if largest != i swap(A[i], A[largest]) MAX-HEAPIFY(A, largest)","title":"\u6784\u5efa\u5806\u9700\u8981\u89e3\u51b3\u7684\u4e00\u4e2a\u5173\u952e\u5b50\u95ee\u9898"},{"location":"Algorithms/12-%E5%A0%86%E6%8E%92%E5%BA%8F/#_4","text":"\u9996\u5148\u53f6\u5b50\u7ed3\u70b9\u80af\u5b9a\u662f\u4e00\u4e2a\u6700\u5927\u5806\uff0c\u6240\u4ee5\u6ee1\u8db3 \u5173\u952e\u5b50\u95ee\u9898 \u7684\u6761\u4ef6\u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u6784\u5efa\u5806\u7684\u64cd\u4f5c\u662f\uff1a BUILD-MAX-HEAP(A) A.heap-size = A.length for i = A.length/2 to 1 MAX-HEAPIFY(A, i) \u6784\u5efa\u5806\u662f\u7ebf\u6027\u590d\u6742\u5ea6\u3002 \u8bc1\u660e \u9ad8\u5ea6\u4e3a \\(h\\) \u7684\u8282\u70b9\u7684 MAX-HEAPIFY \u64cd\u4f5c\u82b1\u9500\u662f \\(O(h)\\) \uff0c \u90a3\u4e48\u603b\u4ee3\u4ef7\u4e3a \\[ \\sum_{h=0}^{\\lfloor lg n \\rfloor} \\left\\lceil \\frac{n}{2^{h+1}} \\right\\rceil O(h) = O\\left(n \\sum_{h=0}^{\\lfloor lg n \\rfloor} \\frac{h}{2^{h+1}} \\right) = O(n). \\]","title":"\u6784\u5efa\u5806"},{"location":"Algorithms/12-%E5%A0%86%E6%8E%92%E5%BA%8F/#_5","text":"\u5806\u6392\u5e8f\u7b97\u6cd5\u5c31\u662f\u5c06\u5806\u9876\u5143\u7d20\u548c\u672b\u5c3e\u5143\u7d20\u4e92\u6362\uff0c\u5806\u957f\u5ea6\u51cf\u4e00\uff0c\u7136\u540e\u5bf9\u5806\u9876\u5143\u7d20\u4f7f\u7528 MAX-HEAPIFY \u64cd\u4f5c\u3002 \u8fd9\u4e2a\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n\\log_2 n)\\) \u3002 HEAPSORT(A) BUILD-MAX-HEAP(A) for i = A.length to 2 swap(A[1], A[i]) A.heap-size-- MAX-HEAPIFY(A, i)","title":"\u5806\u6392\u5e8f\u7b97\u6cd5"},{"location":"Algorithms/12-%E5%A0%86%E6%8E%92%E5%BA%8F/#_6","text":"\u5bf9\u4e8e\u6700\u5927\u4f18\u5148\u961f\u5217\uff0c\u6211\u4eec\u5217\u4e3e\u4e00\u4e9b\u7b80\u5355\u7684\u64cd\u4f5c\uff1a HEAP-MAXIMUM(A) \uff1a\u8fd4\u56de A[1] , \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(1)\\) \u3002 HEAP-EXTRACT-MAX(A) : \u62bd\u53d6\u6700\u5927\u5143\u7d20, \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(log_2 n)\\) \u3002\u7b97\u6cd5\u6838\u5fc3\u662f\u8bb2\u7236\u7ed3\u70b9\u548c\u672b\u5c3e\u8282\u70b9\u4e92\u6362\u3002 HEAP-EXTRACT-MAX(A) if A.heap-size < 1 error \"heap overflow\" max = A[1] A[1] = A[A.heap-size] A.heap-size-- MAX-HEAPIFY(A, 1) return max HEAP-INCREASE-KEY(A, i, key) : \u5c06\u6307\u5b9a\u5143\u7d20\u7684\u503c\u63d0\u9ad8\u3002\u6211\u4eec\u4e0d\u65ad\u5c06\u8be5\u5143\u7d20\u4e0e\u7236\u7ed3\u70b9\u6bd4\u8f83\uff0c\u5982\u679c\u9700\u8981\u5c31\u8fdb\u884c\u4e92\u6362\u3002 MAX-HEAP-INSERT(A\uff0c key) : \u5c06key\u63d2\u5165\u5230\u672b\u5c3e\uff0c\u7136\u540e\u4e0d\u65ad\u548c\u5b83\u7684\u7236\u7ed3\u70b9\u6bd4\u8f83\uff0c\u5982\u679c\u6709\u9700\u8981\u5c31\u8fdb\u884c\u4e92\u6362\u3002","title":"\u4f18\u5148\u961f\u5217"},{"location":"Algorithms/13-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/","text":"\u80cc\u5305\u95ee\u9898 \u00b6 \u4eca\u5929\u505a\u4e86\u4e00\u9053\u9898\u76ee\u662f\u80cc\u5305\u95ee\u9898\u7684\u53d8\u5f62\uff0c\u73b0\u5728\u5e0c\u671b\u5f00\u4e00\u7ae0\u6765\u6574\u7406\u4e00\u4e0b\u8457\u540d\u7684\u80cc\u5305\u4e5d\u8bb2\u3002\u76ee\u524d\u5148\u6536\u5f55\u4e00\u4e0b\u8fd9\u9053\u9898\u76ee\u3002 LeetCode 923 \u4e09\u6570\u4e4b\u548c\u7684\u591a\u79cd\u53ef\u80fd \u00b6 \u672c\u9898\u9009\u81ea LeetCode 923 \u3002 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 A\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6574\u6570 target \u4f5c\u4e3a\u76ee\u6807\u503c\uff0c\u8fd4\u56de\u6ee1\u8db3 i < j < k \u4e14 A[i] + A[j] + A[k] == target \u7684\u5143\u7ec4 i, j, k \u7684\u6570\u91cf\u3002 \u7531\u4e8e\u7ed3\u679c\u4f1a\u975e\u5e38\u5927\uff0c\u8bf7\u8fd4\u56de \u7ed3\u679c\u9664\u4ee5 10^9 + 7 \u7684\u4f59\u6570\u3002 \u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u9053\u9898\u770b\u6210\u4e00\u4e2a\u4e8c\u7ef4\u80cc\u5305\u95ee\u9898\uff0c\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u662f\u4f7f\u7528\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u662f\u6570\u5b57\u4e4b\u548c\u3002\u56e0\u4e3a\u6bcf\u4e2a\u6570\u5b57\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u5012\u5e8f\u904d\u5386\u6570\u7ec4\u3002 \u53c2\u8003\u7b54\u6848 class Solution { public : int threeSumMulti ( vector < int >& arr , int target ) { vector < vector < int >> cnt ( 3 , vector < int > ( target + 1 , 0 )); int base = 1000000007 ; for ( auto & a : arr ) { for ( int i = 2 ; i >= 0 ; -- i ) { for ( int j = target ; j >= 0 ; -- j ) { if ( i == 0 ) { if ( j == a ) cnt [ i ][ j ] += 1 ; } else { if ( j >= a ) { cnt [ i ][ j ] += cnt [ i - 1 ][ j - a ]; cnt [ i ][ j ] %= base ; } } } } } return cnt [ 2 ][ target ]; } }; LeetCode 956 \u6700\u9ad8\u7684\u5e7f\u544a\u724c \u00b6 \u9898\u76ee\u63cf\u8ff0 \u4f60\u6b63\u5728\u5b89\u88c5\u4e00\u4e2a\u5e7f\u544a\u724c\uff0c\u5e76\u5e0c\u671b\u5b83\u9ad8\u5ea6\u6700\u5927\u3002\u8fd9\u5757\u5e7f\u544a\u724c\u5c06\u6709\u4e24\u4e2a\u94a2\u5236\u652f\u67b6\uff0c\u4e24\u8fb9\u5404\u4e00\u4e2a\u3002\u6bcf\u4e2a\u94a2\u652f\u67b6\u7684\u9ad8\u5ea6\u5fc5\u987b\u76f8\u7b49\u3002\u4f60\u6709\u4e00\u5806\u53ef\u4ee5\u710a\u63a5\u5728\u4e00\u8d77\u7684\u94a2\u7b4b rods\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u94a2\u7b4b\u7684\u957f\u5ea6\u4e3a 1\u30012 \u548c 3\uff0c\u5219\u53ef\u4ee5\u5c06\u5b83\u4eec\u710a\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u957f\u5ea6\u4e3a 6 \u7684\u652f\u67b6\u3002\u8fd4\u56de\u5e7f\u544a\u724c\u7684\u6700\u5927\u53ef\u80fd\u5b89\u88c5\u9ad8\u5ea6\u3002\u5982\u679c\u6ca1\u6cd5\u5b89\u88c5\u5e7f\u544a\u724c\uff0c\u8bf7\u8fd4\u56de 0\u3002 \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09 \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/tallest-billboard \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002 \u8fd9\u662f\u4e00\u9053\u53d8\u5f62\u540e\u7684\u5206\u7ec4\u80cc\u5305\u95ee\u9898\u3002\u5047\u8bbe\u94a2\u7b4b\u957f\u5ea6\u4e3a [1, 2, 3, 6] \uff0c\u5bf9\u5e94\u7684\u80cc\u5305\u95ee\u9898\u4e3a\uff1a\u5df2\u77e5\u5546\u54c1 [(-1, 1), (-2, 2), (-3, 3), (-6, 6)] \uff0c\u5e76\u4e14\u6bcf\u4e2a\u5206\u7ec4\u53ea\u80fd\u9009\u4e00\u4e2a\u5546\u54c1\u3002\u6c42\u7b5b\u9009\u5546\u54c1\u96c6\u7684\u548c\u4e3a0\u65f6\uff0c\u6b63\u6570\u5546\u54c1\u7684\u548c\u3002 \u53c2\u8003\u7b54\u6848 \u4f7f\u7528\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\u3002 class Solution { public : int tallestBillboard ( vector < int >& rods ) { if ( rods . size () <= 1 ) return 0 ; int N = rods . size (), LEN = 0 ; for ( auto rod : rods ) { LEN += rod ; } LEN /= 2 ; vector < int > dp ( 2 * LEN + 1 , INT_MIN ), dp_next ( 2 * LEN + 1 , INT_MIN ); dp [ 0 + LEN ] = 0 ; for ( auto rod : rods ) { for ( int i = - LEN ; i <= LEN ; ++ i ) { dp_next [ i + LEN ] = dp [ i + LEN ]; if ( i - rod >= - LEN ) { dp_next [ i + LEN ] = max ( dp_next [ i + LEN ], dp [ i - rod + LEN ] + rod ); } if ( i + rod <= LEN ) { dp_next [ i + LEN ] = max ( dp_next [ i + LEN ], dp [ i + rod + LEN ]); } } swap ( dp , dp_next ); } return dp [ 0 + LEN ]; } };","title":"\u80cc\u5305\u95ee\u9898"},{"location":"Algorithms/13-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_1","text":"\u4eca\u5929\u505a\u4e86\u4e00\u9053\u9898\u76ee\u662f\u80cc\u5305\u95ee\u9898\u7684\u53d8\u5f62\uff0c\u73b0\u5728\u5e0c\u671b\u5f00\u4e00\u7ae0\u6765\u6574\u7406\u4e00\u4e0b\u8457\u540d\u7684\u80cc\u5305\u4e5d\u8bb2\u3002\u76ee\u524d\u5148\u6536\u5f55\u4e00\u4e0b\u8fd9\u9053\u9898\u76ee\u3002","title":"\u80cc\u5305\u95ee\u9898"},{"location":"Algorithms/13-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#leetcode-923","text":"\u672c\u9898\u9009\u81ea LeetCode 923 \u3002 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 A\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6574\u6570 target \u4f5c\u4e3a\u76ee\u6807\u503c\uff0c\u8fd4\u56de\u6ee1\u8db3 i < j < k \u4e14 A[i] + A[j] + A[k] == target \u7684\u5143\u7ec4 i, j, k \u7684\u6570\u91cf\u3002 \u7531\u4e8e\u7ed3\u679c\u4f1a\u975e\u5e38\u5927\uff0c\u8bf7\u8fd4\u56de \u7ed3\u679c\u9664\u4ee5 10^9 + 7 \u7684\u4f59\u6570\u3002 \u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u9053\u9898\u770b\u6210\u4e00\u4e2a\u4e8c\u7ef4\u80cc\u5305\u95ee\u9898\uff0c\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u662f\u4f7f\u7528\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u662f\u6570\u5b57\u4e4b\u548c\u3002\u56e0\u4e3a\u6bcf\u4e2a\u6570\u5b57\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u5012\u5e8f\u904d\u5386\u6570\u7ec4\u3002 \u53c2\u8003\u7b54\u6848 class Solution { public : int threeSumMulti ( vector < int >& arr , int target ) { vector < vector < int >> cnt ( 3 , vector < int > ( target + 1 , 0 )); int base = 1000000007 ; for ( auto & a : arr ) { for ( int i = 2 ; i >= 0 ; -- i ) { for ( int j = target ; j >= 0 ; -- j ) { if ( i == 0 ) { if ( j == a ) cnt [ i ][ j ] += 1 ; } else { if ( j >= a ) { cnt [ i ][ j ] += cnt [ i - 1 ][ j - a ]; cnt [ i ][ j ] %= base ; } } } } } return cnt [ 2 ][ target ]; } };","title":"LeetCode 923 \u4e09\u6570\u4e4b\u548c\u7684\u591a\u79cd\u53ef\u80fd"},{"location":"Algorithms/13-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#leetcode-956","text":"\u9898\u76ee\u63cf\u8ff0 \u4f60\u6b63\u5728\u5b89\u88c5\u4e00\u4e2a\u5e7f\u544a\u724c\uff0c\u5e76\u5e0c\u671b\u5b83\u9ad8\u5ea6\u6700\u5927\u3002\u8fd9\u5757\u5e7f\u544a\u724c\u5c06\u6709\u4e24\u4e2a\u94a2\u5236\u652f\u67b6\uff0c\u4e24\u8fb9\u5404\u4e00\u4e2a\u3002\u6bcf\u4e2a\u94a2\u652f\u67b6\u7684\u9ad8\u5ea6\u5fc5\u987b\u76f8\u7b49\u3002\u4f60\u6709\u4e00\u5806\u53ef\u4ee5\u710a\u63a5\u5728\u4e00\u8d77\u7684\u94a2\u7b4b rods\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u94a2\u7b4b\u7684\u957f\u5ea6\u4e3a 1\u30012 \u548c 3\uff0c\u5219\u53ef\u4ee5\u5c06\u5b83\u4eec\u710a\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u957f\u5ea6\u4e3a 6 \u7684\u652f\u67b6\u3002\u8fd4\u56de\u5e7f\u544a\u724c\u7684\u6700\u5927\u53ef\u80fd\u5b89\u88c5\u9ad8\u5ea6\u3002\u5982\u679c\u6ca1\u6cd5\u5b89\u88c5\u5e7f\u544a\u724c\uff0c\u8bf7\u8fd4\u56de 0\u3002 \u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09 \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/tallest-billboard \u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002 \u8fd9\u662f\u4e00\u9053\u53d8\u5f62\u540e\u7684\u5206\u7ec4\u80cc\u5305\u95ee\u9898\u3002\u5047\u8bbe\u94a2\u7b4b\u957f\u5ea6\u4e3a [1, 2, 3, 6] \uff0c\u5bf9\u5e94\u7684\u80cc\u5305\u95ee\u9898\u4e3a\uff1a\u5df2\u77e5\u5546\u54c1 [(-1, 1), (-2, 2), (-3, 3), (-6, 6)] \uff0c\u5e76\u4e14\u6bcf\u4e2a\u5206\u7ec4\u53ea\u80fd\u9009\u4e00\u4e2a\u5546\u54c1\u3002\u6c42\u7b5b\u9009\u5546\u54c1\u96c6\u7684\u548c\u4e3a0\u65f6\uff0c\u6b63\u6570\u5546\u54c1\u7684\u548c\u3002 \u53c2\u8003\u7b54\u6848 \u4f7f\u7528\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\u3002 class Solution { public : int tallestBillboard ( vector < int >& rods ) { if ( rods . size () <= 1 ) return 0 ; int N = rods . size (), LEN = 0 ; for ( auto rod : rods ) { LEN += rod ; } LEN /= 2 ; vector < int > dp ( 2 * LEN + 1 , INT_MIN ), dp_next ( 2 * LEN + 1 , INT_MIN ); dp [ 0 + LEN ] = 0 ; for ( auto rod : rods ) { for ( int i = - LEN ; i <= LEN ; ++ i ) { dp_next [ i + LEN ] = dp [ i + LEN ]; if ( i - rod >= - LEN ) { dp_next [ i + LEN ] = max ( dp_next [ i + LEN ], dp [ i - rod + LEN ] + rod ); } if ( i + rod <= LEN ) { dp_next [ i + LEN ] = max ( dp_next [ i + LEN ], dp [ i + rod + LEN ]); } } swap ( dp , dp_next ); } return dp [ 0 + LEN ]; } };","title":"LeetCode 956 \u6700\u9ad8\u7684\u5e7f\u544a\u724c"},{"location":"Blog/WritingDistributedApplicationswithPytorch/","text":"Writing Distributed Applications with Pytorch \u00b6 \u6765\u81ea \u5b98\u65b9\u6559\u7a0b \u8bbe\u7f6e \u00b6 \u5206\u5e03\u5f0f\u5305\u5bf9\u5e94 torch.distributed \uff1b torch.distributed \u5305\u548c torch.multiprocessing \u5305\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u524d\u8005\u80fd\u591f\u4f7f\u7528\u4e0d\u540c\u7684\u901a\u8baf\u534f\u8bae\uff0c\u4ee5\u53ca\u5f02\u6784\u7684\u673a\u5668\u4e2d\uff1b \u96c6\u7fa4\u9700\u8981\u4f7f\u7528\u5408\u9002\u7684\u5de5\u5177\u6765\u8bbf\u95ee\uff0c\u6bd4\u5982\uff1a pdsh \u6216\u8005 clustershell \u3002 \u5b98\u65b9\u7684\u591a\u8fdb\u7a0b\u6a21\u677f\uff1a \"\"\"run.py:\"\"\" #!/usr/bin/env python import os import torch import torch.distributed as dist from torch.multiprocessing import Process def run ( rank , size ): \"\"\" Distributed function to be implemented later. \"\"\" pass def init_process ( rank , size , fn , backend = 'gloo' ): \"\"\" Initialize the distributed environment. \"\"\" os . environ [ 'MASTER_ADDR' ] = '127.0.0.1' os . environ [ 'MASTER_PORT' ] = '29500' dist . init_process_group ( backend , rank = rank , world_size = size ) fn ( rank , size ) if __name__ == \"__main__\" : size = 2 processes = [] for rank in range ( size ): p = Process ( target = init_process , args = ( rank , size , run )) p . start () processes . append ( p ) for p in processes : p . join () \u70b9\u5bf9\u70b9\u901a\u8baf \u00b6 send / recv \u662f\u963b\u65ad\u5f0f\u901a\u8baf\uff1b isend / irecv \u662f\u975e\u963b\u65ad\u5f0f\u901a\u8baf\uff1b wait() \u7b49\u5f85\u901a\u8baf\u7ed3\u675f\u3002 \"\"\"Non-blocking point-to-point communication.\"\"\" def run(rank, size): tensor = torch.zeros(1) req = None if rank == 0: tensor += 1 # Send the tensor to process 1 req = dist.isend(tensor=tensor, dst=1) print('Rank 0 started sending') else: # Receive tensor from process 0 req = dist.irecv(tensor=tensor, src=0) print('Rank 1 started receiving') req.wait() print('Rank ', rank, ' has data ', tensor[0]) \u5e7f\u64ad \u00b6 scatter \uff1a\u4e00\u5230\u591a\uff0c\u591a\u4e2a\u6570\u636e\u5206\u53d1\uff1b gather \uff1a\u591a\u5230\u4e00\uff0c\u591a\u4e2a\u6570\u636e\u6536\u96c6\u5230\u4e00\u8d77\uff1b reduce : \u591a\u5230\u4e00\uff0c\u540c\u65f6\u8ba1\u7b97reduce\u51fd\u6570\uff1b allreduce : \u591a\u5230\u591a\uff0c\u540c\u65f6\u8ba1\u7b97reduce\u51fd\u6570\uff1b broadcase : \u4e00\u5230\u591a\uff0c\u4e00\u4e2a\u6570\u636e\u590d\u5236\u5206\u53d1\uff1b all-gather \uff1a\u591a\u5230\u591a\uff0c\u591a\u4e2a\u6570\u636e\u5728\u5404\u4e2a\u673a\u5668\u88ab\u6536\u96c6\u3002 Reduce\u51fd\u6570\u6709 - dist.reduce_op.SUM ; - dist.reduce_op.PRODUCT \uff1b - dist.reduce_op.MAX \uff1b - dist.reduce_op.MIN . dist.broadcast(tensor, src, group) : Copies tensor from src to all other processes. dist.reduce(tensor, dst, op, group) : Applies op to all tensor and stores the result in dst. dist.all_reduce(tensor, op, group) : Same as reduce, but the result is stored in all processes. dist.scatter(tensor, src, scatter_list, group) : Copies the ith tensor scatter_list[i] to the ith process. dist.gather(tensor, dst, gather_list, group) : Copies tensor from all processes in dst. dist.all_gather(tensor_list, tensor, group) : Copies tensor from all processes to tensor_list, on all processes. dist.barrier(group) : block all processes in group until each one has entered this function. \u5206\u5e03\u5f0f\u8bad\u7ec3 \u00b6 \u5b98\u65b9\u9488\u5bf9\u4e00\u4e2a\u76d1\u7763\u5b66\u4e60\u95ee\u9898\u6765\u4f5c\u4e3a\u793a\u4f8b\u3002\u7b2c\u4e00\u6b65\u9700\u8981\u5b9e\u73b0\u8bad\u7ec3\u96c6\u7684\u5206\u89e3\u3002 \"\"\" Dataset partitioning helper \"\"\" class Partition ( object ): def __init__ ( self , data , index ): self . data = data self . index = index def __len__ ( self ): return len ( self . index ) def __getitem__ ( self , index ): data_idx = self . index [ index ] return self . data [ data_idx ] class DataPartitioner ( object ): def __init__ ( self , data , sizes = [ 0.7 , 0.2 , 0.1 ], seed = 1234 ): self . data = data self . partitions = [] rng = Random () rng . seed ( seed ) data_len = len ( data ) indexes = [ x for x in range ( 0 , data_len )] rng . shuffle ( indexes ) for frac in sizes : part_len = int ( frac * data_len ) self . partitions . append ( indexes [ 0 : part_len ]) indexes = indexes [ part_len :] def use ( self , partition ): return Partition ( self . data , self . partitions [ partition ]) \u63a5\u7740\u7528\u5728MNIST\u6570\u636e\u96c6\u4e0a \"\"\" Partitioning MNIST \"\"\" def partition_dataset (): dataset = datasets . MNIST ( './data' , train = True , download = True , transform = transforms . Compose ([ transforms . ToTensor (), transforms . Normalize (( 0.1307 ,), ( 0.3081 ,)) ])) size = dist . get_world_size () bsz = 128 / float ( size ) partition_sizes = [ 1.0 / size for _ in range ( size )] partition = DataPartitioner ( dataset , partition_sizes ) partition = partition . use ( dist . get_rank ()) train_set = torch . utils . data . DataLoader ( partition , batch_size = bsz , shuffle = True ) return train_set , bsz \u7136\u540e\u5b9e\u73b0 run \u90e8\u5206\u7684\u51fd\u6570\u3002 \"\"\" Distributed Synchronous SGD Example \"\"\" def run ( rank , size ): torch . manual_seed ( 1234 ) train_set , bsz = partition_dataset () model = Net () optimizer = optim . SGD ( model . parameters (), lr = 0.01 , momentum = 0.5 ) num_batches = ceil ( len ( train_set . dataset ) / float ( bsz )) for epoch in range ( 10 ): epoch_loss = 0.0 for data , target in train_set : optimizer . zero_grad () output = model ( data ) loss = F . nll_loss ( output , target ) epoch_loss += loss . item () loss . backward () average_gradients ( model ) optimizer . step () print ( 'Rank ' , dist . get_rank (), ', epoch ' , epoch , ': ' , epoch_loss / num_batches ) \u5176\u4e2d\uff0c\u5e73\u5747\u68af\u5ea6\u7684\u51fd\u6570\u4e3a \"\"\" Gradient averaging. \"\"\" def average_gradients ( model ): size = float ( dist . get_world_size ()) for param in model . parameters (): dist . all_reduce ( param . grad . data , op = dist . reduce_op . SUM ) param . grad . data /= size \u521d\u59cb\u5316 \u00b6 \u5b8f\u53d8\u91cf\uff1a MASTER_PORT : A free port on the machine that will host the process with rank 0. MASTER_ADDR : IP address of the machine that will host the process with rank 0. WORLD_SIZE : The total number of processes, so that the master knows how many workers to wait for. RANK : Rank of each process, so they will know whether it is the master of a worker. \u5171\u4eab\u6587\u4ef6\u7cfb\u7edf dist . init_process_group ( init_method = 'file:///mnt/nfs/sharedfile' , rank = args . rank , world_size = 4 ) \u4f7f\u7528TCP dist . init_process_group ( init_method = 'tcp://10.1.1.20:23456' , rank = args . rank , world_size = 4 )","title":"pytorch\u5206\u5e03\u5f0f"},{"location":"Blog/WritingDistributedApplicationswithPytorch/#writing-distributed-applications-with-pytorch","text":"\u6765\u81ea \u5b98\u65b9\u6559\u7a0b","title":"Writing Distributed Applications with Pytorch"},{"location":"Blog/WritingDistributedApplicationswithPytorch/#_1","text":"\u5206\u5e03\u5f0f\u5305\u5bf9\u5e94 torch.distributed \uff1b torch.distributed \u5305\u548c torch.multiprocessing \u5305\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u524d\u8005\u80fd\u591f\u4f7f\u7528\u4e0d\u540c\u7684\u901a\u8baf\u534f\u8bae\uff0c\u4ee5\u53ca\u5f02\u6784\u7684\u673a\u5668\u4e2d\uff1b \u96c6\u7fa4\u9700\u8981\u4f7f\u7528\u5408\u9002\u7684\u5de5\u5177\u6765\u8bbf\u95ee\uff0c\u6bd4\u5982\uff1a pdsh \u6216\u8005 clustershell \u3002 \u5b98\u65b9\u7684\u591a\u8fdb\u7a0b\u6a21\u677f\uff1a \"\"\"run.py:\"\"\" #!/usr/bin/env python import os import torch import torch.distributed as dist from torch.multiprocessing import Process def run ( rank , size ): \"\"\" Distributed function to be implemented later. \"\"\" pass def init_process ( rank , size , fn , backend = 'gloo' ): \"\"\" Initialize the distributed environment. \"\"\" os . environ [ 'MASTER_ADDR' ] = '127.0.0.1' os . environ [ 'MASTER_PORT' ] = '29500' dist . init_process_group ( backend , rank = rank , world_size = size ) fn ( rank , size ) if __name__ == \"__main__\" : size = 2 processes = [] for rank in range ( size ): p = Process ( target = init_process , args = ( rank , size , run )) p . start () processes . append ( p ) for p in processes : p . join ()","title":"\u8bbe\u7f6e"},{"location":"Blog/WritingDistributedApplicationswithPytorch/#_2","text":"send / recv \u662f\u963b\u65ad\u5f0f\u901a\u8baf\uff1b isend / irecv \u662f\u975e\u963b\u65ad\u5f0f\u901a\u8baf\uff1b wait() \u7b49\u5f85\u901a\u8baf\u7ed3\u675f\u3002 \"\"\"Non-blocking point-to-point communication.\"\"\" def run(rank, size): tensor = torch.zeros(1) req = None if rank == 0: tensor += 1 # Send the tensor to process 1 req = dist.isend(tensor=tensor, dst=1) print('Rank 0 started sending') else: # Receive tensor from process 0 req = dist.irecv(tensor=tensor, src=0) print('Rank 1 started receiving') req.wait() print('Rank ', rank, ' has data ', tensor[0])","title":"\u70b9\u5bf9\u70b9\u901a\u8baf"},{"location":"Blog/WritingDistributedApplicationswithPytorch/#_3","text":"scatter \uff1a\u4e00\u5230\u591a\uff0c\u591a\u4e2a\u6570\u636e\u5206\u53d1\uff1b gather \uff1a\u591a\u5230\u4e00\uff0c\u591a\u4e2a\u6570\u636e\u6536\u96c6\u5230\u4e00\u8d77\uff1b reduce : \u591a\u5230\u4e00\uff0c\u540c\u65f6\u8ba1\u7b97reduce\u51fd\u6570\uff1b allreduce : \u591a\u5230\u591a\uff0c\u540c\u65f6\u8ba1\u7b97reduce\u51fd\u6570\uff1b broadcase : \u4e00\u5230\u591a\uff0c\u4e00\u4e2a\u6570\u636e\u590d\u5236\u5206\u53d1\uff1b all-gather \uff1a\u591a\u5230\u591a\uff0c\u591a\u4e2a\u6570\u636e\u5728\u5404\u4e2a\u673a\u5668\u88ab\u6536\u96c6\u3002 Reduce\u51fd\u6570\u6709 - dist.reduce_op.SUM ; - dist.reduce_op.PRODUCT \uff1b - dist.reduce_op.MAX \uff1b - dist.reduce_op.MIN . dist.broadcast(tensor, src, group) : Copies tensor from src to all other processes. dist.reduce(tensor, dst, op, group) : Applies op to all tensor and stores the result in dst. dist.all_reduce(tensor, op, group) : Same as reduce, but the result is stored in all processes. dist.scatter(tensor, src, scatter_list, group) : Copies the ith tensor scatter_list[i] to the ith process. dist.gather(tensor, dst, gather_list, group) : Copies tensor from all processes in dst. dist.all_gather(tensor_list, tensor, group) : Copies tensor from all processes to tensor_list, on all processes. dist.barrier(group) : block all processes in group until each one has entered this function.","title":"\u5e7f\u64ad"},{"location":"Blog/WritingDistributedApplicationswithPytorch/#_4","text":"\u5b98\u65b9\u9488\u5bf9\u4e00\u4e2a\u76d1\u7763\u5b66\u4e60\u95ee\u9898\u6765\u4f5c\u4e3a\u793a\u4f8b\u3002\u7b2c\u4e00\u6b65\u9700\u8981\u5b9e\u73b0\u8bad\u7ec3\u96c6\u7684\u5206\u89e3\u3002 \"\"\" Dataset partitioning helper \"\"\" class Partition ( object ): def __init__ ( self , data , index ): self . data = data self . index = index def __len__ ( self ): return len ( self . index ) def __getitem__ ( self , index ): data_idx = self . index [ index ] return self . data [ data_idx ] class DataPartitioner ( object ): def __init__ ( self , data , sizes = [ 0.7 , 0.2 , 0.1 ], seed = 1234 ): self . data = data self . partitions = [] rng = Random () rng . seed ( seed ) data_len = len ( data ) indexes = [ x for x in range ( 0 , data_len )] rng . shuffle ( indexes ) for frac in sizes : part_len = int ( frac * data_len ) self . partitions . append ( indexes [ 0 : part_len ]) indexes = indexes [ part_len :] def use ( self , partition ): return Partition ( self . data , self . partitions [ partition ]) \u63a5\u7740\u7528\u5728MNIST\u6570\u636e\u96c6\u4e0a \"\"\" Partitioning MNIST \"\"\" def partition_dataset (): dataset = datasets . MNIST ( './data' , train = True , download = True , transform = transforms . Compose ([ transforms . ToTensor (), transforms . Normalize (( 0.1307 ,), ( 0.3081 ,)) ])) size = dist . get_world_size () bsz = 128 / float ( size ) partition_sizes = [ 1.0 / size for _ in range ( size )] partition = DataPartitioner ( dataset , partition_sizes ) partition = partition . use ( dist . get_rank ()) train_set = torch . utils . data . DataLoader ( partition , batch_size = bsz , shuffle = True ) return train_set , bsz \u7136\u540e\u5b9e\u73b0 run \u90e8\u5206\u7684\u51fd\u6570\u3002 \"\"\" Distributed Synchronous SGD Example \"\"\" def run ( rank , size ): torch . manual_seed ( 1234 ) train_set , bsz = partition_dataset () model = Net () optimizer = optim . SGD ( model . parameters (), lr = 0.01 , momentum = 0.5 ) num_batches = ceil ( len ( train_set . dataset ) / float ( bsz )) for epoch in range ( 10 ): epoch_loss = 0.0 for data , target in train_set : optimizer . zero_grad () output = model ( data ) loss = F . nll_loss ( output , target ) epoch_loss += loss . item () loss . backward () average_gradients ( model ) optimizer . step () print ( 'Rank ' , dist . get_rank (), ', epoch ' , epoch , ': ' , epoch_loss / num_batches ) \u5176\u4e2d\uff0c\u5e73\u5747\u68af\u5ea6\u7684\u51fd\u6570\u4e3a \"\"\" Gradient averaging. \"\"\" def average_gradients ( model ): size = float ( dist . get_world_size ()) for param in model . parameters (): dist . all_reduce ( param . grad . data , op = dist . reduce_op . SUM ) param . grad . data /= size","title":"\u5206\u5e03\u5f0f\u8bad\u7ec3"},{"location":"Blog/WritingDistributedApplicationswithPytorch/#_5","text":"\u5b8f\u53d8\u91cf\uff1a MASTER_PORT : A free port on the machine that will host the process with rank 0. MASTER_ADDR : IP address of the machine that will host the process with rank 0. WORLD_SIZE : The total number of processes, so that the master knows how many workers to wait for. RANK : Rank of each process, so they will know whether it is the master of a worker. \u5171\u4eab\u6587\u4ef6\u7cfb\u7edf dist . init_process_group ( init_method = 'file:///mnt/nfs/sharedfile' , rank = args . rank , world_size = 4 ) \u4f7f\u7528TCP dist . init_process_group ( init_method = 'tcp://10.1.1.20:23456' , rank = args . rank , world_size = 4 )","title":"\u521d\u59cb\u5316"},{"location":"Blog/%E8%99%9A%E6%8B%9F%E5%AE%B9%E5%99%A8Docker%E5%85%A5%E9%97%A8/","text":"\u865a\u62df\u5316\u5bb9\u5668Docker\u5165\u95e8 \u00b6 \u865a\u62df\u5316\u5bb9\u5668Docker\u662f\u4e00\u4e2a\u975e\u5e38\u65f6\u5c1a\u7684\u6280\u672f\u4e86\uff0c\u6211\u73b0\u5728\u60f3\u4e86\u89e3\u4e00\u4e0b\u3002\u6700\u8fd1\u5728\u5b66\u4e606.S081\u7684\u8bfe\u7a0b\uff0c\u8981\u5b89\u88c5 \u4e00\u7cfb\u5217\u7684\u7f16\u8bd1\u5de5\u5177\uff0c\u4e00\u65b9\u9762\u6211\u4e0d\u5e0c\u671b\u76f4\u63a5\u5b89\u88c5\u5230\u7535\u8111\u7684\u64cd\u4f5c\u7cfb\u7edf\u91cc\uff0c\u53e6\u4e00\u65b9\u9762\u6211\u5e0c\u671b\u80fd\u591f\u5feb\u901f\u90e8\u7f72\u5230 \u5176\u4ed6\u673a\u5668\u4e0a\uff0c\u65b9\u4fbf\u5176\u4ed6\u4eba\u3002\u6240\u4ee5\u6211\u60f3\u4e86\u89e3\u4e00\u4e0bDocker\uff0c\u770b\u5b83\u80fd\u4e0d\u80fd\u5e2e\u6211\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u60c5\u3002\u540c\u65f6\u5728\u5e73\u65f6 \u79d1\u7814\u7684\u65f6\u5019\uff0c\u4ee3\u7801\u73af\u5883\u7684\u90e8\u7f72\uff0c\u4ee5\u53ca\u4ee3\u7801\u672c\u8eab\u4e5f\u9700\u8981\u4fdd\u5b58\u4e00\u4e9b\u91cd\u8981\u7684\u6570\u636e\uff0c\u4e0d\u77e5\u9053Docker\u80fd\u4e0d\u80fd\u5b8c\u6210 \u8fd9\u4ef6\u4e8b\u60c5\u3002 Docker\u7684\u5b89\u88c5 \u00b6 \u6211\u662f\u5728Ubuntu\u4e0a\u5b89\u88c5Docker\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u5b89\u88c5\u65b9\u6cd5\u76f4\u63a5\u5f15\u7528 \u5b98\u7f51\u94fe\u63a5 \u5427\uff0c\u5199\u5f97\u975e\u5e38\u597d\u3002 Docker\u7684\u5165\u95e8\u6559\u7a0b\u2014\u2014Getting Started \u00b6 Docker\u5b98\u7f51\u7684\u5165\u95e8\u6559\u7a0b\u7684\u4f7f\u7528\u4e5f\u975e\u5e38\u6709\u610f\u601d\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2aDocker\u955c\u50cf\uff0c\u4ece\u5b98\u65b9\u81ea\u52a8\u4e0b\u8f7d\u4e0b\u6765\u4e00\u4e2a \u6559\u7a0b\u955c\u50cf\u5e76\u8fd0\u884c\uff0c\u5176\u5b9e\u5c31\u662f\u542f\u52a8\u4e00\u4e2a\u9759\u6001\u7f51\u9875\u3002\u547d\u4ee4\u884c\u8f93\u5165 $ docker run -dp 80 :80 docker/getting-started \u7136\u540e\u5728\u6d4f\u89c8\u5668\u6253\u5f00 http://localhost \u3002 -d :\u5bb9\u5668\u8fd0\u884c\u5728 detached \u6a21\u5f0f\uff0c\u540e\u53f0\u8fd0\u884c\uff1b -p Host:Container :\u4e3b\u673a\u768480\u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u768480\u7aef\u53e3\uff1b \u547d\u4ee4\u6458\u5f55 \u00b6 docker run :\u542f\u52a8\u5bb9\u5668\uff0c\u4e0a\u9762\u5df2\u7ecf\u63d0\u5230\uff1b docker ps :\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff1b docker stop <container-ID> :\u5173\u95ed\u5bb9\u5668\uff1b docker rm <container-ID> :\u5220\u9664\u5bb9\u5668\uff0c\u5bb9\u5668\u4e0d\u80fd\u6b63\u5728\u8fd0\u884c\uff1b docker rm -f <container-ID> :\u5f3a\u5236\u5220\u9664\u5bb9\u5668\uff0c\u5bb9\u5668\u53ef\u4ee5\u6b63\u5728\u8fd0\u884c\uff1b docker image ls :\u67e5\u770b\u5b89\u88c5\u7684\u955c\u50cf\uff1b docker tag <container-NAME> <tag> :\u7ed9\u5bb9\u5668\u6dfb\u52a0\u6807\u7b7e\uff1b docker exec <container-ID> <command> :\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u7a0b\u5e8f\uff1b \u4e0a\u4f20\u955c\u50cf \u00b6 shell\u767b\u9646\u8d26\u53f7: docker login -u YOUR-USER-NAME ; \u767b\u9646\u7f51\u7ad9 hub.docker.com ; \u521b\u5efa\u4ed3\u5e93\uff1b \u4fee\u6539\u672c\u5730\u5bb9\u5668\u540d\u79f0\uff1a docker tag <container-NAME> YOUR-USER-NAME/<container-name> ; \u672c\u5730\u63a8\u9001\uff1a docker push YOUR-USER-NAME/<container-NAME> ; \u4f7f\u7528Play-with-docker \u00b6 \u767b\u9646\u7f51\u7ad9 labs.play-with-docker.com ; \u6211\u65e0\u6cd5\u767b\u5f55\uff0c\u4e5f\u5c31\u6ca1\u529e\u6cd5\u5c1d\u8bd5\u4e86\u3002 \u4fdd\u7559\u5bb9\u5668\u6570\u636e \u00b6 Docker\u4f7f\u7528 Volumes \u6765\u4fdd\u5b58\u6570\u636e\uff0c\u662f\u8fde\u63a5\u4e3b\u673a\u6587\u4ef6\u7cfb\u7edf\u548c\u5bb9\u5668\u6587\u4ef6\u7cfb\u7edf\u7684\u5de5\u5177\u3002\u5bb9\u5668\u5206\u4e3a\u4e24\u7c7b\uff0c \u8fd9\u91cc\u5148\u4ecb\u7ecd\u7b2c\u4e00\u7c7b named volumes \u3002 \u521b\u5efa volumes \uff1a docker volume create <volume-NAME> \uff1b \u6302\u8f7d volumes \u8fd0\u884c\u5bb9\u5668\uff1a docker run -dp 3000:3000 -v todo-db:/etc/todos getting-started \uff1b(\u8fd9\u91cc\u4f7f\u7528\u4e86\u5b98\u65b9\u4f8b\u5b50) Docker\u628a volumes \u653e\u5728\u673a\u5668\u7684\u54ea\u91cc\u4e86\u5462\uff1f\u4f7f\u7528\u547d\u4ee4\uff1a docker volume inspect <volumes-NAME> \u6765\u67e5\u770b\u8be6\u60c5\uff1b \u4e0a\u9762\u7684 volumes \u4e0d\u9700\u8981\u5173\u5fc3\u6570\u636e\u771f\u7684\u5b58\u5728\u54ea\u91cc\uff0cdocker\u4f1a\u5e2e\u6211\u4eec\u7ba1\u7406\u3002\u4f46\u662f\u6211\u4eec\u6709\u65f6\u5019\u4f1a\u60f3\u8981\u786e\u5b9a \u4f7f\u7528\u54ea\u91cc\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u53e6\u4e00\u7c7b bind volumes \u3002 \u8fd9\u91cc\u6458\u5f55\u4e00\u4e0b\u5b98\u65b9\u6559\u7a0b\uff0c\u5982\u4f55\u4ee5\u5f00\u53d1\u6a21\u5f0f\u8fdb\u5165\u5bb9\u5668\u3002 \u8fd9\u91cc\u4f1a\u6709\u4e09\u4e2a\u6b65\u9aa4\uff1a\u6302\u8f7d\u6e90\u4ee3\u7801\uff0c\u5b89\u88c5\u4f9d\u8d56\uff0c\u5f00\u542f nodemon \u6765\u89c2\u5bdf\u6587\u4ef6\u7cfb\u7edf\u662f\u5426\u4fee\u6539\u3002 \u786e\u5b9a\u6ca1\u6709\u8fd0\u884c getting-started \uff1b\uff08\u6e90\u7801\u5305\u542b\u5728docker/getting-started\u5bb9\u5668\u91cc\uff0c\u542f\u52a8\u8fd9\u4e2a \u5bb9\u5668\u5230\u7f51\u9875 Our Application \u5c31\u80fd\u627e\u5230\u94fe\u63a5\u3002\uff09 \u8fd0\u884c\u5982\u4e0b\u6307\u4ee4\uff1a docker run -dp 3000 :3000 \\ -w /app -v \" $( pwd ) :/app\" \\ node:12-alpine \\ sh -c \"yarn install && yarn run dev\" -dp 3000:3000 \u540e\u53f0\u8fd0\u884c\u5e76\u4e14\u6620\u5c04\u7aef\u53e3\u53f7 3000 ; -w /app \u8bbe\u7f6e\u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\u76ee\u5f55\uff1b -v \u5c06\u4e3b\u673a\u5f53\u524d\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u7684 /app \u76ee\u5f55\u4e0b\uff1b node:12-alpine \u6240\u4f7f\u7528\u7684\u5bb9\u5668\uff1b sh xxx \u542f\u52a8\u955c\u50cf\u540e\u8fd0\u884c\u7684\u547d\u4ee4\u3002 \u63a5\u7740\u53ef\u4ee5\u4f7f\u7528 docker logs -f <container-ID> \u6765\u67e5\u770b\u955c\u50cf\u8fd0\u884c\u60c5\u51b5\u3002\u6709\u65f6\u5019\u7f51\u7edc\u4e0d\u597d\uff0c\u542f\u52a8 \u4f1a\u6bd4\u8f83\u6162\uff0c\u5f53\u542f\u52a8\u6210\u529f\uff0c\u5e94\u8be5\u80fd\u770b\u5230\u4e00\u884c Listening on port 3000 \u3002 \u4fee\u6539\u6e90\u4ee3\u7801\uff0c\u955c\u50cf\u4f1a\u7acb\u523b\u4f5c\u51fa\u53cd\u5e94\u3002 \u5f00\u53d1\u5b8c\u6210\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u955c\u50cf docker build -t getting-started .. \u3002 \u591a\u5bb9\u5668\u5408\u4f5c \u00b6 Docker\u7684\u5bb9\u5668\u4f7f\u7528\u7f51\u7edc\u6765\u901a\u8baf\u3002 \u521b\u5efa\u7f51\u7edc docker network create todo-app \u6211\u4eec\u60f3\u4f7f\u7528MySQL\u6765\u4f5c\u4e3a\u5bb9\u5668\uff0c\u90a3\u4e48\u9700\u8981\u8fd0\u884c\uff1a docker run -d \\ --network todo-app --network-alias mysql \\ -v todo-mysql-data:/var/lib/mysql \\ -e MYSQL_ROOT_PASSWORD = secret \\ -e MYSQL_DATABASE = todos \\ mysql:5.7 \u8fd9\u91cc\u6709\u4e00\u5927\u5806\u4e0d\u8ba4\u8bc6\u7684\u4e1c\u897f\uff0c\u4e0d\u8fc7\u4e0d\u7528\u614c\uff0c\u6211\u4eec\u4e0d\u5fc5\u90fd\u641e\u6e05\u695a\u3002\u9996\u5148\u4e00\u4e9b\u5173\u4e8eMySQL\u7684\u73af\u5883\u53d8\u91cf \u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u3002 --network-alias \u540e\u9762\u4e5f\u4f1a\u8bb2\u3002\u540d\u5b57\u4e3a todo-mysql-data \u7684 volumn \u4e0d\u540c\u6211\u4eec\u521b\u5efa\uff0cdocker\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u521b\u5efa\u3002 3. \u786e\u5b9aMySQL\u5df2\u7ecf\u8fd0\u884c\uff0c\u6211\u4eec\u4f7f\u7528 docker exec -it <mysql-container-id> mysql -p \u6765\u67e5\u770b\u3002 \u6211\u4eec\u8bbe\u7f6e\u4e86\u6570\u636e\u5e93\u7684\u5bc6\u7801\u4e3a secret \uff0c\u5f53\u9700\u8981\u8f93\u5165\u5bc6\u7801\u65f6\uff0c\u8f93\u5165\u8fd9\u4e2a\u5c31\u884c\u4e86\u3002\u6309\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b \u521b\u5efa\u7684\u6570\u636e\u5e93\u8868\u683c\u3002 mysql> SHOW DATABASES ; \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u8fde\u63a5\u8fd9\u4e2a\u5bb9\u5668\u4e86\u3002\u4f46\u662f\u6bcf\u4e2a\u5bb9\u5668\u6709\u5404\u81ea\u7684IP\u5730\u5740\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u8fde\u63a5\u5462\uff1f\u8fd9\u91cc\u53ef\u4ee5\u547c\u53eb nicolaka/netshoot \u5bb9\u5668\u6765\u5e2e\u5fd9\u3002 \u8fd0\u884c\u4e00\u4e2a nicolaka/netshoot \u5bb9\u5668\uff1a docker run -it --network todo-app nicolaka/netshoot \u5728\u5bb9\u5668\u4e2d\uff0c\u4f7f\u7528 dig \u547d\u4ee4\uff0c\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684DNS\u5de5\u5177\uff1a dig mysql \u3002\u4f1a\u770b\u5230\u8fd4\u56de\u4fe1\u606f\u91cc\u6709\u4e00\u4e2a mysql. 600 IN A <ip address> \uff0c\u8fd9\u4e2a\u5c31\u662f\u76f8\u5173ip\u5730\u5740\u4e86\u3002 \u6700\u540e\u6211\u4eec\u5982\u4f55\u5728\u5e94\u7528\u7684\u5bb9\u5668\u91cc\u4f7f\u7528MySQL\u5462\u3002 \u9996\u5148\u4e86\u89e3MySQL\u7684\u51e0\u4e2a\u5c5e\u6027\u53c2\u6570\uff1a MYSQL_HOST : MySQL\u670d\u52a1\u5668\u7684\u5730\u5740\uff1b MYSQL_USER : \u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42\u7684\u7528\u6237\u540d\uff1b MYSQL_PASSWARD : \u5bc6\u7801\uff1b MYSQL_DB : \u4f7f\u7528\u7684\u6570\u636e\u5e93\u540d\u5b57\u3002 \u4f7f\u7528\u4e0b\u9762\u6307\u4ee4\u6765\u542f\u52a8\u5e94\u7528\u5bb9\u5668\uff1a docker run -dp 3000 :3000 \\ -w /app -v \" $( pwd ) :/app\" \\ --network todo-app \\ -e MYSQL_HOST = mysql \\ -e MYSQL_USER = root \\ -e MYSQL_PASSWARD = secret \\ -e MYSQL_DB = todos \\ node:12-alpine \\ sh -c \"yarn install && yarn run dev\" \u67e5\u770b\u5bb9\u5668\u8fd0\u884c\u60c5\u51b5: docker logs <container-ID> \u3002 \u6253\u5f00app\u5199\u5165\u4e00\u4e9b\u8981\u5b8c\u6210\u7684\u4e8b\u9879\u3002 \u9a8c\u8bc1mysql\u5bb9\u5668\u88ab\u5199\u5165\u4e86\u76f8\u5e94\u5185\u5bb9\uff1a docker exec -it <mysql-container-id> mysql -p todos \u7136\u540e\u518dmysql\u7684shell\u4e2d\u4f7f\u7528\u547d\u4ee4 mysql> select * from todo_items ; \u5e94\u8be5\u80fd\u770b\u5230\u521a\u521a\u518d\u5e94\u7528\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7684\u5185\u5bb9\u3002 \u4f7f\u7528Docker Compose \u00b6 Docker\u4f7f\u7528\u4e00\u4e2a\u6587\u4ef6\u6765\u63cf\u8ff0\u9879\u76ee\u9700\u8981\u7528\u5230\u7684\u6280\u672f\u6808\uff0c\u8fd9\u6837\u5f88\u5bb9\u6613\u518d\u5176\u4ed6\u673a\u5668\u4e0a\u914d\u7f6e\u76f8\u540c\u7684\u5185\u5bb9\u3002 \u9996\u5148\u8981\u5b89\u88c5\u6253\u5305\u5668: docker-compose \uff1a sudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose \u63a5\u4e0b\u6765\u914d\u7f6e\u6587\u4ef6\u600e\u4e48\u5199\u5c31\u6bd4\u8f83\u7e41\u7410\u4e86\uff0c\u6211\u4e0d\u6458\u5f55\u4e86\uff0c\u53ef\u4ee5\u67e5\u770b \u5b98\u65b9\u6587\u6863 \u3002 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a docker-compose.yml \u6587\u4ef6\u3002 \u4f7f\u7528\u547d\u4ee4 docker-compose up -d \u8fd0\u884c\u3002 \u4f7f\u7528 docker-compose logs -f \u67e5\u770b\u8fd0\u884c\u60c5\u51b5\u3002 \u4f7f\u7528 docker-compose down \u5173\u95ed\u5bb9\u5668\u7ec4\u3002","title":"\u865a\u62df\u5bb9\u5668Docker\u5165\u95e8"},{"location":"Blog/%E8%99%9A%E6%8B%9F%E5%AE%B9%E5%99%A8Docker%E5%85%A5%E9%97%A8/#docker","text":"\u865a\u62df\u5316\u5bb9\u5668Docker\u662f\u4e00\u4e2a\u975e\u5e38\u65f6\u5c1a\u7684\u6280\u672f\u4e86\uff0c\u6211\u73b0\u5728\u60f3\u4e86\u89e3\u4e00\u4e0b\u3002\u6700\u8fd1\u5728\u5b66\u4e606.S081\u7684\u8bfe\u7a0b\uff0c\u8981\u5b89\u88c5 \u4e00\u7cfb\u5217\u7684\u7f16\u8bd1\u5de5\u5177\uff0c\u4e00\u65b9\u9762\u6211\u4e0d\u5e0c\u671b\u76f4\u63a5\u5b89\u88c5\u5230\u7535\u8111\u7684\u64cd\u4f5c\u7cfb\u7edf\u91cc\uff0c\u53e6\u4e00\u65b9\u9762\u6211\u5e0c\u671b\u80fd\u591f\u5feb\u901f\u90e8\u7f72\u5230 \u5176\u4ed6\u673a\u5668\u4e0a\uff0c\u65b9\u4fbf\u5176\u4ed6\u4eba\u3002\u6240\u4ee5\u6211\u60f3\u4e86\u89e3\u4e00\u4e0bDocker\uff0c\u770b\u5b83\u80fd\u4e0d\u80fd\u5e2e\u6211\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u60c5\u3002\u540c\u65f6\u5728\u5e73\u65f6 \u79d1\u7814\u7684\u65f6\u5019\uff0c\u4ee3\u7801\u73af\u5883\u7684\u90e8\u7f72\uff0c\u4ee5\u53ca\u4ee3\u7801\u672c\u8eab\u4e5f\u9700\u8981\u4fdd\u5b58\u4e00\u4e9b\u91cd\u8981\u7684\u6570\u636e\uff0c\u4e0d\u77e5\u9053Docker\u80fd\u4e0d\u80fd\u5b8c\u6210 \u8fd9\u4ef6\u4e8b\u60c5\u3002","title":"\u865a\u62df\u5316\u5bb9\u5668Docker\u5165\u95e8"},{"location":"Blog/%E8%99%9A%E6%8B%9F%E5%AE%B9%E5%99%A8Docker%E5%85%A5%E9%97%A8/#docker_1","text":"\u6211\u662f\u5728Ubuntu\u4e0a\u5b89\u88c5Docker\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u5b89\u88c5\u65b9\u6cd5\u76f4\u63a5\u5f15\u7528 \u5b98\u7f51\u94fe\u63a5 \u5427\uff0c\u5199\u5f97\u975e\u5e38\u597d\u3002","title":"Docker\u7684\u5b89\u88c5"},{"location":"Blog/%E8%99%9A%E6%8B%9F%E5%AE%B9%E5%99%A8Docker%E5%85%A5%E9%97%A8/#dockergetting-started","text":"Docker\u5b98\u7f51\u7684\u5165\u95e8\u6559\u7a0b\u7684\u4f7f\u7528\u4e5f\u975e\u5e38\u6709\u610f\u601d\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2aDocker\u955c\u50cf\uff0c\u4ece\u5b98\u65b9\u81ea\u52a8\u4e0b\u8f7d\u4e0b\u6765\u4e00\u4e2a \u6559\u7a0b\u955c\u50cf\u5e76\u8fd0\u884c\uff0c\u5176\u5b9e\u5c31\u662f\u542f\u52a8\u4e00\u4e2a\u9759\u6001\u7f51\u9875\u3002\u547d\u4ee4\u884c\u8f93\u5165 $ docker run -dp 80 :80 docker/getting-started \u7136\u540e\u5728\u6d4f\u89c8\u5668\u6253\u5f00 http://localhost \u3002 -d :\u5bb9\u5668\u8fd0\u884c\u5728 detached \u6a21\u5f0f\uff0c\u540e\u53f0\u8fd0\u884c\uff1b -p Host:Container :\u4e3b\u673a\u768480\u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u768480\u7aef\u53e3\uff1b","title":"Docker\u7684\u5165\u95e8\u6559\u7a0b\u2014\u2014Getting Started"},{"location":"Blog/%E8%99%9A%E6%8B%9F%E5%AE%B9%E5%99%A8Docker%E5%85%A5%E9%97%A8/#_1","text":"docker run :\u542f\u52a8\u5bb9\u5668\uff0c\u4e0a\u9762\u5df2\u7ecf\u63d0\u5230\uff1b docker ps :\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff1b docker stop <container-ID> :\u5173\u95ed\u5bb9\u5668\uff1b docker rm <container-ID> :\u5220\u9664\u5bb9\u5668\uff0c\u5bb9\u5668\u4e0d\u80fd\u6b63\u5728\u8fd0\u884c\uff1b docker rm -f <container-ID> :\u5f3a\u5236\u5220\u9664\u5bb9\u5668\uff0c\u5bb9\u5668\u53ef\u4ee5\u6b63\u5728\u8fd0\u884c\uff1b docker image ls :\u67e5\u770b\u5b89\u88c5\u7684\u955c\u50cf\uff1b docker tag <container-NAME> <tag> :\u7ed9\u5bb9\u5668\u6dfb\u52a0\u6807\u7b7e\uff1b docker exec <container-ID> <command> :\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u7a0b\u5e8f\uff1b","title":"\u547d\u4ee4\u6458\u5f55"},{"location":"Blog/%E8%99%9A%E6%8B%9F%E5%AE%B9%E5%99%A8Docker%E5%85%A5%E9%97%A8/#_2","text":"shell\u767b\u9646\u8d26\u53f7: docker login -u YOUR-USER-NAME ; \u767b\u9646\u7f51\u7ad9 hub.docker.com ; \u521b\u5efa\u4ed3\u5e93\uff1b \u4fee\u6539\u672c\u5730\u5bb9\u5668\u540d\u79f0\uff1a docker tag <container-NAME> YOUR-USER-NAME/<container-name> ; \u672c\u5730\u63a8\u9001\uff1a docker push YOUR-USER-NAME/<container-NAME> ;","title":"\u4e0a\u4f20\u955c\u50cf"},{"location":"Blog/%E8%99%9A%E6%8B%9F%E5%AE%B9%E5%99%A8Docker%E5%85%A5%E9%97%A8/#play-with-docker","text":"\u767b\u9646\u7f51\u7ad9 labs.play-with-docker.com ; \u6211\u65e0\u6cd5\u767b\u5f55\uff0c\u4e5f\u5c31\u6ca1\u529e\u6cd5\u5c1d\u8bd5\u4e86\u3002","title":"\u4f7f\u7528Play-with-docker"},{"location":"Blog/%E8%99%9A%E6%8B%9F%E5%AE%B9%E5%99%A8Docker%E5%85%A5%E9%97%A8/#_3","text":"Docker\u4f7f\u7528 Volumes \u6765\u4fdd\u5b58\u6570\u636e\uff0c\u662f\u8fde\u63a5\u4e3b\u673a\u6587\u4ef6\u7cfb\u7edf\u548c\u5bb9\u5668\u6587\u4ef6\u7cfb\u7edf\u7684\u5de5\u5177\u3002\u5bb9\u5668\u5206\u4e3a\u4e24\u7c7b\uff0c \u8fd9\u91cc\u5148\u4ecb\u7ecd\u7b2c\u4e00\u7c7b named volumes \u3002 \u521b\u5efa volumes \uff1a docker volume create <volume-NAME> \uff1b \u6302\u8f7d volumes \u8fd0\u884c\u5bb9\u5668\uff1a docker run -dp 3000:3000 -v todo-db:/etc/todos getting-started \uff1b(\u8fd9\u91cc\u4f7f\u7528\u4e86\u5b98\u65b9\u4f8b\u5b50) Docker\u628a volumes \u653e\u5728\u673a\u5668\u7684\u54ea\u91cc\u4e86\u5462\uff1f\u4f7f\u7528\u547d\u4ee4\uff1a docker volume inspect <volumes-NAME> \u6765\u67e5\u770b\u8be6\u60c5\uff1b \u4e0a\u9762\u7684 volumes \u4e0d\u9700\u8981\u5173\u5fc3\u6570\u636e\u771f\u7684\u5b58\u5728\u54ea\u91cc\uff0cdocker\u4f1a\u5e2e\u6211\u4eec\u7ba1\u7406\u3002\u4f46\u662f\u6211\u4eec\u6709\u65f6\u5019\u4f1a\u60f3\u8981\u786e\u5b9a \u4f7f\u7528\u54ea\u91cc\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u53e6\u4e00\u7c7b bind volumes \u3002 \u8fd9\u91cc\u6458\u5f55\u4e00\u4e0b\u5b98\u65b9\u6559\u7a0b\uff0c\u5982\u4f55\u4ee5\u5f00\u53d1\u6a21\u5f0f\u8fdb\u5165\u5bb9\u5668\u3002 \u8fd9\u91cc\u4f1a\u6709\u4e09\u4e2a\u6b65\u9aa4\uff1a\u6302\u8f7d\u6e90\u4ee3\u7801\uff0c\u5b89\u88c5\u4f9d\u8d56\uff0c\u5f00\u542f nodemon \u6765\u89c2\u5bdf\u6587\u4ef6\u7cfb\u7edf\u662f\u5426\u4fee\u6539\u3002 \u786e\u5b9a\u6ca1\u6709\u8fd0\u884c getting-started \uff1b\uff08\u6e90\u7801\u5305\u542b\u5728docker/getting-started\u5bb9\u5668\u91cc\uff0c\u542f\u52a8\u8fd9\u4e2a \u5bb9\u5668\u5230\u7f51\u9875 Our Application \u5c31\u80fd\u627e\u5230\u94fe\u63a5\u3002\uff09 \u8fd0\u884c\u5982\u4e0b\u6307\u4ee4\uff1a docker run -dp 3000 :3000 \\ -w /app -v \" $( pwd ) :/app\" \\ node:12-alpine \\ sh -c \"yarn install && yarn run dev\" -dp 3000:3000 \u540e\u53f0\u8fd0\u884c\u5e76\u4e14\u6620\u5c04\u7aef\u53e3\u53f7 3000 ; -w /app \u8bbe\u7f6e\u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\u76ee\u5f55\uff1b -v \u5c06\u4e3b\u673a\u5f53\u524d\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u7684 /app \u76ee\u5f55\u4e0b\uff1b node:12-alpine \u6240\u4f7f\u7528\u7684\u5bb9\u5668\uff1b sh xxx \u542f\u52a8\u955c\u50cf\u540e\u8fd0\u884c\u7684\u547d\u4ee4\u3002 \u63a5\u7740\u53ef\u4ee5\u4f7f\u7528 docker logs -f <container-ID> \u6765\u67e5\u770b\u955c\u50cf\u8fd0\u884c\u60c5\u51b5\u3002\u6709\u65f6\u5019\u7f51\u7edc\u4e0d\u597d\uff0c\u542f\u52a8 \u4f1a\u6bd4\u8f83\u6162\uff0c\u5f53\u542f\u52a8\u6210\u529f\uff0c\u5e94\u8be5\u80fd\u770b\u5230\u4e00\u884c Listening on port 3000 \u3002 \u4fee\u6539\u6e90\u4ee3\u7801\uff0c\u955c\u50cf\u4f1a\u7acb\u523b\u4f5c\u51fa\u53cd\u5e94\u3002 \u5f00\u53d1\u5b8c\u6210\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u955c\u50cf docker build -t getting-started .. \u3002","title":"\u4fdd\u7559\u5bb9\u5668\u6570\u636e"},{"location":"Blog/%E8%99%9A%E6%8B%9F%E5%AE%B9%E5%99%A8Docker%E5%85%A5%E9%97%A8/#_4","text":"Docker\u7684\u5bb9\u5668\u4f7f\u7528\u7f51\u7edc\u6765\u901a\u8baf\u3002 \u521b\u5efa\u7f51\u7edc docker network create todo-app \u6211\u4eec\u60f3\u4f7f\u7528MySQL\u6765\u4f5c\u4e3a\u5bb9\u5668\uff0c\u90a3\u4e48\u9700\u8981\u8fd0\u884c\uff1a docker run -d \\ --network todo-app --network-alias mysql \\ -v todo-mysql-data:/var/lib/mysql \\ -e MYSQL_ROOT_PASSWORD = secret \\ -e MYSQL_DATABASE = todos \\ mysql:5.7 \u8fd9\u91cc\u6709\u4e00\u5927\u5806\u4e0d\u8ba4\u8bc6\u7684\u4e1c\u897f\uff0c\u4e0d\u8fc7\u4e0d\u7528\u614c\uff0c\u6211\u4eec\u4e0d\u5fc5\u90fd\u641e\u6e05\u695a\u3002\u9996\u5148\u4e00\u4e9b\u5173\u4e8eMySQL\u7684\u73af\u5883\u53d8\u91cf \u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u3002 --network-alias \u540e\u9762\u4e5f\u4f1a\u8bb2\u3002\u540d\u5b57\u4e3a todo-mysql-data \u7684 volumn \u4e0d\u540c\u6211\u4eec\u521b\u5efa\uff0cdocker\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u521b\u5efa\u3002 3. \u786e\u5b9aMySQL\u5df2\u7ecf\u8fd0\u884c\uff0c\u6211\u4eec\u4f7f\u7528 docker exec -it <mysql-container-id> mysql -p \u6765\u67e5\u770b\u3002 \u6211\u4eec\u8bbe\u7f6e\u4e86\u6570\u636e\u5e93\u7684\u5bc6\u7801\u4e3a secret \uff0c\u5f53\u9700\u8981\u8f93\u5165\u5bc6\u7801\u65f6\uff0c\u8f93\u5165\u8fd9\u4e2a\u5c31\u884c\u4e86\u3002\u6309\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b \u521b\u5efa\u7684\u6570\u636e\u5e93\u8868\u683c\u3002 mysql> SHOW DATABASES ; \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u8fde\u63a5\u8fd9\u4e2a\u5bb9\u5668\u4e86\u3002\u4f46\u662f\u6bcf\u4e2a\u5bb9\u5668\u6709\u5404\u81ea\u7684IP\u5730\u5740\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u8fde\u63a5\u5462\uff1f\u8fd9\u91cc\u53ef\u4ee5\u547c\u53eb nicolaka/netshoot \u5bb9\u5668\u6765\u5e2e\u5fd9\u3002 \u8fd0\u884c\u4e00\u4e2a nicolaka/netshoot \u5bb9\u5668\uff1a docker run -it --network todo-app nicolaka/netshoot \u5728\u5bb9\u5668\u4e2d\uff0c\u4f7f\u7528 dig \u547d\u4ee4\uff0c\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684DNS\u5de5\u5177\uff1a dig mysql \u3002\u4f1a\u770b\u5230\u8fd4\u56de\u4fe1\u606f\u91cc\u6709\u4e00\u4e2a mysql. 600 IN A <ip address> \uff0c\u8fd9\u4e2a\u5c31\u662f\u76f8\u5173ip\u5730\u5740\u4e86\u3002 \u6700\u540e\u6211\u4eec\u5982\u4f55\u5728\u5e94\u7528\u7684\u5bb9\u5668\u91cc\u4f7f\u7528MySQL\u5462\u3002 \u9996\u5148\u4e86\u89e3MySQL\u7684\u51e0\u4e2a\u5c5e\u6027\u53c2\u6570\uff1a MYSQL_HOST : MySQL\u670d\u52a1\u5668\u7684\u5730\u5740\uff1b MYSQL_USER : \u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42\u7684\u7528\u6237\u540d\uff1b MYSQL_PASSWARD : \u5bc6\u7801\uff1b MYSQL_DB : \u4f7f\u7528\u7684\u6570\u636e\u5e93\u540d\u5b57\u3002 \u4f7f\u7528\u4e0b\u9762\u6307\u4ee4\u6765\u542f\u52a8\u5e94\u7528\u5bb9\u5668\uff1a docker run -dp 3000 :3000 \\ -w /app -v \" $( pwd ) :/app\" \\ --network todo-app \\ -e MYSQL_HOST = mysql \\ -e MYSQL_USER = root \\ -e MYSQL_PASSWARD = secret \\ -e MYSQL_DB = todos \\ node:12-alpine \\ sh -c \"yarn install && yarn run dev\" \u67e5\u770b\u5bb9\u5668\u8fd0\u884c\u60c5\u51b5: docker logs <container-ID> \u3002 \u6253\u5f00app\u5199\u5165\u4e00\u4e9b\u8981\u5b8c\u6210\u7684\u4e8b\u9879\u3002 \u9a8c\u8bc1mysql\u5bb9\u5668\u88ab\u5199\u5165\u4e86\u76f8\u5e94\u5185\u5bb9\uff1a docker exec -it <mysql-container-id> mysql -p todos \u7136\u540e\u518dmysql\u7684shell\u4e2d\u4f7f\u7528\u547d\u4ee4 mysql> select * from todo_items ; \u5e94\u8be5\u80fd\u770b\u5230\u521a\u521a\u518d\u5e94\u7528\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7684\u5185\u5bb9\u3002","title":"\u591a\u5bb9\u5668\u5408\u4f5c"},{"location":"Blog/%E8%99%9A%E6%8B%9F%E5%AE%B9%E5%99%A8Docker%E5%85%A5%E9%97%A8/#docker-compose","text":"Docker\u4f7f\u7528\u4e00\u4e2a\u6587\u4ef6\u6765\u63cf\u8ff0\u9879\u76ee\u9700\u8981\u7528\u5230\u7684\u6280\u672f\u6808\uff0c\u8fd9\u6837\u5f88\u5bb9\u6613\u518d\u5176\u4ed6\u673a\u5668\u4e0a\u914d\u7f6e\u76f8\u540c\u7684\u5185\u5bb9\u3002 \u9996\u5148\u8981\u5b89\u88c5\u6253\u5305\u5668: docker-compose \uff1a sudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose \u63a5\u4e0b\u6765\u914d\u7f6e\u6587\u4ef6\u600e\u4e48\u5199\u5c31\u6bd4\u8f83\u7e41\u7410\u4e86\uff0c\u6211\u4e0d\u6458\u5f55\u4e86\uff0c\u53ef\u4ee5\u67e5\u770b \u5b98\u65b9\u6587\u6863 \u3002 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a docker-compose.yml \u6587\u4ef6\u3002 \u4f7f\u7528\u547d\u4ee4 docker-compose up -d \u8fd0\u884c\u3002 \u4f7f\u7528 docker-compose logs -f \u67e5\u770b\u8fd0\u884c\u60c5\u51b5\u3002 \u4f7f\u7528 docker-compose down \u5173\u95ed\u5bb9\u5668\u7ec4\u3002","title":"\u4f7f\u7528Docker Compose"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","text":"\u8ba1\u7b97\u673a\u7f51\u7edc \u00b6 \u6700\u8fd1\u6211\u5728\u770b\u7f51\u4e0a\u7684\u5404\u79cd\u9762\u8bd5\u5206\u4eab\uff0c\u5176\u4e2d\u5217\u51fa\u95ee\u9898\u90fd\u597d\u96be\u5440\u3002\u8eab\u4e3a\u4e00\u4e2a\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u5b66\u751f\uff0c\u6211\u751a\u662f\u7f9e\u803b\uff0c \u6240\u4ee5\u6211\u51b3\u5b9a\u628a\u8fd9\u4e9b\u4e1c\u897f\u8865\u9f50\u3002\u6211\u521a\u521a\u5f00\u59cb\u770b\u300aLinux\u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7f16\u7a0b\u300b\u548c\u300aLinux\u7f51\u7edc\u7f16\u7a0b\u300b\uff0c \u5176\u4e2d \u6709\u4e9b\u7ae0\u8282\u975e\u5e38\u9002\u5408\u505a\u6210\u7b14\u8bb0\u3002\u6211\u8fd8\u6253\u7b97\u4ece\u7f51\u4e0a\u627e\u4e00\u4e9b\u9762\u8bd5\u9898\uff0c\u9762\u8bd5\u9898\u6d89\u53ca\u7684\u77e5\u8bc6\u70b9\u5e94\u8be5\u662f\u975e\u5e38 \u7ecf\u5178\u548c\u91cd\u8981\u7684\u3002 TCP/IP \u534f\u8bae\u65cf \u00b6 \u9996\u5148\u5c31\u662f\u4e00\u5f20\u975e\u5e38\u91cd\u8981\u7684\u534f\u8bae\u65cf\u4f53\u7cfb\u7ed3\u6784\u4e86\uff0c\u5b83\u7531\u56db\u5c42\u534f\u8bae\u5c42\u7ec4\u6210\uff1a\u6570\u636e\u94fe\u8def\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u548c \u5e94\u7528\u5c42\u3002 \u6570\u636e\u94fe\u8def\u5c42\uff1a\u7f51\u5361\u63a5\u53e3\u7684\u9a71\u52a8\u7a0b\u5e8f\u3001ARP\u534f\u8bae\uff08Address Resolve Protocal, \u5730\u5740\u89e3\u6790\u534f\u8bae) \u548c RARP\u534f\u8bae\uff08Reverse Address Resolve Protocal, \u9006\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09\uff0c\u4e3b\u8981\u662f\u7528\u4e8eip\u548cMAC \uff08Media Address Control Address\uff09\u8f6c\u5316\u3002 \u7f51\u7edc\u5c42\uff1a\u6570\u636e\u5305\u7684\u9009\u8def\u4e0e\u8f6c\u53d1\u3002\u5f62\u6210WAN\u548cLAN\u7684\u5c42\u3002\u6838\u5fc3\u534f\u8baeIP\uff08Internet Protocal\uff09\u548c ICMP\uff08Internet Control Message Protocal\uff09\u3002\u4ece\u4e0a\u56fe\u53ef\u77e5\uff0cICMP\u662f\u57fa\u4e8eIP\u7684\u3002 \u4f20\u8f93\u5c42\uff1a\u53ea\u5173\u5fc3\u901a\u4fe1\u7684\u4e24\u7aef\uff0c\u4e2d\u95f4\u73af\u8282\u7531\u7f51\u7edc\u5c42\u8d1f\u8d23\u3002\u4e3b\u8981\u534f\u8bae\u662fTCP\u3001UDP\u548cSCTP\u3002 \u5e94\u7528\u5c42\uff1aping\u3001DNS\u670d\u52a1\u90fd\u662f\u5c5e\u4e8e\u8fd9\u4e00\u5c42\u7684\u3002 IP\u534f\u8bae\u8be6\u89e3 \u00b6 IP\u534f\u8bae\u662fsocket\u7f51\u7edc\u7f16\u7a0b\u7684\u57fa\u7840\u4e86\uff0c\u6240\u4ee5\u8fd8\u662f\u9700\u8981\u641e\u660e\u767d\u7684\u3002IP\u534f\u8bae\u7684\u5173\u952e\u5c31\u662f\u4e24\u70b9\uff1a\u5934\u90e8\u4fe1\u606f \u548c\u8def\u7531\u8f6c\u53d1\u8fc7\u7a0b\u3002 IP\u534f\u8bae\u662f\u65e0\u8fde\u63a5\u3001\u65e0\u72b6\u6001\u548c\u4e0d\u53ef\u9760\u7684\u3002 IP \u5934\u90e8\u4fe1\u606f \u00b6 \u6211\u4eec\u5148\u6765\u6574\u4e00\u6ce2IP\u534f\u8bae\u7684\u5934\u90e8\u4fe1\u606f\u3002 |4\u4f4d\u7248\u672c\u53f7|4\u4f4d\u5934\u90e8\u957f\u5ea6|8\u4f4d\u670d\u52a1\u7c7b\u578b\uff08TOS\uff09| 16\u4f4d\u603b\u957f\u5ea6\uff08\u5b57\u8282\u6570\uff09 | | 16\u4f4d\u6807\u8bc6\u7b26 |3\u4f4d\u6807\u5fd7| 13\u4f4d\u7247\u504f\u79fb | | 8\u4f4d\u751f\u5b58\u65f6\u95f4\uff08TTL\uff09 | 8\u4f4d\u534f\u8bae | 16\u4f4d\u5934\u90e8\u68c0\u9a8c\u548c | | 32\u4f4d\u6e90\u7aefIP\u5730\u5740 | | 32\u4f4d\u76ee\u7684\u7aefIP\u5730\u5740 | | \u9009\u9879\u6700\u591a40\u5b57\u8282 | 4\u4f4d\u7248\u672c\u53f7\uff1aipv4\u8fd8\u662fipv6\uff1b 4\u4f4d\u5934\u90e8\u957f\u5ea6\uff1b 8\u4f4d\u670d\u52a1\u7c7b\u578b\uff1a3\u4f4d\u4f18\u5148\u6743\u5b57\u6bb5\uff08\u5df2\u5ffd\u7565\uff09\uff0c4\u4f4dTOS(Type of service)\u5b57\u6bb5\uff0c1\u4f4d\u4fdd\u7559\u5b57\u6bb5\u4e3a0\uff1b \u6700\u5c0f\u65f6\u5ef6\u3001\u6700\u5927\u541e\u5410\u91cf\u3001\u6700\u9ad8\u53ef\u9760\u6027\u548c\u6700\u5c0f\u8d39\u7528\uff0c\u53ea\u6709\u4e00\u4e2a\u80fd\u653e\u7f6e1\uff1b 16\u4f4d\u603b\u957f\u5ea6\uff1aIP\u6570\u636e\u62a5\u603b\u957f\u5ea6\uff1b 16\u4f4d\u6807\u8bc6\u7b26\uff1a\u6570\u636e\u5305\u6807\u8bc6\uff0c\u6240\u6709\u5206\u7247\u662f\u540c\u4e00\u4e2a\u6807\u8bc6\u7b26\uff1b 3\u4f4d\u6807\u5fd7\uff1a|\u4fdd\u7559|\u7981\u6b62\u5206\u7247|\u540e\u9762\u8fd8\u6709\u5206\u7247|\uff1b 13\u4f4d\u5206\u7247\u504f\u79fb\uff1b 8\u4f4d\u751f\u5b58\u65f6\u95f4\uff1aTTL\uff08Time to live)\uff0c\u901a\u5e38\u521d\u59cb\u503c\u4e3a64\uff1b 8\u4f4d\u534f\u8bae\uff1aICMP\u4e3a1\uff0cTCP\u4e3a6\uff0cUDP\u4e3a17\uff1b 16\u4f4d\u5934\u90e8\u68c0\u9a8c\u548c\uff1b 32\u4f4d\u6e90\u7aefIP\u5730\u5740\uff1b 32\u4f4d\u76ee\u7684\u7aefIP\u5730\u5740\u3002 IP\u5206\u7247 \u00b6 IP\u6570\u636e\u62a5\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7MTU\uff0c\u6240\u4ee5\u6bcf\u4e2aIP\u6570\u636e\u62a5\u80fd\u5305\u542b\u7684\u6570\u636e\u90e8\u5206\u957f\u5ea6\u6700\u957f\u4f4d1480\uff0c\u6240\u4ee5\u8981\u5206\u7247\u3002 IP\u8def\u7531\u548c\u8f6c\u53d1 \u00b6 \u68c0\u67e5\u662f\u5426\u53d1\u7ed9\u672c\u673a\uff0c\u5982\u679c\u662f\u5c31\u8f6c\u5165\u4f20\u8f93\u5c42\u5904\u7406\uff0c\u5982\u679c\u4e0d\u662f\u5c31\u8fdb\u5165\u8f6c\u53d1\uff0c\u6839\u636e\u8def\u7531\u673a\u5236\u8fdb\u884c\u8f6c\u53d1\uff0c\u8fd9 \u5c31\u6d89\u53ca\u5230\u8def\u7531\u8868route\u548c\u8def\u7531\u8868\u66f4\u65b0\u7b56\u7565\uff0c\u4f7f\u7528ICMP\u91cd\u5b9a\u5411\u62a5\u6587\u66f4\u65b0\u3002 TCP\u534f\u8bae\u8be6\u89e3 \u00b6 \u548cUDP\u76f8\u6bd4\uff0cTCP\u5177\u6709\u9762\u5411\u8fde\u63a5\u3001\u5b57\u8282\u6d41\u548c\u53ef\u9760\u8fd0\u8f93\u7684\u7279\u70b9\u3002\u9762\u5411\u8fde\u63a5\u6307\u7684\u662f\u53cc\u65b9\u5fc5\u987b\u5efa\u7acb\u597d\u8fde\u63a5\u4e4b\u540e \u624d\u80fd\u4f20\u8f93\u6570\u636e\uff1bTCP\u901a\u4fe1\u53cc\u65b9\u53d1\u9001\u548c\u63a5\u53d7\u7684\u4fe1\u606f\u90fd\u4f1a\u5148\u8fdb\u5165\u7f13\u5b58\u533a\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u968f\u65f6\u6309\u7167\u81ea\u5df1\u7684\u9700\u6c42 \u8bfb\u5199\uff0c\u53cc\u65b9\u7684\u8bfb\u5199\u6b21\u6570\u6ca1\u6709\u56fa\u5b9a\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u662f\u5b57\u8282\u6d41\uff1bTCP\u4f7f\u7528\u4e86\u53d1\u9001\u5e94\u7b54\u673a\u5236\u548c\u8d85\u65f6\u91cd\u4f20\u673a\u5236\uff0c \u4fdd\u8bc1\u4e86\u4f20\u8f93\u7684\u53ef\u9760\u6027\u3002\u56e0\u4e3aTCP\u662f \u9762\u5411\u8fde\u63a5\u7684\uff0c\u6240\u4ee5\u5bf9\u5e7f\u64ad\u548c\u591a\u64ad\u4e0d\u53cb\u597d\uff0c\u5bf9\u4e8e\u89c6\u9891\u76f4\u64ad\u6211\u4eec\u901a\u5e38 \u4f7f\u7528UDP\u3002 TCP\u534f\u8bae\u6838\u5fc3\u77e5\u8bc6\u5206\u4e3a\u5982\u4e0b\u56db\u4e2a\u90e8\u5206\uff1a TCP\u5934\u90e8\u4fe1\u606f\uff1b TCP\u72b6\u6001\u8f6c\u79fb\u8fc7\u7a0b\uff1b TCP\u6570\u636e\u6d41\uff1b TCP\u6570\u636e\u6d41\u7684\u63a7\u5236\uff1a\u8d85\u65f6\u91cd\u4f20\u4e0e\u62e5\u585e\u63a7\u5236\u3002 TCP\u5934\u90e8\u4fe1\u606f \u00b6 \u540c\u6837\u7684\uff0c\u6211\u4eec\u7814\u7a76\u4e00\u4e0bTCP\u7684\u5934\u90e8\u4fe1\u606f\u3002 | 16\u4f4d\u6e90\u7aef\u53e3\u53f7 | 16\u4f4d\u76ee\u7684\u7aef\u53e3\u53f7| | 32\u4f4d\u5e8f\u53f7 | | 32\u4f4d\u786e\u8ba4\u53f7\u7801 | | 4\u4f4d\u5934\u90e8\u957f\u5ea6 | 6\u4f4d\u4fdd\u7559 | URG | ACK | PSH | RST | SYN | FIN | 16\u4f4d\u7a97\u53e3\u5927\u5c0f | | 16\u4f4d\u6821\u9a8c\u548c | 16\u4f4d\u7d27\u6025\u6307\u9488 | | \u9009\u9879\uff0c\u6700\u591a40\u5b57\u8282 | \u7aef\u53e3\u53f7\u544a\u77e5\u4e3b\u673a\u8be5\u62a5\u6587\u6bb5\u6765\u81ea\u54ea\u4e2a\u4e0a\u5c42\u534f\u8bae\u6216\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5728 /etc/services \u6587\u4ef6\u4e2d\u67e5\u627e\uff1b 32 \u4f4d\u5e8f\u5217\u53f7\u8868\u793aTCP\u62a5\u6587\u6bb5\u5728\u5b9e\u9645\u6574\u4e2a\u8fde\u63a5\u4e2d\u7684\u5b57\u8282\u5e8f\u53f7\uff0c\u9996\u5148\u968f\u673a\u751f\u6210\u4e00\u4e2aISN\uff08Initial Sequence Number\uff09\uff0c\u5982\u679c\u5df2\u7ecf\u53d1\u9001\u4e861024\u4e2a\u5b57\u8282\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u62a5\u6587\u7684\u5e8f\u5217\u53f7\u4e3a ISN + 1025\uff1b 32 \u4f4d\u786e\u8ba4\u53f7\uff0c\u5bf9\u53e6\u4e00\u65b9\u53d1\u9001\u6765\u7684TDCP\u62a5\u6587\u6bb5\u7684\u54cd\u5e94\uff0c\u5bf9\u6536\u5230\u7684TCP\u62a5\u6587\u6bb5\u7684\u5e8f\u53f7\u503c\u52a01; 4\u4f4d\u5934\u90e8\u957f\u5ea6\u8868\u793aTCP\u5934\u90e8\u6709\u591a\u5c11\u4e2a32bit\uff0c\u6700\u957f\u7684\u662f60\u5b57\u8282\uff1b 6\u4f4d\u6807\u5fd7\u4f4d\u5982\u4e0b\uff1aURG\u8868\u793a\u7d27\u6025\u6307\u9488\u662f\u5426\u6709\u6548\uff1bACK\u8868\u793a\u786e\u8ba4\u53f7\u662f\u5426\u6709\u6548\uff1bPSH\u63d0\u793a\u63a5\u6536\u7aef\u7acb\u5373\u8bfb\u53d6 \u6570\u636e\uff1bRST\u8868\u793a\u8981\u6c42\u5bf9\u65b9\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\uff1bSYN\u8868\u793a\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\uff1bFIN\u8868\u793a\u901a\u77e5\u5173\u95ed\u8fde\u63a5\u3002 16\u4f4d\u7a97\u53e3\u5927\u5c0f\uff1aTCP\u6d41\u91cf\u63a7\u5236\u7684\u624b\u6bb5\uff0c\u544a\u8bc9\u5bf9\u65b9\u81ea\u5df1\u7684TCP\u63a5\u53d7\u7f13\u51b2\u533a\u8fd8\u5bb9\u7eb3\u591a\u5c11\u5b57\u8282\uff1b 16\u4f4d\u6821\u9a8c\u548c\uff1b 16\u4f4d\u7d27\u6025\u6307\u9488\uff1a\u8868\u793a\u53d1\u9001\u7aef\u5c06\u6709\u7d27\u6025\u6570\u636e\u53d1\u9001\uff0c\u5bf9\u5e94\u7684\u5e8f\u5217\u53f7\u662f\u5f53\u524d\u5e8f\u5217\u53f7\u52a0\u7d27\u6025\u6307\u9488\u7684\u548c\u3002 TCP\u7684\u4e09\u6b21\u63e1\u624b\u4e0e\u56db\u6b21\u7ed3\u675f \u00b6 \u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\u62a5\u6587\u6bb55\u4e4b\u540eTCP\u8fde\u63a5\u8fdb\u5165\u534a\u5173\u95ed\u9636\u6bb5\uff0cKongming20\u53ef\u4ee5\u7ee7\u7eed\u53d1\u9001\u62a5\u6587\u6bb5\uff0c\u867d\u7136\u5728 \u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5f88\u5c11\u89c1\u3002 TCP\u72b6\u6001\u8f6c\u79fb\u603b\u56fe \u00b6 \u8fd9\u5f20\u56fe\u901a\u5e38\u6211\u76f4\u63a5\u5ffd\u7565\u4e86\uff0c\u4f46\u662f\u6211\u53d1\u73b0\u5f88\u591a\u77e5\u8bc6\u70b9\u90fd\u6d53\u7f29\u5728\u8fd9\u5f20\u56fe\u91cc\u4e86\u3002 \u670d\u52a1\u5668\u901a\u8fc7listen\u7cfb\u7edf\u8c03\u7528\u88ab\u52a8\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u6240\u4ee5\u4f1a\u662f\u88ab\u52a8\u6253\u5f00\uff1b \u5ba2\u6237\u7aef\u53d1\u9001\u8fde\u63a5\u8bf7\u6c42\uff0c\u8fdb\u5165 SYN_SENT \u72b6\u6001\uff1b \u670d\u52a1\u5668\u6536\u5230\u8fde\u63a5\u8bf7\u6c42\uff0c\u9879\u5ba2\u6237\u7aef\u53d1\u9001SYN\u6807\u5fd7\u7684\u786e\u8ba4\u62a5\u6587\uff0c\u6b64\u65f6\u8fde\u63a5\u5904\u4e8e SYN_RCYD \u72b6\u6001\uff1b \u5ba2\u6237\u7aef\u6536\u5230\u7b2c\u4e8c\u6b21\u786e\u8ba4\u62a5\u6587\u3001\u670d\u52a1\u5668\u6210\u529f\u63a5\u53d7\u5ba2\u6237\u7aef\u53d1\u56de\u7684\u7b2c\u4e09\u6b21\u63e1\u624b\u62a5\u6587\uff0c\u53cc\u65b9\u8fdb\u5165 ESTABLISHED \u72b6\u6001\uff1b \u5ba2\u6237\u7aef\u4e3b\u52a8\u5173\u95ed\u8fde\u63a5\u65f6\uff0c\u53d1\u9001\u7ed3\u675f\u62a5\u6587\u6bb5\uff0c\u540c\u65f6\u8fdb\u5165 CLOSE_WAIT_1 \u72b6\u6001\uff1b\u5f53\u6536\u5230\u5ba2\u6237\u7aef\u7684\u786e\u8ba4 \u62a5\u6587\uff0c\u8fdb\u5165 CLOSE_WAIT_2 \u72b6\u6001\uff0c\u6b64\u65f6\u670d\u52a1\u7aef\u5904\u4e8e CLOSE_WAIT \u72b6\u6001\uff0cTCP\u8fde\u63a5\u534a\u5173\u95ed\u3002 \u5f53\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u7aef\u7684\u7ed3\u675f\u62a5\u6587\u6bb5\u65f6\uff0c\u56de\u590dACK\u62a5\u6587\u6bb5\uff0c\u540c\u65f6\u8fdb\u5165 TIME_WAIT \u72b6\u6001\u3002 TIME_WAIT \u72b6\u6001\u5b58\u5728\u6709\u4e24\u70b9\u539f\u56e0\uff1a \u9632\u6b62\u8fdf\u6765\u7684TCP\u62a5\u6587\u6bb5\u88ab\u4e22\u5f03; \u4fdd\u8bc1\u8fdf\u6765\u7684TCP\u62a5\u6587\u6bb5\u6709\u8db3\u591f\u7684\u65f6\u95f4\u88ab\u8bc6\u522b\u4e22\u5f03\uff08\u9632\u6b62\u4f7f\u7528\u76f8\u540c\u7684\u7aef\u53e3\u7684\u65b0\u7684TCP\u8fde\u63a5\u8bfb\u53d6\u65e7\u7684\u62a5 \u6587\u6bb5\uff09\uff1b \u5ba2\u6237\u7aef\u901a\u5e38\u8981\u7b49\u5f85 2MSL(Maximum Segment Life, \u62a5\u6587\u6bb5\u6700\u5927\u751f\u5b58\u65f6\u95f4)\uff0c\u6807\u51c6\u6587\u6863RFC 1122\u7684 \u5efa\u8bae\u503c\u662f2\u5206\u949f\u3002 \u8d85\u65f6\u91cd\u4f20\u4e0e\u62e5\u585e\u63a7\u5236 \u00b6 \u9996\u5148\u8d85\u65f6\u91cd\u4f20\u7b56\u7565\u4f1a\u968f\u7740\u91cd\u4f20\u6b21\u6570\u7684\u589e\u52a0\uff0c\u7b49\u5f85\u65f6\u95f4\u4e5f\u4f1a\u53d8\u957f\u3002 \u800cTCP\u7684\u62e5\u585e\u63a7\u5236\u5c31\u662f\u4e00\u4e2a\u76f4\u89c9\u6027\u7684\u7ecf\u9a8c\u6027\u7684\u7b97\u6cd5\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u56db\u4e2a\u9636\u6bb5\uff1a\u6162\u542f\u52a8\u3001\u62e5\u585e\u907f\u514d\u3001 \u5feb\u901f\u91cd\u4f20\u548c\u5feb\u901f\u6062\u590d\u3002\u5177\u4f53\u8fc7\u7a0b\u7528\u4e00\u5f20\u56fe\u5c31\u53ef\u4ee5\u6982\u62ec\uff1a \u76f8\u5173\u53c2\u8003\u8d44\u6599 \u00b6 \u53c2\u8003\u89c6\u9891\uff1a https://www.bilibili.com/video/BV137411Z7LR?p=28 https://en.wikipedia.org/wiki/File:Tcp_state_diagram_fixed.svg","title":"\u8ba1\u7b97\u673a\u7f51\u7edc"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#_1","text":"\u6700\u8fd1\u6211\u5728\u770b\u7f51\u4e0a\u7684\u5404\u79cd\u9762\u8bd5\u5206\u4eab\uff0c\u5176\u4e2d\u5217\u51fa\u95ee\u9898\u90fd\u597d\u96be\u5440\u3002\u8eab\u4e3a\u4e00\u4e2a\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u5b66\u751f\uff0c\u6211\u751a\u662f\u7f9e\u803b\uff0c \u6240\u4ee5\u6211\u51b3\u5b9a\u628a\u8fd9\u4e9b\u4e1c\u897f\u8865\u9f50\u3002\u6211\u521a\u521a\u5f00\u59cb\u770b\u300aLinux\u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7f16\u7a0b\u300b\u548c\u300aLinux\u7f51\u7edc\u7f16\u7a0b\u300b\uff0c \u5176\u4e2d \u6709\u4e9b\u7ae0\u8282\u975e\u5e38\u9002\u5408\u505a\u6210\u7b14\u8bb0\u3002\u6211\u8fd8\u6253\u7b97\u4ece\u7f51\u4e0a\u627e\u4e00\u4e9b\u9762\u8bd5\u9898\uff0c\u9762\u8bd5\u9898\u6d89\u53ca\u7684\u77e5\u8bc6\u70b9\u5e94\u8be5\u662f\u975e\u5e38 \u7ecf\u5178\u548c\u91cd\u8981\u7684\u3002","title":"\u8ba1\u7b97\u673a\u7f51\u7edc"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#tcpip","text":"\u9996\u5148\u5c31\u662f\u4e00\u5f20\u975e\u5e38\u91cd\u8981\u7684\u534f\u8bae\u65cf\u4f53\u7cfb\u7ed3\u6784\u4e86\uff0c\u5b83\u7531\u56db\u5c42\u534f\u8bae\u5c42\u7ec4\u6210\uff1a\u6570\u636e\u94fe\u8def\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u548c \u5e94\u7528\u5c42\u3002 \u6570\u636e\u94fe\u8def\u5c42\uff1a\u7f51\u5361\u63a5\u53e3\u7684\u9a71\u52a8\u7a0b\u5e8f\u3001ARP\u534f\u8bae\uff08Address Resolve Protocal, \u5730\u5740\u89e3\u6790\u534f\u8bae) \u548c RARP\u534f\u8bae\uff08Reverse Address Resolve Protocal, \u9006\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09\uff0c\u4e3b\u8981\u662f\u7528\u4e8eip\u548cMAC \uff08Media Address Control Address\uff09\u8f6c\u5316\u3002 \u7f51\u7edc\u5c42\uff1a\u6570\u636e\u5305\u7684\u9009\u8def\u4e0e\u8f6c\u53d1\u3002\u5f62\u6210WAN\u548cLAN\u7684\u5c42\u3002\u6838\u5fc3\u534f\u8baeIP\uff08Internet Protocal\uff09\u548c ICMP\uff08Internet Control Message Protocal\uff09\u3002\u4ece\u4e0a\u56fe\u53ef\u77e5\uff0cICMP\u662f\u57fa\u4e8eIP\u7684\u3002 \u4f20\u8f93\u5c42\uff1a\u53ea\u5173\u5fc3\u901a\u4fe1\u7684\u4e24\u7aef\uff0c\u4e2d\u95f4\u73af\u8282\u7531\u7f51\u7edc\u5c42\u8d1f\u8d23\u3002\u4e3b\u8981\u534f\u8bae\u662fTCP\u3001UDP\u548cSCTP\u3002 \u5e94\u7528\u5c42\uff1aping\u3001DNS\u670d\u52a1\u90fd\u662f\u5c5e\u4e8e\u8fd9\u4e00\u5c42\u7684\u3002","title":"TCP/IP \u534f\u8bae\u65cf"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#ip","text":"IP\u534f\u8bae\u662fsocket\u7f51\u7edc\u7f16\u7a0b\u7684\u57fa\u7840\u4e86\uff0c\u6240\u4ee5\u8fd8\u662f\u9700\u8981\u641e\u660e\u767d\u7684\u3002IP\u534f\u8bae\u7684\u5173\u952e\u5c31\u662f\u4e24\u70b9\uff1a\u5934\u90e8\u4fe1\u606f \u548c\u8def\u7531\u8f6c\u53d1\u8fc7\u7a0b\u3002 IP\u534f\u8bae\u662f\u65e0\u8fde\u63a5\u3001\u65e0\u72b6\u6001\u548c\u4e0d\u53ef\u9760\u7684\u3002","title":"IP\u534f\u8bae\u8be6\u89e3"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#ip_1","text":"\u6211\u4eec\u5148\u6765\u6574\u4e00\u6ce2IP\u534f\u8bae\u7684\u5934\u90e8\u4fe1\u606f\u3002 |4\u4f4d\u7248\u672c\u53f7|4\u4f4d\u5934\u90e8\u957f\u5ea6|8\u4f4d\u670d\u52a1\u7c7b\u578b\uff08TOS\uff09| 16\u4f4d\u603b\u957f\u5ea6\uff08\u5b57\u8282\u6570\uff09 | | 16\u4f4d\u6807\u8bc6\u7b26 |3\u4f4d\u6807\u5fd7| 13\u4f4d\u7247\u504f\u79fb | | 8\u4f4d\u751f\u5b58\u65f6\u95f4\uff08TTL\uff09 | 8\u4f4d\u534f\u8bae | 16\u4f4d\u5934\u90e8\u68c0\u9a8c\u548c | | 32\u4f4d\u6e90\u7aefIP\u5730\u5740 | | 32\u4f4d\u76ee\u7684\u7aefIP\u5730\u5740 | | \u9009\u9879\u6700\u591a40\u5b57\u8282 | 4\u4f4d\u7248\u672c\u53f7\uff1aipv4\u8fd8\u662fipv6\uff1b 4\u4f4d\u5934\u90e8\u957f\u5ea6\uff1b 8\u4f4d\u670d\u52a1\u7c7b\u578b\uff1a3\u4f4d\u4f18\u5148\u6743\u5b57\u6bb5\uff08\u5df2\u5ffd\u7565\uff09\uff0c4\u4f4dTOS(Type of service)\u5b57\u6bb5\uff0c1\u4f4d\u4fdd\u7559\u5b57\u6bb5\u4e3a0\uff1b \u6700\u5c0f\u65f6\u5ef6\u3001\u6700\u5927\u541e\u5410\u91cf\u3001\u6700\u9ad8\u53ef\u9760\u6027\u548c\u6700\u5c0f\u8d39\u7528\uff0c\u53ea\u6709\u4e00\u4e2a\u80fd\u653e\u7f6e1\uff1b 16\u4f4d\u603b\u957f\u5ea6\uff1aIP\u6570\u636e\u62a5\u603b\u957f\u5ea6\uff1b 16\u4f4d\u6807\u8bc6\u7b26\uff1a\u6570\u636e\u5305\u6807\u8bc6\uff0c\u6240\u6709\u5206\u7247\u662f\u540c\u4e00\u4e2a\u6807\u8bc6\u7b26\uff1b 3\u4f4d\u6807\u5fd7\uff1a|\u4fdd\u7559|\u7981\u6b62\u5206\u7247|\u540e\u9762\u8fd8\u6709\u5206\u7247|\uff1b 13\u4f4d\u5206\u7247\u504f\u79fb\uff1b 8\u4f4d\u751f\u5b58\u65f6\u95f4\uff1aTTL\uff08Time to live)\uff0c\u901a\u5e38\u521d\u59cb\u503c\u4e3a64\uff1b 8\u4f4d\u534f\u8bae\uff1aICMP\u4e3a1\uff0cTCP\u4e3a6\uff0cUDP\u4e3a17\uff1b 16\u4f4d\u5934\u90e8\u68c0\u9a8c\u548c\uff1b 32\u4f4d\u6e90\u7aefIP\u5730\u5740\uff1b 32\u4f4d\u76ee\u7684\u7aefIP\u5730\u5740\u3002","title":"IP \u5934\u90e8\u4fe1\u606f"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#ip_2","text":"IP\u6570\u636e\u62a5\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7MTU\uff0c\u6240\u4ee5\u6bcf\u4e2aIP\u6570\u636e\u62a5\u80fd\u5305\u542b\u7684\u6570\u636e\u90e8\u5206\u957f\u5ea6\u6700\u957f\u4f4d1480\uff0c\u6240\u4ee5\u8981\u5206\u7247\u3002","title":"IP\u5206\u7247"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#ip_3","text":"\u68c0\u67e5\u662f\u5426\u53d1\u7ed9\u672c\u673a\uff0c\u5982\u679c\u662f\u5c31\u8f6c\u5165\u4f20\u8f93\u5c42\u5904\u7406\uff0c\u5982\u679c\u4e0d\u662f\u5c31\u8fdb\u5165\u8f6c\u53d1\uff0c\u6839\u636e\u8def\u7531\u673a\u5236\u8fdb\u884c\u8f6c\u53d1\uff0c\u8fd9 \u5c31\u6d89\u53ca\u5230\u8def\u7531\u8868route\u548c\u8def\u7531\u8868\u66f4\u65b0\u7b56\u7565\uff0c\u4f7f\u7528ICMP\u91cd\u5b9a\u5411\u62a5\u6587\u66f4\u65b0\u3002","title":"IP\u8def\u7531\u548c\u8f6c\u53d1"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#tcp","text":"\u548cUDP\u76f8\u6bd4\uff0cTCP\u5177\u6709\u9762\u5411\u8fde\u63a5\u3001\u5b57\u8282\u6d41\u548c\u53ef\u9760\u8fd0\u8f93\u7684\u7279\u70b9\u3002\u9762\u5411\u8fde\u63a5\u6307\u7684\u662f\u53cc\u65b9\u5fc5\u987b\u5efa\u7acb\u597d\u8fde\u63a5\u4e4b\u540e \u624d\u80fd\u4f20\u8f93\u6570\u636e\uff1bTCP\u901a\u4fe1\u53cc\u65b9\u53d1\u9001\u548c\u63a5\u53d7\u7684\u4fe1\u606f\u90fd\u4f1a\u5148\u8fdb\u5165\u7f13\u5b58\u533a\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u968f\u65f6\u6309\u7167\u81ea\u5df1\u7684\u9700\u6c42 \u8bfb\u5199\uff0c\u53cc\u65b9\u7684\u8bfb\u5199\u6b21\u6570\u6ca1\u6709\u56fa\u5b9a\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u662f\u5b57\u8282\u6d41\uff1bTCP\u4f7f\u7528\u4e86\u53d1\u9001\u5e94\u7b54\u673a\u5236\u548c\u8d85\u65f6\u91cd\u4f20\u673a\u5236\uff0c \u4fdd\u8bc1\u4e86\u4f20\u8f93\u7684\u53ef\u9760\u6027\u3002\u56e0\u4e3aTCP\u662f \u9762\u5411\u8fde\u63a5\u7684\uff0c\u6240\u4ee5\u5bf9\u5e7f\u64ad\u548c\u591a\u64ad\u4e0d\u53cb\u597d\uff0c\u5bf9\u4e8e\u89c6\u9891\u76f4\u64ad\u6211\u4eec\u901a\u5e38 \u4f7f\u7528UDP\u3002 TCP\u534f\u8bae\u6838\u5fc3\u77e5\u8bc6\u5206\u4e3a\u5982\u4e0b\u56db\u4e2a\u90e8\u5206\uff1a TCP\u5934\u90e8\u4fe1\u606f\uff1b TCP\u72b6\u6001\u8f6c\u79fb\u8fc7\u7a0b\uff1b TCP\u6570\u636e\u6d41\uff1b TCP\u6570\u636e\u6d41\u7684\u63a7\u5236\uff1a\u8d85\u65f6\u91cd\u4f20\u4e0e\u62e5\u585e\u63a7\u5236\u3002","title":"TCP\u534f\u8bae\u8be6\u89e3"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#tcp_1","text":"\u540c\u6837\u7684\uff0c\u6211\u4eec\u7814\u7a76\u4e00\u4e0bTCP\u7684\u5934\u90e8\u4fe1\u606f\u3002 | 16\u4f4d\u6e90\u7aef\u53e3\u53f7 | 16\u4f4d\u76ee\u7684\u7aef\u53e3\u53f7| | 32\u4f4d\u5e8f\u53f7 | | 32\u4f4d\u786e\u8ba4\u53f7\u7801 | | 4\u4f4d\u5934\u90e8\u957f\u5ea6 | 6\u4f4d\u4fdd\u7559 | URG | ACK | PSH | RST | SYN | FIN | 16\u4f4d\u7a97\u53e3\u5927\u5c0f | | 16\u4f4d\u6821\u9a8c\u548c | 16\u4f4d\u7d27\u6025\u6307\u9488 | | \u9009\u9879\uff0c\u6700\u591a40\u5b57\u8282 | \u7aef\u53e3\u53f7\u544a\u77e5\u4e3b\u673a\u8be5\u62a5\u6587\u6bb5\u6765\u81ea\u54ea\u4e2a\u4e0a\u5c42\u534f\u8bae\u6216\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5728 /etc/services \u6587\u4ef6\u4e2d\u67e5\u627e\uff1b 32 \u4f4d\u5e8f\u5217\u53f7\u8868\u793aTCP\u62a5\u6587\u6bb5\u5728\u5b9e\u9645\u6574\u4e2a\u8fde\u63a5\u4e2d\u7684\u5b57\u8282\u5e8f\u53f7\uff0c\u9996\u5148\u968f\u673a\u751f\u6210\u4e00\u4e2aISN\uff08Initial Sequence Number\uff09\uff0c\u5982\u679c\u5df2\u7ecf\u53d1\u9001\u4e861024\u4e2a\u5b57\u8282\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u62a5\u6587\u7684\u5e8f\u5217\u53f7\u4e3a ISN + 1025\uff1b 32 \u4f4d\u786e\u8ba4\u53f7\uff0c\u5bf9\u53e6\u4e00\u65b9\u53d1\u9001\u6765\u7684TDCP\u62a5\u6587\u6bb5\u7684\u54cd\u5e94\uff0c\u5bf9\u6536\u5230\u7684TCP\u62a5\u6587\u6bb5\u7684\u5e8f\u53f7\u503c\u52a01; 4\u4f4d\u5934\u90e8\u957f\u5ea6\u8868\u793aTCP\u5934\u90e8\u6709\u591a\u5c11\u4e2a32bit\uff0c\u6700\u957f\u7684\u662f60\u5b57\u8282\uff1b 6\u4f4d\u6807\u5fd7\u4f4d\u5982\u4e0b\uff1aURG\u8868\u793a\u7d27\u6025\u6307\u9488\u662f\u5426\u6709\u6548\uff1bACK\u8868\u793a\u786e\u8ba4\u53f7\u662f\u5426\u6709\u6548\uff1bPSH\u63d0\u793a\u63a5\u6536\u7aef\u7acb\u5373\u8bfb\u53d6 \u6570\u636e\uff1bRST\u8868\u793a\u8981\u6c42\u5bf9\u65b9\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\uff1bSYN\u8868\u793a\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\uff1bFIN\u8868\u793a\u901a\u77e5\u5173\u95ed\u8fde\u63a5\u3002 16\u4f4d\u7a97\u53e3\u5927\u5c0f\uff1aTCP\u6d41\u91cf\u63a7\u5236\u7684\u624b\u6bb5\uff0c\u544a\u8bc9\u5bf9\u65b9\u81ea\u5df1\u7684TCP\u63a5\u53d7\u7f13\u51b2\u533a\u8fd8\u5bb9\u7eb3\u591a\u5c11\u5b57\u8282\uff1b 16\u4f4d\u6821\u9a8c\u548c\uff1b 16\u4f4d\u7d27\u6025\u6307\u9488\uff1a\u8868\u793a\u53d1\u9001\u7aef\u5c06\u6709\u7d27\u6025\u6570\u636e\u53d1\u9001\uff0c\u5bf9\u5e94\u7684\u5e8f\u5217\u53f7\u662f\u5f53\u524d\u5e8f\u5217\u53f7\u52a0\u7d27\u6025\u6307\u9488\u7684\u548c\u3002","title":"TCP\u5934\u90e8\u4fe1\u606f"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#tcp_2","text":"\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\u62a5\u6587\u6bb55\u4e4b\u540eTCP\u8fde\u63a5\u8fdb\u5165\u534a\u5173\u95ed\u9636\u6bb5\uff0cKongming20\u53ef\u4ee5\u7ee7\u7eed\u53d1\u9001\u62a5\u6587\u6bb5\uff0c\u867d\u7136\u5728 \u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5f88\u5c11\u89c1\u3002","title":"TCP\u7684\u4e09\u6b21\u63e1\u624b\u4e0e\u56db\u6b21\u7ed3\u675f"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#tcp_3","text":"\u8fd9\u5f20\u56fe\u901a\u5e38\u6211\u76f4\u63a5\u5ffd\u7565\u4e86\uff0c\u4f46\u662f\u6211\u53d1\u73b0\u5f88\u591a\u77e5\u8bc6\u70b9\u90fd\u6d53\u7f29\u5728\u8fd9\u5f20\u56fe\u91cc\u4e86\u3002 \u670d\u52a1\u5668\u901a\u8fc7listen\u7cfb\u7edf\u8c03\u7528\u88ab\u52a8\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u6240\u4ee5\u4f1a\u662f\u88ab\u52a8\u6253\u5f00\uff1b \u5ba2\u6237\u7aef\u53d1\u9001\u8fde\u63a5\u8bf7\u6c42\uff0c\u8fdb\u5165 SYN_SENT \u72b6\u6001\uff1b \u670d\u52a1\u5668\u6536\u5230\u8fde\u63a5\u8bf7\u6c42\uff0c\u9879\u5ba2\u6237\u7aef\u53d1\u9001SYN\u6807\u5fd7\u7684\u786e\u8ba4\u62a5\u6587\uff0c\u6b64\u65f6\u8fde\u63a5\u5904\u4e8e SYN_RCYD \u72b6\u6001\uff1b \u5ba2\u6237\u7aef\u6536\u5230\u7b2c\u4e8c\u6b21\u786e\u8ba4\u62a5\u6587\u3001\u670d\u52a1\u5668\u6210\u529f\u63a5\u53d7\u5ba2\u6237\u7aef\u53d1\u56de\u7684\u7b2c\u4e09\u6b21\u63e1\u624b\u62a5\u6587\uff0c\u53cc\u65b9\u8fdb\u5165 ESTABLISHED \u72b6\u6001\uff1b \u5ba2\u6237\u7aef\u4e3b\u52a8\u5173\u95ed\u8fde\u63a5\u65f6\uff0c\u53d1\u9001\u7ed3\u675f\u62a5\u6587\u6bb5\uff0c\u540c\u65f6\u8fdb\u5165 CLOSE_WAIT_1 \u72b6\u6001\uff1b\u5f53\u6536\u5230\u5ba2\u6237\u7aef\u7684\u786e\u8ba4 \u62a5\u6587\uff0c\u8fdb\u5165 CLOSE_WAIT_2 \u72b6\u6001\uff0c\u6b64\u65f6\u670d\u52a1\u7aef\u5904\u4e8e CLOSE_WAIT \u72b6\u6001\uff0cTCP\u8fde\u63a5\u534a\u5173\u95ed\u3002 \u5f53\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u7aef\u7684\u7ed3\u675f\u62a5\u6587\u6bb5\u65f6\uff0c\u56de\u590dACK\u62a5\u6587\u6bb5\uff0c\u540c\u65f6\u8fdb\u5165 TIME_WAIT \u72b6\u6001\u3002 TIME_WAIT \u72b6\u6001\u5b58\u5728\u6709\u4e24\u70b9\u539f\u56e0\uff1a \u9632\u6b62\u8fdf\u6765\u7684TCP\u62a5\u6587\u6bb5\u88ab\u4e22\u5f03; \u4fdd\u8bc1\u8fdf\u6765\u7684TCP\u62a5\u6587\u6bb5\u6709\u8db3\u591f\u7684\u65f6\u95f4\u88ab\u8bc6\u522b\u4e22\u5f03\uff08\u9632\u6b62\u4f7f\u7528\u76f8\u540c\u7684\u7aef\u53e3\u7684\u65b0\u7684TCP\u8fde\u63a5\u8bfb\u53d6\u65e7\u7684\u62a5 \u6587\u6bb5\uff09\uff1b \u5ba2\u6237\u7aef\u901a\u5e38\u8981\u7b49\u5f85 2MSL(Maximum Segment Life, \u62a5\u6587\u6bb5\u6700\u5927\u751f\u5b58\u65f6\u95f4)\uff0c\u6807\u51c6\u6587\u6863RFC 1122\u7684 \u5efa\u8bae\u503c\u662f2\u5206\u949f\u3002","title":"TCP\u72b6\u6001\u8f6c\u79fb\u603b\u56fe"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#_2","text":"\u9996\u5148\u8d85\u65f6\u91cd\u4f20\u7b56\u7565\u4f1a\u968f\u7740\u91cd\u4f20\u6b21\u6570\u7684\u589e\u52a0\uff0c\u7b49\u5f85\u65f6\u95f4\u4e5f\u4f1a\u53d8\u957f\u3002 \u800cTCP\u7684\u62e5\u585e\u63a7\u5236\u5c31\u662f\u4e00\u4e2a\u76f4\u89c9\u6027\u7684\u7ecf\u9a8c\u6027\u7684\u7b97\u6cd5\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u56db\u4e2a\u9636\u6bb5\uff1a\u6162\u542f\u52a8\u3001\u62e5\u585e\u907f\u514d\u3001 \u5feb\u901f\u91cd\u4f20\u548c\u5feb\u901f\u6062\u590d\u3002\u5177\u4f53\u8fc7\u7a0b\u7528\u4e00\u5f20\u56fe\u5c31\u53ef\u4ee5\u6982\u62ec\uff1a","title":"\u8d85\u65f6\u91cd\u4f20\u4e0e\u62e5\u585e\u63a7\u5236"},{"location":"Blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#_3","text":"\u53c2\u8003\u89c6\u9891\uff1a https://www.bilibili.com/video/BV137411Z7LR?p=28 https://en.wikipedia.org/wiki/File:Tcp_state_diagram_fixed.svg","title":"\u76f8\u5173\u53c2\u8003\u8d44\u6599"},{"location":"ML/01-EM/","text":"EM \u7b97\u6cd5 \u00b6 \u901a\u5e38\u4ecb\u7ecdEM\u7b97\u6cd5\u90fd\u4f1a\u5148\u4ecb\u7ecd\u4e00\u4e2a\u7279\u6b8a\u7684\u95ee\u9898\uff1a\u5982\u4f55\u5c06\u4e00\u5806\u6837\u672c\u62df\u5408\u6210\u67d0\u4e2a\u9ad8\u65af\u6df7\u5408\u6a21\u578b\uff08GMM\uff09\u3002\u56e0\u4e3a\u76f4\u63a5\u8bb2EM\u7b97\u6cd5\u6240\u89e3\u51b3\u7684\u62bd\u8c61\u95ee\u9898\uff0c\u521d\u5b66\u8005\u4f1a\u975e\u5e38\u5947\u602a\uff0c\u73b0\u5b9e\u4e2d\u600e\u4e48\u4f1a\u6709\u8fd9\u79cd\u5f62\u5f0f\u7684\u95ee\u9898\u3002\u4f46\u662f\u6211\u89c9\u5f97\u4ece\u62bd\u8c61\u7684\u95ee\u9898\u8bb2\u8d77\u5f88\u4f18\u96c5\uff0c\u6240\u4ee5\u6211\u5c31\u5e72\u8106\u5148\u4ece\u62bd\u8c61\u7684\u95ee\u9898\u8bb2\u8d77\u3002 \u76ee\u6807\u95ee\u9898 \u00b6 \u9996\u5148\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u5047\u8bbe\u96c6 \\(\\mathcal{H}=\\{\\mathcal{P}_{\\theta}(x)\\}\\) \u3002 \u73b0\u5728\u7ed9\u6211\u4eec\u4ece\u672a\u77e5\u5206\u5e03 \\(\\mathcal{D}\\) \u4e2d\u72ec\u7acb\u91c7\u96c6\u4e00\u5806\u6837\u672c \\(\\mathcal{S} = \\{x_1, x_2, \\ldots, x_m\\}\\) \uff0c \u6211\u4eec\u5e0c\u671b\u786e\u5b9a\u54ea\u4e2a \\(\\mathcal{P}_{\\theta}(x)\\) \u66f4\u63a5\u8fd1\u8fd9\u7ec4\u6570\u636e\u7684\u771f\u5b9e\u5206\u5e03 \\(\\mathcal{D}\\) \u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u635f\u5931\u51fd\u6570\u6765\u8861\u91cf\u4e24\u4e2a\u5206\u5e03\u7684\u63a5\u8fd1\u7a0b\u5ea6\u3002\u8fd9\u91cc\u6211\u4eec\u7528\u7684\u662fKL\u8ddd\u79bb\uff0c\u6765\u6784\u9020\u771f\u5b9e\u8bef\u5dee\u51fd\u6570\uff1a \\[ \\tag{0} \\label{trueloss} L_{\\mathcal{D}}(p_{\\theta}) = \\mathbb{E}_{p_\\mathcal{D}(\\mathbf{x})}\\left[\\ln\\left( \\frac{p_{\\mathcal{D}}(\\mathbf{x})}{p_{\\theta}(\\mathbf{x})} \\right)\\right]. \\] \u90a3\u4e48\uff0c\u5bf9\u5e94\u7684\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u4e3a\uff1a \\[ L_{\\mathcal{S}}(\\theta) =-\\frac{1}{m}\\sum^{m}_{i=1} \\ln \\mathcal{P}_{\\theta}(x_i). \\tag{1} \\] \u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff08\u9ad8\u65af\u6df7\u5408\u6a21\u578b\uff09\uff0c \\(\\mathcal{P}_\\theta(x)\\) \u8fd8\u548c\u53e6\u4e00\u4e2a \u9690\u968f\u673a\u53d8\u91cf \\(\\mathcal{Z} = \\{z_1, z_2, \\ldots, z_k\\}\\) \u6709\u5173\uff1a \\[ \\mathcal{P}_\\theta(x) = \\sum^{k}_{j=1} \\mathcal{P_{\\theta}(z_j)} \\mathcal{P}_\\theta(x \\vert z_j) =\\sum^k_{j=1} \\mathcal{P}_\\theta(x, z_j). \\tag{2} \\] \u5f53\u6211\u4eec\u88ab\u9650\u5236\u53ea\u80fd\u83b7\u5f97 \\(\\mathcal{P}_{\\theta}(z)\\) \u548c \\(\\mathcal{P}_\\theta(x \\vert z_j)\\) \u65f6\uff0c \u76ee\u6807\u51fd\u6570\u7684\u4f18\u5316\u5c31\u53d8\u5f97\u975e\u5e38\u56f0\u96be\u4e86: \\[ L_{\\mathcal{S}}(\\theta) = -\\sum^{m}_{i=1} \\ln \\sum^{k}_{j=1} \\mathcal{P_{\\theta}(x, z_j)}. \\tag{3} \\] \u8fd9\u91cc \u6982\u7387 \u8fd8\u662f \u6982\u7387\u5bc6\u5ea6 \u5728\u5f88\u591a\u8d44\u6599\u91cc\u975e\u5e38\u5bb9\u6613\u641e\u6df7\u3002 EM\u7b97\u6cd5 \u00b6 \u6211\u4eec\u5148\u4ecb\u7ecd\u53e6\u4e00\u4e2a\u635f\u5931\u51fd\u6570\uff0c\u4e4d\u4e00\u770b\u548c\u524d\u9762\u95ee\u9898\u6beb\u65e0\u5173\u7cfb\uff0c \u5176\u5b9e\u6709\u975e\u5e38\u5de7\u5999\u7684\u8054\u7cfb: \\[ G_{\\mathcal{S}}(Q, \\theta) = \\sum^{m}_{i=1}\\sum^{k}_{j=1} Q_{i, j} \\ln Q_{i, j} - \\sum^{m}_{i=1} \\sum^{k}_{j=1} Q_{i, j} \\log[ \\mathcal{P}_{\\theta}(x_i, z_j)]. \\tag{4} \\] EM\u7b97\u6cd5\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a \\[ \\begin{cases} \\tag{5} Q^{(t+1)} = \\min_{Q} G_{\\mathcal{S}}(Q, \\theta^{(t)}), \\\\ \\theta^{(t+1)} = \\min_{\\theta} G_{\\mathcal{S}}(Q^{(t+1)}, \\theta). \\end{cases} \\] \u8981\u4e86\u89e3 \\(G_{\\mathcal{S}}(Q, \\theta)\\) \u4e0e \\(L_{\\mathcal{S}}(\\theta)\\) \u6211\u4eec\u9700\u8981\u7814\u7a76\u4f18\u5316\u8fc7\u7a0b\u4e2d\u7684\u7b2c\u4e00\u6b65\u3002 \\[ \\begin{aligned} & G_{S}(Q, \\theta) \\\\ =& -\\sum^{m}_{i=1}\\sum^{k}_{j=1} Q_{i, j} \\ln \\left\\{\\frac{\\mathcal{P}_{\\theta}(x_i, z_j)}{Q_{i, j}}\\right\\} \\\\ \\ge& -\\sum^{m}_{i=1}\\ln \\left\\{\\sum^{k}_{j=1} Q_{i, j} \\frac{\\mathcal{P}_{\\theta}(x_i, z_j)}{Q_{i, j}}\\right\\} \\\\ =& -\\sum^{m}_{i=1}\\ln \\left\\{\\sum^{k}_{j=1} \\mathcal{P}_{\\theta}(x_i, z_j)\\right\\} \\\\ =&L_{\\mathcal{S}}(\\theta) \\end{aligned} \\] \u5f53 \\(Q_{i, j} = \\mathcal{P}_{\\theta}(z_j \\vert x_i)\\) \u65f6\uff0c \\[ \\begin{aligned} &G_{\\mathcal{S}}(Q, \\theta) \\\\ =& -\\sum^{m}_{i=1} \\sum^{k}_{j=1} \\mathcal{P_{\\theta}}(z_j \\vert x_i) \\ln \\left\\{\\frac{\\mathcal{P}_{\\theta}(x_i, z_j)}{\\mathcal{P}_{\\theta}(z_j \\vert x_i)}\\right\\} \\\\ =& -\\sum^{m}_{i=1} \\sum^{k}_{j=1} \\mathcal{P_{\\theta}}(z_j \\vert x_i) \\ln \\mathcal{P}_{\\theta}(x_i) \\\\ =& -\\sum^{m}_{i=1} \\ln \\mathcal{P}_{\\theta}(x_i) \\\\ =& L_{\\mathcal{S}}(\\theta). \\end{aligned} \\] \u7efc\u4e0a\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b2c\u4e00\u6b65\u4f18\u5316\u5b58\u5728\u95ed\u89e3\uff1a \\(Q_{i,j}^{(t+1)} = \\mathcal{P}_{\\theta^{(t)}}(z_j \\vert x_i)\\) , \u5e76\u4e14 \\(G_{\\mathcal{S}}(Q^{(t+1)}, \\theta^{(t)}) = L_{\\mathcal{S}}(\\theta^{(t)})\\) . \u8fd9\u4e00\u6b65\u662f\u6c42\u671f\u671b\uff0c\u6240\u4ee5\u88ab\u79f0\u4e3a Expectation Step \u3002 \u8fd9\u4e00\u6b65\u540c\u65f6\u9700\u8981\u7528\u5230\u8d1d\u53f6\u65af\u516c\u5f0f \\[ Q^{(t+1)}_{i, j} = \\frac{\\mathcal{P}_{\\theta^{(t)}}(z_j) \\mathcal{P}_{\\theta^{(t)}}(x_i \\vert z_j)}{\\sum^{k}_{j'=1}\\mathcal{P}_{\\theta^{(t)}}(z_{j'}) \\mathcal{P}_{\\theta^{(t)}}(x_i \\vert z_{j'})}. \\] \u53c8\u56e0\u4e3a\u7b2c\u4e8c\u6b65\uff08 Maximization Step \uff09\u6700\u5c0f\u5316 \\(\\theta\\) \u65f6\u4fdd\u8bc1 \\(G_{\\mathcal{S}}(Q^{(t+1)}, \\theta^{(t+1)}) \\le G_{\\mathcal{S}}(Q^{(t+1)}, \\theta^{(t)})\\) , \u6240\u4ee5\u6211\u4eec\u53ef\u5f97 \\[ L_{\\mathcal{S}}(\\theta^{(t+1)}) = G_{\\mathcal{S}}(Q^{(t+2)}, \\theta^{(t+1)}) \\le G_{\\mathcal{S}}(Q^{(t+1)}, \\theta^{(t+1)}) \\\\ \\le G_{\\mathcal{S}}(Q^{(t+1)}, \\theta^{(t)}) = L_{\\mathcal{S}}(\\theta^{(t)}). \\] \u9ad8\u65af\u6df7\u5408\u6a21\u578b \u00b6 k\u4e2a\u9ad8\u65af\u5206\u5e03\u7684\u6df7\u5408\u6a21\u578b\u5bf9\u5e94\u7684hypothesis\u96c6\u5982\u4e0b\uff1a \\[ \\mathcal{H} = \\left\\{ \\mathcal{P}_{\\theta}(x) = \\sum^{k}_{j = 1} \\mathcal{P}_{\\theta}(z_j) \\mathcal{N}_{z_j}(\\mu_{\\theta}, \\Sigma_{\\theta}) \\right\\}. \\] \u53ef\u4ee5\u7b80\u5316 \\(\\mathcal{P}_{\\theta}(z_j) = \\pi_j\\) , \\(\\mathcal{N}_{z_j}(\\mu_{\\theta}, \\Sigma_{\\theta}) = \\mathcal{N}(\\mu_j, \\Sigma_j)\\) , \u90a3\u4e48hypothesis\u96c6\u5c31\u53d8\u6210\u6211\u4eec\u6bd4\u8f83\u5e38\u89c1\u7684\u5f62\u5f0f\uff1a \\[ \\mathcal{H} = \\left\\{ \\mathcal{P}_{\\theta}(x) = \\sum^{k}_{j = 1} \\pi_j \\mathcal{N}(\\mu_{j}, \\Sigma_{j}) \\right\\}. \\] \u4ece\u8fd9\u4e2a\u7279\u4f8b\u6211\u4eec\u53ef\u4ee5\u611f\u53d7\u5230\uff1a \\(\\mathcal{P}_{\\theta}(z)\\) \u5f88\u5bb9\u6613\u83b7\u5f97; \u8fd9\u91cc\u7684 \\(x\\) \u662f\u8fde\u7eed\u51fd\u6570\uff0c\u6211\u4eec\u4e5f\u80fd\u5f88\u5bb9\u6613\u83b7\u5f97\u6761\u4ef6\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \\(p_{\\theta}(x \\vert z)\\) \uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6781\u5c0f\u503c\u91cf \\(\\Delta x\\) \uff0c\u90a3\u4e48 \\(\\mathcal{P}_{\\theta}(x\\vert z) = p_{\\theta}(x \\vert z) \\Delta x\\) . \u9996\u5148\u662f Expectation Step : \\[ Q_{i, j} = \\frac{\\pi_j \\mathcal{N}(\\mu_j, \\Sigma_j) \\Delta x}{\\sum^{k}_{j' = 1} \\pi_j \\mathcal{N}(\\mu_j, \\Sigma_j) \\Delta x} = \\frac{\\pi_j \\mathcal{N}(\\mu_j, \\Sigma_j)}{\\sum^{k}_{j' = 1} \\pi_j \\mathcal{N}(\\mu_j, \\Sigma_j)}. \\] \u90a3\u4e48\uff0c Maximumization Step \u9700\u8981\u6c42\u89e3\u7684\u95ee\u9898\u662f\uff1a \\[ \\begin{aligned} &\\max_{\\theta} \\sum^{m}_{i=1} \\sum^{k}_{j=1} Q_{i,j} \\ln \\mathcal{P}(x_i, z_j) \\\\ =&\\max_{\\theta} \\sum^{m}_{i=1} \\sum^{k}_{j=1} Q_{i,j} [\\ln \\pi_j + \\ln \\mathcal{N}(x_i, \\mu_j, \\Sigma_j) + \\ln \\Delta x] \\\\ \\end{aligned} \\] \u9996\u5148\u663e\u7136 \\(\\pi^*_j = \\frac{1}{m}\\sum_{i=1}^{m} Q_{i,j}\\) , \u5176\u6b21 \u56e0\u4e3a \\[ \\mathcal{N}(x_i, \\mu_j, \\Sigma_j) = \\frac{1}{(2\\pi)^{D/2}}\\frac{1}{\\vert \\Sigma \\vert^{1/2}} \\exp\\left\\{-\\frac{1}{2} (x_i - \\mu_j)^T \\Sigma_j^{-1} (x_i - \\mu_j)\\right\\}, \\] \u6240\u4ee5\u4e5f\u663e\u7136\u53ef\u5f97 \\(\\mu^*_j = \\frac{\\sum^{m}_{i=1} Q_{i, j} x_i}{\\sum^{m}_{i=1} Q_{i, j}}\\) \u3002 \u6709\u70b9\u590d\u6742\u7684\u662f\u6c42\u89e3 \\(\\Sigma_j\\) : \\[ \\max_{\\Sigma_j} \\sum^{m}_{i=1}\\sum^{k}_{j=1} Q_{i, j} \\left[\\frac{1}{2} \\ln\\vert \\Sigma^{-1} \\vert - \\frac{1}{2}(x_i - \\mu^*_j)^T \\Sigma^{-1}_{j} (x_i - \\mu^*_j)\\right]. \\] \u6211\u4eec\u9700\u8981\u7528\u5230\u4e24\u4e2a\u77e9\u9635\u5bfc\u6570 \\(\\frac{\\partial}{\\partial A}\\ln \\vert A \\vert = (A^{-1})^T\\) \u548c \\(\\frac{\\partial}{\\partial A}Tr(A^T B) = B\\) \uff0c\u5148\u5bf9 \\(\\Sigma^{-1}\\) \u6c42\u5bfc\u53ef\u5f97\uff1a \\(\\Sigma_j = \\frac{1}{\\sum^{m}_{i=1} Q_{i, j}}\\sum_{i=1}^m Q_{i, j} (x_i - \\mu^*_j)(x_i - \\mu^*_j)^T\\) . \u975e\u5e38\u6709\u610f\u601d\u7684\u662f\uff0cK-means\u7b97\u6cd5\u53ef\u4ee5\u770b\u6210GMM\u7b97\u6cd5\u9650\u5236\u5728 \\(\\Sigma \\rightarrow 0\\) \u7684\u7b97\u6cd5\u3002","title":"EM"},{"location":"ML/01-EM/#em","text":"\u901a\u5e38\u4ecb\u7ecdEM\u7b97\u6cd5\u90fd\u4f1a\u5148\u4ecb\u7ecd\u4e00\u4e2a\u7279\u6b8a\u7684\u95ee\u9898\uff1a\u5982\u4f55\u5c06\u4e00\u5806\u6837\u672c\u62df\u5408\u6210\u67d0\u4e2a\u9ad8\u65af\u6df7\u5408\u6a21\u578b\uff08GMM\uff09\u3002\u56e0\u4e3a\u76f4\u63a5\u8bb2EM\u7b97\u6cd5\u6240\u89e3\u51b3\u7684\u62bd\u8c61\u95ee\u9898\uff0c\u521d\u5b66\u8005\u4f1a\u975e\u5e38\u5947\u602a\uff0c\u73b0\u5b9e\u4e2d\u600e\u4e48\u4f1a\u6709\u8fd9\u79cd\u5f62\u5f0f\u7684\u95ee\u9898\u3002\u4f46\u662f\u6211\u89c9\u5f97\u4ece\u62bd\u8c61\u7684\u95ee\u9898\u8bb2\u8d77\u5f88\u4f18\u96c5\uff0c\u6240\u4ee5\u6211\u5c31\u5e72\u8106\u5148\u4ece\u62bd\u8c61\u7684\u95ee\u9898\u8bb2\u8d77\u3002","title":"EM \u7b97\u6cd5"},{"location":"ML/01-EM/#_1","text":"\u9996\u5148\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u5047\u8bbe\u96c6 \\(\\mathcal{H}=\\{\\mathcal{P}_{\\theta}(x)\\}\\) \u3002 \u73b0\u5728\u7ed9\u6211\u4eec\u4ece\u672a\u77e5\u5206\u5e03 \\(\\mathcal{D}\\) \u4e2d\u72ec\u7acb\u91c7\u96c6\u4e00\u5806\u6837\u672c \\(\\mathcal{S} = \\{x_1, x_2, \\ldots, x_m\\}\\) \uff0c \u6211\u4eec\u5e0c\u671b\u786e\u5b9a\u54ea\u4e2a \\(\\mathcal{P}_{\\theta}(x)\\) \u66f4\u63a5\u8fd1\u8fd9\u7ec4\u6570\u636e\u7684\u771f\u5b9e\u5206\u5e03 \\(\\mathcal{D}\\) \u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u635f\u5931\u51fd\u6570\u6765\u8861\u91cf\u4e24\u4e2a\u5206\u5e03\u7684\u63a5\u8fd1\u7a0b\u5ea6\u3002\u8fd9\u91cc\u6211\u4eec\u7528\u7684\u662fKL\u8ddd\u79bb\uff0c\u6765\u6784\u9020\u771f\u5b9e\u8bef\u5dee\u51fd\u6570\uff1a \\[ \\tag{0} \\label{trueloss} L_{\\mathcal{D}}(p_{\\theta}) = \\mathbb{E}_{p_\\mathcal{D}(\\mathbf{x})}\\left[\\ln\\left( \\frac{p_{\\mathcal{D}}(\\mathbf{x})}{p_{\\theta}(\\mathbf{x})} \\right)\\right]. \\] \u90a3\u4e48\uff0c\u5bf9\u5e94\u7684\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u4e3a\uff1a \\[ L_{\\mathcal{S}}(\\theta) =-\\frac{1}{m}\\sum^{m}_{i=1} \\ln \\mathcal{P}_{\\theta}(x_i). \\tag{1} \\] \u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff08\u9ad8\u65af\u6df7\u5408\u6a21\u578b\uff09\uff0c \\(\\mathcal{P}_\\theta(x)\\) \u8fd8\u548c\u53e6\u4e00\u4e2a \u9690\u968f\u673a\u53d8\u91cf \\(\\mathcal{Z} = \\{z_1, z_2, \\ldots, z_k\\}\\) \u6709\u5173\uff1a \\[ \\mathcal{P}_\\theta(x) = \\sum^{k}_{j=1} \\mathcal{P_{\\theta}(z_j)} \\mathcal{P}_\\theta(x \\vert z_j) =\\sum^k_{j=1} \\mathcal{P}_\\theta(x, z_j). \\tag{2} \\] \u5f53\u6211\u4eec\u88ab\u9650\u5236\u53ea\u80fd\u83b7\u5f97 \\(\\mathcal{P}_{\\theta}(z)\\) \u548c \\(\\mathcal{P}_\\theta(x \\vert z_j)\\) \u65f6\uff0c \u76ee\u6807\u51fd\u6570\u7684\u4f18\u5316\u5c31\u53d8\u5f97\u975e\u5e38\u56f0\u96be\u4e86: \\[ L_{\\mathcal{S}}(\\theta) = -\\sum^{m}_{i=1} \\ln \\sum^{k}_{j=1} \\mathcal{P_{\\theta}(x, z_j)}. \\tag{3} \\] \u8fd9\u91cc \u6982\u7387 \u8fd8\u662f \u6982\u7387\u5bc6\u5ea6 \u5728\u5f88\u591a\u8d44\u6599\u91cc\u975e\u5e38\u5bb9\u6613\u641e\u6df7\u3002","title":"\u76ee\u6807\u95ee\u9898"},{"location":"ML/01-EM/#em_1","text":"\u6211\u4eec\u5148\u4ecb\u7ecd\u53e6\u4e00\u4e2a\u635f\u5931\u51fd\u6570\uff0c\u4e4d\u4e00\u770b\u548c\u524d\u9762\u95ee\u9898\u6beb\u65e0\u5173\u7cfb\uff0c \u5176\u5b9e\u6709\u975e\u5e38\u5de7\u5999\u7684\u8054\u7cfb: \\[ G_{\\mathcal{S}}(Q, \\theta) = \\sum^{m}_{i=1}\\sum^{k}_{j=1} Q_{i, j} \\ln Q_{i, j} - \\sum^{m}_{i=1} \\sum^{k}_{j=1} Q_{i, j} \\log[ \\mathcal{P}_{\\theta}(x_i, z_j)]. \\tag{4} \\] EM\u7b97\u6cd5\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a \\[ \\begin{cases} \\tag{5} Q^{(t+1)} = \\min_{Q} G_{\\mathcal{S}}(Q, \\theta^{(t)}), \\\\ \\theta^{(t+1)} = \\min_{\\theta} G_{\\mathcal{S}}(Q^{(t+1)}, \\theta). \\end{cases} \\] \u8981\u4e86\u89e3 \\(G_{\\mathcal{S}}(Q, \\theta)\\) \u4e0e \\(L_{\\mathcal{S}}(\\theta)\\) \u6211\u4eec\u9700\u8981\u7814\u7a76\u4f18\u5316\u8fc7\u7a0b\u4e2d\u7684\u7b2c\u4e00\u6b65\u3002 \\[ \\begin{aligned} & G_{S}(Q, \\theta) \\\\ =& -\\sum^{m}_{i=1}\\sum^{k}_{j=1} Q_{i, j} \\ln \\left\\{\\frac{\\mathcal{P}_{\\theta}(x_i, z_j)}{Q_{i, j}}\\right\\} \\\\ \\ge& -\\sum^{m}_{i=1}\\ln \\left\\{\\sum^{k}_{j=1} Q_{i, j} \\frac{\\mathcal{P}_{\\theta}(x_i, z_j)}{Q_{i, j}}\\right\\} \\\\ =& -\\sum^{m}_{i=1}\\ln \\left\\{\\sum^{k}_{j=1} \\mathcal{P}_{\\theta}(x_i, z_j)\\right\\} \\\\ =&L_{\\mathcal{S}}(\\theta) \\end{aligned} \\] \u5f53 \\(Q_{i, j} = \\mathcal{P}_{\\theta}(z_j \\vert x_i)\\) \u65f6\uff0c \\[ \\begin{aligned} &G_{\\mathcal{S}}(Q, \\theta) \\\\ =& -\\sum^{m}_{i=1} \\sum^{k}_{j=1} \\mathcal{P_{\\theta}}(z_j \\vert x_i) \\ln \\left\\{\\frac{\\mathcal{P}_{\\theta}(x_i, z_j)}{\\mathcal{P}_{\\theta}(z_j \\vert x_i)}\\right\\} \\\\ =& -\\sum^{m}_{i=1} \\sum^{k}_{j=1} \\mathcal{P_{\\theta}}(z_j \\vert x_i) \\ln \\mathcal{P}_{\\theta}(x_i) \\\\ =& -\\sum^{m}_{i=1} \\ln \\mathcal{P}_{\\theta}(x_i) \\\\ =& L_{\\mathcal{S}}(\\theta). \\end{aligned} \\] \u7efc\u4e0a\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b2c\u4e00\u6b65\u4f18\u5316\u5b58\u5728\u95ed\u89e3\uff1a \\(Q_{i,j}^{(t+1)} = \\mathcal{P}_{\\theta^{(t)}}(z_j \\vert x_i)\\) , \u5e76\u4e14 \\(G_{\\mathcal{S}}(Q^{(t+1)}, \\theta^{(t)}) = L_{\\mathcal{S}}(\\theta^{(t)})\\) . \u8fd9\u4e00\u6b65\u662f\u6c42\u671f\u671b\uff0c\u6240\u4ee5\u88ab\u79f0\u4e3a Expectation Step \u3002 \u8fd9\u4e00\u6b65\u540c\u65f6\u9700\u8981\u7528\u5230\u8d1d\u53f6\u65af\u516c\u5f0f \\[ Q^{(t+1)}_{i, j} = \\frac{\\mathcal{P}_{\\theta^{(t)}}(z_j) \\mathcal{P}_{\\theta^{(t)}}(x_i \\vert z_j)}{\\sum^{k}_{j'=1}\\mathcal{P}_{\\theta^{(t)}}(z_{j'}) \\mathcal{P}_{\\theta^{(t)}}(x_i \\vert z_{j'})}. \\] \u53c8\u56e0\u4e3a\u7b2c\u4e8c\u6b65\uff08 Maximization Step \uff09\u6700\u5c0f\u5316 \\(\\theta\\) \u65f6\u4fdd\u8bc1 \\(G_{\\mathcal{S}}(Q^{(t+1)}, \\theta^{(t+1)}) \\le G_{\\mathcal{S}}(Q^{(t+1)}, \\theta^{(t)})\\) , \u6240\u4ee5\u6211\u4eec\u53ef\u5f97 \\[ L_{\\mathcal{S}}(\\theta^{(t+1)}) = G_{\\mathcal{S}}(Q^{(t+2)}, \\theta^{(t+1)}) \\le G_{\\mathcal{S}}(Q^{(t+1)}, \\theta^{(t+1)}) \\\\ \\le G_{\\mathcal{S}}(Q^{(t+1)}, \\theta^{(t)}) = L_{\\mathcal{S}}(\\theta^{(t)}). \\]","title":"EM\u7b97\u6cd5"},{"location":"ML/01-EM/#_2","text":"k\u4e2a\u9ad8\u65af\u5206\u5e03\u7684\u6df7\u5408\u6a21\u578b\u5bf9\u5e94\u7684hypothesis\u96c6\u5982\u4e0b\uff1a \\[ \\mathcal{H} = \\left\\{ \\mathcal{P}_{\\theta}(x) = \\sum^{k}_{j = 1} \\mathcal{P}_{\\theta}(z_j) \\mathcal{N}_{z_j}(\\mu_{\\theta}, \\Sigma_{\\theta}) \\right\\}. \\] \u53ef\u4ee5\u7b80\u5316 \\(\\mathcal{P}_{\\theta}(z_j) = \\pi_j\\) , \\(\\mathcal{N}_{z_j}(\\mu_{\\theta}, \\Sigma_{\\theta}) = \\mathcal{N}(\\mu_j, \\Sigma_j)\\) , \u90a3\u4e48hypothesis\u96c6\u5c31\u53d8\u6210\u6211\u4eec\u6bd4\u8f83\u5e38\u89c1\u7684\u5f62\u5f0f\uff1a \\[ \\mathcal{H} = \\left\\{ \\mathcal{P}_{\\theta}(x) = \\sum^{k}_{j = 1} \\pi_j \\mathcal{N}(\\mu_{j}, \\Sigma_{j}) \\right\\}. \\] \u4ece\u8fd9\u4e2a\u7279\u4f8b\u6211\u4eec\u53ef\u4ee5\u611f\u53d7\u5230\uff1a \\(\\mathcal{P}_{\\theta}(z)\\) \u5f88\u5bb9\u6613\u83b7\u5f97; \u8fd9\u91cc\u7684 \\(x\\) \u662f\u8fde\u7eed\u51fd\u6570\uff0c\u6211\u4eec\u4e5f\u80fd\u5f88\u5bb9\u6613\u83b7\u5f97\u6761\u4ef6\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \\(p_{\\theta}(x \\vert z)\\) \uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6781\u5c0f\u503c\u91cf \\(\\Delta x\\) \uff0c\u90a3\u4e48 \\(\\mathcal{P}_{\\theta}(x\\vert z) = p_{\\theta}(x \\vert z) \\Delta x\\) . \u9996\u5148\u662f Expectation Step : \\[ Q_{i, j} = \\frac{\\pi_j \\mathcal{N}(\\mu_j, \\Sigma_j) \\Delta x}{\\sum^{k}_{j' = 1} \\pi_j \\mathcal{N}(\\mu_j, \\Sigma_j) \\Delta x} = \\frac{\\pi_j \\mathcal{N}(\\mu_j, \\Sigma_j)}{\\sum^{k}_{j' = 1} \\pi_j \\mathcal{N}(\\mu_j, \\Sigma_j)}. \\] \u90a3\u4e48\uff0c Maximumization Step \u9700\u8981\u6c42\u89e3\u7684\u95ee\u9898\u662f\uff1a \\[ \\begin{aligned} &\\max_{\\theta} \\sum^{m}_{i=1} \\sum^{k}_{j=1} Q_{i,j} \\ln \\mathcal{P}(x_i, z_j) \\\\ =&\\max_{\\theta} \\sum^{m}_{i=1} \\sum^{k}_{j=1} Q_{i,j} [\\ln \\pi_j + \\ln \\mathcal{N}(x_i, \\mu_j, \\Sigma_j) + \\ln \\Delta x] \\\\ \\end{aligned} \\] \u9996\u5148\u663e\u7136 \\(\\pi^*_j = \\frac{1}{m}\\sum_{i=1}^{m} Q_{i,j}\\) , \u5176\u6b21 \u56e0\u4e3a \\[ \\mathcal{N}(x_i, \\mu_j, \\Sigma_j) = \\frac{1}{(2\\pi)^{D/2}}\\frac{1}{\\vert \\Sigma \\vert^{1/2}} \\exp\\left\\{-\\frac{1}{2} (x_i - \\mu_j)^T \\Sigma_j^{-1} (x_i - \\mu_j)\\right\\}, \\] \u6240\u4ee5\u4e5f\u663e\u7136\u53ef\u5f97 \\(\\mu^*_j = \\frac{\\sum^{m}_{i=1} Q_{i, j} x_i}{\\sum^{m}_{i=1} Q_{i, j}}\\) \u3002 \u6709\u70b9\u590d\u6742\u7684\u662f\u6c42\u89e3 \\(\\Sigma_j\\) : \\[ \\max_{\\Sigma_j} \\sum^{m}_{i=1}\\sum^{k}_{j=1} Q_{i, j} \\left[\\frac{1}{2} \\ln\\vert \\Sigma^{-1} \\vert - \\frac{1}{2}(x_i - \\mu^*_j)^T \\Sigma^{-1}_{j} (x_i - \\mu^*_j)\\right]. \\] \u6211\u4eec\u9700\u8981\u7528\u5230\u4e24\u4e2a\u77e9\u9635\u5bfc\u6570 \\(\\frac{\\partial}{\\partial A}\\ln \\vert A \\vert = (A^{-1})^T\\) \u548c \\(\\frac{\\partial}{\\partial A}Tr(A^T B) = B\\) \uff0c\u5148\u5bf9 \\(\\Sigma^{-1}\\) \u6c42\u5bfc\u53ef\u5f97\uff1a \\(\\Sigma_j = \\frac{1}{\\sum^{m}_{i=1} Q_{i, j}}\\sum_{i=1}^m Q_{i, j} (x_i - \\mu^*_j)(x_i - \\mu^*_j)^T\\) . \u975e\u5e38\u6709\u610f\u601d\u7684\u662f\uff0cK-means\u7b97\u6cd5\u53ef\u4ee5\u770b\u6210GMM\u7b97\u6cd5\u9650\u5236\u5728 \\(\\Sigma \\rightarrow 0\\) \u7684\u7b97\u6cd5\u3002","title":"\u9ad8\u65af\u6df7\u5408\u6a21\u578b"},{"location":"ML/02-SVM/","text":"SVM\u7b97\u6cd5 \u00b6 SVM\u7b97\u6cd5\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u7ebf\u6027\u51fd\u6570\u7684\u4f18\u5316\u95ee\u9898\uff0c \u56e0\u4e3a\u5f88\u591a\u6269\u5c55\u800c\u53d8\u5f97\u590d\u6742\u8d77\u6765\u3002 \u5b66\u8fc7\u4f18\u5316\u7684\u8bdd\u5c31\u5f88\u597d\u7406\u89e3\u4e86\uff1a SVM\u7b97\u6cd5\u672c\u8d28\u662f\u5c06\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\u5efa\u6a21\u6210\u4e00\u4e2a\u7ebf\u6027\u51fd\u6570\u7684\u4f18\u5316\u95ee\u9898\uff0c \u5b83\u521a\u597d\u53c8\u95ed\u89e3\uff0c\u95ed\u89e3\u7684\u63a8\u5bfc\u5e94\u8be5\u662f\u5c5e\u4e8e\u4f18\u5316\u7684\u9886\u57df\u3002 \u76ee\u6807\u95ee\u9898 \u00b6 \u5728\u4e00\u5207\u5f00\u59cb\u524d\uff0c\u6211\u4eec\u8981\u5148\u786e\u5b9a\u4e00\u4e2ahypothesis\u96c6 \\(\\mathcal{H}=\\{h_{\\theta}(\\mathbf{x})\\}\\) \u3002 \u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u6837\u672c\u96c6 \\(\\mathcal{S} = \\{(\\mathbf{x}_1, y), (\\mathbf{x}_2, y), \\ldots, (\\mathbf{x}_m, y)\\}\\) \uff0c\u5176\u4e2d \\(\\mathbf{x} \\in \\mathbb{R}^{d}\\) \u5e76\u4e14 \\(y \\in \\{-1, 1\\}\\) \u3002\u6211\u4eec\u5e0c\u671b\u5728 \\(\\mathcal{H}\\) \u4e2d\u627e\u5230\u4e00\u4e2a\u5206\u7c7b\u51fd\u6570 \\(h_\\theta(\\mathbf{x})\\) \u80fd\u628a\u6837\u672c \\(\\mathcal{S}\\) \u5206\u5f97\u6700\u5f00\u3002 \u4ec0\u4e48\u53eb\u505a\u5206\u5f97\u6700\u5f00\u5462\uff1f\u6211\u4eec\u8fd9\u91cc\u7528\u6837\u672c\u4e0e\u5206\u7c7b\u9762\u7684\u8ddd\u79bb\u6765\u8bc4\u4ef7\u5206\u5f00\u7684\u7a0b\u5ea6\u3002 \u6211\u4eec\u6784\u5efa\u7684hypothesis\u96c6\u662f\u7ebf\u6027\u51fd\u6570\u7684\u96c6\u5408\uff1a \\[ \\mathcal{H} = \\{h_{\\theta}(\\mathbf{x}) = \\mathbf{w}^T_{\\theta} \\mathbf{x} + b_{\\theta}\\}.\\tag{1} \\] \u90a3\u4e48\uff0c\u6837\u672c\u70b9 \\((\\mathbf{x}, y)\\) \u4e0e\u8d85\u5e73\u9762\u7684\u6b27\u5f0f\u8ddd\u79bb\u6709\u95ed\u89e3\uff1a \\[ d(h_{\\theta}, (\\mathbf{x}, y)) = \\frac{\\vert \\mathbf{w}^T_{\\theta} \\mathbf{x} + b_{\\theta} \\vert}{\\Vert \\mathbf{w}_{\\theta} \\Vert}.\\tag{2} \\] \u90a3\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u635f\u5931\u51fd\u6570\u662f\uff1a \\[ L_{\\mathcal{S}} (\\theta) = \\min_{i \\in [1, m]} -\\frac{y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})}{\\Vert \\mathbf{w}_{\\theta} \\Vert}. \\tag{3} \\] \u5f53\u6709\u5206\u7c7b\u9519\u7684\u70b9\uff0c\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u4e3a\u6b63\uff0c\u9519\u8bef\u70b9\u8ddd\u79bb\u8d85\u5e73\u9762\u8fdc\uff0c\u9519\u5f97\u8d8a\u79bb\u8c31\uff0c\u635f\u5931\u51fd\u6570\u8d8a\u5927\u3002\u5f53\u5206\u7c7b\u5168\u90e8\u6b63\u786e\u65f6\uff0c\u8d85\u5e73\u9762\u5c06\u70b9\u5206\u5f97\u8d8a\u5f00\uff0c\u635f\u5931\u51fd\u6570\u8d8a\u5c0f\u3002 \u8fd9\u91cc\u6211\u4eec\u7528\u8ddd\u79bb\u7684\u4e0b\u754c\u6765\u5f53\u4f5c\u635f\u5931\u51fd\u6570\uff0c\u76f8\u5f53\u4e8e\u5168\u6c11\u5954\u5c0f\u5eb7\u3002\u5982\u679c\u7528\u5e73\u5747\u8ddd\u79bb\uff0c\u4f1a\u5bfc\u81f4\u5206\u7c7b\u9519\u8bef\u7387\u9ad8\uff0c\u4f46\u662f\u5e73\u5747\u8ddd\u79bb\u5c0f\u7684\u5206\u7c7b\u5668\u88ab\u9009\u62e9\uff0c\u76f8\u5f53\u4e8e\u52a3\u5e01\u9a71\u9010\u826f\u5e01\u3002\u6211\u4eec\u5b66\u4e60\u5206\u7c7b\u5668\u7684\u672c\u8d28\u8fd8\u662f\u7528\u6765\u5206\u7c7b\u7684\uff0c\u4e0d\u80fd\u5fd8\u4e86\u521d\u5fc3\u3002 Hard SVM\u7b97\u6cd5 \u00b6 \u8fd9\u4e00\u5c0f\u8282\u7684\u7b97\u6cd5\u5047\u8bbe \\(\\mathcal{H}\\) \u91cc\u5b58\u5728\u7ecf\u9a8c\u8bef\u5dee\u7b49\u4e8e0\u7684\u5206\u7c7b\u5668\u3002\u4e0a\u9762\u7684\u635f\u5931\u51fd\u6570\u4e0d\u5bb9\u8bb8\u4efb\u4f55\u4e00\u4e2a\u70b9\u5206\u7c7b\u9519\u8bef\uff0c\u6240\u4ee5\u5bf9\u5e94\u7684\u7b97\u6cd5\u53eb\u505a Hard SVM\u7b97\u6cd5\u3002 \u9996\u5148\u6211\u4eec\u5199\u51fa\u6211\u4eec\u4f18\u5316\u76ee\u6807\uff1a \\[ \\max_{\\theta} \\min_{i\\in[1, m]} \\frac{y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})}{\\Vert \\mathbf{w}_{\\theta} \\Vert}, \\tag{4} \\] \u8fd9\u4e2a\u4f18\u5316\u76ee\u6807\u7684\u89e3\u6709\u65e0\u9650\u591a\u7ec4\uff1a\u5982\u679c \\((\\mathbf{w}^*_{\\theta}, b^*_{\\theta})\\) \u662f\u89e3\uff0c\u90a3\u4e48\u5bf9\u4efb\u610f \\(k > 0\\) , \\((k \\mathbf{w}^*_{\\theta}, k b^*_{\\theta})\\) \u90fd\u662f\u8fd9\u4e2a\u4f18\u5316\u76ee\u6807\u7684\u89e3\u3002 \u6211\u4eec\u53ea\u60f3\u6c42\u5230\u4e00\u4e2a\u89e3\u5c31\u597d\u4e86:\u5982\u679c\u589e\u52a0\u4e00\u4e2a\u9650\u5236\u5230\u5206\u6bcd\u4e0a \\(\\Vert\\mathbf{w}_{\\theta}\\Vert = 1\\) , \u4f18\u5316\u76ee\u6807\u5c31\u53d8\u6210\u4e86: \\[ \\max_{\\theta} \\min_{i\\in[1, m]} y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}), \\quad s.t. \\quad \\Vert \\mathbf{w}_{\\theta} \\Vert^2 = 1. \\tag{5} \\] \u8fd9\u4e2a\u95ee\u9898\u7b49\u4ef7\u7684\u62c9\u683c\u6717\u65e5\u5f62\u5f0f\u5f88\u96be\u89e3\uff1a \\[ \\max_{\\theta} min_{\\pmb{\\alpha} \\ne 0} \\left[\\pmb{\\alpha}(\\Vert \\mathbf{w}_{\\theta} \\Vert^2 - 1) + \\min_{i\\in[1, m]} y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}) \\right], \\] \u62c9\u683c\u6717\u65e5\u5f62\u5f0f\u7b49\u4ef7\u7684\u539f\u56e0\u662f\uff1a\u5982\u679c \\(\\Vert \\mathbf{w}_{\\theta} \\Vert^2 \\ne 1\\) \uff0c\u90a3\u4e48\u5185\u5c42\u7684\u4f18\u5316 \\(\\min_{\\alpha \\ne 0}\\) \u5c31\u4f1a\u7b49\u4e8e\u65e0\u7a77\u5c0f\uff0c\u5373 \\(\\max_{\\theta,\\Vert \\mathbf{w}_{\\theta} \\Vert^2 \\ne 1}\\) \u662f\u65e0\u7a77\u5c0f\uff0c\u80af\u5b9a\u5c0f\u4e8e \\(\\max_{\\theta,\\Vert \\mathbf{w}_{\\theta} \\Vert^2 = 1}\\) \u7684\u503c\u3002 \u8fd9\u91cc\u5c31\u8981\u7528\u5230\u8fd9\u4e00\u5c0f\u8282\u5f00\u5934\u7684\u5047\u8bbe\uff0c\u8fd9\u4e00\u5c0f\u8282\u7684\u7b97\u6cd5\u5047\u8bbe \\(\\mathcal{H}\\) \u91cc\u5b58\u5728\u7ecf\u9a8c\u8bef\u5dee\u7b49\u4e8e0\u7684\u5206\u7c7b\u5668\u3002\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u4e00\u4e2a\u9650\u5236\u5230\u5206\u5b50\u4e0a\uff0c\u4f18\u5316\u76ee\u6807\u5c31\u53d8\u6210\u4e86\uff1a \\[ \\max_{\\theta} \\frac{1}{\\Vert \\mathbf{w}_\\theta \\Vert} \\quad s.t.\\quad \\min_{i \\in [1, m]} y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}) = 1. \\tag{6} \\] \u8fd9\u91cc\u7684\u53d8\u5f62\u5c31\u5dee\u6700\u540e\u4e00\u6b65\u4e86\uff0c\u6211\u4eec\u60f3\u53bb\u6389 \\(\\min_{i\\in[1,m]}\\) \u64cd\u4f5c\uff0c\u5373\u628a\u4f18\u5316\u76ee\u6807\u8fd8\u53ef\u4ee5\u7b80\u5316\u6210\uff1a \\[ \\min_{\\theta} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 \\quad s.t.\\quad \\forall i \\in [1, m],\\quad y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}) \\ge 1. \\tag{7} \\] \u8fd9\u4e00\u6b65\u7684\u7b49\u4ef7\u539f\u56e0\u662f\uff1a \u5982\u679c\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u4f18\u89e3 \\((\\mathbf{w}^*_\\theta, b^*_{\\theta})\\) \u5bfc\u81f4 \\(\\min_{i \\in [1, m]} y_i(\\mathbf{w^*}^T_{\\theta} \\mathbf{x}_i + b^*_{\\theta}) = \\gamma > 1\\) , \u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u89e3 \\((\\mathbf{w}^*_\\theta/\\gamma, b^*_{\\theta}/\\gamma)\\) \u6bd4 \\((\\mathbf{w}^*_\\theta, b^*_{\\theta})\\) \u66f4\u4f18\u3002 \u5bf9\u5e94\u7684\u65e0\u7ea6\u675f\u62c9\u683c\u6717\u65e5\u5f62\u5f0f\u662f \\[ \\min_{\\theta} \\max_{\\pmb{\\alpha} \\succeq 0} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1}\\alpha_i [1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})]. \\tag{8} \\] \u73b0\u5728\u6765\u6c42\u89e3\u4e00\u4e0b\u8fd9\u4e2a\u4f18\u5316\u95ee\u9898\u3002 \\[ \\begin{align*} &\\min_{\\theta} \\max_{\\pmb{\\alpha} \\succeq 0} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1}\\alpha_i [1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})] \\\\ =& \\max_{\\pmb{\\alpha} \\succeq 0}\\min_{\\theta} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1}\\alpha_i [1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})] \\\\ &(\\mathbf{w}^*_{\\theta} = \\sum^{m}_{i=1}\\alpha_i y_i \\mathbf{x}_i,\\quad \\sum^{m}_{i=1} \\alpha_i y_i = 0.)\\\\ =& \\max_{\\pmb{\\alpha} \\succeq 0} \\sum^{m}_{i=1} \\alpha_i - \\frac{1}{2} \\sum^m_{i=1} \\sum^{m}_{j=1} \\alpha_i\\alpha_j y_i y_j \\mathbf{x}^T_i \\mathbf{x}_j \\\\ =& \\max_{\\pmb{\\alpha}\\succeq 0} \\mathbf{1}^T \\pmb{\\alpha} - \\frac{1}{2} \\mathbf{\\alpha}^T \\mathbf{D}_y \\mathbf{X}^T \\mathbf{X} \\mathbf{D}_y \\pmb{\\alpha}. \\tag{9} \\end{align*} \\] \u5176\u4e2d \\(\\mathbf{D}_y=diag(y_1, y_2, \\ldots, y_m)\\) \uff0c \\(\\mathbf{X} = [\\mathbf{x}_1, \\mathbf{x}_2, \\ldots, \\mathbf{x}_m]\\) , \u56e0\u6b64\u53ef\u5f97\uff1a \\[ \\begin{cases} \\pmb{\\alpha}^* = (\\mathbf{D}_y \\mathbf{X}^T \\mathbf{X} \\mathbf{D}_y)^{-1} \\mathbf{1}, \\\\ \\mathbf{w}^*_{\\theta} = \\mathbf{X}\\mathbf{D}_y \\pmb{\\alpha}^*, \\\\ \\mathbf{b}^*_{\\theta} = y_i - \\sum^{m}_{i=1} \\alpha_j y_j \\mathbf{x}^T_j \\mathbf{x}_i \\quad (\\alpha_i \\ne 0 \\overset{KKT}{\\Rightarrow} \\mathbf{w^*}^T_\\theta \\mathbf{x}_i + \\mathbf{b}^*_\\theta = y_i), \\\\ \\Vert \\mathbf{w}^*_\\theta\\Vert = \\Vert \\mathbf{X D}_y \\pmb{\\alpha}^* \\Vert^2 = \\mathbf{1}^T (\\mathbf{D}_y \\mathbf{X}^T \\mathbf{X} \\mathbf{D}_y)^{-1} \\mathbf{1} = \\Vert \\pmb{\\alpha}^* \\Vert_1. \\end{cases} \\] \u5176\u4e2d \\(\\mathbf{b}^*_\\theta\\) \u6d89\u53ca\u5230support\u96c6 \\(\\{(\\mathbf{x}, y):\\mathbf{w^*}_\\theta^T \\mathbf{x} + b^*_{\\theta} = y \\}\\) \uff0c \u4e0d\u5728\u8fd9\u4e2a\u96c6\u5408\u4e0a\u7684\u70b9 \\((\\mathbf{x}_i, y_i)\\) \u6ee1\u8db3 \\(\\alpha_i = 0\\) \uff0c\u4e5f\u5c31\u662f\u8bf4 \\((\\mathbf{w}^*_\\theta, b^*)\\) \u53ea\u662fsupport\u96c6\u5143\u7d20\u7684\u653e\u5c04\u7ec4\u5408\uff0c\u4e0e\u4e0d\u5728supoort\u96c6\u4e0a\u7684\u6837\u672c\u65e0\u5173\u3002 Soft SVM\u7b97\u6cd5 \u00b6 \u5728\u4e0a\u4e00\u5c0f\u8282\uff0c\u7b97\u6cd5\u7684\u8981\u6c42\u592a\u5f3a\u4e86\uff0c\u6837\u672c\u6570\u636e\u9700\u8981\u4e25\u683c\u7ebf\u6027\u53ef\u5206\u3002 \u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u4e00\u4e2a\u677e\u5f1b\u56e0\u5b50 \\(\\pmb{\\xi}\\in\\mathbb{R}^{m}_{+}\\) , \u5c06\u4f18\u5316\u76ee\u6807\u4fee\u6539\u6210\uff1a \\[ \\begin{align*} &\\min_{\\theta, \\pmb{\\xi}\\succeq 0} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + C \\Vert\\pmb{\\xi}\\Vert^p, \\\\ &\\ s.t.\\quad \\forall i \\in [1, m],\\quad y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}) \\ge 1 - \\xi_i.\\tag{10} \\end{align*} \\] \u8fd9\u91cc \\(\\xi_i\\) \u53ef\u4ee5\u89c2\u5bdf\u5f97\u5230\u6700\u5c0f\u503c\u4e3a \\(\\max(0, 1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}))\\) \u3002 \u90a3\u4e48\u4f18\u5316\u76ee\u6807\u5c31\u53d8\u6210\u4e86 \\[ \\begin{align*} &\\min_{\\theta} \\sum^m_{i=1} \\Vert \\max(0, 1- y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})) \\Vert^p + \\frac{1}{2C} \\Vert \\mathbf{w}_\\theta \\Vert^2. \\\\ \\end{align*} \\] \u56e0\u4e3a \\(l_{hinge}(x) = max(0, 1- x)\\) , \u6240\u4ee5\u8fd9\u4e2a\u4f18\u5316\u76ee\u6807\u4e5f\u53ef\u4ee5\u770b\u6210\u662fhinge\u635f\u5931\u51fd\u6570\u52a0\u4e8c\u8303\u6570\u6b63\u5219\u9879\u3002 \u56de\u5230\u4f18\u5316\u95ee\u9898(10)\u3002 \\(p=1\\) \u65f6\uff0c\u6211\u4eec\u5199\u51fa\u5b83\u7684\u7b49\u4ef7\u62c9\u683c\u6717\u65e5\u65e0\u7ea6\u675f\u5f62\u5f0f\uff1a \\[ \\min_{\\theta, \\pmb{\\xi}\\succeq 0} \\max_{\\pmb{\\alpha}\\succeq \\pmb{0}, \\pmb{\\beta} \\succeq \\pmb{0}} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + C \\sum^{m}_{i=1} {\\xi}_i + \\sum^m_{i=1}\\alpha_i[1 - \\xi_i - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i - b_\\theta)] - \\sum^{m}_{i=1}\\beta_i \\xi_i. \\] \u6574\u7406\u4e00\u4e0b\u53ef\u5f97\uff1a \\[ \\min_{\\theta, \\pmb{\\xi}\\succeq 0} \\max_{\\pmb{\\alpha}\\succeq \\pmb{0}, \\pmb{\\beta} \\succeq \\pmb{0}} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1} (C - \\alpha_i - \\beta_i){\\xi}_i + \\sum^m_{i=1}\\alpha_i[1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i - b_\\theta)]. \\] \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u6c42\u89e3\u8fd9\u4e2a\u4f18\u5316\u95ee\u9898: \\[ \\begin{align*} &\\min_{\\theta, \\pmb{\\xi}\\succeq 0} \\max_{\\pmb{\\alpha}\\succeq \\pmb{0}, \\pmb{\\beta} \\succeq \\pmb{0}} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1} (C - \\alpha_i - \\beta_i){\\xi}_i + \\sum^m_{i=1}\\alpha_i[1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i - b_\\theta)] \\\\ =&\\max_{\\pmb{\\alpha}\\succeq \\pmb{0}, \\pmb{\\beta} \\succeq \\pmb{0}} \\min_{\\theta, \\pmb{\\xi}\\succeq 0} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1} (C - \\alpha_i - \\beta_i){\\xi}_i + \\sum^m_{i=1}\\alpha_i[1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i - b_\\theta)] \\\\ &(\\mathbf{w}^*_{\\theta} = \\sum^{m}_{i=1} \\alpha_i y_i \\mathbf{x}_i, \\sum^{m}_{i=1}\\alpha_i y_i = 0, C = \\alpha_i + \\beta_i) \\\\ =& \\max_{C \\succeq \\pmb{\\alpha}\\succeq \\pmb{0}} \\sum^{m}_{i=1} \\alpha_i - \\frac{1}{2} \\sum^{m}_{i=1, j=1} \\alpha_i \\alpha_j y_i y_j \\mathbf{x}^T_i \\mathbf{x}_j\\quad(s.t. \\sum^{m}_{i=1} \\alpha_i y_i = 0). \\end{align*} \\] SMO\u4f18\u5316\u7b97\u6cd5\u6765\u6c42\u89e3\u8be5\u95ee\u9898\u3002","title":"SVM"},{"location":"ML/02-SVM/#svm","text":"SVM\u7b97\u6cd5\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u7ebf\u6027\u51fd\u6570\u7684\u4f18\u5316\u95ee\u9898\uff0c \u56e0\u4e3a\u5f88\u591a\u6269\u5c55\u800c\u53d8\u5f97\u590d\u6742\u8d77\u6765\u3002 \u5b66\u8fc7\u4f18\u5316\u7684\u8bdd\u5c31\u5f88\u597d\u7406\u89e3\u4e86\uff1a SVM\u7b97\u6cd5\u672c\u8d28\u662f\u5c06\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\u5efa\u6a21\u6210\u4e00\u4e2a\u7ebf\u6027\u51fd\u6570\u7684\u4f18\u5316\u95ee\u9898\uff0c \u5b83\u521a\u597d\u53c8\u95ed\u89e3\uff0c\u95ed\u89e3\u7684\u63a8\u5bfc\u5e94\u8be5\u662f\u5c5e\u4e8e\u4f18\u5316\u7684\u9886\u57df\u3002","title":"SVM\u7b97\u6cd5"},{"location":"ML/02-SVM/#_1","text":"\u5728\u4e00\u5207\u5f00\u59cb\u524d\uff0c\u6211\u4eec\u8981\u5148\u786e\u5b9a\u4e00\u4e2ahypothesis\u96c6 \\(\\mathcal{H}=\\{h_{\\theta}(\\mathbf{x})\\}\\) \u3002 \u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u6837\u672c\u96c6 \\(\\mathcal{S} = \\{(\\mathbf{x}_1, y), (\\mathbf{x}_2, y), \\ldots, (\\mathbf{x}_m, y)\\}\\) \uff0c\u5176\u4e2d \\(\\mathbf{x} \\in \\mathbb{R}^{d}\\) \u5e76\u4e14 \\(y \\in \\{-1, 1\\}\\) \u3002\u6211\u4eec\u5e0c\u671b\u5728 \\(\\mathcal{H}\\) \u4e2d\u627e\u5230\u4e00\u4e2a\u5206\u7c7b\u51fd\u6570 \\(h_\\theta(\\mathbf{x})\\) \u80fd\u628a\u6837\u672c \\(\\mathcal{S}\\) \u5206\u5f97\u6700\u5f00\u3002 \u4ec0\u4e48\u53eb\u505a\u5206\u5f97\u6700\u5f00\u5462\uff1f\u6211\u4eec\u8fd9\u91cc\u7528\u6837\u672c\u4e0e\u5206\u7c7b\u9762\u7684\u8ddd\u79bb\u6765\u8bc4\u4ef7\u5206\u5f00\u7684\u7a0b\u5ea6\u3002 \u6211\u4eec\u6784\u5efa\u7684hypothesis\u96c6\u662f\u7ebf\u6027\u51fd\u6570\u7684\u96c6\u5408\uff1a \\[ \\mathcal{H} = \\{h_{\\theta}(\\mathbf{x}) = \\mathbf{w}^T_{\\theta} \\mathbf{x} + b_{\\theta}\\}.\\tag{1} \\] \u90a3\u4e48\uff0c\u6837\u672c\u70b9 \\((\\mathbf{x}, y)\\) \u4e0e\u8d85\u5e73\u9762\u7684\u6b27\u5f0f\u8ddd\u79bb\u6709\u95ed\u89e3\uff1a \\[ d(h_{\\theta}, (\\mathbf{x}, y)) = \\frac{\\vert \\mathbf{w}^T_{\\theta} \\mathbf{x} + b_{\\theta} \\vert}{\\Vert \\mathbf{w}_{\\theta} \\Vert}.\\tag{2} \\] \u90a3\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u635f\u5931\u51fd\u6570\u662f\uff1a \\[ L_{\\mathcal{S}} (\\theta) = \\min_{i \\in [1, m]} -\\frac{y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})}{\\Vert \\mathbf{w}_{\\theta} \\Vert}. \\tag{3} \\] \u5f53\u6709\u5206\u7c7b\u9519\u7684\u70b9\uff0c\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u4e3a\u6b63\uff0c\u9519\u8bef\u70b9\u8ddd\u79bb\u8d85\u5e73\u9762\u8fdc\uff0c\u9519\u5f97\u8d8a\u79bb\u8c31\uff0c\u635f\u5931\u51fd\u6570\u8d8a\u5927\u3002\u5f53\u5206\u7c7b\u5168\u90e8\u6b63\u786e\u65f6\uff0c\u8d85\u5e73\u9762\u5c06\u70b9\u5206\u5f97\u8d8a\u5f00\uff0c\u635f\u5931\u51fd\u6570\u8d8a\u5c0f\u3002 \u8fd9\u91cc\u6211\u4eec\u7528\u8ddd\u79bb\u7684\u4e0b\u754c\u6765\u5f53\u4f5c\u635f\u5931\u51fd\u6570\uff0c\u76f8\u5f53\u4e8e\u5168\u6c11\u5954\u5c0f\u5eb7\u3002\u5982\u679c\u7528\u5e73\u5747\u8ddd\u79bb\uff0c\u4f1a\u5bfc\u81f4\u5206\u7c7b\u9519\u8bef\u7387\u9ad8\uff0c\u4f46\u662f\u5e73\u5747\u8ddd\u79bb\u5c0f\u7684\u5206\u7c7b\u5668\u88ab\u9009\u62e9\uff0c\u76f8\u5f53\u4e8e\u52a3\u5e01\u9a71\u9010\u826f\u5e01\u3002\u6211\u4eec\u5b66\u4e60\u5206\u7c7b\u5668\u7684\u672c\u8d28\u8fd8\u662f\u7528\u6765\u5206\u7c7b\u7684\uff0c\u4e0d\u80fd\u5fd8\u4e86\u521d\u5fc3\u3002","title":"\u76ee\u6807\u95ee\u9898"},{"location":"ML/02-SVM/#hard-svm","text":"\u8fd9\u4e00\u5c0f\u8282\u7684\u7b97\u6cd5\u5047\u8bbe \\(\\mathcal{H}\\) \u91cc\u5b58\u5728\u7ecf\u9a8c\u8bef\u5dee\u7b49\u4e8e0\u7684\u5206\u7c7b\u5668\u3002\u4e0a\u9762\u7684\u635f\u5931\u51fd\u6570\u4e0d\u5bb9\u8bb8\u4efb\u4f55\u4e00\u4e2a\u70b9\u5206\u7c7b\u9519\u8bef\uff0c\u6240\u4ee5\u5bf9\u5e94\u7684\u7b97\u6cd5\u53eb\u505a Hard SVM\u7b97\u6cd5\u3002 \u9996\u5148\u6211\u4eec\u5199\u51fa\u6211\u4eec\u4f18\u5316\u76ee\u6807\uff1a \\[ \\max_{\\theta} \\min_{i\\in[1, m]} \\frac{y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})}{\\Vert \\mathbf{w}_{\\theta} \\Vert}, \\tag{4} \\] \u8fd9\u4e2a\u4f18\u5316\u76ee\u6807\u7684\u89e3\u6709\u65e0\u9650\u591a\u7ec4\uff1a\u5982\u679c \\((\\mathbf{w}^*_{\\theta}, b^*_{\\theta})\\) \u662f\u89e3\uff0c\u90a3\u4e48\u5bf9\u4efb\u610f \\(k > 0\\) , \\((k \\mathbf{w}^*_{\\theta}, k b^*_{\\theta})\\) \u90fd\u662f\u8fd9\u4e2a\u4f18\u5316\u76ee\u6807\u7684\u89e3\u3002 \u6211\u4eec\u53ea\u60f3\u6c42\u5230\u4e00\u4e2a\u89e3\u5c31\u597d\u4e86:\u5982\u679c\u589e\u52a0\u4e00\u4e2a\u9650\u5236\u5230\u5206\u6bcd\u4e0a \\(\\Vert\\mathbf{w}_{\\theta}\\Vert = 1\\) , \u4f18\u5316\u76ee\u6807\u5c31\u53d8\u6210\u4e86: \\[ \\max_{\\theta} \\min_{i\\in[1, m]} y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}), \\quad s.t. \\quad \\Vert \\mathbf{w}_{\\theta} \\Vert^2 = 1. \\tag{5} \\] \u8fd9\u4e2a\u95ee\u9898\u7b49\u4ef7\u7684\u62c9\u683c\u6717\u65e5\u5f62\u5f0f\u5f88\u96be\u89e3\uff1a \\[ \\max_{\\theta} min_{\\pmb{\\alpha} \\ne 0} \\left[\\pmb{\\alpha}(\\Vert \\mathbf{w}_{\\theta} \\Vert^2 - 1) + \\min_{i\\in[1, m]} y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}) \\right], \\] \u62c9\u683c\u6717\u65e5\u5f62\u5f0f\u7b49\u4ef7\u7684\u539f\u56e0\u662f\uff1a\u5982\u679c \\(\\Vert \\mathbf{w}_{\\theta} \\Vert^2 \\ne 1\\) \uff0c\u90a3\u4e48\u5185\u5c42\u7684\u4f18\u5316 \\(\\min_{\\alpha \\ne 0}\\) \u5c31\u4f1a\u7b49\u4e8e\u65e0\u7a77\u5c0f\uff0c\u5373 \\(\\max_{\\theta,\\Vert \\mathbf{w}_{\\theta} \\Vert^2 \\ne 1}\\) \u662f\u65e0\u7a77\u5c0f\uff0c\u80af\u5b9a\u5c0f\u4e8e \\(\\max_{\\theta,\\Vert \\mathbf{w}_{\\theta} \\Vert^2 = 1}\\) \u7684\u503c\u3002 \u8fd9\u91cc\u5c31\u8981\u7528\u5230\u8fd9\u4e00\u5c0f\u8282\u5f00\u5934\u7684\u5047\u8bbe\uff0c\u8fd9\u4e00\u5c0f\u8282\u7684\u7b97\u6cd5\u5047\u8bbe \\(\\mathcal{H}\\) \u91cc\u5b58\u5728\u7ecf\u9a8c\u8bef\u5dee\u7b49\u4e8e0\u7684\u5206\u7c7b\u5668\u3002\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u4e00\u4e2a\u9650\u5236\u5230\u5206\u5b50\u4e0a\uff0c\u4f18\u5316\u76ee\u6807\u5c31\u53d8\u6210\u4e86\uff1a \\[ \\max_{\\theta} \\frac{1}{\\Vert \\mathbf{w}_\\theta \\Vert} \\quad s.t.\\quad \\min_{i \\in [1, m]} y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}) = 1. \\tag{6} \\] \u8fd9\u91cc\u7684\u53d8\u5f62\u5c31\u5dee\u6700\u540e\u4e00\u6b65\u4e86\uff0c\u6211\u4eec\u60f3\u53bb\u6389 \\(\\min_{i\\in[1,m]}\\) \u64cd\u4f5c\uff0c\u5373\u628a\u4f18\u5316\u76ee\u6807\u8fd8\u53ef\u4ee5\u7b80\u5316\u6210\uff1a \\[ \\min_{\\theta} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 \\quad s.t.\\quad \\forall i \\in [1, m],\\quad y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}) \\ge 1. \\tag{7} \\] \u8fd9\u4e00\u6b65\u7684\u7b49\u4ef7\u539f\u56e0\u662f\uff1a \u5982\u679c\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u4f18\u89e3 \\((\\mathbf{w}^*_\\theta, b^*_{\\theta})\\) \u5bfc\u81f4 \\(\\min_{i \\in [1, m]} y_i(\\mathbf{w^*}^T_{\\theta} \\mathbf{x}_i + b^*_{\\theta}) = \\gamma > 1\\) , \u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u89e3 \\((\\mathbf{w}^*_\\theta/\\gamma, b^*_{\\theta}/\\gamma)\\) \u6bd4 \\((\\mathbf{w}^*_\\theta, b^*_{\\theta})\\) \u66f4\u4f18\u3002 \u5bf9\u5e94\u7684\u65e0\u7ea6\u675f\u62c9\u683c\u6717\u65e5\u5f62\u5f0f\u662f \\[ \\min_{\\theta} \\max_{\\pmb{\\alpha} \\succeq 0} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1}\\alpha_i [1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})]. \\tag{8} \\] \u73b0\u5728\u6765\u6c42\u89e3\u4e00\u4e0b\u8fd9\u4e2a\u4f18\u5316\u95ee\u9898\u3002 \\[ \\begin{align*} &\\min_{\\theta} \\max_{\\pmb{\\alpha} \\succeq 0} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1}\\alpha_i [1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})] \\\\ =& \\max_{\\pmb{\\alpha} \\succeq 0}\\min_{\\theta} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1}\\alpha_i [1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})] \\\\ &(\\mathbf{w}^*_{\\theta} = \\sum^{m}_{i=1}\\alpha_i y_i \\mathbf{x}_i,\\quad \\sum^{m}_{i=1} \\alpha_i y_i = 0.)\\\\ =& \\max_{\\pmb{\\alpha} \\succeq 0} \\sum^{m}_{i=1} \\alpha_i - \\frac{1}{2} \\sum^m_{i=1} \\sum^{m}_{j=1} \\alpha_i\\alpha_j y_i y_j \\mathbf{x}^T_i \\mathbf{x}_j \\\\ =& \\max_{\\pmb{\\alpha}\\succeq 0} \\mathbf{1}^T \\pmb{\\alpha} - \\frac{1}{2} \\mathbf{\\alpha}^T \\mathbf{D}_y \\mathbf{X}^T \\mathbf{X} \\mathbf{D}_y \\pmb{\\alpha}. \\tag{9} \\end{align*} \\] \u5176\u4e2d \\(\\mathbf{D}_y=diag(y_1, y_2, \\ldots, y_m)\\) \uff0c \\(\\mathbf{X} = [\\mathbf{x}_1, \\mathbf{x}_2, \\ldots, \\mathbf{x}_m]\\) , \u56e0\u6b64\u53ef\u5f97\uff1a \\[ \\begin{cases} \\pmb{\\alpha}^* = (\\mathbf{D}_y \\mathbf{X}^T \\mathbf{X} \\mathbf{D}_y)^{-1} \\mathbf{1}, \\\\ \\mathbf{w}^*_{\\theta} = \\mathbf{X}\\mathbf{D}_y \\pmb{\\alpha}^*, \\\\ \\mathbf{b}^*_{\\theta} = y_i - \\sum^{m}_{i=1} \\alpha_j y_j \\mathbf{x}^T_j \\mathbf{x}_i \\quad (\\alpha_i \\ne 0 \\overset{KKT}{\\Rightarrow} \\mathbf{w^*}^T_\\theta \\mathbf{x}_i + \\mathbf{b}^*_\\theta = y_i), \\\\ \\Vert \\mathbf{w}^*_\\theta\\Vert = \\Vert \\mathbf{X D}_y \\pmb{\\alpha}^* \\Vert^2 = \\mathbf{1}^T (\\mathbf{D}_y \\mathbf{X}^T \\mathbf{X} \\mathbf{D}_y)^{-1} \\mathbf{1} = \\Vert \\pmb{\\alpha}^* \\Vert_1. \\end{cases} \\] \u5176\u4e2d \\(\\mathbf{b}^*_\\theta\\) \u6d89\u53ca\u5230support\u96c6 \\(\\{(\\mathbf{x}, y):\\mathbf{w^*}_\\theta^T \\mathbf{x} + b^*_{\\theta} = y \\}\\) \uff0c \u4e0d\u5728\u8fd9\u4e2a\u96c6\u5408\u4e0a\u7684\u70b9 \\((\\mathbf{x}_i, y_i)\\) \u6ee1\u8db3 \\(\\alpha_i = 0\\) \uff0c\u4e5f\u5c31\u662f\u8bf4 \\((\\mathbf{w}^*_\\theta, b^*)\\) \u53ea\u662fsupport\u96c6\u5143\u7d20\u7684\u653e\u5c04\u7ec4\u5408\uff0c\u4e0e\u4e0d\u5728supoort\u96c6\u4e0a\u7684\u6837\u672c\u65e0\u5173\u3002","title":"Hard SVM\u7b97\u6cd5"},{"location":"ML/02-SVM/#soft-svm","text":"\u5728\u4e0a\u4e00\u5c0f\u8282\uff0c\u7b97\u6cd5\u7684\u8981\u6c42\u592a\u5f3a\u4e86\uff0c\u6837\u672c\u6570\u636e\u9700\u8981\u4e25\u683c\u7ebf\u6027\u53ef\u5206\u3002 \u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u4e00\u4e2a\u677e\u5f1b\u56e0\u5b50 \\(\\pmb{\\xi}\\in\\mathbb{R}^{m}_{+}\\) , \u5c06\u4f18\u5316\u76ee\u6807\u4fee\u6539\u6210\uff1a \\[ \\begin{align*} &\\min_{\\theta, \\pmb{\\xi}\\succeq 0} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + C \\Vert\\pmb{\\xi}\\Vert^p, \\\\ &\\ s.t.\\quad \\forall i \\in [1, m],\\quad y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}) \\ge 1 - \\xi_i.\\tag{10} \\end{align*} \\] \u8fd9\u91cc \\(\\xi_i\\) \u53ef\u4ee5\u89c2\u5bdf\u5f97\u5230\u6700\u5c0f\u503c\u4e3a \\(\\max(0, 1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta}))\\) \u3002 \u90a3\u4e48\u4f18\u5316\u76ee\u6807\u5c31\u53d8\u6210\u4e86 \\[ \\begin{align*} &\\min_{\\theta} \\sum^m_{i=1} \\Vert \\max(0, 1- y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i + b_{\\theta})) \\Vert^p + \\frac{1}{2C} \\Vert \\mathbf{w}_\\theta \\Vert^2. \\\\ \\end{align*} \\] \u56e0\u4e3a \\(l_{hinge}(x) = max(0, 1- x)\\) , \u6240\u4ee5\u8fd9\u4e2a\u4f18\u5316\u76ee\u6807\u4e5f\u53ef\u4ee5\u770b\u6210\u662fhinge\u635f\u5931\u51fd\u6570\u52a0\u4e8c\u8303\u6570\u6b63\u5219\u9879\u3002 \u56de\u5230\u4f18\u5316\u95ee\u9898(10)\u3002 \\(p=1\\) \u65f6\uff0c\u6211\u4eec\u5199\u51fa\u5b83\u7684\u7b49\u4ef7\u62c9\u683c\u6717\u65e5\u65e0\u7ea6\u675f\u5f62\u5f0f\uff1a \\[ \\min_{\\theta, \\pmb{\\xi}\\succeq 0} \\max_{\\pmb{\\alpha}\\succeq \\pmb{0}, \\pmb{\\beta} \\succeq \\pmb{0}} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + C \\sum^{m}_{i=1} {\\xi}_i + \\sum^m_{i=1}\\alpha_i[1 - \\xi_i - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i - b_\\theta)] - \\sum^{m}_{i=1}\\beta_i \\xi_i. \\] \u6574\u7406\u4e00\u4e0b\u53ef\u5f97\uff1a \\[ \\min_{\\theta, \\pmb{\\xi}\\succeq 0} \\max_{\\pmb{\\alpha}\\succeq \\pmb{0}, \\pmb{\\beta} \\succeq \\pmb{0}} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1} (C - \\alpha_i - \\beta_i){\\xi}_i + \\sum^m_{i=1}\\alpha_i[1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i - b_\\theta)]. \\] \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u6c42\u89e3\u8fd9\u4e2a\u4f18\u5316\u95ee\u9898: \\[ \\begin{align*} &\\min_{\\theta, \\pmb{\\xi}\\succeq 0} \\max_{\\pmb{\\alpha}\\succeq \\pmb{0}, \\pmb{\\beta} \\succeq \\pmb{0}} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1} (C - \\alpha_i - \\beta_i){\\xi}_i + \\sum^m_{i=1}\\alpha_i[1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i - b_\\theta)] \\\\ =&\\max_{\\pmb{\\alpha}\\succeq \\pmb{0}, \\pmb{\\beta} \\succeq \\pmb{0}} \\min_{\\theta, \\pmb{\\xi}\\succeq 0} \\frac{1}{2} \\Vert \\mathbf{w}_\\theta \\Vert^2 + \\sum^{m}_{i=1} (C - \\alpha_i - \\beta_i){\\xi}_i + \\sum^m_{i=1}\\alpha_i[1 - y_i(\\mathbf{w}^T_{\\theta} \\mathbf{x}_i - b_\\theta)] \\\\ &(\\mathbf{w}^*_{\\theta} = \\sum^{m}_{i=1} \\alpha_i y_i \\mathbf{x}_i, \\sum^{m}_{i=1}\\alpha_i y_i = 0, C = \\alpha_i + \\beta_i) \\\\ =& \\max_{C \\succeq \\pmb{\\alpha}\\succeq \\pmb{0}} \\sum^{m}_{i=1} \\alpha_i - \\frac{1}{2} \\sum^{m}_{i=1, j=1} \\alpha_i \\alpha_j y_i y_j \\mathbf{x}^T_i \\mathbf{x}_j\\quad(s.t. \\sum^{m}_{i=1} \\alpha_i y_i = 0). \\end{align*} \\] SMO\u4f18\u5316\u7b97\u6cd5\u6765\u6c42\u89e3\u8be5\u95ee\u9898\u3002","title":"Soft SVM\u7b97\u6cd5"},{"location":"ML/03-Rademacher/","text":"Rademacher\u590d\u6742\u5ea6 \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u5728\u5b9e\u9645\u751f\u6d3b\u4e2d\uff0c\u6211\u4eec\u80fd\u83b7\u5f97\u4e00\u7cfb\u5217\u7684\u6837\u672c \\(\\mathcal{S} = \\left\\{ (x_1, y_1), (x_2, y_2), \\dots, (x_m, y_m) \\right\\}\\) \u3002\u5176\u4e2d \u6837\u672c\u5c5e\u4e8e\u67d0\u4e2a\u96c6\u5408 \\(z = (x, y) \\in Z = X \\times Y\\) , \u5e76\u4e14\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u6837\u672c\u662f\u670d\u4ece\u67d0\u4e2a\u672a\u77e5\u7684\u8054\u5408\u5206\u5e03 \\(\\mathcal{D}\\) \uff0c\u5373 $(x, y) \\sim \\mathcal{D} $\u3002 \u4e0e\u4e4b\u76f8\u5173\u7684\u672a\u77e5\u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}}(y \\vert x)\\) \u662f\u6211\u4eec\u5e0c\u671b\u83b7\u5f97\u7684\uff1a\u5f53\u6211\u4eec\u77e5\u9053\u4e86 \\(x\\) \u7684\u503c\uff0c\u6211\u4eec\u5c31\u80fd\u77e5\u9053 \\(y\\) \u7684\u503c\u6700\u53ef\u80fd\u662f\u591a\u5c11\u3002 \u6211\u4eec\u4eba\u4e3a\u5730\u6784\u9020\u67d0\u4e2a\u7279\u5b9a\u6761\u4ef6\u5206\u5e03\u7684\u96c6\u5408(Hypothesis Set): \\(\\mathcal{H} = \\{P_{\\theta}(y \\vert x)\\}\\) \uff0c\u8fd9\u4e9b\u6761\u4ef6\u5206\u5e03\u88ab \\(\\theta\\) \u53c2\u6570\u5316\u3002 \u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u76ee\u6807\u5c31\u662f\u6839\u636e\u6837\u672c\u4ece\u5019\u9009\u96c6\u4e2d\u9009\u62e9\u6700\u63a5\u8fd1\u771f\u5b9e\u5206\u5e03 \\(P_{\\mathcal{D}}(y \\vert x)\\) \u7684\u5206\u5e03 \\(P_{\\theta}(y \\vert x)\\) \u3002 \u8bb2\u5230\u8fd9\u91cc\u5c31\u592a\u62bd\u8c61\u4e86\uff0c\u5fc5\u987b\u8981\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u4e00\u4e0b\u4e86\u3002 \u4f8b\u5b501\uff1a\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\u95ee\u9898\u4e2d\uff0c\u5047\u8bbe\u96c6\u662f\u67d0\u4e2a\u7a7a\u95f4\u8d85\u5e73\u9762\u7684\u96c6\u5408 \\(\\mathcal{H}_{\\theta} = \\{h_\\theta(x) = w^T_{\\theta} x + b_{\\theta}\\}\\) , \u8fd9\u91cc\u7684\u6761\u4ef6\u5206\u5e03\u5bf9\u5e94\u7684\u662f \\(P_{\\theta}\\{y = h_\\theta(x) \\vert x\\} = 1\\) \u3002\u6211\u4eec\u53ef\u4ee5\u9009\u53d6\u67d0\u4e2a\u8861\u91cf\u4e24\u4e2a\u5206\u5e03\u5dee\u5f02\u7684\u8ddd\u79bb\u6765\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u6c42\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u5728\u8fd9\u4e2a\u8ddd\u79bb\u4e0b\uff0c\u6700\u63a5\u8fd1\u771f\u5b9e\u6761\u4ef6\u5206\u5e03\u7684\u53c2\u6570\u5316\u6761\u4ef6\u5206\u5e03, \u5373\u4f18\u5316\u76ee\u6807\u4e3a\uff1a \\[ \\min_{\\theta} \\mathbb{E}_{x \\sim P_{\\mathcal{D}}(x)} [ Dist(P_{\\mathcal{D}}(\\cdot \\vert x) \\Vert P_{\\theta}(\\cdot \\vert x))]. \\tag{1} \\] \u8fd9\u91cc\u5982\u679c\u4f7f\u7528Wasserstein Distance, \u5e76\u4e14\u4f7f\u7528\u82b1\u8d39\u51fd\u6570 \\(c(a, b) = \\Vert a - b\\Vert^2\\) , \u90a3\u4e48\u5c31\u662f\u53ef\u4ee5\u5f97\u5230\u7ecf\u5178\u56de\u5f52\u95ee\u9898\u7684\u4f18\u5316\u76ee\u6807\uff1a \\[ \\min_{\\theta} \\mathbb{E}_{(x, y) \\sim \\mathcal{D}} [\\Vert h_{\\theta}(x) - y \\Vert^2]. \\tag{2} \\] \u5982\u679c \\(y \\in \\{0, 1\\}\\) , \u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u4f18\u5316\u76ee\u6807\u7b49\u4ef7\u4e8e0-1\u635f\u5931\uff1a \\[ \\min_{h \\in \\mathcal{H}} L_{\\mathcal{D}}(h) = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}} [\\mathbb{1}_{h(x) \\ne y}] = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}} [y \\cdot h(x)]. \\tag{3} \\] \u63a5\u4e0b\u6765\u7684\u8ba8\u8bba\u90fd\u662f\u56f4\u7ed50-1\u5206\u7c7b\u95ee\u9898\u800c\u8fdb\u884c\u7684\u3002\u975e\u5e38\u4e0d\u5e78\u7684\u662f\uff0c\u4e0a\u9762\u63d0\u5230\u7684\u771f\u5b9e\u635f\u5931\u51fd\u6570\u6211\u4eec\u90fd\u6ca1\u529e\u6cd5\u76f4\u63a5\u8fdb\u884c\u4f18\u5316\uff0c\u6211\u4eec\u80fd\u505a\u7684\u662f\u4f18\u5316\u5bf9\u5e94\u7684\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\uff1a \\[ \\min_{h \\in \\mathcal{H}} \\mathbb{E}_{(x, y) \\sim \\mathcal{S}} [\\mathbb{1}_{h(x) \\ne y}] = \\frac{1}{m} \\sum^{m}_{i=1} l^{0-1}(h(x), y), \\tag{4} \\] \u5176\u4e2d \\(l^{0-1}(h(x), y) = 1_{h(x) = y}\\) . \u4e0a\u9762\u8fd9\u79cd\u4f18\u5316\u76ee\u6807\u6709\u4e00\u4e2a\u540d\u5b57\u53eb\u505a\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316(Empirical Risk Minimization, ERM)\uff0c(4)\u5f0f\u5bf9\u5e94\u7684\u6700\u4f18\u5206\u7c7b\u5668 \\(h^*\\) \u53ef\u4ee5\u5199\u6210 \\(ERM_{\\mathcal{H}}(S)\\) \u3002 Representativeness \u00b6 \u9996\u5148\u5f15\u5165\u4e00\u4e2a\u8bc4\u4ef7\u6837\u672c\u7684\u6807\u51c6: \u5b9a\u4e491\uff1a \\(\\mathcal{S}\\) \u88ab\u79f0\u4e3a \\(\\epsilon-representative\\) \uff0c\u5982\u679c \\[ \\sup_{h \\in \\mathcal{H}} \\vert L_\\mathcal{D}(h) - L_{\\mathcal{S}}(h) \\vert \\le \\epsilon. \\] \u5982\u679c \u6837\u672c \\(S\\) \u662f \\(\\epsilon-representative\\) \uff0c \u90a3\u4e48 \\[ \\forall h \\in \\mathcal{H}, L_{\\mathcal{D}}(ERM_{\\mathcal{H}}(S)) \\le L_{\\mathcal S}(ERM_{\\mathcal{H}}(S)) + \\epsilon \\\\ \\le L_S(h) + \\epsilon \\le L_{\\mathcal{D}}(h) + 2 \\epsilon, \\] \u5373 \\(L_\\mathcal{D}(ERM_{\\mathcal{H}}(S)) \\le \\min_{h \\in \\mathcal{H}} L_{\\mathcal{D}}(h) + 2 \\epsilon\\) \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u901a\u8fc7ERM\u6807\u51c6\u6c42\u5230\u7684\u5206\u7c7b\u5668\u662f\u80fd\u591f\u63a5\u8fd1\u6700\u4f18\u503c\u7684\uff0c\u5e76\u4e14 \\(\\epsilon\\) \u80fd\u591f\u4f53\u73b0\u4e24\u8005\u7684\u63a5\u8fd1\u7a0b\u5ea6\u3002\u5982\u679c \\(\\epsilon\\) \u8db3\u591f\u5c0f\uff0c\u90a3\u4e48 \\(S\\) \u8db3\u4ee5\u4ee3\u8868\u771f\u5b9e\u5206\u5e03 \\(\\mathcal{D}\\) \u3002 \u63a5\u4e0b\u6765\u540c\u6837\u662f\u7eaf\u6570\u5b66\u7684\u4e1c\u897f\u3002\u6211\u4eec\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\uff1a\u7ed9\u5b9a\u4efb\u610f\u4e00\u4e2a\u6837\u672c \\(S\\) , \u6211\u4eec\u8981\u4f30\u8ba1\u5b83\u7684\u4ee3\u8868\u7a0b\u5ea6(representiveness)\u3002 \u4e3a\u4e86\u8ba8\u8bba\u65b9\u4fbf\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u96c6\u5408: \\[ \\mathcal{F} = l \\circ \\mathcal{H} = \\{f_h(x, y) = l(h(x), y): h \\in \\mathcal{H}\\}, \\tag{5} \\] \u8fd9\u6837\uff0c\u771f\u5b9e\u8bef\u5dee\u53ef\u5199\u6210 \\(L_\\mathcal{D}(f) = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}} [ f(x, y)]\\) \uff0c\u7ecf\u9a8c\u8bef\u5dee\u53ef\u4ee5\u5199\u6210 \\(L_S(f) = \\frac{1}{m} \\sum^{m}_{i=1} f(z_i)\\) \u3002\u90a3\u4e48\u6837\u672c \\(S\\) \u7684\u4ee3\u8868\u6027\u53ef\u4ee5\u91cd\u65b0\u5199\u6210 \\[ Rep_{\\mathcal{D}}(\\mathcal{H}, S) = \\sup_{f \\in \\mathcal{F}} (L_{\\mathcal{D}}(f) - L_{S}(f)). \\tag{6} \\] \u5176\u5b9e(6)\u5f0f\u53ea\u662f\u5b9a\u4e491\u6362\u4e86\u4e00\u79cd\u5199\u6cd5\uff0c\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u771f\u7684\u8ba1\u7b97\u5b83\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u5b83\u5bf9\u5e94\u5730\u7ecf\u9a8c\u516c\u5f0f\uff0c\u4ee5\u53ca\u7ecf\u9a8c\u516c\u5f0f\u548c(6)\u5f0f\u7684gap\u3002 \u6837\u672c\u96c6\u4ee3\u8868\u6027\u7684\u7ecf\u9a8c\u4f30\u8ba1: Rademacher\u590d\u6742\u5ea6 \u00b6 \u9996\u5148\u4ecb\u7ecd\u4e00\u4e2a\u76f4\u89c9\u4e0a\u7684\u7ecf\u9a8c\u4f30\u8ba1\uff1a\u5c06 \\(S\\) \u5747\u5206\u6210\u4e24\u4e2a\u6837\u672c\u96c6 \\(S_1\\) \u4e0e \\(S_2\\) \u3002\u5747\u5206\u7684\u610f\u601d\u662f \\(S\\) \u4e2d\u7684\u6837\u672c \\((x, y)\\) \u53ea\u4f1a\u51fa\u73b0\u5728 \\(S_1\\) \u4e0e \\(S_2\\) \u4e2d\u7684\u4e00\u4e2a, \u800c\u4e14\u4e00\u5b9a\u4f1a\u51fa\u73b0\u5728\u5176\u4e2d\u4e00\u4e2a\u6837\u672c\u96c6\u4e2d\u3002 \u90a3\u4e48\uff0c \\(S\\) \u4ee3\u8868\u6027\u7684\u7ecf\u9a8c\u4f30\u8ba1\u662f\uff1a \\[ \\sup_{f \\in \\mathcal{F}} (L_{S_1}(f) - L_{S_2}(f)). \\tag{7} \\] \u8fd9\u4e2a\u7ecf\u9a8c\u4f30\u8ba1\u5e76\u4e0d\u662f\u7b26\u5408\u6240\u6709\u4eba\u7684\u76f4\u89c9\u7684\uff0c\u6240\u4ee5\u4f60\u5982\u679c\u611f\u89c9\u83ab\u540d\u5176\u5999\uff0c\u4e5f\u4e0d\u8981\u614c\uff0c\u8ddf\u7740\u6211\u7ee7\u7eed\u3002 \u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u968f\u673a\u53d8\u91cf \\(\\sigma \\in \\{-1, 1\\}\\) \uff0c\u5b83\u67090.5\u7684\u6982\u7387\u53d6 \\(1\\) , \u67090.5\u7684\u6982\u7387\u53d6 \\(-1\\) \uff0c\u90a3\u4e48\u4e00\u4e2a\u66f4\u597d\u7684\u7ecf\u9a8c\u4f30\u8ba1\u53ef\u4ee5\u5199\u6210 \\[ R(\\mathcal{F} \\circ S) = \\frac{1}{m} \\mathbb{E}_{\\sigma_i \\sim U(\\{-1, 1\\})} \\left[ \\sup_{f \\in \\mathcal{F}} \\sum^{m}_{i = 1} \\sigma_i f(z_i) \\right], \\tag{8} \\] \u8fd9\u4e2a\u5f0f\u5b50\u5c31\u53eb\u505a Rademacher\u590d\u6742\u5ea6\u3002\u8fd9\u4e2a\u4f30\u8ba1\u6bd4(7)\u5f0f\u590d\u6742\u5f97\u591a\uff0c\u662f \\(2^m\\) \u6307\u6570\u500d\uff0c\u8ba1\u7b97\u590d\u6742\u7684\u95ee\u9898\u6211\u4eec\u653e\u5230\u540e\u9762\u89e3\u51b3\u3002\u6211\u4eec\u5148\u6765\u89e3\u51b3\u4e00\u4e0b\u8fd9\u4e2aRademacher\u590d\u6742\u5ea6\u548c\u6837\u672c\u8868\u8fbe\u6027\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u5b9a\u74061\uff1a \\[ \\mathbb{E}_{S\\sim\\mathcal{D}^m} [Rep_{\\mathcal{D}}(\\mathcal{F}, S)] \\le 2 \\mathbb{E}_{S \\sim \\mathcal{D}^m}[R(\\mathcal{F} \\circ S)]. \\] \u8bc1\u660e\u5f88\u5de7\u5999\uff0c\u4e66\u4e0a\u6709\u3002 \u6839\u636e\u5b9a\u74061\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u51e0\u4e2a\u5f15\u7406\uff1a \u9996\u5148 \\(\\mathbb{E}_{S\\sim\\mathcal{D}^m} [L_{\\mathcal{D}}(ERM_{\\mathcal{H}}(S)) - L_{S}(ERM_{\\mathcal{H}}(S))] \\le 2 \\mathbb{E}_{S \\sim \\mathcal{D}^m} R(l \\circ \\mathcal{H} \\circ S)\\) ; \u5176\u6b21 \\(\\mathbb{E}_{S\\sim\\mathcal{D}^m} [L_{\\mathcal{D}}(ERM_{\\mathcal{H}}(S)) - L_{S}(h^*)] \\le 2 \\mathbb{E}_{S \\sim \\mathcal{D}^m} R(l \\circ \\mathcal{H} \\circ S)\\) ,\u5176\u4e2d \\(h^* = \\min L_{\\mathcal{D}}(h)\\) ; \u6700\u540e \\(P \\left\\{ L_{\\mathcal{D}}(ERM_{\\mathcal{H}}(S)) - L_{S}(h^*) \\le \\frac{2}{\\delta} \\mathbb{E}_{S \\sim \\mathcal{D}^m} R(l \\circ \\mathcal{H} \\circ S) \\right\\} \\le \\delta\\) \u3002(\u9a6c\u5c14\u53ef\u592b\u4e0d\u7b49\u5f0f) \u4e3a\u4e86\u63a5\u4e0b\u6765\u7684\u5206\u6790\uff0c\u9700\u8981\u5148\u4ecb\u7ecd\u4e00\u4e2a\u4e0d\u7b49\u5f0f\uff1aMcDiarmid's Inequality\u3002 \u5b9a\u74062\uff1a(McDiarmid's Inequality)\u3002 \u5982\u679c \\(i \\in [1, m]\\) , \u5e76\u4e14 \\[ f(x_1, \\ldots, x_m) - f(\\ldots, x_{i-1}, x'_i, x_{i+1},...) \\in [a_i, b_i], \\] \u90a3\u4e48 \\[ P\\{f - \\mathbb{E} f \\ge \\epsilon\\} \\le exp\\left(\\frac{-2 \\epsilon^2}{\\sum^m_{i = 1}(a_i - b_i)^2}\\right), \\] \\[ P\\{f - \\mathbb{E} f \\le \\epsilon\\} \\le exp\\left(\\frac{-2 \\epsilon^2}{\\sum^m_{i = 1}(a_i - b_i)^2}\\right), \\] \\[ P\\left\\{f - \\mathbb{E} f \\le \\sqrt{\\frac{1}{2} \\sum^m_{i=1}(a_i - b_i)^2 \\log(1/\\delta)}\\right\\} \\ge 1 - \\delta, \\] \\[ P\\left\\{f - \\mathbb{E} f \\le (b - a) \\sqrt{\\frac{m}{2} \\log(1/\\delta)}\\right\\} \\ge 1 - \\delta, \\] \\[ P\\left\\{\\vert f - \\mathbb{E} f\\vert \\le \\sqrt{\\frac{1}{2} \\sum^m_{i=1}(a_i - b_i)^2 \\log(2/\\delta)}\\right\\} \\ge 1 - \\delta, \\] \\[ P\\left\\{\\vert f - \\mathbb{E} f\\vert \\le (b - a) \\sqrt{\\frac{m}{2} \\sum^m_{i=1}\\log(2/\\delta)}\\right\\} \\ge 1 - \\delta. \\] \u5b9a\u74063\uff1a(\u970d\u592b\u542c\u4e0d\u7b49\u5f0f) \u5bf9\u4e8em\u4e2a\u968f\u673a\u53d8\u91cf \\(X_1 \\in [a_1, b_1], X_2 \\in [a_2, b_2], \\ldots, X_m \\in [a_m, b_m]\\) , \u5b83\u4eec\u5747\u503c\u7684\u968f\u673a\u53d8\u91cf \\(\\bar X\\) \u6ee1\u8db3 \\[ P(\\bar X - \\mathbb{E}[\\bar X] \\ge \\epsilon) \\le exp\\left( -\\frac{2\\epsilon^2 m^2}{ \\sum^m_{i=1} (b_i - a_i)^2} \\right). \\] \u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e0e\u6570\u636e\u76f4\u63a5\u6709\u5173\u7684\u8fb9\u754c\uff0c\u800c\u4e0d\u53ea\u662f\u671f\u671b\u3002 \u5b9a\u74064\uff1a(\u6570\u636e\u76f8\u5173\u754c)\u3002\u5982\u679c \\(l(h(x), y) \\in [a, b]\\) \uff0c\u90a3\u4e48 \\[ P_{S\\sim\\mathcal{D}^m} \\{\\forall h \\in \\mathcal{H}, L_{\\mathcal{D}}(h) - L_{S}(h) \\le 2 \\mathbb{E}_{S' \\sim \\mathcal{D}^m} R(l \\circ \\mathcal{H} \\circ S') + (b - a) \\sqrt{2 \\ln(1/\\delta) / m}\\} \\ge 1 - \\delta. \\] \\[ P_{S\\sim\\mathcal{D}^m} \\left\\{\\forall h \\in \\mathcal{H}, L_{\\mathcal{D}}(h) - L_S(h) \\le 2 R(l \\circ \\mathcal{H} \\circ S) + 3(b - a) \\sqrt{2\\ln(2/\\delta)/m}\\right\\} \\ge 1 - \\delta \\] \\[ P_{S\\sim\\mathcal{D}^m} \\left\\{\\forall h \\in \\mathcal{H}, L_{\\mathcal{D}}(ERM_{\\mathcal{H}}(S)) - L_S(h) \\le 2 R(l \\circ \\mathcal{H} \\circ S) + 4(b - a) \\sqrt{2\\ln(2/\\delta)/m}\\right\\} \\ge 1 - \\delta \\] \u8bc1\u660e\uff1a \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u4e0d\u7b49\u5f0f\uff0c\u76f4\u63a5\u4f7f\u7528McDiarmid's Inequality, \u6ce8\u610f\u5bf9\u5e94\u7684\u4e0d\u662f \\(l(h(x), y)\\) \u7684\u754c\u800c\u662f\u662f \\([(a - b)/m, (b - a)/m]\\) \uff1b \u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u4e0d\u7b49\u5f0f\uff0c \\[ \\begin{cases} P_{S \\sim \\mathcal{D}^m} \\left\\{Rep_{\\mathcal{D}}(\\mathcal{F}, S) \\le \\mathbb{E}_{S'} Rep_{\\mathcal{D}}(l \\circ \\mathcal{H} \\circ S') + (b - a) \\sqrt{2\\ln(2/\\delta)/m}\\right\\} \\ge 1 - \\delta/2;\\\\ \\mathbb{E}_{S \\sim \\mathcal{D}^m} Rep_\\mathcal{D} (\\mathcal{F}, S) \\le 2 \\mathbb{E}_{s' \\sim \\mathcal{D}^m}R(l \\circ \\mathcal{H} \\circ S'); \\\\ P_{S \\sim \\mathcal{D}^m} \\left\\{E_{S'} R(l \\circ \\mathcal{H} \\circ S' \\le R(l \\circ \\mathcal{H} \\circ S) + (b - a) \\sqrt{2 \\ln(2/\\delta) / m}\\right\\} \\ge 1 - \\delta/2; \\end{cases} \\] \u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u4e0d\u7b49\u5f0f, \u9996\u5148\u5b9a\u4e49 \\(h_S = ERM_{\\mathcal{H}}(S)\\) \uff0c \\[ \\begin{cases} \\forall h \\in \\mathcal{H}, L_\\mathcal{D}(h_S) - L_{\\mathcal{D}}(h) \\le L_\\mathcal{D}(h_S) - L_{S}(h_S) + L_S(h) - L_\\mathcal{D}(h);\\\\ P_{S\\sim\\mathcal{D}^m}\\left\\{L_{\\mathcal{D}}(h_S) - L_S(h_S) \\le 2R(l\\circ \\mathcal{H} \\circ S) + 3(b-a) \\sqrt{2\\ln(3/\\delta)/m}\\right\\} \\ge 1 - 2\\delta/3;\\\\ P_{S\\sim\\mathcal{D}^m}\\left\\{L_{\\mathcal{D}}(h) - L_S(h) \\le (b-a) \\sqrt{\\ln(3/\\delta)/(2m)}\\right\\} \\ge 1 - 1\\delta/3;(\u970d\u592b\u542c\u4e0d\u7b49\u5f0f) \\end{cases} \\] \u8fd9\u4e09\u4e2a\u4e0d\u7b49\u5f0f\u5c42\u5c42\u9012\u8fdb\uff0c\u5176\u4e2d\u7b2c\u4e09\u4e2a\u7b49\u5f0f\u662f\u6211\u4eec\u6700\u60f3\u5f97\u5230\u7684\u7ed3\u679c\u3002 \u8ba1\u7b97Rademacher\u590d\u6742\u5ea6 \u00b6 \u5bf9\u4e8eRademacher\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u62bd\u8c61\u7684\u8ba4\u4e3a\u662f\u8861\u91cf\u4e00\u4e2a\u5411\u91cf\u96c6\u5408\u7684\u590d\u6742\u5ea6\u7684\uff1a \\[ A \\subset \\mathbb{R}^m, R(A) = \\frac{1}{m} \\mathbb{E}_{\\pmb{\\sigma}} \\left( \\sup_{\\pmb{a} \\in A} \\sum^m_{i=1} \\sigma_i a_i \\right). \\tag{9} \\] \u5f15\u74061\uff1a\u5bf9\u4e8e\u96c6\u5408 \\(A\\) , \u5e38\u6570 \\(c\\) \u548c \u67d0\u4e2a\u5411\u91cf \\(\\mathbf{a}_0\\) \uff0c\u90a3\u4e48 \\(R(\\{c \\mathbf{a} + \\mathbf{a}_0:\\mathbf{a} \\in A\\}) = \\vert c \\vert R(A).\\) \u5f15\u74062\uff1a\u5bf9\u4e8e\u96c6\u5408A\uff0c\u5bf9\u5e94\u7684\u4e00\u4e2a\u96c6\u5408 \\(A' = \\{\\sum^{N}_{j=1} \\alpha_i \\mathbf{a}^{(j)}: N \\in \\mathbb{N}, \\forall j, \\mathbf{a}^{(j)} \\in A, \\alpha_j \\ge 0, \\Vert \\mathbf{\\alpha} \\Vert_1 = 1\\}\\) , \u90a3\u4e48 \\(R(A') = R(A)\\) \u3002 \u5f15\u74063\uff1a(Massart Lemma). \u5982\u679c \\(A = \\{\\mathbf{a}_1, \\mathbf{a}_2, \\ldots, \\mathbf{a}_n : \\mathbf{a} \\in \\mathbb{R}^m\\}\\) \uff0c\u5b9a\u4e49 \\(\\bar{\\mathbf{a}} = \\frac{1}{n} \\sum^{n}_{i=1} \\mathbf{a}_i\\) , \u90a3\u4e48 \\[ R(A) \\le \\max_{\\mathbf{a} \\in A} \\Vert \\mathbf{a} - \\bar{\\mathbf{a}}\\Vert_2 \\frac{\\sqrt{2\\ln(n)}}{m}. \\] \u8bc1\u660e\uff1a\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe \\(\\bar{\\mathbf{a}} = 0\\) , \u5e76\u4e14 \\(A' = \\lambda A(\\lambda > 0)\\) , \u90a3\u4e48 \\[ \\begin{align*} &m R(A') = \\mathbb{E}_{\\pmb{\\sigma}} \\left[ \\max_{\\mathbf{a} \\in A'} \\mathbf{\\sigma}^T \\mathbf{a} \\right] = \\mathbb{E}_{\\pmb{\\sigma}} \\left[ \\ln \\left( \\max_{\\mathbf{a} \\in A'} e^{\\pmb{\\sigma}^T \\mathbf{a}} \\right) \\right]\\\\ \\le& \\mathbb{E}_{\\pmb{\\sigma}} \\left[ \\ln \\left( \\sum_{\\mathbf{a} \\in A'} e^{\\pmb{\\sigma}^T \\mathbf{a}} \\right) \\right] \\le \\ln\\left[ \\mathbb{E}_{\\pmb{\\sigma}} \\left( \\sum_{\\mathbf{a} \\in A'} e^{\\pmb{\\sigma}^T \\mathbf{a}} \\right) \\right]\\\\ =& \\ln \\sum_{\\mathbf{a} \\in A'} \\prod^{m}_{i=1} \\mathbb{E}_{\\sigma_i}e^{\\sigma_i a_i} = \\ln \\sum_{\\mathbf{a} \\in A'} \\prod^{m}_{i=1} \\frac{1}{2}(e^{a_i} + e^{-a_i}) \\\\ \\le& \\ln \\sum_{\\mathbf{a} \\in A'} \\prod^{m}_{i=1} e^{a^2_i/2} = \\ln \\sum_{\\mathcal{a} \\in A'} e^{\\Vert \\mathbf{a}\\Vert^2/2} \\le \\ln \\left( n \\max_{\\mathbf{a} \\in A'}e^{\\Vert \\mathbf{a}\\Vert^2/2} \\right)\\\\ =& \\ln n + \\max_{\\mathbf{a} \\in A'} {\\Vert \\mathbf{a}\\Vert^2/2} \\end{align*} \\] \u53c8\u56e0\u4e3a \\(R(A') = \\lambda R(A)\\) , \u6240\u4ee5 \\[ mR(A) \\le \\frac{1}{\\lambda} \\left( \\ln n + \\max_{\\mathbf{a} \\in A} {\\Vert \\lambda\\mathbf{a}\\Vert^2/2} \\right) \\le \\sqrt{2 \\ln n \\cdot \\max_{\\mathbf{a} \\in A} \\Vert \\mathbf{a}\\Vert^2}. \\] \u5f15\u74064\uff1a\u6536\u7f29\u6027\u3002 \u4ee4 \\(\\phi(\\mathbf{a}) = (\\phi_1(a_1), \\phi_2(a_2), \\ldots, \\phi_m(a_m))\\) , \u5e76\u4e14 \\(\\phi_i\\) \u90fd\u662f \\(\\rho\\) -Lipshcitz \u8fde\u7eed\u51fd\u6570\uff0c\u90a3\u4e48 \\(R(\\phi\\circ A) \\le \\rho R(A)\\) . \u7ebf\u6027\u5047\u8bbe\u96c6\u7684Rademacher\u590d\u6742\u5ea6 \u00b6 \u4f8b2\uff1a\u5047\u8bbe\u96c6 \\(\\mathcal{H}_2 = \\{h(\\mathbf{x}) = \\mathbf{w}^T \\mathbf{x}:\\Vert \\mathbf{w} \\Vert_2 \\le 1\\}\\) \u7684Rademacher\u590d\u6742\u5ea6\u6ee1\u8db3 \\[ R(\\mathcal{H}_2 \\circ S) \\le \\frac{\\sqrt{ \\sum^{m}_{i=1} \\Vert \\mathbf{x}_i \\Vert^2_2}}{m}\\le\\max_i \\frac{\\Vert \\mathbf{x_i} \\Vert_2}{\\sqrt{m}} \\] \u8bc1\u660e\uff1a \\[ \\begin{align*} &m R(\\mathcal{H} \\circ S) \\\\ =& \\mathbb{E}_{\\pmb{\\sigma}} \\left( \\sup_{\\mathbf{w}, \\Vert \\mathbf{w} \\Vert_2 \\le 1} \\sum^{m}_{i=1} \\sigma_i \\mathbf{w}^T \\mathbf{x}_i\\right) \\\\ =& \\mathbb{E}_{\\pmb{\\sigma}} \\left( \\big\\Vert \\sum^m_{i=1} \\sigma_i \\mathbf{x}_i \\big\\Vert_2 \\right) \\le \\left( \\mathbb{E}_{\\pmb{\\sigma}} \\big\\Vert \\sum^m_{i=1} \\sigma_i \\mathbf{x}_i \\big\\Vert^2_2 \\right)^{1/2} \\\\ =& \\left( \\sum_{i \\ne j} \\mathbb{E}[\\sigma_i \\sigma_j] \\mathbf{x}^T_i \\mathbf{x}_j + \\sum_{i} \\mathbb{\\mathbf{\\sigma}^2_i}\\Vert \\mathbf{x}_i \\Vert^2_2 \\right)^{1/2} \\\\ =& \\sqrt{\\sum^m_{i=1} \\Vert \\mathbf{x}_i \\Vert^2_2}. \\end{align*} \\] \u4f8b3\uff1a\u5047\u8bbe\u96c6 \\(\\mathcal{H}_1 = \\{h(\\mathbf{x}) = \\mathbf{w}^T \\mathbf{x}:\\Vert \\mathbf{w} \\Vert_1 \\le 1, \\mathbf{x} \\in \\mathbb{R}^n\\}\\) \u7684Rademacher\u590d\u6742\u5ea6\u6ee1\u8db3 \\[ R(\\mathcal{H}_1 \\circ S) \\le \\max_i \\Vert \\mathbf{x}_i \\Vert_\\infty \\sqrt\\frac{2 \\ln(2n)}{m}. \\] \u8fd9\u4e2a\u8bc1\u660e\u6709\u70b9\u5de7\u5999\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u6709\u70b9\u7ed5\uff0c\u5927\u5bb6\u5c0f\u5fc3\u4e86\u3002 \u8bc1\u660e\uff1a \u9996\u5148\u6784\u9020\u96c6\u5408 \\(V = \\{\\mathbf{v}_1, \\mathbf{v}_2, \\ldots, \\mathbf{v}_n, -\\mathbf{v}_1, -\\mathbf{v}_2, \\ldots, -\\mathbf{v}_n: \\mathbf{v}_i = (x_{1,i}, x_{2, i}, \\ldots, x_{m, i}) \\in \\mathbb{R}^m\\}\\) . \\[ \\begin{align*} &R(\\mathcal{H}_1\\circ S) \\le \\mathbb{E}_{\\pmb{\\sigma}} \\left( \\big\\Vert \\sum^m_{i=1} \\sigma_i \\mathbf{x}_i \\big\\Vert_\\infty \\right)\\\\ =& \\mathbb{E}_{\\pmb{\\sigma}}\\left( \\sup_j \\vert \\mathbf{v}^T_j \\sigma \\vert \\right) = m R(V)\\\\ \\le& m \\max_j \\Vert \\mathbf{v}_j \\Vert_2 \\frac{\\sqrt{2\\ln(2n)}}{m}\\\\ \\le& m \\max_{i} \\Vert \\mathbf{x}_i \\Vert_\\infty \\frac{\\sqrt {2\\ln(2n)}}{m}\\\\ =& \\max_{i} \\Vert \\mathbf{x}_i \\Vert_\\infty \\sqrt\\frac{ {2\\ln(2n)}}{m}\\\\ \\end{align*} \\] SVM\u7b97\u6cd5\u7684\u754c \u00b6 \u5b9a\u74065\uff1a\u5bf9\u4e8eSVM\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u6211\u4eec\u589e\u52a0\u9650\u5b9a \\(\\Vert \\mathbf{x} \\Vert_2 \\le R\\) \u4ee5\u53ca\u5047\u8bbe\u96c6\u7684\u9650\u5b9a \\(\\mathcal{H} = \\{\\mathbf{w}: \\Vert\\mathbf{w}\\Vert \\le B\\}\\) , \u6837\u672c\u70b9\u635f\u5931\u51fd\u6570 \\(l:\\mathcal{H} \\times Z \\rightarrow \\mathbb{R}\\) , \\(l(a, y)\\) \u5173\u4e8ea\u662f \\(\\rho\\) -Lipschitz\u8fde\u7eed\uff0c\u5e76\u4e14 \\(l(a, y)\\in[0, c]\\) , \u90a3\u4e48 \\[ P\\left\\{\\forall \\mathbf{w} \\in \\mathcal{H}, L_\\mathcal{D}(\\mathbf{w}) \\le L_{S}(\\mathcal{w}) + \\frac{2 \\rho BR}{\\sqrt{m}} + c \\sqrt\\frac{2 \\ln(1 / \\delta)}{m} \\right\\} \\ge 1 - \\delta. \\] \u8bc1\u660e\uff1a \u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u8bc1\u660e \\(R(l \\circ \\mathcal{H}) \\le \\rho BR/\\sqrt{m}\\) \u3002\u524d\u9762\u7684\u6bd4\u4f8b\u4e0d\u53d8\u6027\u3001\u4f8b\u5b502\u8bc1\u660e\u4e86\u8fd9\u4e9b\u4e8b\u60c5\u3002 \u53ef\u4ee5\u5c06 \\(\\mathbf{x}\\) \u7ef4\u5ea6\u589e\u52a0\u4e00\u7ef4\uff0c\u90a3\u4e48Hard-SVM\u95ee\u9898\u53ef\u4ee5\u7b80\u5316\u6210 \\[ \\arg\\min_{\\mathbf{w}} \\Vert\\mathbf{w}\\Vert^2_2, \\quad s.t. \\quad \\forall i, y_i \\left\\langle \\mathbf{w}, \\mathbf{x}_i \\right\\rangle \\ge 1. \\] \u5982\u679c\u5b58\u5728\u4e00\u4e2a \\(\\mathbf{w}_0\\) \u6ee1\u8db3 \\(P_{(\\mathbf{x}, y) \\sim \\mathcal{D}}\\{y \\left\\langle \\mathbf{w}_0, \\mathbf{x} \\right\\rangle \\ge 1\\} = 1\\) , \u5e76\u4e14 \\(\\Vert \\mathbf{x} \\Vert \\le R\\) \uff0c\u90a3\u4e48\u6211\u4eec\u901a\u8fc7\u7ecf\u9a8c\u8bef\u5dee\u6700\u5c0f\u5316\u6c42\u5f97\u7684 \\(\\mathbf{w}_S\\) \u6ee1\u8db3 \\[ P_{(\\mathbf{x}, y) \\sim \\mathcal{D}} [y \\ne sign(\\mathbf{w}_S^T \\mathbf{x})] \\le P_{(\\mathbf{x}, y) \\sim \\mathcal{D}} [l^{ramp}(\\mathbf{w}^T_S \\mathbf{x}, y)]\\\\ \\le \\frac{2R\\Vert \\mathbf{w}_0 \\Vert_2}{\\sqrt{m}} + (1 + R\\Vert\\mathbf{w}_0\\Vert_2) \\sqrt{\\frac{2\\ln(1/\\delta)}{m}}. \\tag{10} \\] \u4e0a\u9762\u8fd9\u4e2a\u754c\u8fd8\u9700\u8981\u77e5\u9053 \\(\\mathbf{w}_0\\) , \u6700\u597d\u80fd\u77e5\u9053\u771f\u5b9e\u7684\u6700\u4f18\u5206\u7c7b\u5668 \\(\\mathbf{w}^*\\) \u4f46\u662f\u8fd9\u4e9b\u90fd\u662f\u4e0d\u80fd\u5f97\u5230\u7684\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u754c\u3002\u8fd9\u4e2a\u754c\u7528\u5230\u4e86\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u7684\u601d\u60f3\u3002 \u5bf9\u4e8e\u6b63\u6574\u6570i\uff0c\u6784\u9020 \\(B_i = 2^8\\) , \u4ee5\u53ca\u5bf9\u5e94\u5047\u8bbe\u96c6 \\(\\mathcal{H}_i = \\{\\mathbf{w}: \\Vert \\mathbf{w} \\Vert \\le B_i\\}\\) , \u5e76\u4e14 \\(\\delta_i = \\frac{\\delta}{2 i^2}\\) \u3002\u90a3\u4e48\uff0c\u6709 \\[ P \\left\\{\\forall \\mathbf{w}\\in \\mathcal{H}_i, L_ \\mathcal{D}( \\mathbf{w}) \\le L_S( \\mathbf{w}) + \\frac{2 B_i R}{\\sqrt{m}} + \\sqrt\\frac{2 \\ln(2 /\\delta_i)}{m}\\right\\} \\ge 1 - \\delta_i. \\] \u90a3\u4e48\uff0c\u548c\u4e8b\u4ef6\u7684\u6982\u7387\u662f \\(1 - \\delta\\) \u3002 \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a \\(\\mathbf{w}\\) \uff0c\u5b83\u5bf9\u5e94\u7684\u5047\u8bbe\u96c6\u7f16\u53f7\u662f \\(i = \\lceil \\log_2(\\Vert \\mathbf{w} \\Vert)\\rceil\\) , \\(B_i\\le 2\\Vert \\mathbf{w} \\Vert\\) , \u5e76\u4e14 \\(\\frac{2}{\\delta_i} = \\frac{(2i)^2}{\\delta} \\le \\frac{(4 \\log_2(\\Vert \\mathbf{w} \\Vert))^2}{\\delta}\\) , \u90a3\u4e48 \\[ L_\\mathcal{D}(\\mathbf{w}) \\le L_S(\\mathbf{w}) + \\frac{4 \\Vert \\mathbf{w} \\Vert R}{\\sqrt{m}} + \\sqrt\\frac{4[\\ln(4\\log_2(\\Vert \\mathbf{w} \\Vert)) + \\ln(1 / \\delta)]}{m}. \\]","title":"Rademacher"},{"location":"ML/03-Rademacher/#rademacher","text":"","title":"Rademacher\u590d\u6742\u5ea6"},{"location":"ML/03-Rademacher/#_1","text":"\u5728\u5b9e\u9645\u751f\u6d3b\u4e2d\uff0c\u6211\u4eec\u80fd\u83b7\u5f97\u4e00\u7cfb\u5217\u7684\u6837\u672c \\(\\mathcal{S} = \\left\\{ (x_1, y_1), (x_2, y_2), \\dots, (x_m, y_m) \\right\\}\\) \u3002\u5176\u4e2d \u6837\u672c\u5c5e\u4e8e\u67d0\u4e2a\u96c6\u5408 \\(z = (x, y) \\in Z = X \\times Y\\) , \u5e76\u4e14\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u6837\u672c\u662f\u670d\u4ece\u67d0\u4e2a\u672a\u77e5\u7684\u8054\u5408\u5206\u5e03 \\(\\mathcal{D}\\) \uff0c\u5373 $(x, y) \\sim \\mathcal{D} $\u3002 \u4e0e\u4e4b\u76f8\u5173\u7684\u672a\u77e5\u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}}(y \\vert x)\\) \u662f\u6211\u4eec\u5e0c\u671b\u83b7\u5f97\u7684\uff1a\u5f53\u6211\u4eec\u77e5\u9053\u4e86 \\(x\\) \u7684\u503c\uff0c\u6211\u4eec\u5c31\u80fd\u77e5\u9053 \\(y\\) \u7684\u503c\u6700\u53ef\u80fd\u662f\u591a\u5c11\u3002 \u6211\u4eec\u4eba\u4e3a\u5730\u6784\u9020\u67d0\u4e2a\u7279\u5b9a\u6761\u4ef6\u5206\u5e03\u7684\u96c6\u5408(Hypothesis Set): \\(\\mathcal{H} = \\{P_{\\theta}(y \\vert x)\\}\\) \uff0c\u8fd9\u4e9b\u6761\u4ef6\u5206\u5e03\u88ab \\(\\theta\\) \u53c2\u6570\u5316\u3002 \u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u76ee\u6807\u5c31\u662f\u6839\u636e\u6837\u672c\u4ece\u5019\u9009\u96c6\u4e2d\u9009\u62e9\u6700\u63a5\u8fd1\u771f\u5b9e\u5206\u5e03 \\(P_{\\mathcal{D}}(y \\vert x)\\) \u7684\u5206\u5e03 \\(P_{\\theta}(y \\vert x)\\) \u3002 \u8bb2\u5230\u8fd9\u91cc\u5c31\u592a\u62bd\u8c61\u4e86\uff0c\u5fc5\u987b\u8981\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u4e00\u4e0b\u4e86\u3002 \u4f8b\u5b501\uff1a\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\u95ee\u9898\u4e2d\uff0c\u5047\u8bbe\u96c6\u662f\u67d0\u4e2a\u7a7a\u95f4\u8d85\u5e73\u9762\u7684\u96c6\u5408 \\(\\mathcal{H}_{\\theta} = \\{h_\\theta(x) = w^T_{\\theta} x + b_{\\theta}\\}\\) , \u8fd9\u91cc\u7684\u6761\u4ef6\u5206\u5e03\u5bf9\u5e94\u7684\u662f \\(P_{\\theta}\\{y = h_\\theta(x) \\vert x\\} = 1\\) \u3002\u6211\u4eec\u53ef\u4ee5\u9009\u53d6\u67d0\u4e2a\u8861\u91cf\u4e24\u4e2a\u5206\u5e03\u5dee\u5f02\u7684\u8ddd\u79bb\u6765\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u6c42\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u5728\u8fd9\u4e2a\u8ddd\u79bb\u4e0b\uff0c\u6700\u63a5\u8fd1\u771f\u5b9e\u6761\u4ef6\u5206\u5e03\u7684\u53c2\u6570\u5316\u6761\u4ef6\u5206\u5e03, \u5373\u4f18\u5316\u76ee\u6807\u4e3a\uff1a \\[ \\min_{\\theta} \\mathbb{E}_{x \\sim P_{\\mathcal{D}}(x)} [ Dist(P_{\\mathcal{D}}(\\cdot \\vert x) \\Vert P_{\\theta}(\\cdot \\vert x))]. \\tag{1} \\] \u8fd9\u91cc\u5982\u679c\u4f7f\u7528Wasserstein Distance, \u5e76\u4e14\u4f7f\u7528\u82b1\u8d39\u51fd\u6570 \\(c(a, b) = \\Vert a - b\\Vert^2\\) , \u90a3\u4e48\u5c31\u662f\u53ef\u4ee5\u5f97\u5230\u7ecf\u5178\u56de\u5f52\u95ee\u9898\u7684\u4f18\u5316\u76ee\u6807\uff1a \\[ \\min_{\\theta} \\mathbb{E}_{(x, y) \\sim \\mathcal{D}} [\\Vert h_{\\theta}(x) - y \\Vert^2]. \\tag{2} \\] \u5982\u679c \\(y \\in \\{0, 1\\}\\) , \u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u4f18\u5316\u76ee\u6807\u7b49\u4ef7\u4e8e0-1\u635f\u5931\uff1a \\[ \\min_{h \\in \\mathcal{H}} L_{\\mathcal{D}}(h) = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}} [\\mathbb{1}_{h(x) \\ne y}] = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}} [y \\cdot h(x)]. \\tag{3} \\] \u63a5\u4e0b\u6765\u7684\u8ba8\u8bba\u90fd\u662f\u56f4\u7ed50-1\u5206\u7c7b\u95ee\u9898\u800c\u8fdb\u884c\u7684\u3002\u975e\u5e38\u4e0d\u5e78\u7684\u662f\uff0c\u4e0a\u9762\u63d0\u5230\u7684\u771f\u5b9e\u635f\u5931\u51fd\u6570\u6211\u4eec\u90fd\u6ca1\u529e\u6cd5\u76f4\u63a5\u8fdb\u884c\u4f18\u5316\uff0c\u6211\u4eec\u80fd\u505a\u7684\u662f\u4f18\u5316\u5bf9\u5e94\u7684\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\uff1a \\[ \\min_{h \\in \\mathcal{H}} \\mathbb{E}_{(x, y) \\sim \\mathcal{S}} [\\mathbb{1}_{h(x) \\ne y}] = \\frac{1}{m} \\sum^{m}_{i=1} l^{0-1}(h(x), y), \\tag{4} \\] \u5176\u4e2d \\(l^{0-1}(h(x), y) = 1_{h(x) = y}\\) . \u4e0a\u9762\u8fd9\u79cd\u4f18\u5316\u76ee\u6807\u6709\u4e00\u4e2a\u540d\u5b57\u53eb\u505a\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316(Empirical Risk Minimization, ERM)\uff0c(4)\u5f0f\u5bf9\u5e94\u7684\u6700\u4f18\u5206\u7c7b\u5668 \\(h^*\\) \u53ef\u4ee5\u5199\u6210 \\(ERM_{\\mathcal{H}}(S)\\) \u3002","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"ML/03-Rademacher/#representativeness","text":"\u9996\u5148\u5f15\u5165\u4e00\u4e2a\u8bc4\u4ef7\u6837\u672c\u7684\u6807\u51c6: \u5b9a\u4e491\uff1a \\(\\mathcal{S}\\) \u88ab\u79f0\u4e3a \\(\\epsilon-representative\\) \uff0c\u5982\u679c \\[ \\sup_{h \\in \\mathcal{H}} \\vert L_\\mathcal{D}(h) - L_{\\mathcal{S}}(h) \\vert \\le \\epsilon. \\] \u5982\u679c \u6837\u672c \\(S\\) \u662f \\(\\epsilon-representative\\) \uff0c \u90a3\u4e48 \\[ \\forall h \\in \\mathcal{H}, L_{\\mathcal{D}}(ERM_{\\mathcal{H}}(S)) \\le L_{\\mathcal S}(ERM_{\\mathcal{H}}(S)) + \\epsilon \\\\ \\le L_S(h) + \\epsilon \\le L_{\\mathcal{D}}(h) + 2 \\epsilon, \\] \u5373 \\(L_\\mathcal{D}(ERM_{\\mathcal{H}}(S)) \\le \\min_{h \\in \\mathcal{H}} L_{\\mathcal{D}}(h) + 2 \\epsilon\\) \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u901a\u8fc7ERM\u6807\u51c6\u6c42\u5230\u7684\u5206\u7c7b\u5668\u662f\u80fd\u591f\u63a5\u8fd1\u6700\u4f18\u503c\u7684\uff0c\u5e76\u4e14 \\(\\epsilon\\) \u80fd\u591f\u4f53\u73b0\u4e24\u8005\u7684\u63a5\u8fd1\u7a0b\u5ea6\u3002\u5982\u679c \\(\\epsilon\\) \u8db3\u591f\u5c0f\uff0c\u90a3\u4e48 \\(S\\) \u8db3\u4ee5\u4ee3\u8868\u771f\u5b9e\u5206\u5e03 \\(\\mathcal{D}\\) \u3002 \u63a5\u4e0b\u6765\u540c\u6837\u662f\u7eaf\u6570\u5b66\u7684\u4e1c\u897f\u3002\u6211\u4eec\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\uff1a\u7ed9\u5b9a\u4efb\u610f\u4e00\u4e2a\u6837\u672c \\(S\\) , \u6211\u4eec\u8981\u4f30\u8ba1\u5b83\u7684\u4ee3\u8868\u7a0b\u5ea6(representiveness)\u3002 \u4e3a\u4e86\u8ba8\u8bba\u65b9\u4fbf\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u96c6\u5408: \\[ \\mathcal{F} = l \\circ \\mathcal{H} = \\{f_h(x, y) = l(h(x), y): h \\in \\mathcal{H}\\}, \\tag{5} \\] \u8fd9\u6837\uff0c\u771f\u5b9e\u8bef\u5dee\u53ef\u5199\u6210 \\(L_\\mathcal{D}(f) = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}} [ f(x, y)]\\) \uff0c\u7ecf\u9a8c\u8bef\u5dee\u53ef\u4ee5\u5199\u6210 \\(L_S(f) = \\frac{1}{m} \\sum^{m}_{i=1} f(z_i)\\) \u3002\u90a3\u4e48\u6837\u672c \\(S\\) \u7684\u4ee3\u8868\u6027\u53ef\u4ee5\u91cd\u65b0\u5199\u6210 \\[ Rep_{\\mathcal{D}}(\\mathcal{H}, S) = \\sup_{f \\in \\mathcal{F}} (L_{\\mathcal{D}}(f) - L_{S}(f)). \\tag{6} \\] \u5176\u5b9e(6)\u5f0f\u53ea\u662f\u5b9a\u4e491\u6362\u4e86\u4e00\u79cd\u5199\u6cd5\uff0c\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u771f\u7684\u8ba1\u7b97\u5b83\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u5b83\u5bf9\u5e94\u5730\u7ecf\u9a8c\u516c\u5f0f\uff0c\u4ee5\u53ca\u7ecf\u9a8c\u516c\u5f0f\u548c(6)\u5f0f\u7684gap\u3002","title":"Representativeness"},{"location":"ML/03-Rademacher/#rademacher_1","text":"\u9996\u5148\u4ecb\u7ecd\u4e00\u4e2a\u76f4\u89c9\u4e0a\u7684\u7ecf\u9a8c\u4f30\u8ba1\uff1a\u5c06 \\(S\\) \u5747\u5206\u6210\u4e24\u4e2a\u6837\u672c\u96c6 \\(S_1\\) \u4e0e \\(S_2\\) \u3002\u5747\u5206\u7684\u610f\u601d\u662f \\(S\\) \u4e2d\u7684\u6837\u672c \\((x, y)\\) \u53ea\u4f1a\u51fa\u73b0\u5728 \\(S_1\\) \u4e0e \\(S_2\\) \u4e2d\u7684\u4e00\u4e2a, \u800c\u4e14\u4e00\u5b9a\u4f1a\u51fa\u73b0\u5728\u5176\u4e2d\u4e00\u4e2a\u6837\u672c\u96c6\u4e2d\u3002 \u90a3\u4e48\uff0c \\(S\\) \u4ee3\u8868\u6027\u7684\u7ecf\u9a8c\u4f30\u8ba1\u662f\uff1a \\[ \\sup_{f \\in \\mathcal{F}} (L_{S_1}(f) - L_{S_2}(f)). \\tag{7} \\] \u8fd9\u4e2a\u7ecf\u9a8c\u4f30\u8ba1\u5e76\u4e0d\u662f\u7b26\u5408\u6240\u6709\u4eba\u7684\u76f4\u89c9\u7684\uff0c\u6240\u4ee5\u4f60\u5982\u679c\u611f\u89c9\u83ab\u540d\u5176\u5999\uff0c\u4e5f\u4e0d\u8981\u614c\uff0c\u8ddf\u7740\u6211\u7ee7\u7eed\u3002 \u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u968f\u673a\u53d8\u91cf \\(\\sigma \\in \\{-1, 1\\}\\) \uff0c\u5b83\u67090.5\u7684\u6982\u7387\u53d6 \\(1\\) , \u67090.5\u7684\u6982\u7387\u53d6 \\(-1\\) \uff0c\u90a3\u4e48\u4e00\u4e2a\u66f4\u597d\u7684\u7ecf\u9a8c\u4f30\u8ba1\u53ef\u4ee5\u5199\u6210 \\[ R(\\mathcal{F} \\circ S) = \\frac{1}{m} \\mathbb{E}_{\\sigma_i \\sim U(\\{-1, 1\\})} \\left[ \\sup_{f \\in \\mathcal{F}} \\sum^{m}_{i = 1} \\sigma_i f(z_i) \\right], \\tag{8} \\] \u8fd9\u4e2a\u5f0f\u5b50\u5c31\u53eb\u505a Rademacher\u590d\u6742\u5ea6\u3002\u8fd9\u4e2a\u4f30\u8ba1\u6bd4(7)\u5f0f\u590d\u6742\u5f97\u591a\uff0c\u662f \\(2^m\\) \u6307\u6570\u500d\uff0c\u8ba1\u7b97\u590d\u6742\u7684\u95ee\u9898\u6211\u4eec\u653e\u5230\u540e\u9762\u89e3\u51b3\u3002\u6211\u4eec\u5148\u6765\u89e3\u51b3\u4e00\u4e0b\u8fd9\u4e2aRademacher\u590d\u6742\u5ea6\u548c\u6837\u672c\u8868\u8fbe\u6027\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u5b9a\u74061\uff1a \\[ \\mathbb{E}_{S\\sim\\mathcal{D}^m} [Rep_{\\mathcal{D}}(\\mathcal{F}, S)] \\le 2 \\mathbb{E}_{S \\sim \\mathcal{D}^m}[R(\\mathcal{F} \\circ S)]. \\] \u8bc1\u660e\u5f88\u5de7\u5999\uff0c\u4e66\u4e0a\u6709\u3002 \u6839\u636e\u5b9a\u74061\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u51e0\u4e2a\u5f15\u7406\uff1a \u9996\u5148 \\(\\mathbb{E}_{S\\sim\\mathcal{D}^m} [L_{\\mathcal{D}}(ERM_{\\mathcal{H}}(S)) - L_{S}(ERM_{\\mathcal{H}}(S))] \\le 2 \\mathbb{E}_{S \\sim \\mathcal{D}^m} R(l \\circ \\mathcal{H} \\circ S)\\) ; \u5176\u6b21 \\(\\mathbb{E}_{S\\sim\\mathcal{D}^m} [L_{\\mathcal{D}}(ERM_{\\mathcal{H}}(S)) - L_{S}(h^*)] \\le 2 \\mathbb{E}_{S \\sim \\mathcal{D}^m} R(l \\circ \\mathcal{H} \\circ S)\\) ,\u5176\u4e2d \\(h^* = \\min L_{\\mathcal{D}}(h)\\) ; \u6700\u540e \\(P \\left\\{ L_{\\mathcal{D}}(ERM_{\\mathcal{H}}(S)) - L_{S}(h^*) \\le \\frac{2}{\\delta} \\mathbb{E}_{S \\sim \\mathcal{D}^m} R(l \\circ \\mathcal{H} \\circ S) \\right\\} \\le \\delta\\) \u3002(\u9a6c\u5c14\u53ef\u592b\u4e0d\u7b49\u5f0f) \u4e3a\u4e86\u63a5\u4e0b\u6765\u7684\u5206\u6790\uff0c\u9700\u8981\u5148\u4ecb\u7ecd\u4e00\u4e2a\u4e0d\u7b49\u5f0f\uff1aMcDiarmid's Inequality\u3002 \u5b9a\u74062\uff1a(McDiarmid's Inequality)\u3002 \u5982\u679c \\(i \\in [1, m]\\) , \u5e76\u4e14 \\[ f(x_1, \\ldots, x_m) - f(\\ldots, x_{i-1}, x'_i, x_{i+1},...) \\in [a_i, b_i], \\] \u90a3\u4e48 \\[ P\\{f - \\mathbb{E} f \\ge \\epsilon\\} \\le exp\\left(\\frac{-2 \\epsilon^2}{\\sum^m_{i = 1}(a_i - b_i)^2}\\right), \\] \\[ P\\{f - \\mathbb{E} f \\le \\epsilon\\} \\le exp\\left(\\frac{-2 \\epsilon^2}{\\sum^m_{i = 1}(a_i - b_i)^2}\\right), \\] \\[ P\\left\\{f - \\mathbb{E} f \\le \\sqrt{\\frac{1}{2} \\sum^m_{i=1}(a_i - b_i)^2 \\log(1/\\delta)}\\right\\} \\ge 1 - \\delta, \\] \\[ P\\left\\{f - \\mathbb{E} f \\le (b - a) \\sqrt{\\frac{m}{2} \\log(1/\\delta)}\\right\\} \\ge 1 - \\delta, \\] \\[ P\\left\\{\\vert f - \\mathbb{E} f\\vert \\le \\sqrt{\\frac{1}{2} \\sum^m_{i=1}(a_i - b_i)^2 \\log(2/\\delta)}\\right\\} \\ge 1 - \\delta, \\] \\[ P\\left\\{\\vert f - \\mathbb{E} f\\vert \\le (b - a) \\sqrt{\\frac{m}{2} \\sum^m_{i=1}\\log(2/\\delta)}\\right\\} \\ge 1 - \\delta. \\] \u5b9a\u74063\uff1a(\u970d\u592b\u542c\u4e0d\u7b49\u5f0f) \u5bf9\u4e8em\u4e2a\u968f\u673a\u53d8\u91cf \\(X_1 \\in [a_1, b_1], X_2 \\in [a_2, b_2], \\ldots, X_m \\in [a_m, b_m]\\) , \u5b83\u4eec\u5747\u503c\u7684\u968f\u673a\u53d8\u91cf \\(\\bar X\\) \u6ee1\u8db3 \\[ P(\\bar X - \\mathbb{E}[\\bar X] \\ge \\epsilon) \\le exp\\left( -\\frac{2\\epsilon^2 m^2}{ \\sum^m_{i=1} (b_i - a_i)^2} \\right). \\] \u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e0e\u6570\u636e\u76f4\u63a5\u6709\u5173\u7684\u8fb9\u754c\uff0c\u800c\u4e0d\u53ea\u662f\u671f\u671b\u3002 \u5b9a\u74064\uff1a(\u6570\u636e\u76f8\u5173\u754c)\u3002\u5982\u679c \\(l(h(x), y) \\in [a, b]\\) \uff0c\u90a3\u4e48 \\[ P_{S\\sim\\mathcal{D}^m} \\{\\forall h \\in \\mathcal{H}, L_{\\mathcal{D}}(h) - L_{S}(h) \\le 2 \\mathbb{E}_{S' \\sim \\mathcal{D}^m} R(l \\circ \\mathcal{H} \\circ S') + (b - a) \\sqrt{2 \\ln(1/\\delta) / m}\\} \\ge 1 - \\delta. \\] \\[ P_{S\\sim\\mathcal{D}^m} \\left\\{\\forall h \\in \\mathcal{H}, L_{\\mathcal{D}}(h) - L_S(h) \\le 2 R(l \\circ \\mathcal{H} \\circ S) + 3(b - a) \\sqrt{2\\ln(2/\\delta)/m}\\right\\} \\ge 1 - \\delta \\] \\[ P_{S\\sim\\mathcal{D}^m} \\left\\{\\forall h \\in \\mathcal{H}, L_{\\mathcal{D}}(ERM_{\\mathcal{H}}(S)) - L_S(h) \\le 2 R(l \\circ \\mathcal{H} \\circ S) + 4(b - a) \\sqrt{2\\ln(2/\\delta)/m}\\right\\} \\ge 1 - \\delta \\] \u8bc1\u660e\uff1a \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u4e0d\u7b49\u5f0f\uff0c\u76f4\u63a5\u4f7f\u7528McDiarmid's Inequality, \u6ce8\u610f\u5bf9\u5e94\u7684\u4e0d\u662f \\(l(h(x), y)\\) \u7684\u754c\u800c\u662f\u662f \\([(a - b)/m, (b - a)/m]\\) \uff1b \u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u4e0d\u7b49\u5f0f\uff0c \\[ \\begin{cases} P_{S \\sim \\mathcal{D}^m} \\left\\{Rep_{\\mathcal{D}}(\\mathcal{F}, S) \\le \\mathbb{E}_{S'} Rep_{\\mathcal{D}}(l \\circ \\mathcal{H} \\circ S') + (b - a) \\sqrt{2\\ln(2/\\delta)/m}\\right\\} \\ge 1 - \\delta/2;\\\\ \\mathbb{E}_{S \\sim \\mathcal{D}^m} Rep_\\mathcal{D} (\\mathcal{F}, S) \\le 2 \\mathbb{E}_{s' \\sim \\mathcal{D}^m}R(l \\circ \\mathcal{H} \\circ S'); \\\\ P_{S \\sim \\mathcal{D}^m} \\left\\{E_{S'} R(l \\circ \\mathcal{H} \\circ S' \\le R(l \\circ \\mathcal{H} \\circ S) + (b - a) \\sqrt{2 \\ln(2/\\delta) / m}\\right\\} \\ge 1 - \\delta/2; \\end{cases} \\] \u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u4e0d\u7b49\u5f0f, \u9996\u5148\u5b9a\u4e49 \\(h_S = ERM_{\\mathcal{H}}(S)\\) \uff0c \\[ \\begin{cases} \\forall h \\in \\mathcal{H}, L_\\mathcal{D}(h_S) - L_{\\mathcal{D}}(h) \\le L_\\mathcal{D}(h_S) - L_{S}(h_S) + L_S(h) - L_\\mathcal{D}(h);\\\\ P_{S\\sim\\mathcal{D}^m}\\left\\{L_{\\mathcal{D}}(h_S) - L_S(h_S) \\le 2R(l\\circ \\mathcal{H} \\circ S) + 3(b-a) \\sqrt{2\\ln(3/\\delta)/m}\\right\\} \\ge 1 - 2\\delta/3;\\\\ P_{S\\sim\\mathcal{D}^m}\\left\\{L_{\\mathcal{D}}(h) - L_S(h) \\le (b-a) \\sqrt{\\ln(3/\\delta)/(2m)}\\right\\} \\ge 1 - 1\\delta/3;(\u970d\u592b\u542c\u4e0d\u7b49\u5f0f) \\end{cases} \\] \u8fd9\u4e09\u4e2a\u4e0d\u7b49\u5f0f\u5c42\u5c42\u9012\u8fdb\uff0c\u5176\u4e2d\u7b2c\u4e09\u4e2a\u7b49\u5f0f\u662f\u6211\u4eec\u6700\u60f3\u5f97\u5230\u7684\u7ed3\u679c\u3002","title":"\u6837\u672c\u96c6\u4ee3\u8868\u6027\u7684\u7ecf\u9a8c\u4f30\u8ba1: Rademacher\u590d\u6742\u5ea6"},{"location":"ML/03-Rademacher/#rademacher_2","text":"\u5bf9\u4e8eRademacher\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u62bd\u8c61\u7684\u8ba4\u4e3a\u662f\u8861\u91cf\u4e00\u4e2a\u5411\u91cf\u96c6\u5408\u7684\u590d\u6742\u5ea6\u7684\uff1a \\[ A \\subset \\mathbb{R}^m, R(A) = \\frac{1}{m} \\mathbb{E}_{\\pmb{\\sigma}} \\left( \\sup_{\\pmb{a} \\in A} \\sum^m_{i=1} \\sigma_i a_i \\right). \\tag{9} \\] \u5f15\u74061\uff1a\u5bf9\u4e8e\u96c6\u5408 \\(A\\) , \u5e38\u6570 \\(c\\) \u548c \u67d0\u4e2a\u5411\u91cf \\(\\mathbf{a}_0\\) \uff0c\u90a3\u4e48 \\(R(\\{c \\mathbf{a} + \\mathbf{a}_0:\\mathbf{a} \\in A\\}) = \\vert c \\vert R(A).\\) \u5f15\u74062\uff1a\u5bf9\u4e8e\u96c6\u5408A\uff0c\u5bf9\u5e94\u7684\u4e00\u4e2a\u96c6\u5408 \\(A' = \\{\\sum^{N}_{j=1} \\alpha_i \\mathbf{a}^{(j)}: N \\in \\mathbb{N}, \\forall j, \\mathbf{a}^{(j)} \\in A, \\alpha_j \\ge 0, \\Vert \\mathbf{\\alpha} \\Vert_1 = 1\\}\\) , \u90a3\u4e48 \\(R(A') = R(A)\\) \u3002 \u5f15\u74063\uff1a(Massart Lemma). \u5982\u679c \\(A = \\{\\mathbf{a}_1, \\mathbf{a}_2, \\ldots, \\mathbf{a}_n : \\mathbf{a} \\in \\mathbb{R}^m\\}\\) \uff0c\u5b9a\u4e49 \\(\\bar{\\mathbf{a}} = \\frac{1}{n} \\sum^{n}_{i=1} \\mathbf{a}_i\\) , \u90a3\u4e48 \\[ R(A) \\le \\max_{\\mathbf{a} \\in A} \\Vert \\mathbf{a} - \\bar{\\mathbf{a}}\\Vert_2 \\frac{\\sqrt{2\\ln(n)}}{m}. \\] \u8bc1\u660e\uff1a\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe \\(\\bar{\\mathbf{a}} = 0\\) , \u5e76\u4e14 \\(A' = \\lambda A(\\lambda > 0)\\) , \u90a3\u4e48 \\[ \\begin{align*} &m R(A') = \\mathbb{E}_{\\pmb{\\sigma}} \\left[ \\max_{\\mathbf{a} \\in A'} \\mathbf{\\sigma}^T \\mathbf{a} \\right] = \\mathbb{E}_{\\pmb{\\sigma}} \\left[ \\ln \\left( \\max_{\\mathbf{a} \\in A'} e^{\\pmb{\\sigma}^T \\mathbf{a}} \\right) \\right]\\\\ \\le& \\mathbb{E}_{\\pmb{\\sigma}} \\left[ \\ln \\left( \\sum_{\\mathbf{a} \\in A'} e^{\\pmb{\\sigma}^T \\mathbf{a}} \\right) \\right] \\le \\ln\\left[ \\mathbb{E}_{\\pmb{\\sigma}} \\left( \\sum_{\\mathbf{a} \\in A'} e^{\\pmb{\\sigma}^T \\mathbf{a}} \\right) \\right]\\\\ =& \\ln \\sum_{\\mathbf{a} \\in A'} \\prod^{m}_{i=1} \\mathbb{E}_{\\sigma_i}e^{\\sigma_i a_i} = \\ln \\sum_{\\mathbf{a} \\in A'} \\prod^{m}_{i=1} \\frac{1}{2}(e^{a_i} + e^{-a_i}) \\\\ \\le& \\ln \\sum_{\\mathbf{a} \\in A'} \\prod^{m}_{i=1} e^{a^2_i/2} = \\ln \\sum_{\\mathcal{a} \\in A'} e^{\\Vert \\mathbf{a}\\Vert^2/2} \\le \\ln \\left( n \\max_{\\mathbf{a} \\in A'}e^{\\Vert \\mathbf{a}\\Vert^2/2} \\right)\\\\ =& \\ln n + \\max_{\\mathbf{a} \\in A'} {\\Vert \\mathbf{a}\\Vert^2/2} \\end{align*} \\] \u53c8\u56e0\u4e3a \\(R(A') = \\lambda R(A)\\) , \u6240\u4ee5 \\[ mR(A) \\le \\frac{1}{\\lambda} \\left( \\ln n + \\max_{\\mathbf{a} \\in A} {\\Vert \\lambda\\mathbf{a}\\Vert^2/2} \\right) \\le \\sqrt{2 \\ln n \\cdot \\max_{\\mathbf{a} \\in A} \\Vert \\mathbf{a}\\Vert^2}. \\] \u5f15\u74064\uff1a\u6536\u7f29\u6027\u3002 \u4ee4 \\(\\phi(\\mathbf{a}) = (\\phi_1(a_1), \\phi_2(a_2), \\ldots, \\phi_m(a_m))\\) , \u5e76\u4e14 \\(\\phi_i\\) \u90fd\u662f \\(\\rho\\) -Lipshcitz \u8fde\u7eed\u51fd\u6570\uff0c\u90a3\u4e48 \\(R(\\phi\\circ A) \\le \\rho R(A)\\) .","title":"\u8ba1\u7b97Rademacher\u590d\u6742\u5ea6"},{"location":"ML/03-Rademacher/#rademacher_3","text":"\u4f8b2\uff1a\u5047\u8bbe\u96c6 \\(\\mathcal{H}_2 = \\{h(\\mathbf{x}) = \\mathbf{w}^T \\mathbf{x}:\\Vert \\mathbf{w} \\Vert_2 \\le 1\\}\\) \u7684Rademacher\u590d\u6742\u5ea6\u6ee1\u8db3 \\[ R(\\mathcal{H}_2 \\circ S) \\le \\frac{\\sqrt{ \\sum^{m}_{i=1} \\Vert \\mathbf{x}_i \\Vert^2_2}}{m}\\le\\max_i \\frac{\\Vert \\mathbf{x_i} \\Vert_2}{\\sqrt{m}} \\] \u8bc1\u660e\uff1a \\[ \\begin{align*} &m R(\\mathcal{H} \\circ S) \\\\ =& \\mathbb{E}_{\\pmb{\\sigma}} \\left( \\sup_{\\mathbf{w}, \\Vert \\mathbf{w} \\Vert_2 \\le 1} \\sum^{m}_{i=1} \\sigma_i \\mathbf{w}^T \\mathbf{x}_i\\right) \\\\ =& \\mathbb{E}_{\\pmb{\\sigma}} \\left( \\big\\Vert \\sum^m_{i=1} \\sigma_i \\mathbf{x}_i \\big\\Vert_2 \\right) \\le \\left( \\mathbb{E}_{\\pmb{\\sigma}} \\big\\Vert \\sum^m_{i=1} \\sigma_i \\mathbf{x}_i \\big\\Vert^2_2 \\right)^{1/2} \\\\ =& \\left( \\sum_{i \\ne j} \\mathbb{E}[\\sigma_i \\sigma_j] \\mathbf{x}^T_i \\mathbf{x}_j + \\sum_{i} \\mathbb{\\mathbf{\\sigma}^2_i}\\Vert \\mathbf{x}_i \\Vert^2_2 \\right)^{1/2} \\\\ =& \\sqrt{\\sum^m_{i=1} \\Vert \\mathbf{x}_i \\Vert^2_2}. \\end{align*} \\] \u4f8b3\uff1a\u5047\u8bbe\u96c6 \\(\\mathcal{H}_1 = \\{h(\\mathbf{x}) = \\mathbf{w}^T \\mathbf{x}:\\Vert \\mathbf{w} \\Vert_1 \\le 1, \\mathbf{x} \\in \\mathbb{R}^n\\}\\) \u7684Rademacher\u590d\u6742\u5ea6\u6ee1\u8db3 \\[ R(\\mathcal{H}_1 \\circ S) \\le \\max_i \\Vert \\mathbf{x}_i \\Vert_\\infty \\sqrt\\frac{2 \\ln(2n)}{m}. \\] \u8fd9\u4e2a\u8bc1\u660e\u6709\u70b9\u5de7\u5999\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u6709\u70b9\u7ed5\uff0c\u5927\u5bb6\u5c0f\u5fc3\u4e86\u3002 \u8bc1\u660e\uff1a \u9996\u5148\u6784\u9020\u96c6\u5408 \\(V = \\{\\mathbf{v}_1, \\mathbf{v}_2, \\ldots, \\mathbf{v}_n, -\\mathbf{v}_1, -\\mathbf{v}_2, \\ldots, -\\mathbf{v}_n: \\mathbf{v}_i = (x_{1,i}, x_{2, i}, \\ldots, x_{m, i}) \\in \\mathbb{R}^m\\}\\) . \\[ \\begin{align*} &R(\\mathcal{H}_1\\circ S) \\le \\mathbb{E}_{\\pmb{\\sigma}} \\left( \\big\\Vert \\sum^m_{i=1} \\sigma_i \\mathbf{x}_i \\big\\Vert_\\infty \\right)\\\\ =& \\mathbb{E}_{\\pmb{\\sigma}}\\left( \\sup_j \\vert \\mathbf{v}^T_j \\sigma \\vert \\right) = m R(V)\\\\ \\le& m \\max_j \\Vert \\mathbf{v}_j \\Vert_2 \\frac{\\sqrt{2\\ln(2n)}}{m}\\\\ \\le& m \\max_{i} \\Vert \\mathbf{x}_i \\Vert_\\infty \\frac{\\sqrt {2\\ln(2n)}}{m}\\\\ =& \\max_{i} \\Vert \\mathbf{x}_i \\Vert_\\infty \\sqrt\\frac{ {2\\ln(2n)}}{m}\\\\ \\end{align*} \\]","title":"\u7ebf\u6027\u5047\u8bbe\u96c6\u7684Rademacher\u590d\u6742\u5ea6"},{"location":"ML/03-Rademacher/#svm","text":"\u5b9a\u74065\uff1a\u5bf9\u4e8eSVM\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u6211\u4eec\u589e\u52a0\u9650\u5b9a \\(\\Vert \\mathbf{x} \\Vert_2 \\le R\\) \u4ee5\u53ca\u5047\u8bbe\u96c6\u7684\u9650\u5b9a \\(\\mathcal{H} = \\{\\mathbf{w}: \\Vert\\mathbf{w}\\Vert \\le B\\}\\) , \u6837\u672c\u70b9\u635f\u5931\u51fd\u6570 \\(l:\\mathcal{H} \\times Z \\rightarrow \\mathbb{R}\\) , \\(l(a, y)\\) \u5173\u4e8ea\u662f \\(\\rho\\) -Lipschitz\u8fde\u7eed\uff0c\u5e76\u4e14 \\(l(a, y)\\in[0, c]\\) , \u90a3\u4e48 \\[ P\\left\\{\\forall \\mathbf{w} \\in \\mathcal{H}, L_\\mathcal{D}(\\mathbf{w}) \\le L_{S}(\\mathcal{w}) + \\frac{2 \\rho BR}{\\sqrt{m}} + c \\sqrt\\frac{2 \\ln(1 / \\delta)}{m} \\right\\} \\ge 1 - \\delta. \\] \u8bc1\u660e\uff1a \u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u8bc1\u660e \\(R(l \\circ \\mathcal{H}) \\le \\rho BR/\\sqrt{m}\\) \u3002\u524d\u9762\u7684\u6bd4\u4f8b\u4e0d\u53d8\u6027\u3001\u4f8b\u5b502\u8bc1\u660e\u4e86\u8fd9\u4e9b\u4e8b\u60c5\u3002 \u53ef\u4ee5\u5c06 \\(\\mathbf{x}\\) \u7ef4\u5ea6\u589e\u52a0\u4e00\u7ef4\uff0c\u90a3\u4e48Hard-SVM\u95ee\u9898\u53ef\u4ee5\u7b80\u5316\u6210 \\[ \\arg\\min_{\\mathbf{w}} \\Vert\\mathbf{w}\\Vert^2_2, \\quad s.t. \\quad \\forall i, y_i \\left\\langle \\mathbf{w}, \\mathbf{x}_i \\right\\rangle \\ge 1. \\] \u5982\u679c\u5b58\u5728\u4e00\u4e2a \\(\\mathbf{w}_0\\) \u6ee1\u8db3 \\(P_{(\\mathbf{x}, y) \\sim \\mathcal{D}}\\{y \\left\\langle \\mathbf{w}_0, \\mathbf{x} \\right\\rangle \\ge 1\\} = 1\\) , \u5e76\u4e14 \\(\\Vert \\mathbf{x} \\Vert \\le R\\) \uff0c\u90a3\u4e48\u6211\u4eec\u901a\u8fc7\u7ecf\u9a8c\u8bef\u5dee\u6700\u5c0f\u5316\u6c42\u5f97\u7684 \\(\\mathbf{w}_S\\) \u6ee1\u8db3 \\[ P_{(\\mathbf{x}, y) \\sim \\mathcal{D}} [y \\ne sign(\\mathbf{w}_S^T \\mathbf{x})] \\le P_{(\\mathbf{x}, y) \\sim \\mathcal{D}} [l^{ramp}(\\mathbf{w}^T_S \\mathbf{x}, y)]\\\\ \\le \\frac{2R\\Vert \\mathbf{w}_0 \\Vert_2}{\\sqrt{m}} + (1 + R\\Vert\\mathbf{w}_0\\Vert_2) \\sqrt{\\frac{2\\ln(1/\\delta)}{m}}. \\tag{10} \\] \u4e0a\u9762\u8fd9\u4e2a\u754c\u8fd8\u9700\u8981\u77e5\u9053 \\(\\mathbf{w}_0\\) , \u6700\u597d\u80fd\u77e5\u9053\u771f\u5b9e\u7684\u6700\u4f18\u5206\u7c7b\u5668 \\(\\mathbf{w}^*\\) \u4f46\u662f\u8fd9\u4e9b\u90fd\u662f\u4e0d\u80fd\u5f97\u5230\u7684\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u754c\u3002\u8fd9\u4e2a\u754c\u7528\u5230\u4e86\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\u7684\u601d\u60f3\u3002 \u5bf9\u4e8e\u6b63\u6574\u6570i\uff0c\u6784\u9020 \\(B_i = 2^8\\) , \u4ee5\u53ca\u5bf9\u5e94\u5047\u8bbe\u96c6 \\(\\mathcal{H}_i = \\{\\mathbf{w}: \\Vert \\mathbf{w} \\Vert \\le B_i\\}\\) , \u5e76\u4e14 \\(\\delta_i = \\frac{\\delta}{2 i^2}\\) \u3002\u90a3\u4e48\uff0c\u6709 \\[ P \\left\\{\\forall \\mathbf{w}\\in \\mathcal{H}_i, L_ \\mathcal{D}( \\mathbf{w}) \\le L_S( \\mathbf{w}) + \\frac{2 B_i R}{\\sqrt{m}} + \\sqrt\\frac{2 \\ln(2 /\\delta_i)}{m}\\right\\} \\ge 1 - \\delta_i. \\] \u90a3\u4e48\uff0c\u548c\u4e8b\u4ef6\u7684\u6982\u7387\u662f \\(1 - \\delta\\) \u3002 \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a \\(\\mathbf{w}\\) \uff0c\u5b83\u5bf9\u5e94\u7684\u5047\u8bbe\u96c6\u7f16\u53f7\u662f \\(i = \\lceil \\log_2(\\Vert \\mathbf{w} \\Vert)\\rceil\\) , \\(B_i\\le 2\\Vert \\mathbf{w} \\Vert\\) , \u5e76\u4e14 \\(\\frac{2}{\\delta_i} = \\frac{(2i)^2}{\\delta} \\le \\frac{(4 \\log_2(\\Vert \\mathbf{w} \\Vert))^2}{\\delta}\\) , \u90a3\u4e48 \\[ L_\\mathcal{D}(\\mathbf{w}) \\le L_S(\\mathbf{w}) + \\frac{4 \\Vert \\mathbf{w} \\Vert R}{\\sqrt{m}} + \\sqrt\\frac{4[\\ln(4\\log_2(\\Vert \\mathbf{w} \\Vert)) + \\ln(1 / \\delta)]}{m}. \\]","title":"SVM\u7b97\u6cd5\u7684\u754c"},{"location":"ML/04-Regression/","text":"\u7ebf\u6027\u56de\u5f52\u95ee\u9898 \u00b6 \u95ee\u9898\u63cf\u8ff0 \u00b6 \u5728\u5b9e\u9645\u751f\u6d3b\u4e2d\uff0c\u6211\u4eec\u80fd\u83b7\u5f97\u4e00\u7cfb\u5217\u7684\u6837\u672c \\(\\mathcal{S} = \\left\\{ (x_1, y_1), (x_2, y_2), \\dots, (x_m, y_m) \\right\\}\\) \u3002\u5176\u4e2d \u6837\u672c\u5c5e\u4e8e\u67d0\u4e2a\u96c6\u5408 \\(z = (x, y) \\in Z = X \\times Y\\) , \u5e76\u4e14\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u6837\u672c\u662f\u670d\u4ece\u67d0\u4e2a\u672a\u77e5\u7684\u8054\u5408\u5206\u5e03 \\(\\mathcal{D}\\) \uff0c\u5373 \\((x, y) \\sim \\mathcal{D}\\) \u3002 \u4e0e\u4e4b\u76f8\u5173\u7684\u672a\u77e5\u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}}(y \\vert x)\\) \u662f\u6211\u4eec\u5e0c\u671b\u83b7\u5f97\u7684\uff1a\u5f53\u6211\u4eec\u77e5\u9053\u4e86 \\(x\\) \u7684\u503c\uff0c\u6211\u4eec\u5c31\u80fd\u77e5\u9053 \\(y\\) \u7684\u503c\u6700\u53ef\u80fd\u662f\u591a\u5c11\u3002 \u5982\u679c \\(y \\in \\mathbb{R}\\) , \u90a3\u4e48\u6c42\u89e3 \\(P_\\mathcal{D}(y\\vert x)\\) \u7684\u95ee\u9898\u4e5f\u53eb\u505a\u56de\u5f52\u95ee\u9898\u3002 \u901a\u5e38\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u5047\u8bbe\u96c6 \\(\\mathcal{H}_{\\theta} = \\{P_{\\theta}(y \\vert x)\\}\\) , \u6211\u4eec\u4ece\u5047\u8bbe\u96c6\u4e2d\u9009\u4e00\u4e2a\u6700\u63a5\u8fd1 \\(P_\\mathcal{D}(y \\vert x)\\) \u7684\u96c6\u5408 \\(P_{\\theta^*}(y \\vert x)\\) \u3002\u5bf9\u5e94\u7684\u4f18\u5316\u76ee\u6807\u662f \\[ \\min_{\\theta} L_{\\mathcal{D}}(P_{\\theta}) = \\mathbb{E}_{ P_{\\mathcal{D}}(x)} [Distance(P_{\\mathcal{D}}(\\cdot \\vert x) \\Vert P_{\\theta}(\\cdot \\vert x))]. \\tag{1} \\] \u786e\u5b9a\u6027\u7684\u7ebf\u6027\u56de\u5f52 \u00b6 \u6211\u4eec\u53ef\u4ee5\u7b80\u5316\u8fd9\u4e2a\u95ee\u9898\uff1a\u5f53\u6211\u4eec\u77e5\u9053\u4e86 \\(P_\\mathcal{D}(y \\vert x)\\) \u7684\u503c\u540e\uff0c\u7ed9\u5b9a\u4e00\u4e2a \\(x\\) , \u6211\u4eec\u901a\u5e38\u9884\u6d4b \\(y \\in \\arg\\max_{y} P_{\\mathcal{D}}(y \\vert x)\\) \u3002\u90a3\u4e48\uff0c\u6211\u4eec\u4e0d\u4e00\u5b9a\u9700\u8981\u6c42\u89e3\u6700\u63a5\u8fd1 \\(P_\\mathcal{D}(y \\vert x)\\) \u7684\u6761\u4ef6\u5206\u5e03\uff0c\u6211\u4eec\u53ef\u4ee5\u8f6c\u800c\u6c42\u89e3\u5206\u5e03\u6ee1\u8db3 \\(\\arg\\max_{y} P_{\\theta}(y \\vert x) \\subset \\arg\\max_y P_{\\mathcal{D}}(y \\vert x)\\) \u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u66f4\u6fc0\u8fdb\u7684\u5019\u9009\u96c6\u6765\u7b80\u5316\u95ee\u9898: \\[ \\mathcal{H}_\\theta = \\{P_{\\theta}(y \\vert \\mathbf{x}) = \\mathbf{1}_{\\{y = h_{\\theta}(\\mathbf{x})\\}}, h_\\theta(\\mathbf{x}) = \\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta\\}. \\tag{2} \\] \u6211\u4eec\u4f7f\u7528Wasserstein\u8ddd\u79bb(\u8f93\u8fd0\u82b1\u8d39\u51fd\u6570\u4e3a \\(c(a, b)\\) )\uff0c\u90a3\u4e48\u4f18\u5316\u76ee\u6807\u5c31\u53d8\u6210\u4e86 \\[ \\min_{\\theta} L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}}[c(h_{\\theta}(\\mathbf{x}), y)]. \\tag{3} \\] \u5982\u679c \\(c(a, b) = \\Vert a - b \\Vert^2_2\\) , \u90a3\u4e48\u5c31\u662f\u5927\u5bb6\u719f\u77e5\u7684\u5e73\u65b9\u8bef\u5dee\u635f\u5931\u51fd\u6570: \\[ L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}}[\\Vert h_{\\theta}(\\mathbf{x}) - y \\Vert^2_2]. \\tag{4} \\] \u5bf9\u4e8e\u6837\u672c\u96c6 \\(S = \\{(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, y_m)\\}\\) , \u5bf9\u5e94\u7684\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u4e3a \\[ L_{S}(\\theta) = \\frac{1}{m} \\sum^{m}_{i = 1} \\Vert h_{\\theta}(\\mathbf{x}_i) - y_i \\Vert^2_2. \\tag{5} \\] \u6ce8\u610f\uff1a\u6211\u6ca1\u6709\u63d0\u5230\u9ad8\u65af\u5206\u5e03\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u63d0\u5230\u9ad8\u65af\u5206\u5e03\u7684\u5047\u8bbe\u3002 \u968f\u673a\u6027\u7684\u7ebf\u6027\u56de\u5f52 \u00b6 \u5982\u679c\u6211\u4eec\u5e0c\u671b\u4e0d\u8981\u90a3\u4e48\u6fc0\u8fdb\uff0c\u90a3\u4e48\u53ef\u4ee5\u6784\u9020\u5176\u4ed6\u5047\u8bbe\u96c6, \u4f8b\u5982\uff1a \\[ \\mathcal{H}_{\\theta} = \\{p_{\\theta}(y \\vert \\mathbf{x}) \\sim \\mathcal{N}(\\pmb{\\mu}^T_{\\theta} \\mathbf{x}, \\mathbf{x}^T\\pmb{\\Sigma}_{\\theta}\\mathbf{x})\\}. \\tag{6} \\] \u8fd9\u4e2a\u96c6\u5408\u600e\u4e48\u6765\u7684\u5462\uff1f\u5176\u5b9e\u548c\u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52\u6709\u5173\u7cfb\u3002\u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52\u5c31\u662f\u7ed9\u53c2\u6570 \\(\\mathbf{w}\\) (b\u88ab\u5305\u542b\u5728 \\(\\mathbf{w}\\) \u4e2d)\u6dfb\u52a0\u4e00\u4e2a\u5148\u9a8c\u5206\u5e03\uff0c\u901a\u5e38\u7ed9 \\(\\mathbf{w}\\) \u5148\u9a8c\u5206\u5e03\u4e3a\u67d0\u4e2a\u53c2\u6570\u5316\u7684\u9ad8\u65af\u5206\u5e03 \\(\\mathcal{N}(\\pmb{\\mu}_\\theta, \\pmb{\\Sigma}_{\\theta})\\) \uff0c\u5373\u5047\u8bbe\u96c6\u4e3a \\[ \\mathcal{H}_{\\theta} = \\{h(\\mathbf{x}) = \\mathbf{w}^T \\mathbf{x}, \\mathbf{w} \\sim \\mathcal{N}(\\pmb{\\mu}_{\\theta}, \\pmb{\\Sigma}_{\\theta})\\}.\\tag{7} \\label{linearhypothesis} \\] \u90a3\u4e48\uff0c \\(\\mathbb{E}_{\\mathbf{w}}[h(\\mathbf{x})] = \\mathbf{w}^T \\pmb{\\mu}_{\\theta}\\) , \u5e76\u4e14 \\(Var_{\\mathbf{w}}(h(\\mathbf{x})) = \\mathbf{x}^T \\pmb{\\Sigma_{\\theta}} \\mathbf{x}\\) \u3002 \u8fd9\u65f6\uff0c\u635f\u5931\u51fd\u6570\u662f\u6709\u70b9\u9ebb\u70e6\u4e86: \\[ L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{p_{\\mathcal{D}}(\\mathbf{x})}[Distance(p_{\\mathcal{D}}(\\cdot \\vert \\mathbf{x})\\Vert p_{\\theta}(\\cdot \\Vert \\mathbf{x}))]. \\tag{8} \\] \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4ec0\u4e48\u8ddd\u79bb\u51fd\u6570\u53ef\u4ee5\u6c42\u5462\uff1f\u90a3\u5c31\u662fKullback-Leibler\u8ddd\u79bb\uff1a \\[ L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{p_{\\mathcal{D}}(\\mathbf{x})}\\mathbb{E}_{p_{\\mathcal{D}}(y \\vert \\mathbf{x})}\\left[\\ln\\frac{p_{\\mathcal{D}}(y \\vert \\mathbf{x})}{p_{\\theta}(y \\vert \\mathbf{x})}\\right], \\tag{9} \\] \u6211\u4eec\u7565\u53bb\u4e0e \\(\\theta\\) \u65e0\u5173\u7684\u9879\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u7b80\u5316\u8fc7\u7684\u635f\u5931\u51fd\u6570\u5c31\u662f\u4ea4\u53c9\u71b5\uff1a \\[ L_{\\mathcal{D}}(\\theta) = -\\mathbb{E}_{(\\mathbf{x}, y) \\sim \\mathcal{D}}\\left[\\ln {p_{\\theta}(y \\vert \\mathbf{x})}\\right]. \\tag{9} \\] \u5bf9\u4e8e\u6837\u672c\u96c6 \\(S = \\{(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, y_m)\\}\\) , \u5bf9\u5e94\u7684\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u4e3a \\[ L_{S}(\\theta) = - \\sum^{m}_{i=1} \\ln p_{\\theta}(y_i \\vert \\mathbf{x}_i), \\tag{10} \\] \u5e26\u5165\u9ad8\u65af\u5206\u5e03\u7684\u6982\u7387\u5bc6\u5ea6\u516c\u5f0f\u53ef\u5f97\uff1a \\[ \\begin{align*} &L_{S}(\\theta) = -\\sum^{m}_{i=1} \\ln\\left(\\frac{1}{\\sqrt{2 \\pi} \\sigma_i} \\exp\\left\\{-\\frac{1}{2\\sigma_i^2} (y_i - \\bar{y}_i)^2\\right\\}\\right)\\\\ =& \\sum^{m}_{i=1} \\ln \\sigma_i + \\frac{1}{2\\sigma_i^2} (y_i - \\bar{y}_i)^2 + const \\\\ =& \\sum^{m}_{i=1}\\left[ \\frac{1}{2}\\ln(\\mathbf{x}_i^T \\pmb{\\Sigma}_{\\theta} \\mathbf{x}_i) + \\frac{(y_i - \\mathbf{x}^T_i \\pmb{\\mu}_{\\theta})^2}{2\\mathbf{x}_i^T \\pmb{\\Sigma}_{\\theta} \\mathbf{x}_i}\\right] + const. \\end{align*} \\] \u7ecf\u9a8c\u516c\u5f0f\u4e5f\u53ef\u4ee5\u5199\u6210 \\[ L_S(\\pmb{\\mu}, \\pmb{\\Sigma}) = \\sum^{m}_{i=1} \\left[\\frac{1}{2}\\ln(\\mathbf{x}_i^T \\pmb{\\Sigma} \\mathbf{x}_i) + \\frac{(y_i - \\mathbf{x}^T_i \\pmb{\\mu})^2}{2\\mathbf{x}_i^T \\pmb{\\Sigma} \\mathbf{x}_i}\\right]. \\] \u6c42\u89e3\uff1a \\[ \\begin{align*} &\\nabla_{\\pmb{\\mu}} L_S(\\pmb{\\mu}, \\pmb{\\Sigma}) = \\sum^m_{i=1} \\frac{(y_i - \\mathbf{x}^T_i \\pmb{\\mu})\\mathbf{x}_i}{\\mathbf{x}_i^T \\pmb{\\Sigma} \\mathbf{x}_i} \\\\ \\Rightarrow& \\sum^m_{i=1} \\frac{y_i \\mathbf{x}_i}{\\mathbf{x}_i^T \\pmb{\\Sigma}^* \\mathbf{x}_i} = \\sum^m_{i=1} \\frac{\\mathbf{x}_i\\mathbf{x}^T_i }{\\mathbf{x}_i^T \\pmb{\\Sigma}^* \\mathbf{x}_i} \\pmb{\\mu}^* \\\\ \\Rightarrow& \\pmb{\\mu}^* = \\left(\\sum^m_{i=1} \\frac{\\mathbf{x}_i\\mathbf{x}^T_i }{\\mathbf{x}_i^T \\pmb{\\Sigma}^* \\mathbf{x}_i}\\right)^{-1} \\sum^m_{i=1} \\frac{y_i \\mathbf{x}_i}{\\mathbf{x}_i^T \\pmb{\\Sigma}^* \\mathbf{x}_i}. \\end{align*} \\] \u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52 \u00b6 \u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52\u7684\u5047\u8bbe\u96c6\u6b63\u5982\u4e0a\u9762 \\(\\eqref{linearhypothesis}\\) \u5f0f\u6240\u63cf\u8ff0\u7684\u3002 \u4e0d\u8fc7\u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52\u505a\u7684\u662f\u5728\u6211\u4eec\u6c42\u51fa\u6700\u4f18\u7684 \\(\\mathbf{w} \\sim \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0)\\) \u540e\uff0c \u6211\u4eec\u600e\u4e48\u6837\u80fd\u505a\u5f97\u66f4\u597d\u3002\u5f53\u7136 \\(\\mathbf{w} \\sim \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0)\\) \u901a\u5e38\u76f4\u63a5\u88ab\u8ba4\u4e3a\u7ed9\u5b9a\u4e00\u4e2a\u5206\u5e03\uff0c \u4eba\u4eec\u53eb\u5b83\u5148\u9a8c\u77e5\u8bc6\u3002\u6211\u89c9\u5f97\u52a0\u5165\u4e0a\u4e00\u8282 \u968f\u673a\u7ebf\u6027\u56de\u5f52 \u7684\u5148\u9a8c\u6a21\u578b\u5b66\u4e60\u66f4\u5408\u7406\u3002 \u6211\u4eec\u5728\u8d1d\u53f6\u65af\u56de\u5f52\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u505a\u4ec0\u4e48\uff1f \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u5206\u5e03 \\(p(\\mathbf{w})\\) \u548c \\(p(y \\vert \\mathbf{x}, \\mathbf{w})\\) \uff0c\u5728\u8d1d\u53f6\u65af\u6846\u67b6\u4e2d\u76f8\u5f53\u4e8e\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u4e86\u5168\u90e8\u7684 \u548c\u6982\u7387\u76f8\u5173\u7684\u4fe1\u606f\u3002\u73b0\u5728\u6211\u4eec\u7ed9\u5b9a\u4e00\u4e2a\u6837\u672c \\(S = \\{(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, y_m)\\}\\) , \u6211\u4eec\u5e0c\u671b\u6c42\u5f97\u6761\u4ef6\u6982\u7387 \\(p(\\mathbf{w} \\vert S)\\) , \u6765\u6307\u5bfc\u6211\u4eec\u9009\u62e9\u53c2\u6570 \\(\\mathbf{w}\\) \u3002 \u4ee4 \\(\\mathbf{X} = [\\mathbf{x}_1, \\mathbf{x}_2, \\ldots, \\mathbf{x}_m]\\) , \\(\\mathbf{y} = [y_1, y_2, \\ldots, y_m]^T\\) , \u6211\u4eec\u5df2\u77e5 \\[\\begin{cases} \\tag{11} \\label{step1} p(\\mathbf{w}) = \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0)\\\\ p({\\mathbf{y}} \\vert \\mathbf{X}, \\mathbf{w}) = \\mathcal{N}(\\mathbf{X}^T \\mathbf{w}, \\mathbf{X}^T \\pmb{\\Sigma}_0 \\mathbf{X}) \\end{cases}\\] \u8981\u6c42\u89e3 \\(p(\\mathbf{w} \\vert \\mathbf{X}, \\mathbf{y})\\) , \u6211\u4eec\u9700\u8981\u5f15\u5165\u4e0b\u9762\u8fd9\u4e2a\u7ed3\u8bba\uff1a \u591a\u5143\u9ad8\u65af\u5206\u5e03\u7684\u8fb9\u7f18\u5206\u5e03\u4e0e\u6761\u4ef6\u5206\u5e03 \uff1a \u5df2\u77e5\u5206\u5e03\uff1a \\[\\begin{cases} \\tag{12} \\label{step3} p(\\mathbf{x}) = \\mathcal{N}(\\pmb{\\mu}, \\pmb{\\Lambda}^{-1}), \\\\ p(\\mathbf{y} \\vert \\mathbf{x}) = \\mathcal{N}(\\mathbf{A}\\mathbf{x} + \\mathbf{b}, \\pmb{L}^{-1}), \\end{cases}\\] \u6211\u4eec\u53ef\u5f97\uff1a \\[\\begin{cases} \\tag{13} \\label{step4} p(\\mathbf{y}) = \\mathcal{N}(\\mathbf{A}\\pmb{\\mu} + \\mathbf{b}, \\mathbf{L}^{-1} + \\mathbf{A}\\pmb{\\Lambda}^{-1}\\mathbf{A}^T), \\\\ p(\\mathbf{x} \\vert \\mathbf{y}) = \\mathcal{N}(\\pmb{\\Sigma}[\\mathbf{A}^T \\mathbf{L}(\\mathbf{y} - \\mathbf{b}) + \\pmb{\\Lambda\\mu}], \\pmb{\\Sigma}),\\\\ \\pmb{\\Sigma} = (\\pmb{\\Lambda} + \\mathbf{A}^T \\mathbf{L} \\mathbf{A})^{-1}. \\end{cases}\\] (\u53c2\u8003\u81ea\uff1aPRML(2006\u5e74\u51fa\u7248)\u7b2c93\u9875) \u5e26\u5165\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u5f97\uff1a \\[ \\tag{14} \\label{step5} p(\\mathbf{w} \\vert {\\mathbf{y}}, \\mathbf{X}) = \\mathcal{N}(\\pmb{\\mu}, \\pmb{\\Sigma}), \\] \u5176\u4e2d \\(\\pmb{\\Sigma} = (\\pmb{\\Sigma}_0 + \\mathbf{X} \\mathbf{X}^T \\pmb{\\Sigma}_0 \\mathbf{X}\\mathbf{X}^T)^{-1}\\) \uff0c \u5e76\u4e14 \\(\\pmb{\\mu} = \\pmb{\\Sigma} [\\mathbf{X}(\\mathbf{X}^T \\pmb{\\Sigma}_0 \\mathbf{X})^{-1} \\mathbf{y} + \\pmb{\\Sigma}_0^{-1} \\pmb{\\mu}_0]\\) \u3002 \u8fd9\u4e2a\u516c\u5f0f\u8fd8\u4e0d\u591f\u7b80\u7ec3\uff0c\u6c42\u9006\u7684\u64cd\u4f5c\u6bd4\u8f83\u591a\uff0c\u6211\u53c2\u8003\u4e86 \u5361\u5c14\u66fc\u6ee4\u6ce2 \u7684\u516c\u5f0f\u6765\u5316\u7b80\u8fd9\u4e2a\u6c42\u89e3\u3002 \u6211\u62bd\u8c61\u4e86\u4e00\u4e0b\u5361\u5c14\u66fc\u6ee4\u6ce2\u4e2d\u7684\u4e00\u4e2a\u7ed3\u8bba\u3002 \u5df2\u77e5\u5206\u5e03 \\(p(\\mathbf{x}) = \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0)\\) \u548c \\(p(\\mathbf{y} \\vert \\mathbf{x}) = \\mathcal{N}(\\mathbf{A}\\mathbf{x} + \\mathbf{b}, \\mathbf{C})\\) \uff0c\u6211\u4eec\u53ef\u5f97: \\(p(\\mathbf{x} \\vert \\mathbf{y}) = \\mathcal{N}(\\pmb{\\mu}_1, \\pmb{\\Sigma}_1)\\) \uff0c\u6ee1\u8db3 \\[\\begin{cases} \\tag{15} \\label{kalmanfilter} \\mathbf{K} = \\pmb{\\Sigma}_0 \\mathbf{A}^T (\\mathbf{A} \\pmb{\\Sigma}_0 \\mathbf{A}^T + \\mathbf{C})^{-1};\\\\ \\pmb{\\Sigma}_1 = (\\mathbf{I} - \\mathbf{K} \\mathbf{A}) \\mathbf{\\Sigma}_0;\\\\ \\pmb{\\mu}_1 = \\pmb{\\mu}_0 + \\mathbf{K} [(\\mathbf{y} - \\mathbf{b}) - \\mathbf{A} \\pmb{\\mu}_0] \\end{cases}\\] \u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52\u7684\u6c42\u89e3\u516c\u5f0f\uff1a \\[\\begin{cases} \\tag{16} \\label{step6} \\pmb{K} = {\\pmb{\\Sigma}}_0 \\mathbf{X}(2 \\mathbf{X}^{T} {\\pmb{\\Sigma}}_0 \\mathbf{X})^{-1};\\\\ \\pmb{\\Sigma} = (\\mathbf{I} - \\mathbf{K} \\mathbf{X}^T) {\\mathbf{\\Sigma}}_0;\\\\ \\pmb{\\mu} = {\\pmb{\\mu}}_{0} + \\mathbf{K}[\\mathbf{y} - \\mathbf{X}^{T} {\\pmb{\\mu}}_0]. \\\\ \\end{cases}\\]","title":"Regression"},{"location":"ML/04-Regression/#_1","text":"","title":"\u7ebf\u6027\u56de\u5f52\u95ee\u9898"},{"location":"ML/04-Regression/#_2","text":"\u5728\u5b9e\u9645\u751f\u6d3b\u4e2d\uff0c\u6211\u4eec\u80fd\u83b7\u5f97\u4e00\u7cfb\u5217\u7684\u6837\u672c \\(\\mathcal{S} = \\left\\{ (x_1, y_1), (x_2, y_2), \\dots, (x_m, y_m) \\right\\}\\) \u3002\u5176\u4e2d \u6837\u672c\u5c5e\u4e8e\u67d0\u4e2a\u96c6\u5408 \\(z = (x, y) \\in Z = X \\times Y\\) , \u5e76\u4e14\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u6837\u672c\u662f\u670d\u4ece\u67d0\u4e2a\u672a\u77e5\u7684\u8054\u5408\u5206\u5e03 \\(\\mathcal{D}\\) \uff0c\u5373 \\((x, y) \\sim \\mathcal{D}\\) \u3002 \u4e0e\u4e4b\u76f8\u5173\u7684\u672a\u77e5\u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}}(y \\vert x)\\) \u662f\u6211\u4eec\u5e0c\u671b\u83b7\u5f97\u7684\uff1a\u5f53\u6211\u4eec\u77e5\u9053\u4e86 \\(x\\) \u7684\u503c\uff0c\u6211\u4eec\u5c31\u80fd\u77e5\u9053 \\(y\\) \u7684\u503c\u6700\u53ef\u80fd\u662f\u591a\u5c11\u3002 \u5982\u679c \\(y \\in \\mathbb{R}\\) , \u90a3\u4e48\u6c42\u89e3 \\(P_\\mathcal{D}(y\\vert x)\\) \u7684\u95ee\u9898\u4e5f\u53eb\u505a\u56de\u5f52\u95ee\u9898\u3002 \u901a\u5e38\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u5047\u8bbe\u96c6 \\(\\mathcal{H}_{\\theta} = \\{P_{\\theta}(y \\vert x)\\}\\) , \u6211\u4eec\u4ece\u5047\u8bbe\u96c6\u4e2d\u9009\u4e00\u4e2a\u6700\u63a5\u8fd1 \\(P_\\mathcal{D}(y \\vert x)\\) \u7684\u96c6\u5408 \\(P_{\\theta^*}(y \\vert x)\\) \u3002\u5bf9\u5e94\u7684\u4f18\u5316\u76ee\u6807\u662f \\[ \\min_{\\theta} L_{\\mathcal{D}}(P_{\\theta}) = \\mathbb{E}_{ P_{\\mathcal{D}}(x)} [Distance(P_{\\mathcal{D}}(\\cdot \\vert x) \\Vert P_{\\theta}(\\cdot \\vert x))]. \\tag{1} \\]","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"ML/04-Regression/#_3","text":"\u6211\u4eec\u53ef\u4ee5\u7b80\u5316\u8fd9\u4e2a\u95ee\u9898\uff1a\u5f53\u6211\u4eec\u77e5\u9053\u4e86 \\(P_\\mathcal{D}(y \\vert x)\\) \u7684\u503c\u540e\uff0c\u7ed9\u5b9a\u4e00\u4e2a \\(x\\) , \u6211\u4eec\u901a\u5e38\u9884\u6d4b \\(y \\in \\arg\\max_{y} P_{\\mathcal{D}}(y \\vert x)\\) \u3002\u90a3\u4e48\uff0c\u6211\u4eec\u4e0d\u4e00\u5b9a\u9700\u8981\u6c42\u89e3\u6700\u63a5\u8fd1 \\(P_\\mathcal{D}(y \\vert x)\\) \u7684\u6761\u4ef6\u5206\u5e03\uff0c\u6211\u4eec\u53ef\u4ee5\u8f6c\u800c\u6c42\u89e3\u5206\u5e03\u6ee1\u8db3 \\(\\arg\\max_{y} P_{\\theta}(y \\vert x) \\subset \\arg\\max_y P_{\\mathcal{D}}(y \\vert x)\\) \u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u66f4\u6fc0\u8fdb\u7684\u5019\u9009\u96c6\u6765\u7b80\u5316\u95ee\u9898: \\[ \\mathcal{H}_\\theta = \\{P_{\\theta}(y \\vert \\mathbf{x}) = \\mathbf{1}_{\\{y = h_{\\theta}(\\mathbf{x})\\}}, h_\\theta(\\mathbf{x}) = \\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta\\}. \\tag{2} \\] \u6211\u4eec\u4f7f\u7528Wasserstein\u8ddd\u79bb(\u8f93\u8fd0\u82b1\u8d39\u51fd\u6570\u4e3a \\(c(a, b)\\) )\uff0c\u90a3\u4e48\u4f18\u5316\u76ee\u6807\u5c31\u53d8\u6210\u4e86 \\[ \\min_{\\theta} L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}}[c(h_{\\theta}(\\mathbf{x}), y)]. \\tag{3} \\] \u5982\u679c \\(c(a, b) = \\Vert a - b \\Vert^2_2\\) , \u90a3\u4e48\u5c31\u662f\u5927\u5bb6\u719f\u77e5\u7684\u5e73\u65b9\u8bef\u5dee\u635f\u5931\u51fd\u6570: \\[ L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}}[\\Vert h_{\\theta}(\\mathbf{x}) - y \\Vert^2_2]. \\tag{4} \\] \u5bf9\u4e8e\u6837\u672c\u96c6 \\(S = \\{(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, y_m)\\}\\) , \u5bf9\u5e94\u7684\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u4e3a \\[ L_{S}(\\theta) = \\frac{1}{m} \\sum^{m}_{i = 1} \\Vert h_{\\theta}(\\mathbf{x}_i) - y_i \\Vert^2_2. \\tag{5} \\] \u6ce8\u610f\uff1a\u6211\u6ca1\u6709\u63d0\u5230\u9ad8\u65af\u5206\u5e03\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u63d0\u5230\u9ad8\u65af\u5206\u5e03\u7684\u5047\u8bbe\u3002","title":"\u786e\u5b9a\u6027\u7684\u7ebf\u6027\u56de\u5f52"},{"location":"ML/04-Regression/#_4","text":"\u5982\u679c\u6211\u4eec\u5e0c\u671b\u4e0d\u8981\u90a3\u4e48\u6fc0\u8fdb\uff0c\u90a3\u4e48\u53ef\u4ee5\u6784\u9020\u5176\u4ed6\u5047\u8bbe\u96c6, \u4f8b\u5982\uff1a \\[ \\mathcal{H}_{\\theta} = \\{p_{\\theta}(y \\vert \\mathbf{x}) \\sim \\mathcal{N}(\\pmb{\\mu}^T_{\\theta} \\mathbf{x}, \\mathbf{x}^T\\pmb{\\Sigma}_{\\theta}\\mathbf{x})\\}. \\tag{6} \\] \u8fd9\u4e2a\u96c6\u5408\u600e\u4e48\u6765\u7684\u5462\uff1f\u5176\u5b9e\u548c\u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52\u6709\u5173\u7cfb\u3002\u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52\u5c31\u662f\u7ed9\u53c2\u6570 \\(\\mathbf{w}\\) (b\u88ab\u5305\u542b\u5728 \\(\\mathbf{w}\\) \u4e2d)\u6dfb\u52a0\u4e00\u4e2a\u5148\u9a8c\u5206\u5e03\uff0c\u901a\u5e38\u7ed9 \\(\\mathbf{w}\\) \u5148\u9a8c\u5206\u5e03\u4e3a\u67d0\u4e2a\u53c2\u6570\u5316\u7684\u9ad8\u65af\u5206\u5e03 \\(\\mathcal{N}(\\pmb{\\mu}_\\theta, \\pmb{\\Sigma}_{\\theta})\\) \uff0c\u5373\u5047\u8bbe\u96c6\u4e3a \\[ \\mathcal{H}_{\\theta} = \\{h(\\mathbf{x}) = \\mathbf{w}^T \\mathbf{x}, \\mathbf{w} \\sim \\mathcal{N}(\\pmb{\\mu}_{\\theta}, \\pmb{\\Sigma}_{\\theta})\\}.\\tag{7} \\label{linearhypothesis} \\] \u90a3\u4e48\uff0c \\(\\mathbb{E}_{\\mathbf{w}}[h(\\mathbf{x})] = \\mathbf{w}^T \\pmb{\\mu}_{\\theta}\\) , \u5e76\u4e14 \\(Var_{\\mathbf{w}}(h(\\mathbf{x})) = \\mathbf{x}^T \\pmb{\\Sigma_{\\theta}} \\mathbf{x}\\) \u3002 \u8fd9\u65f6\uff0c\u635f\u5931\u51fd\u6570\u662f\u6709\u70b9\u9ebb\u70e6\u4e86: \\[ L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{p_{\\mathcal{D}}(\\mathbf{x})}[Distance(p_{\\mathcal{D}}(\\cdot \\vert \\mathbf{x})\\Vert p_{\\theta}(\\cdot \\Vert \\mathbf{x}))]. \\tag{8} \\] \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4ec0\u4e48\u8ddd\u79bb\u51fd\u6570\u53ef\u4ee5\u6c42\u5462\uff1f\u90a3\u5c31\u662fKullback-Leibler\u8ddd\u79bb\uff1a \\[ L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{p_{\\mathcal{D}}(\\mathbf{x})}\\mathbb{E}_{p_{\\mathcal{D}}(y \\vert \\mathbf{x})}\\left[\\ln\\frac{p_{\\mathcal{D}}(y \\vert \\mathbf{x})}{p_{\\theta}(y \\vert \\mathbf{x})}\\right], \\tag{9} \\] \u6211\u4eec\u7565\u53bb\u4e0e \\(\\theta\\) \u65e0\u5173\u7684\u9879\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u7b80\u5316\u8fc7\u7684\u635f\u5931\u51fd\u6570\u5c31\u662f\u4ea4\u53c9\u71b5\uff1a \\[ L_{\\mathcal{D}}(\\theta) = -\\mathbb{E}_{(\\mathbf{x}, y) \\sim \\mathcal{D}}\\left[\\ln {p_{\\theta}(y \\vert \\mathbf{x})}\\right]. \\tag{9} \\] \u5bf9\u4e8e\u6837\u672c\u96c6 \\(S = \\{(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, y_m)\\}\\) , \u5bf9\u5e94\u7684\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u4e3a \\[ L_{S}(\\theta) = - \\sum^{m}_{i=1} \\ln p_{\\theta}(y_i \\vert \\mathbf{x}_i), \\tag{10} \\] \u5e26\u5165\u9ad8\u65af\u5206\u5e03\u7684\u6982\u7387\u5bc6\u5ea6\u516c\u5f0f\u53ef\u5f97\uff1a \\[ \\begin{align*} &L_{S}(\\theta) = -\\sum^{m}_{i=1} \\ln\\left(\\frac{1}{\\sqrt{2 \\pi} \\sigma_i} \\exp\\left\\{-\\frac{1}{2\\sigma_i^2} (y_i - \\bar{y}_i)^2\\right\\}\\right)\\\\ =& \\sum^{m}_{i=1} \\ln \\sigma_i + \\frac{1}{2\\sigma_i^2} (y_i - \\bar{y}_i)^2 + const \\\\ =& \\sum^{m}_{i=1}\\left[ \\frac{1}{2}\\ln(\\mathbf{x}_i^T \\pmb{\\Sigma}_{\\theta} \\mathbf{x}_i) + \\frac{(y_i - \\mathbf{x}^T_i \\pmb{\\mu}_{\\theta})^2}{2\\mathbf{x}_i^T \\pmb{\\Sigma}_{\\theta} \\mathbf{x}_i}\\right] + const. \\end{align*} \\] \u7ecf\u9a8c\u516c\u5f0f\u4e5f\u53ef\u4ee5\u5199\u6210 \\[ L_S(\\pmb{\\mu}, \\pmb{\\Sigma}) = \\sum^{m}_{i=1} \\left[\\frac{1}{2}\\ln(\\mathbf{x}_i^T \\pmb{\\Sigma} \\mathbf{x}_i) + \\frac{(y_i - \\mathbf{x}^T_i \\pmb{\\mu})^2}{2\\mathbf{x}_i^T \\pmb{\\Sigma} \\mathbf{x}_i}\\right]. \\] \u6c42\u89e3\uff1a \\[ \\begin{align*} &\\nabla_{\\pmb{\\mu}} L_S(\\pmb{\\mu}, \\pmb{\\Sigma}) = \\sum^m_{i=1} \\frac{(y_i - \\mathbf{x}^T_i \\pmb{\\mu})\\mathbf{x}_i}{\\mathbf{x}_i^T \\pmb{\\Sigma} \\mathbf{x}_i} \\\\ \\Rightarrow& \\sum^m_{i=1} \\frac{y_i \\mathbf{x}_i}{\\mathbf{x}_i^T \\pmb{\\Sigma}^* \\mathbf{x}_i} = \\sum^m_{i=1} \\frac{\\mathbf{x}_i\\mathbf{x}^T_i }{\\mathbf{x}_i^T \\pmb{\\Sigma}^* \\mathbf{x}_i} \\pmb{\\mu}^* \\\\ \\Rightarrow& \\pmb{\\mu}^* = \\left(\\sum^m_{i=1} \\frac{\\mathbf{x}_i\\mathbf{x}^T_i }{\\mathbf{x}_i^T \\pmb{\\Sigma}^* \\mathbf{x}_i}\\right)^{-1} \\sum^m_{i=1} \\frac{y_i \\mathbf{x}_i}{\\mathbf{x}_i^T \\pmb{\\Sigma}^* \\mathbf{x}_i}. \\end{align*} \\]","title":"\u968f\u673a\u6027\u7684\u7ebf\u6027\u56de\u5f52"},{"location":"ML/04-Regression/#_5","text":"\u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52\u7684\u5047\u8bbe\u96c6\u6b63\u5982\u4e0a\u9762 \\(\\eqref{linearhypothesis}\\) \u5f0f\u6240\u63cf\u8ff0\u7684\u3002 \u4e0d\u8fc7\u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52\u505a\u7684\u662f\u5728\u6211\u4eec\u6c42\u51fa\u6700\u4f18\u7684 \\(\\mathbf{w} \\sim \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0)\\) \u540e\uff0c \u6211\u4eec\u600e\u4e48\u6837\u80fd\u505a\u5f97\u66f4\u597d\u3002\u5f53\u7136 \\(\\mathbf{w} \\sim \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0)\\) \u901a\u5e38\u76f4\u63a5\u88ab\u8ba4\u4e3a\u7ed9\u5b9a\u4e00\u4e2a\u5206\u5e03\uff0c \u4eba\u4eec\u53eb\u5b83\u5148\u9a8c\u77e5\u8bc6\u3002\u6211\u89c9\u5f97\u52a0\u5165\u4e0a\u4e00\u8282 \u968f\u673a\u7ebf\u6027\u56de\u5f52 \u7684\u5148\u9a8c\u6a21\u578b\u5b66\u4e60\u66f4\u5408\u7406\u3002 \u6211\u4eec\u5728\u8d1d\u53f6\u65af\u56de\u5f52\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u505a\u4ec0\u4e48\uff1f \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u5206\u5e03 \\(p(\\mathbf{w})\\) \u548c \\(p(y \\vert \\mathbf{x}, \\mathbf{w})\\) \uff0c\u5728\u8d1d\u53f6\u65af\u6846\u67b6\u4e2d\u76f8\u5f53\u4e8e\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u4e86\u5168\u90e8\u7684 \u548c\u6982\u7387\u76f8\u5173\u7684\u4fe1\u606f\u3002\u73b0\u5728\u6211\u4eec\u7ed9\u5b9a\u4e00\u4e2a\u6837\u672c \\(S = \\{(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, y_m)\\}\\) , \u6211\u4eec\u5e0c\u671b\u6c42\u5f97\u6761\u4ef6\u6982\u7387 \\(p(\\mathbf{w} \\vert S)\\) , \u6765\u6307\u5bfc\u6211\u4eec\u9009\u62e9\u53c2\u6570 \\(\\mathbf{w}\\) \u3002 \u4ee4 \\(\\mathbf{X} = [\\mathbf{x}_1, \\mathbf{x}_2, \\ldots, \\mathbf{x}_m]\\) , \\(\\mathbf{y} = [y_1, y_2, \\ldots, y_m]^T\\) , \u6211\u4eec\u5df2\u77e5 \\[\\begin{cases} \\tag{11} \\label{step1} p(\\mathbf{w}) = \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0)\\\\ p({\\mathbf{y}} \\vert \\mathbf{X}, \\mathbf{w}) = \\mathcal{N}(\\mathbf{X}^T \\mathbf{w}, \\mathbf{X}^T \\pmb{\\Sigma}_0 \\mathbf{X}) \\end{cases}\\] \u8981\u6c42\u89e3 \\(p(\\mathbf{w} \\vert \\mathbf{X}, \\mathbf{y})\\) , \u6211\u4eec\u9700\u8981\u5f15\u5165\u4e0b\u9762\u8fd9\u4e2a\u7ed3\u8bba\uff1a \u591a\u5143\u9ad8\u65af\u5206\u5e03\u7684\u8fb9\u7f18\u5206\u5e03\u4e0e\u6761\u4ef6\u5206\u5e03 \uff1a \u5df2\u77e5\u5206\u5e03\uff1a \\[\\begin{cases} \\tag{12} \\label{step3} p(\\mathbf{x}) = \\mathcal{N}(\\pmb{\\mu}, \\pmb{\\Lambda}^{-1}), \\\\ p(\\mathbf{y} \\vert \\mathbf{x}) = \\mathcal{N}(\\mathbf{A}\\mathbf{x} + \\mathbf{b}, \\pmb{L}^{-1}), \\end{cases}\\] \u6211\u4eec\u53ef\u5f97\uff1a \\[\\begin{cases} \\tag{13} \\label{step4} p(\\mathbf{y}) = \\mathcal{N}(\\mathbf{A}\\pmb{\\mu} + \\mathbf{b}, \\mathbf{L}^{-1} + \\mathbf{A}\\pmb{\\Lambda}^{-1}\\mathbf{A}^T), \\\\ p(\\mathbf{x} \\vert \\mathbf{y}) = \\mathcal{N}(\\pmb{\\Sigma}[\\mathbf{A}^T \\mathbf{L}(\\mathbf{y} - \\mathbf{b}) + \\pmb{\\Lambda\\mu}], \\pmb{\\Sigma}),\\\\ \\pmb{\\Sigma} = (\\pmb{\\Lambda} + \\mathbf{A}^T \\mathbf{L} \\mathbf{A})^{-1}. \\end{cases}\\] (\u53c2\u8003\u81ea\uff1aPRML(2006\u5e74\u51fa\u7248)\u7b2c93\u9875) \u5e26\u5165\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u5f97\uff1a \\[ \\tag{14} \\label{step5} p(\\mathbf{w} \\vert {\\mathbf{y}}, \\mathbf{X}) = \\mathcal{N}(\\pmb{\\mu}, \\pmb{\\Sigma}), \\] \u5176\u4e2d \\(\\pmb{\\Sigma} = (\\pmb{\\Sigma}_0 + \\mathbf{X} \\mathbf{X}^T \\pmb{\\Sigma}_0 \\mathbf{X}\\mathbf{X}^T)^{-1}\\) \uff0c \u5e76\u4e14 \\(\\pmb{\\mu} = \\pmb{\\Sigma} [\\mathbf{X}(\\mathbf{X}^T \\pmb{\\Sigma}_0 \\mathbf{X})^{-1} \\mathbf{y} + \\pmb{\\Sigma}_0^{-1} \\pmb{\\mu}_0]\\) \u3002 \u8fd9\u4e2a\u516c\u5f0f\u8fd8\u4e0d\u591f\u7b80\u7ec3\uff0c\u6c42\u9006\u7684\u64cd\u4f5c\u6bd4\u8f83\u591a\uff0c\u6211\u53c2\u8003\u4e86 \u5361\u5c14\u66fc\u6ee4\u6ce2 \u7684\u516c\u5f0f\u6765\u5316\u7b80\u8fd9\u4e2a\u6c42\u89e3\u3002 \u6211\u62bd\u8c61\u4e86\u4e00\u4e0b\u5361\u5c14\u66fc\u6ee4\u6ce2\u4e2d\u7684\u4e00\u4e2a\u7ed3\u8bba\u3002 \u5df2\u77e5\u5206\u5e03 \\(p(\\mathbf{x}) = \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0)\\) \u548c \\(p(\\mathbf{y} \\vert \\mathbf{x}) = \\mathcal{N}(\\mathbf{A}\\mathbf{x} + \\mathbf{b}, \\mathbf{C})\\) \uff0c\u6211\u4eec\u53ef\u5f97: \\(p(\\mathbf{x} \\vert \\mathbf{y}) = \\mathcal{N}(\\pmb{\\mu}_1, \\pmb{\\Sigma}_1)\\) \uff0c\u6ee1\u8db3 \\[\\begin{cases} \\tag{15} \\label{kalmanfilter} \\mathbf{K} = \\pmb{\\Sigma}_0 \\mathbf{A}^T (\\mathbf{A} \\pmb{\\Sigma}_0 \\mathbf{A}^T + \\mathbf{C})^{-1};\\\\ \\pmb{\\Sigma}_1 = (\\mathbf{I} - \\mathbf{K} \\mathbf{A}) \\mathbf{\\Sigma}_0;\\\\ \\pmb{\\mu}_1 = \\pmb{\\mu}_0 + \\mathbf{K} [(\\mathbf{y} - \\mathbf{b}) - \\mathbf{A} \\pmb{\\mu}_0] \\end{cases}\\] \u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52\u7684\u6c42\u89e3\u516c\u5f0f\uff1a \\[\\begin{cases} \\tag{16} \\label{step6} \\pmb{K} = {\\pmb{\\Sigma}}_0 \\mathbf{X}(2 \\mathbf{X}^{T} {\\pmb{\\Sigma}}_0 \\mathbf{X})^{-1};\\\\ \\pmb{\\Sigma} = (\\mathbf{I} - \\mathbf{K} \\mathbf{X}^T) {\\mathbf{\\Sigma}}_0;\\\\ \\pmb{\\mu} = {\\pmb{\\mu}}_{0} + \\mathbf{K}[\\mathbf{y} - \\mathbf{X}^{T} {\\pmb{\\mu}}_0]. \\\\ \\end{cases}\\]","title":"\u8d1d\u53f6\u65af\u7ebf\u6027\u56de\u5f52"},{"location":"ML/05-AdaBoost/","text":"Boosting \u00b6 \u5f31\u5206\u7c7b\u5668\u5230\u5f3a\u5206\u7c7b\u5668\uff0c\u8fd9\u91cc\u6709\u8da3\u7684\u4e1c\u897f\u53ef\u592a\u591a\u4e86\uff0c\u6211\u5148\u628a\u4e3b\u5e72\u7b97\u6cd5Adaboost\u6574\u7406\u4e00\u4e0b\u3002 Adaboost \u00b6 \u5b9a\u4e491\uff1a( Weak hypothesis class ). We call a hypothesis class is a weak hypothesis class of data \\((\\mathbf{x}, y) \\sim \\mathcal{D}\\) we means that \\[\\begin{equation} \\mathcal{H}_{weak} = \\left\\{ h_1, h_2, \\ldots, h_N : \\forall k \\in [N], L_{(\\mathbf{x}_i, y_i) \\sim \\mathbf{p}_k}(h_k) \\le \\frac{1}{2} - \\gamma, (\\mathbf{x}_i, y_i) \\in S \\right\\}.\\tag{1} \\end{equation}\\] \u8fd9\u91cc\u7684 \\(\\mathbf{p}_k\\) \u662f\u5728\u6837\u672c\u4e0a\u7684\u67d0\u4e2a\u5206\u5e03\uff0c\u5728\u540e\u9762\u4f1a\u6709\u63d0\u5230, \u67d0\u4e00\u79cd\u8bbe\u5b9a\u65b9\u5f0f\u3002 \u8fd9\u91cc\u6307\u7684\u662f\u67d0\u4e00\u7c7b\u5206\u7c7b\u7b97\u6cd5\u7ed9\u51fa\u4efb\u610f\u7684\u8f93\u5165\u6837\u672c\uff0c \u53ea\u80fd\u8fd4\u56de\u4e00\u4e2a\u6bd4\u8f83\u5f31\u7684\u5206\u7c7b\u5668\uff0c\u5b83\u7684\u9519\u8bef\u7387\u5c0f\u4e8e50%\u3002 Adaboost \u5047\u8bbe\u6211\u4eec\u88ab\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f31\u5206\u7c7b\u5668\u7684\u96c6\u5408 \\(\\mathcal{H}_{weak}\\) , \u6211\u4eec\u5c06\u4ece\u4e0b\u9762\u8fd9\u4e2a\u5047\u8bbe\u96c6\u4e2d\u5b66\u4e60\u4e00\u4e2a\u5f3a\u5206\u7c7b\u5668\uff1a \\[\\begin{equation} \\mathcal{H}_{ada} = \\left\\{ \\sum^{N}_{i=1} \\alpha_i h_i : \\alpha_i \\in \\mathbb{R} \\wedge h_i \\in \\mathcal{H}_{weak} \\right\\}.\\tag{2} \\end{equation}\\] Adaboot\u89e3\u51b3\u7684\u95ee\u9898\u662f: \u6570\u636e\u5728 \\((\\mathbf{x}, y) \\sim \\mathcal{D}\\) , \u5e76\u4e14 \\(y \\in \\{-1, 1\\}\\) \uff0c \\(h_i(\\mathbf{x}) \\in\\{-1, 1\\}\\) \u3002 \u6211\u4eec\u8981\u4ece \\(\\mathcal{H}_{ada}\\) \u4e2d\u9009\u51fa\u4e00\u4e2a\u6700\u597d\u7684\u5206\u7c7b\u5668\uff0c\u80fd\u591f\u66f4\u597d\u5730\u62df\u5408\u771f\u5b9e\u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}}(y \\vert \\mathbf{x})\\) \u3002 \u8fd9\u91cc\u4f7f\u7528\u7684\u635f\u5931\u51fd\u6570\u4e3a \\[\\begin{equation} {L}_{\\mathcal{D}}(h) = \\mathbb{E}_{\\mathcal{D}} \\left[ e^{- y h(\\mathbf{x})} \\right].\\tag{3} \\end{equation}\\] \u5bf9\u5e94\u7684\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\u4e3a \\[\\begin{equation} {L}_{\\mathcal{S}}(h) = \\frac{1}{m} \\sum_{i=1}^{m} e^{-y_i h(\\mathbf{x}_i)}. \\tag{4} \\end{equation}\\] \u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u5462\uff1f\u56e0\u4e3a\u5b83\u6709\u5f88\u597d\u7684\u6570\u5b66\u6027\u8d28\u3002 \u6211\u4eec\u53ef\u4ee5\u7528\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u6765\u6c42\u89e3\u8fd9\u4e2a\u4f18\u5316\u95ee\u9898\uff0c\u5e76\u4e14\u8bbe\u5b9a\u6bcf\u4e00\u6b65\u7684\u6b65\u957f\u4e3a\u6700\u4f18\u6b65\u957f\u3002 \u4e5f\u5c31\u662f\u6bcf\u4e00\u6b65\u7684\u4f18\u5316\uff0c\u6211\u4eec\u8981\u901a\u8fc7\u4e00\u4e2a\u5b50\u95ee\u9898\u6765\u6c42\u89e3\u5f53\u524d\u7684\u6700\u4f18\u6b65\u957f: \\[\\begin{equation} \\arg\\min_{\\eta} {L}_{\\mathcal{S}}(\\alpha_1, \\ldots, \\alpha_{k-1}, \\alpha_k + \\eta, \\alpha_{k+1}, \\ldots, \\alpha_{N})\\tag{5} \\end{equation}\\] \\[\\begin{align} & m {L}_{\\mathcal{S}}(\\alpha_1, \\ldots, \\alpha_{k-1}, \\alpha_k + \\eta, \\alpha_{k+1}, \\ldots, \\alpha_{N}) \\\\ =& \\sum_{i=1}^{m} exp\\left\\{- y_i \\sum_{j=1}^{N} \\alpha_{j} h_{j}(\\mathbf{x}_i) - y_i h_{k}(\\mathbf{x}_i) \\eta\\right\\} \\\\ \\frac{\\partial}{\\partial \\eta} {L}_{\\mathcal{S}}(\\eta) =& \\sum_{i = 1}^{m} -y_i h_k(\\mathbf{x}_i) exp\\left\\{- y_i \\sum_{j=1}^{N} \\alpha_{j} h_{j}(\\mathbf{x}_i) - y_i h_{k}(\\mathbf{x}_i) \\eta\\right\\} \\\\ =& \\sum_{y_i \\ne h_k(\\mathbf{x}_i)} exp\\left\\{- y_i \\sum_{j=1}^{N} \\alpha_{j} h_{j}(\\mathbf{x}_i) + \\eta\\right\\} \\\\ & - \\sum_{y_i = h_k(\\mathbf{x}_i)} exp\\left\\{- y_i \\sum_{j=1}^{N} \\alpha_{j} h_{j}(\\mathbf{x}_i) - \\eta\\right\\} \\end{align}\\] \u4ee4 \\(L_S(\\pmb{\\alpha}) = Z = \\sum_{i=1}^{m} exp\\left\\{ -y_i \\sum_{j=1}^{N} \\alpha_j h_j(\\mathbf{x}_i) \\right\\}\\) , \u67d0\u4e00\u4e2a\u6837\u672c\u96c6 \\(S\\) \u4e0a\u7684\u5206\u5e03 \\(\\mathbf{p}_{k}(S) = \\left\\{ p_k(\\mathbf{x}_1, y_1), p_k(\\mathbf{x}_2, y_2), \\ldots, p_k(\\mathbf{x}_m, y_m)\\right\\}\\) , \u6ee1\u8db3 \\(\\mathbf{p}_{k}(\\mathbf{x}_i, y_i) = \\frac{1}{Z}exp\\left\\{ -y_i \\sum_{j=1}^{N} \\alpha_j h_j(\\mathbf{x}_i) \\right\\}\\) , \u4ee5\u53ca \\(\\epsilon_k = \\mathbb{E}_{(\\mathbf{x}, y) \\sim \\mathbf{p}_k} \\left[ \\pmb{1}_{h_k(\\mathbf{x})\\ne y} \\right]\\) \u90a3\u4e48 \\[\\begin{align} \\frac{\\partial}{\\partial \\eta} {L}_{\\mathcal{S}}(\\eta) &= \\sum_{y_i \\ne h_k(\\mathbf{x}_i)}^{} p_{k}(\\mathbf{x}_i, y_i) \\exp(\\eta) - \\sum_{y_i = h_k(\\mathbf{x}_i)}^{} p^{k}(\\mathbf{x}_i, y_i) \\exp(-\\eta) \\\\ &= \\epsilon_k \\exp(\\eta) - (1 - \\epsilon_k) \\exp(-\\eta), \\\\ \\Rightarrow& \\eta^* = \\frac{1}{2} \\ln\\left( \\frac{1 - \\epsilon_k}{\\epsilon_k} \\right). \\end{align}\\] \u7efc\u4e0a\u6240\u8ff0\uff0cAdaboost\u7b97\u6cd5\u7684\u6d41\u7a0b\u662f\uff1a Step1: \u521d\u59cb\u5316 \\(\\pmb{\\alpha} = \\pmb{0}\\) , \\(k = 1\\) , \\(\\mathcal{H}_{weak} = \\{\\}\\) ; Step2: \u6c42\u89e3 \\(\\mathbf{p}_{k}(S)\\) , \u4ece\u6837\u672c \\(\\{(\\mathbf{x}, y)\\} \\sim \\mathbf{p}_{k}\\) \u4e2d\u5b66\u4e60\u51fa\u4e00\u4e2a\u5f31\u5206\u7c7b\u5668 \\(h_k\\) , \\(\\mathcal{H}_{weak} = \\mathcal{H} \\cup \\{h_k\\}\\) ; \u5f31\u5206\u7c7b\u5668\u7684\u5b66\u4e60\u65b9\u5f0f\u5f88\u91cd\u8981\uff0c\u8fd9\u4e2a\u5728\u8bc1\u660e\u91cc\u4f1a\u4f53\u73b0; Step3: \u6c42\u89e3 \\(\\epsilon_k\\) , \\(\\eta_k\\) ; Step4: \u66f4\u65b0 \\(\\pmb{\\alpha}\\) \u548c \\(k\\) , \u8fd4\u56de\u5230\u7b2c\u4e8c\u6b65\u3002 \u8bef\u5dee\u5206\u6790 \u00b6 \u9996\u5148 \\(\\epsilon_k \\le \\frac{1}{2} - \\gamma\\) , \u90a3\u4e48 \\[\\begin{align} &\\frac{L_{S}(\\pmb{\\alpha} + \\eta \\pmb{\\epsilon}_k)}{L_{S}(\\pmb{\\alpha})} \\\\ =& (1 - \\epsilon_k) \\exp(-\\eta) + \\epsilon_k \\exp(\\eta) \\\\ =& 2 \\sqrt{\\epsilon_k(1 - \\epsilon_k)}\\\\ \\le& 2\\sqrt{\\left( \\frac{1}{2} - \\gamma \\right)\\left( \\frac{1}{2} + \\gamma \\right)} \\\\ \\le& \\sqrt{1 - 4\\gamma^2} \\le \\exp(-2\\gamma^2). \\end{align}\\] \u5982\u679c\u53d6 \\(\\pmb{\\alpha}_0 = \\pmb{0}\\) \uff0c\u90a3\u4e48 \\(L_{S}(\\pmb{\\alpha}_0) = 1\\) \u3002 \u6240\u4ee5\uff0c \\(L_{S}(\\pmb{\\alpha}_T) \\le \\exp(-2\\gamma^2T)\\) \u3002 \u6211\u4eec\u5f53\u7136\u6bd4\u8f83\u5173\u5fc3 \\(0-1\\) \u8bef\u5dee\u51fd\u6570\uff1a \\(l^{0-1}(h, (\\mathbf{x}, y)) = sign\\{- y h(\\mathbf{x})\\}\\) , \u5b83\u5c0f\u4e8e\u7b49\u4e8e\u8bef\u5dee\u51fd\u6570 \\(l^{exp}(h, (\\mathbf{x}, y)) = \\exp(-y h(\\mathbf{x}))\\) , \u6240\u4ee5 \\[\\begin{align} &{L}^{0-1}_{\\mathcal{D}}(h) \\le {L}_{\\mathcal{D}}^{\\exp}(h) \\\\ =& \\mathbb{E}_{S \\sim \\mathcal{D}^m} \\left[ {L}_{S}^{exp}(h) \\right] \\\\ \\le& \\exp(-2\\gamma^2 T). \\end{align}\\]","title":"AdaBoost"},{"location":"ML/05-AdaBoost/#boosting","text":"\u5f31\u5206\u7c7b\u5668\u5230\u5f3a\u5206\u7c7b\u5668\uff0c\u8fd9\u91cc\u6709\u8da3\u7684\u4e1c\u897f\u53ef\u592a\u591a\u4e86\uff0c\u6211\u5148\u628a\u4e3b\u5e72\u7b97\u6cd5Adaboost\u6574\u7406\u4e00\u4e0b\u3002","title":"Boosting"},{"location":"ML/05-AdaBoost/#adaboost","text":"\u5b9a\u4e491\uff1a( Weak hypothesis class ). We call a hypothesis class is a weak hypothesis class of data \\((\\mathbf{x}, y) \\sim \\mathcal{D}\\) we means that \\[\\begin{equation} \\mathcal{H}_{weak} = \\left\\{ h_1, h_2, \\ldots, h_N : \\forall k \\in [N], L_{(\\mathbf{x}_i, y_i) \\sim \\mathbf{p}_k}(h_k) \\le \\frac{1}{2} - \\gamma, (\\mathbf{x}_i, y_i) \\in S \\right\\}.\\tag{1} \\end{equation}\\] \u8fd9\u91cc\u7684 \\(\\mathbf{p}_k\\) \u662f\u5728\u6837\u672c\u4e0a\u7684\u67d0\u4e2a\u5206\u5e03\uff0c\u5728\u540e\u9762\u4f1a\u6709\u63d0\u5230, \u67d0\u4e00\u79cd\u8bbe\u5b9a\u65b9\u5f0f\u3002 \u8fd9\u91cc\u6307\u7684\u662f\u67d0\u4e00\u7c7b\u5206\u7c7b\u7b97\u6cd5\u7ed9\u51fa\u4efb\u610f\u7684\u8f93\u5165\u6837\u672c\uff0c \u53ea\u80fd\u8fd4\u56de\u4e00\u4e2a\u6bd4\u8f83\u5f31\u7684\u5206\u7c7b\u5668\uff0c\u5b83\u7684\u9519\u8bef\u7387\u5c0f\u4e8e50%\u3002 Adaboost \u5047\u8bbe\u6211\u4eec\u88ab\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f31\u5206\u7c7b\u5668\u7684\u96c6\u5408 \\(\\mathcal{H}_{weak}\\) , \u6211\u4eec\u5c06\u4ece\u4e0b\u9762\u8fd9\u4e2a\u5047\u8bbe\u96c6\u4e2d\u5b66\u4e60\u4e00\u4e2a\u5f3a\u5206\u7c7b\u5668\uff1a \\[\\begin{equation} \\mathcal{H}_{ada} = \\left\\{ \\sum^{N}_{i=1} \\alpha_i h_i : \\alpha_i \\in \\mathbb{R} \\wedge h_i \\in \\mathcal{H}_{weak} \\right\\}.\\tag{2} \\end{equation}\\] Adaboot\u89e3\u51b3\u7684\u95ee\u9898\u662f: \u6570\u636e\u5728 \\((\\mathbf{x}, y) \\sim \\mathcal{D}\\) , \u5e76\u4e14 \\(y \\in \\{-1, 1\\}\\) \uff0c \\(h_i(\\mathbf{x}) \\in\\{-1, 1\\}\\) \u3002 \u6211\u4eec\u8981\u4ece \\(\\mathcal{H}_{ada}\\) \u4e2d\u9009\u51fa\u4e00\u4e2a\u6700\u597d\u7684\u5206\u7c7b\u5668\uff0c\u80fd\u591f\u66f4\u597d\u5730\u62df\u5408\u771f\u5b9e\u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}}(y \\vert \\mathbf{x})\\) \u3002 \u8fd9\u91cc\u4f7f\u7528\u7684\u635f\u5931\u51fd\u6570\u4e3a \\[\\begin{equation} {L}_{\\mathcal{D}}(h) = \\mathbb{E}_{\\mathcal{D}} \\left[ e^{- y h(\\mathbf{x})} \\right].\\tag{3} \\end{equation}\\] \u5bf9\u5e94\u7684\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\u4e3a \\[\\begin{equation} {L}_{\\mathcal{S}}(h) = \\frac{1}{m} \\sum_{i=1}^{m} e^{-y_i h(\\mathbf{x}_i)}. \\tag{4} \\end{equation}\\] \u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u5462\uff1f\u56e0\u4e3a\u5b83\u6709\u5f88\u597d\u7684\u6570\u5b66\u6027\u8d28\u3002 \u6211\u4eec\u53ef\u4ee5\u7528\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u6765\u6c42\u89e3\u8fd9\u4e2a\u4f18\u5316\u95ee\u9898\uff0c\u5e76\u4e14\u8bbe\u5b9a\u6bcf\u4e00\u6b65\u7684\u6b65\u957f\u4e3a\u6700\u4f18\u6b65\u957f\u3002 \u4e5f\u5c31\u662f\u6bcf\u4e00\u6b65\u7684\u4f18\u5316\uff0c\u6211\u4eec\u8981\u901a\u8fc7\u4e00\u4e2a\u5b50\u95ee\u9898\u6765\u6c42\u89e3\u5f53\u524d\u7684\u6700\u4f18\u6b65\u957f: \\[\\begin{equation} \\arg\\min_{\\eta} {L}_{\\mathcal{S}}(\\alpha_1, \\ldots, \\alpha_{k-1}, \\alpha_k + \\eta, \\alpha_{k+1}, \\ldots, \\alpha_{N})\\tag{5} \\end{equation}\\] \\[\\begin{align} & m {L}_{\\mathcal{S}}(\\alpha_1, \\ldots, \\alpha_{k-1}, \\alpha_k + \\eta, \\alpha_{k+1}, \\ldots, \\alpha_{N}) \\\\ =& \\sum_{i=1}^{m} exp\\left\\{- y_i \\sum_{j=1}^{N} \\alpha_{j} h_{j}(\\mathbf{x}_i) - y_i h_{k}(\\mathbf{x}_i) \\eta\\right\\} \\\\ \\frac{\\partial}{\\partial \\eta} {L}_{\\mathcal{S}}(\\eta) =& \\sum_{i = 1}^{m} -y_i h_k(\\mathbf{x}_i) exp\\left\\{- y_i \\sum_{j=1}^{N} \\alpha_{j} h_{j}(\\mathbf{x}_i) - y_i h_{k}(\\mathbf{x}_i) \\eta\\right\\} \\\\ =& \\sum_{y_i \\ne h_k(\\mathbf{x}_i)} exp\\left\\{- y_i \\sum_{j=1}^{N} \\alpha_{j} h_{j}(\\mathbf{x}_i) + \\eta\\right\\} \\\\ & - \\sum_{y_i = h_k(\\mathbf{x}_i)} exp\\left\\{- y_i \\sum_{j=1}^{N} \\alpha_{j} h_{j}(\\mathbf{x}_i) - \\eta\\right\\} \\end{align}\\] \u4ee4 \\(L_S(\\pmb{\\alpha}) = Z = \\sum_{i=1}^{m} exp\\left\\{ -y_i \\sum_{j=1}^{N} \\alpha_j h_j(\\mathbf{x}_i) \\right\\}\\) , \u67d0\u4e00\u4e2a\u6837\u672c\u96c6 \\(S\\) \u4e0a\u7684\u5206\u5e03 \\(\\mathbf{p}_{k}(S) = \\left\\{ p_k(\\mathbf{x}_1, y_1), p_k(\\mathbf{x}_2, y_2), \\ldots, p_k(\\mathbf{x}_m, y_m)\\right\\}\\) , \u6ee1\u8db3 \\(\\mathbf{p}_{k}(\\mathbf{x}_i, y_i) = \\frac{1}{Z}exp\\left\\{ -y_i \\sum_{j=1}^{N} \\alpha_j h_j(\\mathbf{x}_i) \\right\\}\\) , \u4ee5\u53ca \\(\\epsilon_k = \\mathbb{E}_{(\\mathbf{x}, y) \\sim \\mathbf{p}_k} \\left[ \\pmb{1}_{h_k(\\mathbf{x})\\ne y} \\right]\\) \u90a3\u4e48 \\[\\begin{align} \\frac{\\partial}{\\partial \\eta} {L}_{\\mathcal{S}}(\\eta) &= \\sum_{y_i \\ne h_k(\\mathbf{x}_i)}^{} p_{k}(\\mathbf{x}_i, y_i) \\exp(\\eta) - \\sum_{y_i = h_k(\\mathbf{x}_i)}^{} p^{k}(\\mathbf{x}_i, y_i) \\exp(-\\eta) \\\\ &= \\epsilon_k \\exp(\\eta) - (1 - \\epsilon_k) \\exp(-\\eta), \\\\ \\Rightarrow& \\eta^* = \\frac{1}{2} \\ln\\left( \\frac{1 - \\epsilon_k}{\\epsilon_k} \\right). \\end{align}\\] \u7efc\u4e0a\u6240\u8ff0\uff0cAdaboost\u7b97\u6cd5\u7684\u6d41\u7a0b\u662f\uff1a Step1: \u521d\u59cb\u5316 \\(\\pmb{\\alpha} = \\pmb{0}\\) , \\(k = 1\\) , \\(\\mathcal{H}_{weak} = \\{\\}\\) ; Step2: \u6c42\u89e3 \\(\\mathbf{p}_{k}(S)\\) , \u4ece\u6837\u672c \\(\\{(\\mathbf{x}, y)\\} \\sim \\mathbf{p}_{k}\\) \u4e2d\u5b66\u4e60\u51fa\u4e00\u4e2a\u5f31\u5206\u7c7b\u5668 \\(h_k\\) , \\(\\mathcal{H}_{weak} = \\mathcal{H} \\cup \\{h_k\\}\\) ; \u5f31\u5206\u7c7b\u5668\u7684\u5b66\u4e60\u65b9\u5f0f\u5f88\u91cd\u8981\uff0c\u8fd9\u4e2a\u5728\u8bc1\u660e\u91cc\u4f1a\u4f53\u73b0; Step3: \u6c42\u89e3 \\(\\epsilon_k\\) , \\(\\eta_k\\) ; Step4: \u66f4\u65b0 \\(\\pmb{\\alpha}\\) \u548c \\(k\\) , \u8fd4\u56de\u5230\u7b2c\u4e8c\u6b65\u3002","title":"Adaboost"},{"location":"ML/05-AdaBoost/#_1","text":"\u9996\u5148 \\(\\epsilon_k \\le \\frac{1}{2} - \\gamma\\) , \u90a3\u4e48 \\[\\begin{align} &\\frac{L_{S}(\\pmb{\\alpha} + \\eta \\pmb{\\epsilon}_k)}{L_{S}(\\pmb{\\alpha})} \\\\ =& (1 - \\epsilon_k) \\exp(-\\eta) + \\epsilon_k \\exp(\\eta) \\\\ =& 2 \\sqrt{\\epsilon_k(1 - \\epsilon_k)}\\\\ \\le& 2\\sqrt{\\left( \\frac{1}{2} - \\gamma \\right)\\left( \\frac{1}{2} + \\gamma \\right)} \\\\ \\le& \\sqrt{1 - 4\\gamma^2} \\le \\exp(-2\\gamma^2). \\end{align}\\] \u5982\u679c\u53d6 \\(\\pmb{\\alpha}_0 = \\pmb{0}\\) \uff0c\u90a3\u4e48 \\(L_{S}(\\pmb{\\alpha}_0) = 1\\) \u3002 \u6240\u4ee5\uff0c \\(L_{S}(\\pmb{\\alpha}_T) \\le \\exp(-2\\gamma^2T)\\) \u3002 \u6211\u4eec\u5f53\u7136\u6bd4\u8f83\u5173\u5fc3 \\(0-1\\) \u8bef\u5dee\u51fd\u6570\uff1a \\(l^{0-1}(h, (\\mathbf{x}, y)) = sign\\{- y h(\\mathbf{x})\\}\\) , \u5b83\u5c0f\u4e8e\u7b49\u4e8e\u8bef\u5dee\u51fd\u6570 \\(l^{exp}(h, (\\mathbf{x}, y)) = \\exp(-y h(\\mathbf{x}))\\) , \u6240\u4ee5 \\[\\begin{align} &{L}^{0-1}_{\\mathcal{D}}(h) \\le {L}_{\\mathcal{D}}^{\\exp}(h) \\\\ =& \\mathbb{E}_{S \\sim \\mathcal{D}^m} \\left[ {L}_{S}^{exp}(h) \\right] \\\\ \\le& \\exp(-2\\gamma^2 T). \\end{align}\\]","title":"\u8bef\u5dee\u5206\u6790"},{"location":"ML/06-PAC/","text":"PAC: Principal Component Analysis \u00b6 \u95ee\u9898\u63cf\u8ff0 \u00b6 \u5728\u96c6\u5408 \\(\\mathbb{R}^{d}\\) \u5b58\u5728\u672a\u77e5\u5206\u5e03 \\(\\mathcal{D}\\) , \u5b83\u7684\u6837\u672c\u7528\u7b26\u53f7 \\(\\mathbf{x}\\) \u8868\u793a\u3002 \u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u4e2a\u5728 \\(\\mathbb{R}^{k}\\) \u4e0a\u7684\u5206\u5e03 \\(p(\\mathbf{y})\\) \u6700\u63a5\u8fd1\u5206\u5e03 \\(p_{\\mathcal{D}}(\\mathbf{x})\\) \uff0c \u8fd9\u91cc\u7684\u6700\u63a5\u8fd1\uff0c\u6307\u7684\u662f \\(p(\\mathbf{y})\\) \u5305\u542b\u6700\u591a \\(p_{\\mathcal{D}}(\\mathbf{x})\\) \u7684 \u4fe1\u606f \u3002 \u4ec0\u4e48\u53eb\u505a\u4fdd\u7559\u6700\u591a\u7684\u4fe1\u606f\u5462\u3002\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u4e2a\u7f16\u7801\u5668 \\(E:\\mathbf{x} \\rightarrow \\mathbf{y}\\) (\u5176\u4e2d \\(y \\in \\mathbb{R}^k\\) \u4ee5\u53ca \\(k < d\\) ), \u4ee5\u53ca\u4e00\u4e2a\u89e3\u7801\u5668 \\(D:\\mathbf{y} \\rightarrow \\mathbf{x}\\) , \u4f7f\u5f97 \\(D(E(\\mathbf{x}))\\) \u6700\u63a5\u8fd1 \\(p_{\\mathcal{D}}(\\mathbf{x})\\) : \\[ \\tag{1} \\label{loss_1} \\min_{E, D} \\left\\{ Distance(p_{\\mathcal{D}}(\\mathbf{x}) \\Vert p(\\hat{\\mathbf{x}} = E(D(\\mathbf{x}))) \\right\\} \\] \u8fd9\u4e2a\u95ee\u9898\u63cf\u8ff0\u8fd8\u4e0d\u662f\u5f88\u5408\u9002\uff0c\u6211\u9700\u8981\u518d\u601d\u8003\u4e00\u4e0b\u3002 PAC \u00b6 \u5bf9\u4e8e\u6837\u672c \\(\\mathbf{x} \\in \\mathbb{R}^d\\) , \u670d\u4ece\u672a\u77e5\u5206\u5e03 \\(\\mathcal{D}\\) \uff0c PAC\u7684\u4f18\u5316\u76ee\u6807\u662f \\[ \\tag{2} \\label{pac_true_loss} \\min_{\\mathbf{U}, \\mathbf{V}} L_{\\mathcal{D}}(\\mathbf{U}, \\mathbf{V}) = \\mathbb{E}_{\\mathbf{x}\\sim\\mathcal{D}} \\left\\{\\Vert \\mathbf{x} - \\mathbf{U}\\mathbf{V}\\mathbf{x} \\Vert^2_2 \\right\\}, \\] \u5176\u4e2d \\(\\mathbf{U} \\in \\mathbb{R}^{d\\times k}\\) , \\(\\mathbf{V} \\in \\mathbb{R}^{k \\times d}\\) \u5e76\u4e14 \\(k \\le d\\) \u3002 \u7ed9\u5b9a\u6837\u672c\u96c6 \\(S = \\{\\mathbf{x}_1, \\mathbf{x}_2, \\ldots, \\mathbf{x}_m\\}\\) \uff0c\u5bf9\u5e94\u7684\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u4e3a \\[ \\tag{3} \\label{pac_empirical_loss} L_{S}(\\mathbf{U}, \\mathbf{V}) = \\frac{1}{m} \\sum^{m}_{i=1} \\Vert \\mathbf{x}_i - \\mathbf{U}\\mathbf{V}\\mathbf{x}_i \\Vert^2_2. \\] PAC\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u6c42\u89e3\u4e0a\u9762\u8fd9\u4e2a\u4f18\u5316\u95ee\u9898 \\(\\eqref{pac_empirical_loss}\\) \uff0c\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u5c31\u662f\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u7684\u6c42\u89e3\u65b9\u6cd5\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u77e9\u9635 \\(\\mathbf{E} \\in \\mathbb{R}^{d \\times k}\\) \uff0c\u5e76\u4e14 \\(\\mathbf{E}^T \\mathbf{E} = \\mathbf{I}^k\\) \uff0c \u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684\u77e9\u9635 \\(\\mathbf{U}\\) , \u6ee1\u8db3 \\(\\{\\mathbf{U} \\mathbf{V} \\mathbf{x}: \\mathbf{x} \\in S\\} \\subset \\{\\mathbf{E} \\mathbf{y}: \\mathbf{y} \\in \\mathbb{R}^{k}\\}\\) \u3002 \u5e76\u4e14\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\u5411\u91cf \\(\\mathbf{x}\\) , \\(\\min_{\\mathbf{y}} \\Vert \\mathbf{E}\\mathbf{y} - \\mathbf{x} \\Vert^2_2\\) \u7684\u6700\u4f18\u89e3\u4e3a \\(\\mathbf{y}^* = \\mathbf{E}^T \\mathbf{x}\\) \u3002 \u7efc\u5408\u4e0a\u9762\u8fd9\u4e24\u6761\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\[\\begin{align*} &\\min_{\\mathbf{U}, \\mathbf{V}} L_{S}(\\mathbf{U}, \\mathbf{V})\\\\ \\ge& \\min_{\\mathbf{E}} \\frac{1}{m} \\sum^{m}_{i=1} \\min_{\\mathbf{y}_i} \\Vert \\mathbf{x}_i - \\mathbf{E}\\mathbf{y}_i \\Vert^2_2\\\\ =& \\min_{\\mathbf{E}} \\frac{1}{m} \\sum^{m}_{i=1} \\Vert \\mathbf{x}_i - \\mathbf{E}\\mathbf{E}^T\\mathbf{x}_i \\Vert^2_2\\\\ =& \\min_{\\mathbf{E}} \\frac{1}{m} \\sum^{m}_{i=1} (2 \\Vert \\mathbf{x}_i \\Vert^2_2 - 2 \\mathbf{x}^T_i \\mathbf{E}\\mathbf{E}^{T}\\mathbf{x}_i)\\\\ =& \\min_{\\mathbf{E}} \\frac{1}{m} \\sum^{m}_{i=1} [2 \\Vert \\mathbf{x}_i \\Vert^2_2 - 2 trace(\\mathbf{E}^{T}\\mathbf{x}_i\\mathbf{x}^T_i\\mathbf{E})]\\\\ =& \\min_{\\mathbf{E}} \\frac{2}{m} \\sum^{m}_{i=1} \\Vert \\mathbf{x}_i \\Vert^2_2 - \\frac{2}{m} trace\\left(\\mathbf{E}^{T} \\sum^{m}_{i=1} \\mathbf{x}_i\\mathbf{x}^T_i\\mathbf{E}\\right).\\\\ \\tag{4} \\label{proof_step1} \\end{align*}\\] \u56e0\u4e3a \\(\\sum^{m}_{i=1} \\mathbf{x}_i\\mathbf{x}^T_i\\) \u662f\u5b9e\u5bf9\u79f0\u77e9\u9635\uff0c\u6240\u4ee5\u80fd\u591f\u6b63\u4ea4\u5206\u89e3\u4e3a \\(\\mathbf{F} \\mathbf{D} \\mathbf{F}^T\\) \u4e09\u4e2a\u77e9\u9635\u7684\u4e58\u79ef\uff0c\u5176\u4e2d \\(\\mathbf{F}^T \\mathbf{F} = \\mathbf{I}^d\\) \u4ee5\u53ca \\(\\mathbf{D}\\) \u662f\u5bf9\u89d2\u77e9\u9635\uff0c\u5e76\u4e14 \\(D_{11} \\ge D_{22} \\ge \\ldots \\ge D_{mm}\\) \u3002\u6240\u4ee5\u539f\u95ee\u9898\u7b49\u4ef7\u4e8e\u4f18\u5316\u4e0b\u9762\u8fd9\u4e2a\u95ee\u9898\uff1a \\[\\begin{align*} &\\max_{\\mathbf{E}, \\mathbf{F}} trace\\left( \\mathbf{E}^{T}\\mathbf{F} \\mathbf{D} \\mathbf{F}^{T} \\mathbf{E} \\right)\\\\ =& \\max_{\\mathbf{H}: \\mathbf{H}^T \\mathbf{H} = \\mathbf{I}^k} trace\\left( \\mathbf{H}^T \\mathbf{D} \\mathbf{H} \\right)\\\\ =& \\max_{\\mathbf{H}: \\mathbf{H}^T \\mathbf{H} = \\mathbf{I}^k} \\sum^{d}_{i=1} {D}_{ii} \\sum^{k}_{j=1} {H}^{2}_{ij}. \\tag{5} \\label{proof_step2} \\end{align*}\\] \u63a5\u4e0b\u6765\u662f\u4e00\u4e2a\u77e9\u9635\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u6269\u5c55\u77e9\u9635 \\(\\mathbf{H}\\) \u7684\u5217\uff0c\u5f62\u6210\u65b0\u7684\u77e9\u9635 \\(\\tilde{\\mathbf{H}}\\) , \u6ee1\u8db3 \\(\\tilde{\\mathbf{H}}^T \\tilde{\\mathbf{H}} = \\mathbf{I}^d\\) \u3002\u90a3\u4e48 \\(\\tilde{\\mathbf{H}} \\tilde{\\mathbf{H}}^T = \\mathbf{I}^d\\) , \u5373 \\(\\sum^{d}_{j=1} \\tilde{H}^2_{ij} = 1 \\Rightarrow \\sum^{k}_{j=1} H^2_{ij} \\le 1\\) \u3002\u518d\u6709\uff0c \\(\\sum^{d}_{i=1}\\sum^{k}_{j=1} H_{ij} = k\\) \u3002 \u7efc\u4e0a \\(\\eqref{proof_step2}\\) \u5f0f\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u8f6c\u5316\u4e3a \\[ \\tag{6} \\label{proof_step3} \\eqref{proof_step2} \\le \\max_{\\pmb{0} \\preceq \\pmb{\\beta} \\preceq \\pmb{1}, \\Vert \\pmb{\\beta} \\Vert_1 = k} \\sum^{d}_{i=1} D_{ii} \\beta_{i} = \\sum^{k}_{i=1} D_{ii}. \\] \u5f53 \\(\\mathbf{E}\\) \u7531 \\(\\mathbf{F}\\) \u524d \\(k\\) \u5217\u7ec4\u6210\uff0c\u90a3\u4e48 \\[ \\tag{7} \\label{proof_step4} trace\\left( \\mathbf{E}^{T}\\mathbf{F} \\mathbf{D} \\mathbf{F}^{T} \\mathbf{E} \\right) = \\sum^{k}_{i=1} D_{ii}\uff0c \\] \u5373\u95ee\u9898 \\(\\eqref{proof_step2}\\) \u7684\u6700\u503c\u4e3a \\(\\sum^{k}_{i=1} D_{ii}\\) \u3002 \u6700\u540e\uff0c\u6211\u4eec\u53d1\u73b0 \\(\\mathbf{E}\\) \u6070\u597d\u662f\u77e9\u9635 \\(\\sum^{m}_{i=1}\\mathbf{x}^{T}_{i}\\mathbf{x}_{i}\\) \u7684\u6700\u5927 \\(k\\) \u4e2a\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u3002\u7279\u5f81\u503c\u5927\uff0c\u5728 \\(\\mathbf{F} \\mathbf{D} \\mathbf{F}^T\\) \u4e2d\u5f71\u54cd\u4e5f\u5927\uff0c\u5373\u5bf9\u5e94\u7684\u90e8\u5206\u662f\u539f\u77e9\u9635\u7684\u4e3b\u6210\u5206\u3002\u6240\u4ee5\u6211\u4eec\u4e5f\u53eb\u8fd9\u79cd\u65b9\u6cd5\u4e3a \u4e3b\u6210\u5206\u5206\u6790 \u3002","title":"PAC"},{"location":"ML/06-PAC/#pac-principal-component-analysis","text":"","title":"PAC: Principal Component Analysis"},{"location":"ML/06-PAC/#_1","text":"\u5728\u96c6\u5408 \\(\\mathbb{R}^{d}\\) \u5b58\u5728\u672a\u77e5\u5206\u5e03 \\(\\mathcal{D}\\) , \u5b83\u7684\u6837\u672c\u7528\u7b26\u53f7 \\(\\mathbf{x}\\) \u8868\u793a\u3002 \u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u4e2a\u5728 \\(\\mathbb{R}^{k}\\) \u4e0a\u7684\u5206\u5e03 \\(p(\\mathbf{y})\\) \u6700\u63a5\u8fd1\u5206\u5e03 \\(p_{\\mathcal{D}}(\\mathbf{x})\\) \uff0c \u8fd9\u91cc\u7684\u6700\u63a5\u8fd1\uff0c\u6307\u7684\u662f \\(p(\\mathbf{y})\\) \u5305\u542b\u6700\u591a \\(p_{\\mathcal{D}}(\\mathbf{x})\\) \u7684 \u4fe1\u606f \u3002 \u4ec0\u4e48\u53eb\u505a\u4fdd\u7559\u6700\u591a\u7684\u4fe1\u606f\u5462\u3002\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u4e2a\u7f16\u7801\u5668 \\(E:\\mathbf{x} \\rightarrow \\mathbf{y}\\) (\u5176\u4e2d \\(y \\in \\mathbb{R}^k\\) \u4ee5\u53ca \\(k < d\\) ), \u4ee5\u53ca\u4e00\u4e2a\u89e3\u7801\u5668 \\(D:\\mathbf{y} \\rightarrow \\mathbf{x}\\) , \u4f7f\u5f97 \\(D(E(\\mathbf{x}))\\) \u6700\u63a5\u8fd1 \\(p_{\\mathcal{D}}(\\mathbf{x})\\) : \\[ \\tag{1} \\label{loss_1} \\min_{E, D} \\left\\{ Distance(p_{\\mathcal{D}}(\\mathbf{x}) \\Vert p(\\hat{\\mathbf{x}} = E(D(\\mathbf{x}))) \\right\\} \\] \u8fd9\u4e2a\u95ee\u9898\u63cf\u8ff0\u8fd8\u4e0d\u662f\u5f88\u5408\u9002\uff0c\u6211\u9700\u8981\u518d\u601d\u8003\u4e00\u4e0b\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"ML/06-PAC/#pac","text":"\u5bf9\u4e8e\u6837\u672c \\(\\mathbf{x} \\in \\mathbb{R}^d\\) , \u670d\u4ece\u672a\u77e5\u5206\u5e03 \\(\\mathcal{D}\\) \uff0c PAC\u7684\u4f18\u5316\u76ee\u6807\u662f \\[ \\tag{2} \\label{pac_true_loss} \\min_{\\mathbf{U}, \\mathbf{V}} L_{\\mathcal{D}}(\\mathbf{U}, \\mathbf{V}) = \\mathbb{E}_{\\mathbf{x}\\sim\\mathcal{D}} \\left\\{\\Vert \\mathbf{x} - \\mathbf{U}\\mathbf{V}\\mathbf{x} \\Vert^2_2 \\right\\}, \\] \u5176\u4e2d \\(\\mathbf{U} \\in \\mathbb{R}^{d\\times k}\\) , \\(\\mathbf{V} \\in \\mathbb{R}^{k \\times d}\\) \u5e76\u4e14 \\(k \\le d\\) \u3002 \u7ed9\u5b9a\u6837\u672c\u96c6 \\(S = \\{\\mathbf{x}_1, \\mathbf{x}_2, \\ldots, \\mathbf{x}_m\\}\\) \uff0c\u5bf9\u5e94\u7684\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u4e3a \\[ \\tag{3} \\label{pac_empirical_loss} L_{S}(\\mathbf{U}, \\mathbf{V}) = \\frac{1}{m} \\sum^{m}_{i=1} \\Vert \\mathbf{x}_i - \\mathbf{U}\\mathbf{V}\\mathbf{x}_i \\Vert^2_2. \\] PAC\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u6c42\u89e3\u4e0a\u9762\u8fd9\u4e2a\u4f18\u5316\u95ee\u9898 \\(\\eqref{pac_empirical_loss}\\) \uff0c\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u5c31\u662f\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u7684\u6c42\u89e3\u65b9\u6cd5\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u77e9\u9635 \\(\\mathbf{E} \\in \\mathbb{R}^{d \\times k}\\) \uff0c\u5e76\u4e14 \\(\\mathbf{E}^T \\mathbf{E} = \\mathbf{I}^k\\) \uff0c \u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684\u77e9\u9635 \\(\\mathbf{U}\\) , \u6ee1\u8db3 \\(\\{\\mathbf{U} \\mathbf{V} \\mathbf{x}: \\mathbf{x} \\in S\\} \\subset \\{\\mathbf{E} \\mathbf{y}: \\mathbf{y} \\in \\mathbb{R}^{k}\\}\\) \u3002 \u5e76\u4e14\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\u5411\u91cf \\(\\mathbf{x}\\) , \\(\\min_{\\mathbf{y}} \\Vert \\mathbf{E}\\mathbf{y} - \\mathbf{x} \\Vert^2_2\\) \u7684\u6700\u4f18\u89e3\u4e3a \\(\\mathbf{y}^* = \\mathbf{E}^T \\mathbf{x}\\) \u3002 \u7efc\u5408\u4e0a\u9762\u8fd9\u4e24\u6761\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\[\\begin{align*} &\\min_{\\mathbf{U}, \\mathbf{V}} L_{S}(\\mathbf{U}, \\mathbf{V})\\\\ \\ge& \\min_{\\mathbf{E}} \\frac{1}{m} \\sum^{m}_{i=1} \\min_{\\mathbf{y}_i} \\Vert \\mathbf{x}_i - \\mathbf{E}\\mathbf{y}_i \\Vert^2_2\\\\ =& \\min_{\\mathbf{E}} \\frac{1}{m} \\sum^{m}_{i=1} \\Vert \\mathbf{x}_i - \\mathbf{E}\\mathbf{E}^T\\mathbf{x}_i \\Vert^2_2\\\\ =& \\min_{\\mathbf{E}} \\frac{1}{m} \\sum^{m}_{i=1} (2 \\Vert \\mathbf{x}_i \\Vert^2_2 - 2 \\mathbf{x}^T_i \\mathbf{E}\\mathbf{E}^{T}\\mathbf{x}_i)\\\\ =& \\min_{\\mathbf{E}} \\frac{1}{m} \\sum^{m}_{i=1} [2 \\Vert \\mathbf{x}_i \\Vert^2_2 - 2 trace(\\mathbf{E}^{T}\\mathbf{x}_i\\mathbf{x}^T_i\\mathbf{E})]\\\\ =& \\min_{\\mathbf{E}} \\frac{2}{m} \\sum^{m}_{i=1} \\Vert \\mathbf{x}_i \\Vert^2_2 - \\frac{2}{m} trace\\left(\\mathbf{E}^{T} \\sum^{m}_{i=1} \\mathbf{x}_i\\mathbf{x}^T_i\\mathbf{E}\\right).\\\\ \\tag{4} \\label{proof_step1} \\end{align*}\\] \u56e0\u4e3a \\(\\sum^{m}_{i=1} \\mathbf{x}_i\\mathbf{x}^T_i\\) \u662f\u5b9e\u5bf9\u79f0\u77e9\u9635\uff0c\u6240\u4ee5\u80fd\u591f\u6b63\u4ea4\u5206\u89e3\u4e3a \\(\\mathbf{F} \\mathbf{D} \\mathbf{F}^T\\) \u4e09\u4e2a\u77e9\u9635\u7684\u4e58\u79ef\uff0c\u5176\u4e2d \\(\\mathbf{F}^T \\mathbf{F} = \\mathbf{I}^d\\) \u4ee5\u53ca \\(\\mathbf{D}\\) \u662f\u5bf9\u89d2\u77e9\u9635\uff0c\u5e76\u4e14 \\(D_{11} \\ge D_{22} \\ge \\ldots \\ge D_{mm}\\) \u3002\u6240\u4ee5\u539f\u95ee\u9898\u7b49\u4ef7\u4e8e\u4f18\u5316\u4e0b\u9762\u8fd9\u4e2a\u95ee\u9898\uff1a \\[\\begin{align*} &\\max_{\\mathbf{E}, \\mathbf{F}} trace\\left( \\mathbf{E}^{T}\\mathbf{F} \\mathbf{D} \\mathbf{F}^{T} \\mathbf{E} \\right)\\\\ =& \\max_{\\mathbf{H}: \\mathbf{H}^T \\mathbf{H} = \\mathbf{I}^k} trace\\left( \\mathbf{H}^T \\mathbf{D} \\mathbf{H} \\right)\\\\ =& \\max_{\\mathbf{H}: \\mathbf{H}^T \\mathbf{H} = \\mathbf{I}^k} \\sum^{d}_{i=1} {D}_{ii} \\sum^{k}_{j=1} {H}^{2}_{ij}. \\tag{5} \\label{proof_step2} \\end{align*}\\] \u63a5\u4e0b\u6765\u662f\u4e00\u4e2a\u77e9\u9635\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u6269\u5c55\u77e9\u9635 \\(\\mathbf{H}\\) \u7684\u5217\uff0c\u5f62\u6210\u65b0\u7684\u77e9\u9635 \\(\\tilde{\\mathbf{H}}\\) , \u6ee1\u8db3 \\(\\tilde{\\mathbf{H}}^T \\tilde{\\mathbf{H}} = \\mathbf{I}^d\\) \u3002\u90a3\u4e48 \\(\\tilde{\\mathbf{H}} \\tilde{\\mathbf{H}}^T = \\mathbf{I}^d\\) , \u5373 \\(\\sum^{d}_{j=1} \\tilde{H}^2_{ij} = 1 \\Rightarrow \\sum^{k}_{j=1} H^2_{ij} \\le 1\\) \u3002\u518d\u6709\uff0c \\(\\sum^{d}_{i=1}\\sum^{k}_{j=1} H_{ij} = k\\) \u3002 \u7efc\u4e0a \\(\\eqref{proof_step2}\\) \u5f0f\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u8f6c\u5316\u4e3a \\[ \\tag{6} \\label{proof_step3} \\eqref{proof_step2} \\le \\max_{\\pmb{0} \\preceq \\pmb{\\beta} \\preceq \\pmb{1}, \\Vert \\pmb{\\beta} \\Vert_1 = k} \\sum^{d}_{i=1} D_{ii} \\beta_{i} = \\sum^{k}_{i=1} D_{ii}. \\] \u5f53 \\(\\mathbf{E}\\) \u7531 \\(\\mathbf{F}\\) \u524d \\(k\\) \u5217\u7ec4\u6210\uff0c\u90a3\u4e48 \\[ \\tag{7} \\label{proof_step4} trace\\left( \\mathbf{E}^{T}\\mathbf{F} \\mathbf{D} \\mathbf{F}^{T} \\mathbf{E} \\right) = \\sum^{k}_{i=1} D_{ii}\uff0c \\] \u5373\u95ee\u9898 \\(\\eqref{proof_step2}\\) \u7684\u6700\u503c\u4e3a \\(\\sum^{k}_{i=1} D_{ii}\\) \u3002 \u6700\u540e\uff0c\u6211\u4eec\u53d1\u73b0 \\(\\mathbf{E}\\) \u6070\u597d\u662f\u77e9\u9635 \\(\\sum^{m}_{i=1}\\mathbf{x}^{T}_{i}\\mathbf{x}_{i}\\) \u7684\u6700\u5927 \\(k\\) \u4e2a\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u3002\u7279\u5f81\u503c\u5927\uff0c\u5728 \\(\\mathbf{F} \\mathbf{D} \\mathbf{F}^T\\) \u4e2d\u5f71\u54cd\u4e5f\u5927\uff0c\u5373\u5bf9\u5e94\u7684\u90e8\u5206\u662f\u539f\u77e9\u9635\u7684\u4e3b\u6210\u5206\u3002\u6240\u4ee5\u6211\u4eec\u4e5f\u53eb\u8fd9\u79cd\u65b9\u6cd5\u4e3a \u4e3b\u6210\u5206\u5206\u6790 \u3002","title":"PAC"},{"location":"ML/07-KalmanFilter/","text":"\u5361\u5c14\u66fc\u6ee4\u6ce2 \u00b6 \u9690\u9a6c\u5c14\u53ef\u592b\u94fe \u00b6 \u7b80\u5355\u5b9a\u4e49\u4e00\u4e0b\u9690\u9a6c\u5c14\u53ef\u592b\u94fe\uff1a \\[ \\tag{1} \\label{HMM} \\xrightarrow[]{p(\\mathbf{x}_0)}(\\mathbf{x}_0 \\xrightarrow[]{p(\\mathbf{z}_0 \\vert \\mathbf{x}_0)}\\mathbf{z}_0) \\xrightarrow[]{p(\\mathbf{x}_1 \\vert \\mathbf{x}_0)} (\\mathbf{x}_1 \\xrightarrow[]{p(\\mathbf{z}_1 \\vert \\mathbf{x}_1)} \\mathbf{z}_1) \\rightarrow \\cdots . \\] \u5176\u4e2d \\(p(\\mathbf{x}_0)\\) \u8868\u793a\u521d\u59cb\u72b6\u6001\u6982\u7387\uff0c \\(p(\\mathbf{x}_{t+1} \\vert \\mathbf{x}_t)\\) \u8868\u793a\u9690\u53d8\u91cf\u72b6\u6001\u8f6c\u79fb\u6982\u7387\uff0c \\(p(\\mathbf{z}\\vert \\mathbf{x})\\) \u8868\u793a\u5b9e\u53d8\u91cf\u6761\u4ef6\u6982\u7387\u3002 \u5728\u9690\u9a6c\u5c14\u53ef\u592b\u94fe\u4e2d\uff0c\u6211\u4eec\u53ea\u80fd\u89c2\u6d4b\u5230\u53d8\u91cf \\((\\mathbf{z}_0 , \\mathbf{z}_1,\\ldots)\\) \u7684\u503c\uff0c\u800c\u65e0\u6cd5\u83b7\u5f97\u9690\u53d8\u91cf\u7684\u503c\u3002 \u8fd9\u4e2a\u6a21\u578b\u6709\u975e\u5e38\u5f3a\u7684\u73b0\u5b9e\u610f\u4e49\uff0c\u901a\u5e38\u52a8\u529b\u5b66\u7cfb\u7edf\u7684\u8fd0\u52a8\u662f\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u800c\u6211\u4eec\u65e0\u6cd5\u83b7\u5f97\u51c6\u786e\u7684\u52a8\u529b\u5b66\u6a21\u578b\u7684\u72b6\u6001 \\(\\mathbf{x}\\) \uff0c\u53ea\u80fd\u4f7f\u7528\u4f20\u611f\u5668\u6765\u6d4b\u91cf\u76f8\u5e94\u72b6\u6001\u7684\u4e00\u4e2a\u76f8\u5173\u91cf \\(\\mathbf{z}\\) \u3002 \u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u5efa\u6a21 \u00b6 \u5bf9\u4e8e\u968f\u673a\u8fc7\u7a0b\u7684\u5047\u8bbe\u96c6\uff0c\u6211\u4eec\u901a\u5e38\u8bbe\u5b9a\u4e3a\u9ad8\u65af\u5206\u5e03\uff1a \\[ \\tag{2} \\label{hmm_hypothesis} \\mathcal{H} = \\left\\{ (p(\\mathbf{x}_0) = \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0), p(\\mathbf{x}_{t+1} \\vert \\mathbf{x}_{t}) = \\mathcal{N}(\\pmb{\\mu}_1(\\mathbf{x}_t), \\pmb{\\Sigma}_1(\\mathbf{x}_t)), p(\\mathbf{z}\\vert\\mathbf{x}) = \\mathcal{N}(\\pmb{\\mu}_2(\\mathbf{x}), \\pmb{\\Sigma}_2)(\\mathbf{x})) \\right\\}. \\] \u6211\u4eec\u5e0c\u671b\u4ece\u5047\u8bbe\u96c6\u4e2d\u627e\u51fa\u4e00\u4e2a\u5143\u7ec4\u6700\u63a5\u8fd1\u771f\u5b9e\u7684\u72b6\u6001\u8f6c\u79fb \\((p_{\\mathcal{D}}(\\mathbf{x}_0), p_{\\mathcal{D}}(\\mathbf{x}_{t+1}\\vert \\mathbf{x}_{t}), p_{\\mathcal{D}}(\\mathbf{z} \\vert \\mathbf{x}))\\) \u3002 \u91c7\u6837\u4e00\u6761\u6837\u672c \\(\\tau = (\\mathbf{z}_0, \\mathbf{z}_1, \\ldots, \\mathbf{z}_t)\\) , \u90a3\u4e48\uff1a \\[ \\tag{3} \\label{trueprobability} p_{\\mathcal{D}}(\\tau) = \\int p_{\\mathcal{D}}(\\mathbf{x}_0) p_{\\mathcal{D}}(\\mathbf{z}_{0}\\vert \\mathbf{x}_0)p_{\\mathcal{D}}(\\mathbf{x}_{1}\\vert\\mathbf{x}_0)\\cdots p_{\\mathcal{D}}(\\mathbf{x}_{t} \\vert \\mathbf{x}_{t-1}) p_{\\mathcal{D}}(\\mathbf{z}_t \\vert \\mathbf{x}_t) \\mathrm{d}\\mathbf{x}_0\\mathrm{d}\\mathbf{x}_1\\ldots\\mathrm{d}\\mathbf{x}_t \\] \\[ \\tag{4} \\label{modelprobability} p_{\\theta}(\\tau) = \\int p_{\\theta}(\\mathbf{x}_0) p_{\\theta}(\\mathbf{z}_{0}\\vert \\mathbf{x}_0)p_{\\theta}(\\mathbf{x}_{1}\\vert\\mathbf{x}_0)\\cdots p_{\\theta}(\\mathbf{x}_{t} \\vert \\mathbf{x}_{t-1}) p_{\\theta}(\\mathbf{z}_t \\vert \\mathbf{x}_t) \\mathrm{d}\\mathbf{x}_0\\mathrm{d}\\mathbf{x}_1\\ldots\\mathrm{d}\\mathbf{x}_t \\] \u5b9a\u4e49\u635f\u5931\u51fd\u6570\u4e3a\uff1a \\[ \\tag{5} \\label{trueloss} L_{D}(\\theta) = \\mathbb{E}_{\\tau\\sim\\mathcal{D}}\\left[\\ln\\left( \\frac{p_{\\mathcal{D}}(\\tau)}{p_{\\theta}(\\tau)} \\right)\\right]. \\] \u5bf9\u5e94\u7684\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\u4e3a\uff1a \\[ \\tag{6} \\label{empirical} L_{S}(\\theta) = -\\frac{1}{m} \\sum^{m}_{i=1}\\ln\\left( {p_{\\theta}(\\tau)} \\right). \\] \u8fd9\u4e2a\u51fd\u6570\u5f88\u96be\u4f18\u5316\uff0c\u6240\u4ee5\u9700\u8981\u5176\u4ed6\u65b9\u6cd5\uff0c\u8fd9\u91cc\u8d85\u51fa\u4e86\u6211\u7684\u77e5\u8bc6\u8303\u56f4\uff0c\u6240\u4ee5\u5148\u653e\u5230\u4e00\u8fb9\u3002 \u5361\u5c14\u66fc\u6ee4\u6ce2 \u00b6 \u5361\u5c14\u66fc\u6ee4\u6ce2\u5bf9\u5e94\u7684\u5047\u8bbe\u96c6\uff1a \\[ \\tag{7} \\label{kalman_hypothesis} \\mathcal{H} = \\{ (p(\\mathbf{x}_0) = \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0), p(\\mathbf{x}_{t+1} \\vert \\mathbf{x}_{t}) = \\mathcal{N}(\\mathbf{A}\\mathbf{x}_t + \\mathbf{b}, \\pmb{\\Sigma}_1), \\\\ p(\\mathbf{z}\\vert\\mathbf{x}) = \\mathcal{N}(\\mathbf{C} \\mathbf{x}_t + \\mathbf{d}, \\pmb{\\Sigma}_2)) \\}. \\] \u800c\u4e14\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u5bf9\u5e94\u7684\u6700\u4f18\u6a21\u578b: \\[\\begin{cases} \\tag{8} \\label{kalman_model} p(\\mathbf{x}_0) = \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0),\\\\ p(\\mathbf{x}_{t+1} \\vert \\mathbf{x}_{t}) = \\mathcal{N}(\\mathbf{A}\\mathbf{x}_t + \\mathbf{b}, \\mathbf{Q}),\\\\ p(\\mathbf{z}\\vert\\mathbf{x}) = \\mathcal{N}(\\mathbf{C} \\mathbf{x} + \\mathbf{d}, \\mathbf{R}). \\end{cases}\\] \u5361\u5c14\u66fc\u6ee4\u6ce2\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f \uff1a\u7ed9\u5b9a\u4e00\u6761\u91c7\u6837 \\((\\mathbf{z}_0, \\mathbf{z}_1, \\ldots, \\mathbf{z}_t, \\ldots)\\) , \u4f30\u8ba1\u5206\u5e03 \\(p(\\mathbf{x}_t \\vert \\mathbf{z}_t, \\mathbf{z}_{t-1}, \\ldots, \\mathbf{z}_0)\\) \u3002 \u8fd9\u540c\u6837\u4e5f\u662f\u5bf9 \u6ee4\u6ce2 \u505a\u7684\u975e\u5e38\u4f18\u96c5\u7684 \u6570\u5b66\u5b9a\u4e49 \uff0c\u5373\u7ed9\u5b9a\u4e00\u7cfb\u5217''\u89c2\u6d4b''\uff0c\u4f30\u8ba1\u5f53\u524d\u7cfb\u7edf\u7684''\u771f\u5b9e\u72b6\u6001''\u3002 \u8fd9\u91cc\u7684\u7b26\u53f7\u786e\u5b9e\u6709\u70b9\u95ee\u9898\uff0c\u4f1a\u8ba9\u4eba\u4ea7\u751f\u5de8\u5927\u7684\u7591\u95ee\uff1a \\(\\mathbf{z}\\) \u7a76\u7adf\u6307\u7684\u662f\u6837\u672c\u7684\u503c \u548c \u8fd8\u662f\u503c\u80cc\u540e\u7684\u968f\u673a\u53d8\u91cf\u3002\u8fd9\u91cc\u6211\u5e0c\u671b\u8868\u8ff0\u6210\u62bd\u8c61\u7684\u968f\u673a\u53d8\u91cf\u3002\u5bb9\u8bb8\u6211\u518d\u5570\u55e6\u4e00\u4e0b\u3002 HMM\u6a21\u578b\u53ef\u4ee5\u8ba4\u4e3a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6982\u7387\u6d4b\u5ea6\u7a7a\u95f4 \\[ HMM = \\{\\tau = (\\mathbf{x}_0, \\mathbf{z}_0, \\mathbf{x}_1, \\mathbf{z}_1, \\ldots) \\sim p(\\tau)\\}, \\] \u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u6761\u968f\u673a\u53d8\u91cf\u7684\u5e8f\u5217\uff0c\u8fd9\u4e2a\u5e8f\u5217\u7684\u6982\u7387\u7531\u521d\u59cb\u72b6\u6001\u6982\u7387\u5206\u5e03\u3001\u9690\u53d8\u91cf\u72b6\u6001\u8f6c\u79fb\u6982\u7387\u5206\u5e03\u548c\u5b9e\u53d8\u91cf\u6761\u4ef6\u6982\u7387\u5206\u5e03\u51b3\u5b9a\u3002 \u73b0\u5728\u6211\u4eec\u5bf9\u8fd9\u4e2a\u6982\u7387\u6d4b\u5ea6\u7a7a\u95f4\u505a\u805a\u5408\u7b80\u5316 \\[ HMM_t = \\{\\tau_t = (\\mathbf{z}_0, \\mathbf{z}_1, \\ldots, \\mathbf{x}_t, \\mathbf{z}_t), \\tau_t \\sim p(\\tau)\\}. \\] \u4e0a\u9762\u5361\u5c14\u66fc\u6ee4\u6ce2\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f\u6c42\u89e3\u8fd9\u4e2a\u6982\u7387\u6d4b\u5ea6\u7a7a\u95f4 \\(HMM_t\\) \u5bf9\u5e94\u7684\u67d0\u4e2a\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\(p(\\mathbf{x}_t \\vert \\mathbf{z}_t, \\mathbf{z}_{t-1}, \\ldots, \\mathbf{z}_0)\\) \u3002\u8fd9\u91cc\u53ef\u4ee5\u7528\u5f88\u591a\u76d1\u7763\u5b66\u4e60\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5361\u5c14\u66fc\u6ee4\u6ce2\u544a\u8bc9\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u9a6c\u5c14\u53ef\u592b\u94fe\u548c\u9ad8\u65af\u5206\u5e03\u7684\u6027\u8d28\uff0c\u7528\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u8fed\u4ee3\u66f4\u65b0\u7684\u65b9\u5f0f\u6765\u6c42\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528\u8d1d\u53f6\u65af\u516c\u5f0f\u53ef\u5f97\uff1a \\[\\begin{align*} \\tag{9} \\label{step1} &p(\\mathbf{x}_t \\vert \\mathbf{z}_t, \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0)\\\\ =& \\frac{p(\\mathbf{z}_t \\vert \\mathbf{x}_t) p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0)} {\\int p(\\mathbf{z}_t \\vert \\mathbf{x}_t) p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0) \\mathrm{d}\\mathbf{x}_t}. \\end{align*}\\] \u9996\u5148\u5229\u7528\u9ad8\u65af\u5206\u5e03\u7684 \u5171\u8f6d\u6027\u8d28 \uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u76ee\u6807\u6761\u4ef6\u5206\u5e03\u4e5f\u662f\u9ad8\u65af\u5206\u5e03\uff0c\u6211\u4eec\u4e0d\u59a8\u5b9a\u4e3a \\(\\mathcal{N}(\\pmb{\\mu}_t, \\pmb{\\Sigma}_t)\\) \u3002\u6211\u4eec\u518d\u6765\u7814\u7a76\u8fd9\u4e2a \\(\\eqref{step1}\\) \u5f0f\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86 \\(p(\\mathbf{z}_t \\vert \\mathbf{x}_t)\\) \uff0c\u6240\u4ee5\u6211\u4eec\u9762\u5bf9\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u6c42\u89e3\u6761\u4ef6\u5206\u5e03 \\(p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0)\\) \uff0c\u6211\u4eec\u4f7f\u7528\u6982\u7387\u5bc6\u5ea6\u7684\u6027\u8d28\u53ef\u5f97 \\[\\begin{align*} \\tag{10} \\label{step2} & p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0)\\\\ =& \\int p(\\mathbf{x}_t \\vert \\mathbf{x}_{t-1}) p(\\mathbf{x}_{t-1} \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0) \\mathrm{d} \\mathbf{x}_{t-1}. \\end{align*}\\] \u8fd9\u91cc\u6211\u4eec\u53d1\u73b0 \\(p(\\mathbf{x}_{t-1} \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0)\\) \u9012\u5f52\u4e86\uff0c\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u6765\u4e86\u8fd9\u4e2a\u6761\u4ef6\u6982\u7387\u670d\u4ece \\(\\mathcal{N}(\\pmb{\\mu}_{t-1}, \\pmb{\\Sigma}_{t-1})\\) , \u6211\u4eec\u53c8\u5df2\u77e5 \\(p(\\mathbf{x}_{t} \\vert \\mathbf{x}_{t-1}) \\sim \\mathcal{N}(\\mathbf{A}\\mathbf{x}_{t-1}+\\mathbf{b}, \\mathbf{Q})\\) \uff0c\u90a3\u4e48\u4f7f\u7528\u9ad8\u65af\u5206\u5e03\u7684\u4e00\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u6c42\u5f97 \\(\\eqref{step2}\\) \u5f0f\u3002 \u591a\u5143\u9ad8\u65af\u5206\u5e03\u7684\u8fb9\u7f18\u5206\u5e03\u4e0e\u6761\u4ef6\u5206\u5e03 \u5df2\u77e5\u5206\u5e03\uff1a \\[\\begin{cases} \\tag{11} \\label{step3} p(\\mathbf{x}) = \\mathcal{N}(\\pmb{\\mu}, \\pmb{\\Lambda}^{-1}), \\\\ p(\\mathbf{y} \\vert \\mathbf{x}) = \\mathcal{N}(\\mathbf{A}\\mathbf{x} + \\mathbf{b}, \\pmb{L}^{-1}), \\end{cases}\\] \u6211\u4eec\u53ef\u5f97\uff1a \\[\\begin{cases} \\tag{12} \\label{step4} p(\\mathbf{y}) = \\mathcal{N}(\\mathbf{A}\\pmb{\\mu} + \\mathbf{b}, \\mathbf{L}^{-1} + \\mathbf{A}\\pmb{\\Lambda}^{-1}\\mathbf{A}^T), \\\\ p(\\mathbf{x} \\vert \\mathbf{y}) = \\mathcal{N}(\\pmb{\\Sigma}[\\mathbf{A}^T \\mathbf{L}(\\mathbf{y} - \\mathbf{b}) + \\pmb{\\Lambda\\mu}], \\pmb{\\Sigma}),\\\\ \\pmb{\\Sigma} = (\\pmb{\\Lambda} + \\mathbf{A}^T \\mathbf{L} \\mathbf{A})^{-1}. \\end{cases}\\] (\u53c2\u8003\u81ea\uff1aPRML(2006\u5e74\u51fa\u7248)\u7b2c93\u9875) \u90a3\u4e48\u6211\u4eec\u6c42\u89e3\u5f97\u5230 \\(\\eqref{step2}\\) : \\[ \\tag{13} \\label{step5} p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0) = \\mathcal{N}(\\mathbf{A}\\mu_{t-1} + \\mathbf{b}, \\mathbf{A} \\pmb{\\Sigma}_{t-1} \\mathbf{A}^T + \\mathbf{Q}). \\] \u56de\u5230\u6c42\u89e3 \\(\\eqref{step1}\\) , \u6211\u4eec\u5df2\u77e5 \\(p(\\mathbf{z} \\vert \\mathbf{x}) \\sim \\mathcal{N}(\\mathbf{C}\\mathbf{x} + \\mathbf{d}, \\mathbf{R})\\) , \u6211\u4eec\u518d\u89c4\u5b9a \\(p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0) = \\mathbf{N}(\\hat{\\pmb{\\mu_t}}, \\hat{\\pmb{\\Sigma}_t})\\) , \u90a3\u4e48\u6211\u4eec\u5e26\u5165\u516c\u5f0f\u53ef\u5f97\uff1a \\[ \\tag{14} \\label{step6} p(\\mathbf{x}_t \\vert \\mathbf{z}_t, \\mathbf{z}_{t-1}, \\ldots, \\mathbf{z}_{0}) = \\mathcal{N}(\\pmb{\\Sigma}[\\mathbf{C}^{T}\\mathbf{R}^{-1}(\\mathbf{z}_t - \\mathbf{d}) + \\hat{\\pmb{\\Sigma}}^{-1}_{t}\\hat{\\pmb{\\mu}}_t], \\pmb{\\Sigma}), \\] \u5176\u4e2d \\(\\pmb{\\Sigma} = (\\hat{\\pmb{\\Sigma}}_t^{-1} + \\mathbf{C}^T \\mathbf{R}^{-1} \\mathbf{C})^{-1}\\) \u3002 \u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u8981\u4e00\u4e2a\u5361\u5c14\u66fc\u6ee4\u6ce2\u7684\u516c\u5f0f\uff1a\u8d77\u59cb\u65f6 \\(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0\\) \uff0c\u63a5\u7740\u6bcf\u83b7\u5f97\u4e00\u4e2a\u89c2\u6d4b\u503c \\(z_t\\) \u6211\u4eec\u4f7f\u7528\u4e0b\u9762\u7684\u8fed\u4ee3\u516c\u5f0f \\[\\begin{cases} \\tag{15} \\label{kalmanfilter} \\hat{\\pmb{\\Sigma}}_t = \\mathbf{A} \\pmb{\\Sigma}_{t-1} \\mathbf{A}^T + \\mathbf{Q};\\\\ \\hat{\\pmb{\\mu}_t} = \\mathbf{A} \\pmb{\\mu}_{t-1} + \\mathbf{b}; \\\\ \\pmb{\\Sigma}_t = (\\hat{\\pmb{\\Sigma}}^{-1}_{t} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C})^{-1};\\\\ \\pmb{\\mu}_t = \\pmb{\\Sigma} [\\mathbf{C}^{T} \\mathbf{R}^{-1} (\\mathbf{z}_t - \\mathbf{d}) + \\hat{\\pmb{\\Sigma}}^{-1}_{t}\\hat{\\pmb{\\mu}}_{t}]. \\\\ \\end{cases}\\] \u8fd9\u91cc\u8fd9\u4e2a\u516c\u5f0f\u662f\u76f4\u63a5\u5e26\u5165PRML\u4e66\u4e2d\u7684\u516c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5316\u7b80\u4e00\u4e0b\uff0c\u5c31\u6210\u4e86\u6211\u4eec\u5e38\u89c1\u7684\u5361\u5c14\u66fc\u6ee4\u6ce2\u7684\u516c\u5f0f\u4e86\u3002 \\[\\begin{align*} \\tag{16} \\label{step7} &\\pmb{\\mu}_t = \\pmb{\\Sigma}_t [\\mathbf{C}^{T} \\mathbf{R}^{-1} (\\mathbf{z}_t - \\mathbf{d}) + \\hat{\\pmb{\\Sigma}}^{-1}_{t}\\hat{\\pmb{\\mu}}_{t}] \\\\ =& \\hat{\\pmb{\\mu}}_{t} + \\pmb{\\Sigma}_t [\\mathbf{C}^{T} \\mathbf{R}^{-1} (\\mathbf{z}_t - \\mathbf{d}) + \\hat{\\pmb{\\Sigma}}^{-1}_{t}\\hat{\\pmb{\\mu}}_{t} - \\pmb{\\Sigma}^{-1} \\hat{\\pmb{\\mu}}_t] \\\\ =& \\hat{\\pmb{\\mu}}_{t} + \\pmb{\\Sigma}_t [\\mathbf{C}^{T} \\mathbf{R}^{-1} (\\mathbf{z}_t - \\mathbf{d}) - \\mathbf{C}^{T} \\mathbf{R}^{-1} \\mathbf{C} \\hat{\\pmb{\\mu}}_t] \\\\ =& \\hat{\\pmb{\\mu}}_{t} + \\pmb{\\Sigma}_t \\mathbf{C}^{T} \\mathbf{R}^{-1} [(\\mathbf{z}_t - \\mathbf{d}) - \\mathbf{C} \\hat{\\pmb{\\mu}}_t] \\\\ \\end{align*}\\] \u73b0\u5728\u8fd8\u662f\u53c8\u591a\u6b21\u6c42\u9006\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u7ee7\u7eed\u7b80\u5316\u3002 \u4ee4 \\(K_t = \\pmb{\\Sigma}_t \\mathbf{C}^T \\mathbf{R}^{-1}\\) , \u63a5\u7740\u6211\u4eec\u5316\u7b80 \\(K_t\\) \u7684\u8ba1\u7b97(\u6211\u4e5f\u662f\u6839\u636e\u7ed3\u679c\u51d1\u51fa\u6765\u7684\uff0c\u5361\u5c14\u66fc\u592a\u5389\u5bb3\u4e86): \\[\\begin{align*} \\tag{17} \\label{step8} & \\mathbf{K}_t = \\pmb{\\Sigma}_t \\mathbf{C}^T \\mathbf{R}^{-1}\\\\ =& (\\hat{\\pmb{\\Sigma}}^{-1}_{t} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C})^{-1}\\mathbf{C}^T \\mathbf{R}^{-1}\\\\ =& (\\hat{\\pmb{\\Sigma}}^{-1}_{t} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C})^{-1}\\mathbf{C}^T \\mathbf{R}^{-1}\\\\ & \\cdot (\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})(\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})^{-1}\\\\ =& (\\hat{\\pmb{\\Sigma}}^{-1}_{t} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C})^{-1}\\\\ & \\cdot (\\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T + \\mathbf{C}^T)(\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})^{-1}\\\\ =& (\\hat{\\pmb{\\Sigma}}^{-1}_{t} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C})^{-1} \\cdot (\\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C} + \\hat{\\pmb{\\Sigma}}^{-1}_{t})\\\\ & \\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T(\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})^{-1}\\\\ =& \\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T(\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})^{-1}. \\end{align*}\\] \u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u4e86 \\(\\mathbf{K}_t\\) \u6211\u4eec\u5982\u4f55\u4e0d\u7528\u77e9\u9635\u6c42\u9006\u64cd\u4f5c\u5c31\u6c42\u51fa \\(\\pmb{\\Sigma}_t\\) \u5462\uff1f \\[\\begin{align*} \\tag{18} \\label{step9} &\\pmb{\\Sigma}_t = \\pmb{\\Sigma}_t \\hat{\\pmb{\\Sigma}}_t^{-1} \\hat{\\pmb{\\Sigma}}_t \\\\ =& \\pmb{\\Sigma}[\\hat{\\pmb{\\Sigma}}_t^{-1} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C} - \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C}) \\hat{\\pmb{\\Sigma}}_t \\\\ =& (\\mathbf{I} - \\pmb{\\Sigma}_t \\mathbf{C}^T \\mathbf{R}^{-1} \\mathbf{C}) \\hat{\\mathbf{\\Sigma}}_t \\\\ =& (\\mathbf{I} - \\mathbf{K}_t \\mathbf{C}) \\hat{\\mathbf{\\Sigma}}_t. \\end{align*}\\] \u7efc\u4e0a\uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u6700\u4f20\u7edf\u7684\u5361\u5c14\u66fc\u6ee4\u6ce2\u7684\u66f4\u65b0\u516c\u5f0f\uff1a \\[\\begin{cases} \\tag{19} \\label{kalmanfilter2} \\hat{\\pmb{\\Sigma}}_t = \\mathbf{A} \\pmb{\\Sigma}_{t-1} \\mathbf{A}^T + \\mathbf{Q};\\\\ \\hat{\\pmb{\\mu}_t} = \\mathbf{A} \\pmb{\\mu}_{t-1} + \\mathbf{b}; \\\\ \\pmb{K}_t = \\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T(\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})^{-1};\\\\ \\pmb{\\Sigma}_t = (\\mathbf{I} - \\mathbf{K}_t \\mathbf{C}) \\hat{\\mathbf{\\Sigma}}_t;\\\\ \\pmb{\\mu}_t = \\hat{\\pmb{\\mu}}_{t} + \\mathbf{K}_t[(\\mathbf{z}_t - \\mathbf{d}) - \\mathbf{C} \\hat{\\pmb{\\mu}}_t]. \\\\ \\end{cases}\\]","title":"Kalman Filter"},{"location":"ML/07-KalmanFilter/#_1","text":"","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2"},{"location":"ML/07-KalmanFilter/#_2","text":"\u7b80\u5355\u5b9a\u4e49\u4e00\u4e0b\u9690\u9a6c\u5c14\u53ef\u592b\u94fe\uff1a \\[ \\tag{1} \\label{HMM} \\xrightarrow[]{p(\\mathbf{x}_0)}(\\mathbf{x}_0 \\xrightarrow[]{p(\\mathbf{z}_0 \\vert \\mathbf{x}_0)}\\mathbf{z}_0) \\xrightarrow[]{p(\\mathbf{x}_1 \\vert \\mathbf{x}_0)} (\\mathbf{x}_1 \\xrightarrow[]{p(\\mathbf{z}_1 \\vert \\mathbf{x}_1)} \\mathbf{z}_1) \\rightarrow \\cdots . \\] \u5176\u4e2d \\(p(\\mathbf{x}_0)\\) \u8868\u793a\u521d\u59cb\u72b6\u6001\u6982\u7387\uff0c \\(p(\\mathbf{x}_{t+1} \\vert \\mathbf{x}_t)\\) \u8868\u793a\u9690\u53d8\u91cf\u72b6\u6001\u8f6c\u79fb\u6982\u7387\uff0c \\(p(\\mathbf{z}\\vert \\mathbf{x})\\) \u8868\u793a\u5b9e\u53d8\u91cf\u6761\u4ef6\u6982\u7387\u3002 \u5728\u9690\u9a6c\u5c14\u53ef\u592b\u94fe\u4e2d\uff0c\u6211\u4eec\u53ea\u80fd\u89c2\u6d4b\u5230\u53d8\u91cf \\((\\mathbf{z}_0 , \\mathbf{z}_1,\\ldots)\\) \u7684\u503c\uff0c\u800c\u65e0\u6cd5\u83b7\u5f97\u9690\u53d8\u91cf\u7684\u503c\u3002 \u8fd9\u4e2a\u6a21\u578b\u6709\u975e\u5e38\u5f3a\u7684\u73b0\u5b9e\u610f\u4e49\uff0c\u901a\u5e38\u52a8\u529b\u5b66\u7cfb\u7edf\u7684\u8fd0\u52a8\u662f\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u800c\u6211\u4eec\u65e0\u6cd5\u83b7\u5f97\u51c6\u786e\u7684\u52a8\u529b\u5b66\u6a21\u578b\u7684\u72b6\u6001 \\(\\mathbf{x}\\) \uff0c\u53ea\u80fd\u4f7f\u7528\u4f20\u611f\u5668\u6765\u6d4b\u91cf\u76f8\u5e94\u72b6\u6001\u7684\u4e00\u4e2a\u76f8\u5173\u91cf \\(\\mathbf{z}\\) \u3002","title":"\u9690\u9a6c\u5c14\u53ef\u592b\u94fe"},{"location":"ML/07-KalmanFilter/#_3","text":"\u5bf9\u4e8e\u968f\u673a\u8fc7\u7a0b\u7684\u5047\u8bbe\u96c6\uff0c\u6211\u4eec\u901a\u5e38\u8bbe\u5b9a\u4e3a\u9ad8\u65af\u5206\u5e03\uff1a \\[ \\tag{2} \\label{hmm_hypothesis} \\mathcal{H} = \\left\\{ (p(\\mathbf{x}_0) = \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0), p(\\mathbf{x}_{t+1} \\vert \\mathbf{x}_{t}) = \\mathcal{N}(\\pmb{\\mu}_1(\\mathbf{x}_t), \\pmb{\\Sigma}_1(\\mathbf{x}_t)), p(\\mathbf{z}\\vert\\mathbf{x}) = \\mathcal{N}(\\pmb{\\mu}_2(\\mathbf{x}), \\pmb{\\Sigma}_2)(\\mathbf{x})) \\right\\}. \\] \u6211\u4eec\u5e0c\u671b\u4ece\u5047\u8bbe\u96c6\u4e2d\u627e\u51fa\u4e00\u4e2a\u5143\u7ec4\u6700\u63a5\u8fd1\u771f\u5b9e\u7684\u72b6\u6001\u8f6c\u79fb \\((p_{\\mathcal{D}}(\\mathbf{x}_0), p_{\\mathcal{D}}(\\mathbf{x}_{t+1}\\vert \\mathbf{x}_{t}), p_{\\mathcal{D}}(\\mathbf{z} \\vert \\mathbf{x}))\\) \u3002 \u91c7\u6837\u4e00\u6761\u6837\u672c \\(\\tau = (\\mathbf{z}_0, \\mathbf{z}_1, \\ldots, \\mathbf{z}_t)\\) , \u90a3\u4e48\uff1a \\[ \\tag{3} \\label{trueprobability} p_{\\mathcal{D}}(\\tau) = \\int p_{\\mathcal{D}}(\\mathbf{x}_0) p_{\\mathcal{D}}(\\mathbf{z}_{0}\\vert \\mathbf{x}_0)p_{\\mathcal{D}}(\\mathbf{x}_{1}\\vert\\mathbf{x}_0)\\cdots p_{\\mathcal{D}}(\\mathbf{x}_{t} \\vert \\mathbf{x}_{t-1}) p_{\\mathcal{D}}(\\mathbf{z}_t \\vert \\mathbf{x}_t) \\mathrm{d}\\mathbf{x}_0\\mathrm{d}\\mathbf{x}_1\\ldots\\mathrm{d}\\mathbf{x}_t \\] \\[ \\tag{4} \\label{modelprobability} p_{\\theta}(\\tau) = \\int p_{\\theta}(\\mathbf{x}_0) p_{\\theta}(\\mathbf{z}_{0}\\vert \\mathbf{x}_0)p_{\\theta}(\\mathbf{x}_{1}\\vert\\mathbf{x}_0)\\cdots p_{\\theta}(\\mathbf{x}_{t} \\vert \\mathbf{x}_{t-1}) p_{\\theta}(\\mathbf{z}_t \\vert \\mathbf{x}_t) \\mathrm{d}\\mathbf{x}_0\\mathrm{d}\\mathbf{x}_1\\ldots\\mathrm{d}\\mathbf{x}_t \\] \u5b9a\u4e49\u635f\u5931\u51fd\u6570\u4e3a\uff1a \\[ \\tag{5} \\label{trueloss} L_{D}(\\theta) = \\mathbb{E}_{\\tau\\sim\\mathcal{D}}\\left[\\ln\\left( \\frac{p_{\\mathcal{D}}(\\tau)}{p_{\\theta}(\\tau)} \\right)\\right]. \\] \u5bf9\u5e94\u7684\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\u4e3a\uff1a \\[ \\tag{6} \\label{empirical} L_{S}(\\theta) = -\\frac{1}{m} \\sum^{m}_{i=1}\\ln\\left( {p_{\\theta}(\\tau)} \\right). \\] \u8fd9\u4e2a\u51fd\u6570\u5f88\u96be\u4f18\u5316\uff0c\u6240\u4ee5\u9700\u8981\u5176\u4ed6\u65b9\u6cd5\uff0c\u8fd9\u91cc\u8d85\u51fa\u4e86\u6211\u7684\u77e5\u8bc6\u8303\u56f4\uff0c\u6240\u4ee5\u5148\u653e\u5230\u4e00\u8fb9\u3002","title":"\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u5efa\u6a21"},{"location":"ML/07-KalmanFilter/#_4","text":"\u5361\u5c14\u66fc\u6ee4\u6ce2\u5bf9\u5e94\u7684\u5047\u8bbe\u96c6\uff1a \\[ \\tag{7} \\label{kalman_hypothesis} \\mathcal{H} = \\{ (p(\\mathbf{x}_0) = \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0), p(\\mathbf{x}_{t+1} \\vert \\mathbf{x}_{t}) = \\mathcal{N}(\\mathbf{A}\\mathbf{x}_t + \\mathbf{b}, \\pmb{\\Sigma}_1), \\\\ p(\\mathbf{z}\\vert\\mathbf{x}) = \\mathcal{N}(\\mathbf{C} \\mathbf{x}_t + \\mathbf{d}, \\pmb{\\Sigma}_2)) \\}. \\] \u800c\u4e14\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u5bf9\u5e94\u7684\u6700\u4f18\u6a21\u578b: \\[\\begin{cases} \\tag{8} \\label{kalman_model} p(\\mathbf{x}_0) = \\mathcal{N}(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0),\\\\ p(\\mathbf{x}_{t+1} \\vert \\mathbf{x}_{t}) = \\mathcal{N}(\\mathbf{A}\\mathbf{x}_t + \\mathbf{b}, \\mathbf{Q}),\\\\ p(\\mathbf{z}\\vert\\mathbf{x}) = \\mathcal{N}(\\mathbf{C} \\mathbf{x} + \\mathbf{d}, \\mathbf{R}). \\end{cases}\\] \u5361\u5c14\u66fc\u6ee4\u6ce2\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f \uff1a\u7ed9\u5b9a\u4e00\u6761\u91c7\u6837 \\((\\mathbf{z}_0, \\mathbf{z}_1, \\ldots, \\mathbf{z}_t, \\ldots)\\) , \u4f30\u8ba1\u5206\u5e03 \\(p(\\mathbf{x}_t \\vert \\mathbf{z}_t, \\mathbf{z}_{t-1}, \\ldots, \\mathbf{z}_0)\\) \u3002 \u8fd9\u540c\u6837\u4e5f\u662f\u5bf9 \u6ee4\u6ce2 \u505a\u7684\u975e\u5e38\u4f18\u96c5\u7684 \u6570\u5b66\u5b9a\u4e49 \uff0c\u5373\u7ed9\u5b9a\u4e00\u7cfb\u5217''\u89c2\u6d4b''\uff0c\u4f30\u8ba1\u5f53\u524d\u7cfb\u7edf\u7684''\u771f\u5b9e\u72b6\u6001''\u3002 \u8fd9\u91cc\u7684\u7b26\u53f7\u786e\u5b9e\u6709\u70b9\u95ee\u9898\uff0c\u4f1a\u8ba9\u4eba\u4ea7\u751f\u5de8\u5927\u7684\u7591\u95ee\uff1a \\(\\mathbf{z}\\) \u7a76\u7adf\u6307\u7684\u662f\u6837\u672c\u7684\u503c \u548c \u8fd8\u662f\u503c\u80cc\u540e\u7684\u968f\u673a\u53d8\u91cf\u3002\u8fd9\u91cc\u6211\u5e0c\u671b\u8868\u8ff0\u6210\u62bd\u8c61\u7684\u968f\u673a\u53d8\u91cf\u3002\u5bb9\u8bb8\u6211\u518d\u5570\u55e6\u4e00\u4e0b\u3002 HMM\u6a21\u578b\u53ef\u4ee5\u8ba4\u4e3a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6982\u7387\u6d4b\u5ea6\u7a7a\u95f4 \\[ HMM = \\{\\tau = (\\mathbf{x}_0, \\mathbf{z}_0, \\mathbf{x}_1, \\mathbf{z}_1, \\ldots) \\sim p(\\tau)\\}, \\] \u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u6761\u968f\u673a\u53d8\u91cf\u7684\u5e8f\u5217\uff0c\u8fd9\u4e2a\u5e8f\u5217\u7684\u6982\u7387\u7531\u521d\u59cb\u72b6\u6001\u6982\u7387\u5206\u5e03\u3001\u9690\u53d8\u91cf\u72b6\u6001\u8f6c\u79fb\u6982\u7387\u5206\u5e03\u548c\u5b9e\u53d8\u91cf\u6761\u4ef6\u6982\u7387\u5206\u5e03\u51b3\u5b9a\u3002 \u73b0\u5728\u6211\u4eec\u5bf9\u8fd9\u4e2a\u6982\u7387\u6d4b\u5ea6\u7a7a\u95f4\u505a\u805a\u5408\u7b80\u5316 \\[ HMM_t = \\{\\tau_t = (\\mathbf{z}_0, \\mathbf{z}_1, \\ldots, \\mathbf{x}_t, \\mathbf{z}_t), \\tau_t \\sim p(\\tau)\\}. \\] \u4e0a\u9762\u5361\u5c14\u66fc\u6ee4\u6ce2\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f\u6c42\u89e3\u8fd9\u4e2a\u6982\u7387\u6d4b\u5ea6\u7a7a\u95f4 \\(HMM_t\\) \u5bf9\u5e94\u7684\u67d0\u4e2a\u6761\u4ef6\u6982\u7387\u5206\u5e03 \\(p(\\mathbf{x}_t \\vert \\mathbf{z}_t, \\mathbf{z}_{t-1}, \\ldots, \\mathbf{z}_0)\\) \u3002\u8fd9\u91cc\u53ef\u4ee5\u7528\u5f88\u591a\u76d1\u7763\u5b66\u4e60\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5361\u5c14\u66fc\u6ee4\u6ce2\u544a\u8bc9\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u9a6c\u5c14\u53ef\u592b\u94fe\u548c\u9ad8\u65af\u5206\u5e03\u7684\u6027\u8d28\uff0c\u7528\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u8fed\u4ee3\u66f4\u65b0\u7684\u65b9\u5f0f\u6765\u6c42\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528\u8d1d\u53f6\u65af\u516c\u5f0f\u53ef\u5f97\uff1a \\[\\begin{align*} \\tag{9} \\label{step1} &p(\\mathbf{x}_t \\vert \\mathbf{z}_t, \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0)\\\\ =& \\frac{p(\\mathbf{z}_t \\vert \\mathbf{x}_t) p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0)} {\\int p(\\mathbf{z}_t \\vert \\mathbf{x}_t) p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0) \\mathrm{d}\\mathbf{x}_t}. \\end{align*}\\] \u9996\u5148\u5229\u7528\u9ad8\u65af\u5206\u5e03\u7684 \u5171\u8f6d\u6027\u8d28 \uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u76ee\u6807\u6761\u4ef6\u5206\u5e03\u4e5f\u662f\u9ad8\u65af\u5206\u5e03\uff0c\u6211\u4eec\u4e0d\u59a8\u5b9a\u4e3a \\(\\mathcal{N}(\\pmb{\\mu}_t, \\pmb{\\Sigma}_t)\\) \u3002\u6211\u4eec\u518d\u6765\u7814\u7a76\u8fd9\u4e2a \\(\\eqref{step1}\\) \u5f0f\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86 \\(p(\\mathbf{z}_t \\vert \\mathbf{x}_t)\\) \uff0c\u6240\u4ee5\u6211\u4eec\u9762\u5bf9\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u6c42\u89e3\u6761\u4ef6\u5206\u5e03 \\(p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0)\\) \uff0c\u6211\u4eec\u4f7f\u7528\u6982\u7387\u5bc6\u5ea6\u7684\u6027\u8d28\u53ef\u5f97 \\[\\begin{align*} \\tag{10} \\label{step2} & p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0)\\\\ =& \\int p(\\mathbf{x}_t \\vert \\mathbf{x}_{t-1}) p(\\mathbf{x}_{t-1} \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0) \\mathrm{d} \\mathbf{x}_{t-1}. \\end{align*}\\] \u8fd9\u91cc\u6211\u4eec\u53d1\u73b0 \\(p(\\mathbf{x}_{t-1} \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0)\\) \u9012\u5f52\u4e86\uff0c\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u6765\u4e86\u8fd9\u4e2a\u6761\u4ef6\u6982\u7387\u670d\u4ece \\(\\mathcal{N}(\\pmb{\\mu}_{t-1}, \\pmb{\\Sigma}_{t-1})\\) , \u6211\u4eec\u53c8\u5df2\u77e5 \\(p(\\mathbf{x}_{t} \\vert \\mathbf{x}_{t-1}) \\sim \\mathcal{N}(\\mathbf{A}\\mathbf{x}_{t-1}+\\mathbf{b}, \\mathbf{Q})\\) \uff0c\u90a3\u4e48\u4f7f\u7528\u9ad8\u65af\u5206\u5e03\u7684\u4e00\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u6c42\u5f97 \\(\\eqref{step2}\\) \u5f0f\u3002 \u591a\u5143\u9ad8\u65af\u5206\u5e03\u7684\u8fb9\u7f18\u5206\u5e03\u4e0e\u6761\u4ef6\u5206\u5e03 \u5df2\u77e5\u5206\u5e03\uff1a \\[\\begin{cases} \\tag{11} \\label{step3} p(\\mathbf{x}) = \\mathcal{N}(\\pmb{\\mu}, \\pmb{\\Lambda}^{-1}), \\\\ p(\\mathbf{y} \\vert \\mathbf{x}) = \\mathcal{N}(\\mathbf{A}\\mathbf{x} + \\mathbf{b}, \\pmb{L}^{-1}), \\end{cases}\\] \u6211\u4eec\u53ef\u5f97\uff1a \\[\\begin{cases} \\tag{12} \\label{step4} p(\\mathbf{y}) = \\mathcal{N}(\\mathbf{A}\\pmb{\\mu} + \\mathbf{b}, \\mathbf{L}^{-1} + \\mathbf{A}\\pmb{\\Lambda}^{-1}\\mathbf{A}^T), \\\\ p(\\mathbf{x} \\vert \\mathbf{y}) = \\mathcal{N}(\\pmb{\\Sigma}[\\mathbf{A}^T \\mathbf{L}(\\mathbf{y} - \\mathbf{b}) + \\pmb{\\Lambda\\mu}], \\pmb{\\Sigma}),\\\\ \\pmb{\\Sigma} = (\\pmb{\\Lambda} + \\mathbf{A}^T \\mathbf{L} \\mathbf{A})^{-1}. \\end{cases}\\] (\u53c2\u8003\u81ea\uff1aPRML(2006\u5e74\u51fa\u7248)\u7b2c93\u9875) \u90a3\u4e48\u6211\u4eec\u6c42\u89e3\u5f97\u5230 \\(\\eqref{step2}\\) : \\[ \\tag{13} \\label{step5} p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0) = \\mathcal{N}(\\mathbf{A}\\mu_{t-1} + \\mathbf{b}, \\mathbf{A} \\pmb{\\Sigma}_{t-1} \\mathbf{A}^T + \\mathbf{Q}). \\] \u56de\u5230\u6c42\u89e3 \\(\\eqref{step1}\\) , \u6211\u4eec\u5df2\u77e5 \\(p(\\mathbf{z} \\vert \\mathbf{x}) \\sim \\mathcal{N}(\\mathbf{C}\\mathbf{x} + \\mathbf{d}, \\mathbf{R})\\) , \u6211\u4eec\u518d\u89c4\u5b9a \\(p(\\mathbf{x}_t \\vert \\mathbf{z}_{t-1},\\ldots, \\mathbf{z}_0) = \\mathbf{N}(\\hat{\\pmb{\\mu_t}}, \\hat{\\pmb{\\Sigma}_t})\\) , \u90a3\u4e48\u6211\u4eec\u5e26\u5165\u516c\u5f0f\u53ef\u5f97\uff1a \\[ \\tag{14} \\label{step6} p(\\mathbf{x}_t \\vert \\mathbf{z}_t, \\mathbf{z}_{t-1}, \\ldots, \\mathbf{z}_{0}) = \\mathcal{N}(\\pmb{\\Sigma}[\\mathbf{C}^{T}\\mathbf{R}^{-1}(\\mathbf{z}_t - \\mathbf{d}) + \\hat{\\pmb{\\Sigma}}^{-1}_{t}\\hat{\\pmb{\\mu}}_t], \\pmb{\\Sigma}), \\] \u5176\u4e2d \\(\\pmb{\\Sigma} = (\\hat{\\pmb{\\Sigma}}_t^{-1} + \\mathbf{C}^T \\mathbf{R}^{-1} \\mathbf{C})^{-1}\\) \u3002 \u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u8981\u4e00\u4e2a\u5361\u5c14\u66fc\u6ee4\u6ce2\u7684\u516c\u5f0f\uff1a\u8d77\u59cb\u65f6 \\(\\pmb{\\mu}_0, \\pmb{\\Sigma}_0\\) \uff0c\u63a5\u7740\u6bcf\u83b7\u5f97\u4e00\u4e2a\u89c2\u6d4b\u503c \\(z_t\\) \u6211\u4eec\u4f7f\u7528\u4e0b\u9762\u7684\u8fed\u4ee3\u516c\u5f0f \\[\\begin{cases} \\tag{15} \\label{kalmanfilter} \\hat{\\pmb{\\Sigma}}_t = \\mathbf{A} \\pmb{\\Sigma}_{t-1} \\mathbf{A}^T + \\mathbf{Q};\\\\ \\hat{\\pmb{\\mu}_t} = \\mathbf{A} \\pmb{\\mu}_{t-1} + \\mathbf{b}; \\\\ \\pmb{\\Sigma}_t = (\\hat{\\pmb{\\Sigma}}^{-1}_{t} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C})^{-1};\\\\ \\pmb{\\mu}_t = \\pmb{\\Sigma} [\\mathbf{C}^{T} \\mathbf{R}^{-1} (\\mathbf{z}_t - \\mathbf{d}) + \\hat{\\pmb{\\Sigma}}^{-1}_{t}\\hat{\\pmb{\\mu}}_{t}]. \\\\ \\end{cases}\\] \u8fd9\u91cc\u8fd9\u4e2a\u516c\u5f0f\u662f\u76f4\u63a5\u5e26\u5165PRML\u4e66\u4e2d\u7684\u516c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5316\u7b80\u4e00\u4e0b\uff0c\u5c31\u6210\u4e86\u6211\u4eec\u5e38\u89c1\u7684\u5361\u5c14\u66fc\u6ee4\u6ce2\u7684\u516c\u5f0f\u4e86\u3002 \\[\\begin{align*} \\tag{16} \\label{step7} &\\pmb{\\mu}_t = \\pmb{\\Sigma}_t [\\mathbf{C}^{T} \\mathbf{R}^{-1} (\\mathbf{z}_t - \\mathbf{d}) + \\hat{\\pmb{\\Sigma}}^{-1}_{t}\\hat{\\pmb{\\mu}}_{t}] \\\\ =& \\hat{\\pmb{\\mu}}_{t} + \\pmb{\\Sigma}_t [\\mathbf{C}^{T} \\mathbf{R}^{-1} (\\mathbf{z}_t - \\mathbf{d}) + \\hat{\\pmb{\\Sigma}}^{-1}_{t}\\hat{\\pmb{\\mu}}_{t} - \\pmb{\\Sigma}^{-1} \\hat{\\pmb{\\mu}}_t] \\\\ =& \\hat{\\pmb{\\mu}}_{t} + \\pmb{\\Sigma}_t [\\mathbf{C}^{T} \\mathbf{R}^{-1} (\\mathbf{z}_t - \\mathbf{d}) - \\mathbf{C}^{T} \\mathbf{R}^{-1} \\mathbf{C} \\hat{\\pmb{\\mu}}_t] \\\\ =& \\hat{\\pmb{\\mu}}_{t} + \\pmb{\\Sigma}_t \\mathbf{C}^{T} \\mathbf{R}^{-1} [(\\mathbf{z}_t - \\mathbf{d}) - \\mathbf{C} \\hat{\\pmb{\\mu}}_t] \\\\ \\end{align*}\\] \u73b0\u5728\u8fd8\u662f\u53c8\u591a\u6b21\u6c42\u9006\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u7ee7\u7eed\u7b80\u5316\u3002 \u4ee4 \\(K_t = \\pmb{\\Sigma}_t \\mathbf{C}^T \\mathbf{R}^{-1}\\) , \u63a5\u7740\u6211\u4eec\u5316\u7b80 \\(K_t\\) \u7684\u8ba1\u7b97(\u6211\u4e5f\u662f\u6839\u636e\u7ed3\u679c\u51d1\u51fa\u6765\u7684\uff0c\u5361\u5c14\u66fc\u592a\u5389\u5bb3\u4e86): \\[\\begin{align*} \\tag{17} \\label{step8} & \\mathbf{K}_t = \\pmb{\\Sigma}_t \\mathbf{C}^T \\mathbf{R}^{-1}\\\\ =& (\\hat{\\pmb{\\Sigma}}^{-1}_{t} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C})^{-1}\\mathbf{C}^T \\mathbf{R}^{-1}\\\\ =& (\\hat{\\pmb{\\Sigma}}^{-1}_{t} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C})^{-1}\\mathbf{C}^T \\mathbf{R}^{-1}\\\\ & \\cdot (\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})(\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})^{-1}\\\\ =& (\\hat{\\pmb{\\Sigma}}^{-1}_{t} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C})^{-1}\\\\ & \\cdot (\\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T + \\mathbf{C}^T)(\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})^{-1}\\\\ =& (\\hat{\\pmb{\\Sigma}}^{-1}_{t} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C})^{-1} \\cdot (\\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C} + \\hat{\\pmb{\\Sigma}}^{-1}_{t})\\\\ & \\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T(\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})^{-1}\\\\ =& \\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T(\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})^{-1}. \\end{align*}\\] \u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u4e86 \\(\\mathbf{K}_t\\) \u6211\u4eec\u5982\u4f55\u4e0d\u7528\u77e9\u9635\u6c42\u9006\u64cd\u4f5c\u5c31\u6c42\u51fa \\(\\pmb{\\Sigma}_t\\) \u5462\uff1f \\[\\begin{align*} \\tag{18} \\label{step9} &\\pmb{\\Sigma}_t = \\pmb{\\Sigma}_t \\hat{\\pmb{\\Sigma}}_t^{-1} \\hat{\\pmb{\\Sigma}}_t \\\\ =& \\pmb{\\Sigma}[\\hat{\\pmb{\\Sigma}}_t^{-1} + \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C} - \\mathbf{C}^T \\mathbf{R}^{-1}\\mathbf{C}) \\hat{\\pmb{\\Sigma}}_t \\\\ =& (\\mathbf{I} - \\pmb{\\Sigma}_t \\mathbf{C}^T \\mathbf{R}^{-1} \\mathbf{C}) \\hat{\\mathbf{\\Sigma}}_t \\\\ =& (\\mathbf{I} - \\mathbf{K}_t \\mathbf{C}) \\hat{\\mathbf{\\Sigma}}_t. \\end{align*}\\] \u7efc\u4e0a\uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u6700\u4f20\u7edf\u7684\u5361\u5c14\u66fc\u6ee4\u6ce2\u7684\u66f4\u65b0\u516c\u5f0f\uff1a \\[\\begin{cases} \\tag{19} \\label{kalmanfilter2} \\hat{\\pmb{\\Sigma}}_t = \\mathbf{A} \\pmb{\\Sigma}_{t-1} \\mathbf{A}^T + \\mathbf{Q};\\\\ \\hat{\\pmb{\\mu}_t} = \\mathbf{A} \\pmb{\\mu}_{t-1} + \\mathbf{b}; \\\\ \\pmb{K}_t = \\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T(\\mathbf{C}\\hat{\\pmb{\\Sigma}}_t \\mathbf{C}^T +\\mathbf{R})^{-1};\\\\ \\pmb{\\Sigma}_t = (\\mathbf{I} - \\mathbf{K}_t \\mathbf{C}) \\hat{\\mathbf{\\Sigma}}_t;\\\\ \\pmb{\\mu}_t = \\hat{\\pmb{\\mu}}_{t} + \\mathbf{K}_t[(\\mathbf{z}_t - \\mathbf{d}) - \\mathbf{C} \\hat{\\pmb{\\mu}}_t]. \\\\ \\end{cases}\\]","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2"},{"location":"ML/08-Classification/","text":"\u5206\u7c7b\u95ee\u9898 \u00b6 \u95ee\u9898\u63cf\u8ff0 \u00b6 \u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u6211\u4eec\u80fd\u83b7\u5f97\u4e00\u7cfb\u5217\u7684\u6837\u672c \\(\\mathcal{S} = \\left\\{ (\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, y_m) \\right\\}\\) \u3002 \u5176\u4e2d \\(\\mathbf{x} \\in \\mathbb{R}^d\\) \u5e76\u4e14 \\(y\\) \u5c5e\u4e8e\u67d0\u4e2a\u6709\u9650\u7684\u79bb\u6563\u96c6\u5408\uff0c\u4f8b\u5982\uff1a \\(y \\in \\{0, 1\\}\\) , \\(y \\in \\{-1, 1\\}\\) \u6216\u8005 \\(y \\in \\{1, 2, 3, \\ldots, k\\}\\) \u3002\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u6837\u672c\u670d\u4ece\u67d0\u4e2a\u672a\u77e5\u7684\u8054\u5408\u5206\u5e03, \u5373 \\((\\mathbf{x}, y) \\sim \\mathcal{D}\\) \u3002\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u5bf9\u5e94\u7684\u672a\u77e5\u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}} (y \\vert \\mathbf{x})\\) , \u7528\u6765\u6307\u5bfc\u6211\u4eec\u5728\u77e5\u9053 \\(\\mathbf{x}\\) \u7684\u60c5\u51b5\u4e0b\u9884\u6d4b \\(y\\) \u503c\u3002\u5982\u679c \\(y\\) \u6240\u5728\u96c6\u5408\u7684\u5927\u5c0f\u4e3a2\uff0c\u90a3\u6211\u4eec\u5c31\u79f0\u8fd9\u4e2a\u95ee\u9898\u4e3a\u4e8c\u5206\u7c7b\u95ee\u9898\u3002 \u901a\u5e38\u6211\u4eec\u4f1a\u6784\u9020\u4e00\u4e2a\u5047\u8bbe\u96c6\uff1a \\[ \\tag{1} \\label{hypothesis1} \\mathcal{H} = \\left\\{ p_{\\theta}(y \\vert \\mathbf{x}) \\right\\}. \\] SVM \u5c31\u662f\u7528\u6765\u89e3\u51b3\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u5b83\u5bf9\u5e94\u7684\u5047\u8bbe\u96c6\u4e3a \\[ \\tag{2} \\label{svmhypothesis} \\mathcal{H}_{\\theta} = \\left\\{ h(\\mathbf{x}) = sign(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_{\\theta}) \\right\\}, \\] \u8fd9\u91cc\u5bf9\u5e94\u7684\u5206\u5e03\u662f \\(P\\{y = h(\\mathbf{x}) \\} = 1\\) \u3002 \u903b\u8f91\u56de\u5f52 \u00b6 \u903b\u8f91\u56de\u5f52\u89e3\u51b3\u7684\u95ee\u9898\u662f \\(y \\in \\{-1, 1\\}\\) . \u5b83\u4f7f\u7528\u7684\u5047\u8bbe\u96c6\u590d\u5408\u4e86\u7ebf\u6027\u51fd\u6570\u4e0esigmoid\u51fd\u6570: \\[ \\tag{3} \\label{logichypothesis} \\mathcal{H}_{\\theta} = \\left\\{ P_{\\theta}(y = 1 \\vert \\mathbf{x}) = \\frac{1}{1 + exp(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)} \\right\\}. \\] \u6211\u4eec\u4f9d\u65e7\u7528KL\u8ddd\u79bb\u6765\u8861\u91cf\u4e24\u4e2a\u5206\u5e03\u4e4b\u95f4\u7684\u8ddd\u79bb\uff1a \\[ \\tag{4} \\label{trueLossOfLogic} L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{P_{\\mathcal{D}}(\\mathbf{x})}\\left\\{\\mathbb{E}_{P_\\mathcal{D}(y \\vert \\mathbf{x})}\\left[\\ln \\frac{P_{\\mathcal{D}}(y \\vert \\mathbf{x})}{P_{\\theta}(y \\vert \\mathbf{x})}\\right]\\right\\}. \\] \u5bf9\u5e94\u7684\u7ecf\u9a8c\u635f\u5931\u51fd\u6570: \\[ \\tag{5} \\label{empiricalLossOfLogic} L_{S}(\\theta) = - \\frac{1}{m} \\sum^{m}_{i=1} \\ln P_{\\theta}(y_i \\vert \\mathbf{x}_i). \\] \u56e0\u4e3asigmoid\u51fd\u6570\u6709\u4e00\u4e2a\u7279\u522b\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u6bd4\u8f83\u6d41\u884c\u5427\uff1a \\[\\begin{align*} &P_{\\theta}(y = -1 \\vert \\mathbf{x}) \\\\ =& 1 - \\frac{1}{1 + exp(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)} \\\\ =& \\frac{exp(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)}{1 + exp(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)} \\\\ =& \\frac{1}{1 + exp[-(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)]}\\\\ \\tag{6} \\end{align*}\\] \u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\u6539\u5199\u6210\uff1a \\[ \\tag{7} L_{S}(\\theta) = \\frac{1}{m} \\sum^{m}_{i=1} \\ln \\{1 + exp[y(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)]\\}. \\] \u6211\u8fd9\u91cc\u4e0d\u7ea0\u7ed3\u6b63\u8d1f\u53f7\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u4e0d\u6d89\u53ca\u672c\u8d28\u3002\u6211\u8981\u5410\u69fd\u7684\u662f\uff0c\u53ea\u662f\u56e0\u4e3a Sigmoid \u51fd\u6570\u7684\u7279\u522b\u6027\uff0c\u800c\u4e14\u53ea\u662f\u80fd\u591f\u7b80\u5316\u635f\u5931\u51fd\u6570\uff0c\u5c31\u53d7\u5230\u5f88\u591a\u7684\u5173\u6ce8\uff0c\u8fd9\u79cd\u4e8b\u60c5\u5c31\u5f88\u79bb\u8c31\u3002\u5bf9\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u7ebf\u6027\u51fd\u6570\u52a0 Sigmoid \u4ee3\u8868\u7684\u5206\u5e03 \\(P_\\theta(y \\vert \\mathbf{x})\\) \u5b9e\u5728\u662f\u592a\u5c40\u9650\u4e86\u3002 \u591a\u5206\u7c7b\u95ee\u9898 \u00b6 \u5404\u79cd\u6559\u6750\u4e2d\uff0c\u591a\u5206\u7c7b\u95ee\u9898\u603b\u662f\u7ea0\u7ed3\u5728 ''\u4e00\u5bf9\u4e00\u7b56\u7565'' \u548c ''\u4e00\u5bf9\u591a\u7b56\u7565''\uff0c\u5176\u5b9e\u5c31\u662f\u94bb\u4e86\u725b\u89d2\u5c16\uff0c\u60f3\u7528\u7ebf\u6027\u51fd\u6570\u6765\u89e3\u51b3\u591a\u5206\u7c7b\u95ee\u9898\u3002 \u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u5728\u7406\u8bba\u5206\u6790\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u642c\u7528\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u5206\u6790\u7ed3\u679c\uff0c\u4f46\u662f\u5b9e\u9645\u4e2d\u662f\u975e\u5e38\u5c40\u9650\uff0c\u6211\u76f8\u4fe1\u73b0\u5728\u7edd\u5927\u591a\u6570\u4eba\u6ca1\u6709\u7528\u7ebf\u6027\u51fd\u6570\u6765\u89e3\u51b3\u591a\u5206\u7c7b\u95ee\u9898\u4e86\u3002\u5f88\u591a\u4eba\u60ca\u8bb6\u795e\u7ecf\u7f51\u7edc\u7684\u9ad8\u6548\uff0c\u6211\u60ca\u8bb6\u7684\u662f\uff0c\u5f53\u5e74\u4eba\u4eec\u4f1a\u7528\u8d85\u5e73\u9762\u89e3\u51b3\u591a\u5206\u7c7b\u95ee\u9898\u3002 \u5bf9\u4e8ek\u5206\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u66f4\u5e0c\u671b\u4f7f\u7528\u67d0\u4e2a\u51fd\u6570 \\(f: \\mathbf{x} \\rightarrow \\pmb{\\mathcal{P}}\\) , \u5176\u4e2d \\(\\pmb{\\mathcal{P}}\\) \u662f\u4e00\u4e2a\u79bb\u6563\u6982\u7387\u5206\u5e03\uff0c\u5373 \\(\\pmb{\\mathcal{P}} \\in \\mathbb{R}^{k}\\) , \\(\\pmb{\\mathcal{P}} \\succeq \\pmb{0}\\) \u5e76\u4e14 \\(\\sum^{k}_{i=1} \\mathcal{P}_i = 1\\) \u3002\u90a3\u4e48\u5bf9\u5e94\u7684\u5047\u8bbe\u96c6\u5c31\u53d8\u6210\u4e86: \\[ \\tag{8} \\label{khypothesis} \\mathcal{H} = \\left\\{ P_{\\theta}(y \\vert \\mathbf{x}) \\right\\}. \\] \u8fd9\u4e2a\u5047\u8bbe\u96c6\u5c31\u76f8\u5f53\u5408\u7406\u4e86\u3002 \u6211\u4eec\u4f9d\u65e7\u53ef\u4ee5\u7528 KL \u8ddd\u79bb\u6765\u6784\u9020\u4e00\u4e2a\u635f\u5931\u51fd\u6570: \\[ \\tag{9} \\label{ktrueloss} L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{p_{\\mathcal{D}}(\\mathbf{x})} \\left\\{ \\mathbb{E}_{P_{\\mathcal{D}}(y \\vert \\mathbf{x})} \\left[ \\ln \\frac{P_{\\mathcal{D}}(y \\vert \\mathbf{x})}{P_{\\theta}(y \\vert \\mathbf{x})} \\right]. \\right\\} \\] \u5bf9\u5e94\u7684\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u4e3a: \\[ \\tag{10} \\label{kempiricalloss} L_{S}(\\theta) = -\\frac{1}{m} \\sum^{m}_{i=1} \\ln P_{\\theta}(y_i \\vert \\mathbf{x}_i). \\] \u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u4e00\u822c\u7684\u8f93\u51fa\u4e3a \\(\\{z_1, z_2, \\ldots, z_k\\}\\) \u5e76\u4e0d\u6ee1\u8db3\u6982\u7387\u5206\u5e03\u7684\u8981\u6c42\u3002 \u8fd9\u91cc\u6700\u76f4\u89c9\u7684\u65b9\u6cd5\u662f\uff1a\u6211\u4eec\u9884\u6d4b \\(y = {\\arg\\max}_i z_i\\) \uff0c \u8fd9\u79cd\u65b9\u6cd5\u76f8\u5f53\u4e8e\u628a\u5047\u8bbe\u96c6\u53c8\u7b80\u5316\u6210\u4e86\u786e\u5b9a\u6027\u5206\u7c7b\u51fd\u6570\u7684\u96c6\u5408\uff0c \u4e00\u65b9\u9762\u964d\u4f4e\u4e86\u5b83\u7684\u8868\u8fbe\u80fd\u529b, \u53e6\u4e00\u65b9\u9762\u5f53\u6211\u4eec\u505a\u51fa\u9519\u8bef\u9884\u6d4b\u65f6\uff0c \\(P_{\\theta} = 0\\) , \u6211\u4eec\u65e0\u6cd5\u518d\u4f7f\u7528 \\(\\eqref{kempiricalloss}\\) \u5f0f\u4f5c\u4e3a\u6211\u4eec\u7684\u635f\u5931\u51fd\u6570\u3002 \u901a\u5e38\u6211\u4eec\u901a\u8fc7\u4e00\u5c42 Softmax \u5c42 \u5b9e\u73b0\u5f52\u4e00\u5316\uff1a \\[ \\tag{11} \\label{sigmoid} p(y = i \\vert \\mathbf{x}) = \\frac{exp(z_i)}{\\sum^{k}_{j=1} exp(z_j) }. \\] \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u8bb2\u4e00\u4e0b \\({\\arg\\max}_i z_i\\) \u548c Softmax \u7684\u8054\u7cfb\u3002 \u9996\u5148\u6211\u4eec\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u6765\u7406\u89e3\u4e00\u4e0b \\({\\arg\\max}_i z_i\\) \u64cd\u4f5c\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 \\(\\{z_1, z_2, \\ldots z_k\\}\\) , \u6211\u4eec\u5b9e\u9645\u60f3\u4f18\u5316\uff1a \\[ \\tag{12} \\label{argmax} \\max_{P_\\theta(z)} \\mathbb{E}_{P_\\theta(z_i)}[z_i] = \\sum^{k}_{i=1} z_i P_{\\theta}(z_i). \\] \u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u81ea\u7136\u662f \\(P_{\\theta}(z = \\max z_i) = 1\\) \u3002 \u90a3\u4e48\uff0cSoftmax \u5bf9\u5e94\u7684\u4f18\u5316\u95ee\u9898\u662f\u589e\u52a0\u4e86\u4e00\u4e2a\u71b5\u7684\u60e9\u7f5a\u9879\uff1a \\[ \\tag{13} \\label{softmax} \\max_{P_\\theta(z)} \\sum^{k}_{i=1} z_i P_{\\theta}(z_i) - \\alpha \\sum^{k}_{i=1} P_{\\theta}(z_i) \\ln P_{\\theta}(z_i). \\] \u6216\u8005\u53ef\u4ee5\u5199\u6210 \\[ \\tag{14} \\label{softmax2} \\max_{\\mathbf{P}} \\sum^{k}_{i=1} z_i P_i - \\alpha \\sum^{k}_{i=1} P_i \\ln P_i, \\quad \\forall i, P_i > 0, \\sum^{k}_{i=1} P_i = 1. \\] \u5199\u6210\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u5f62\u5f0f\u53ef\u5f97 \\[ \\tag{15} \\label{softmax3} \\max_{\\mathbf{P}} \\min_{\\lambda \\ne 0} \\sum^{k}_{i=1} z_i P_i - \\alpha \\sum^{k}_{i=1} P_i \\ln P_i + \\lambda \\left(\\sum^{k}_{i=1} P_i - 1\\right), \\] \u5bf9\u5e94\u7684\u5bf9\u5076\u5f62\u5f0f\u662f \\[ \\tag{16} \\label{softmax4} \\min_{\\lambda \\ne 0} \\max_{\\mathbf{P}} \\sum^{k}_{i=1} z_i P_i - \\alpha \\sum^{k}_{i=1} P_i \\ln P_i + \\lambda \\left(\\sum^{k}_{i=1} P_i - 1\\right). \\] \u9996\u5148\u5bf9\u5185\u90e8\u5b50\u95ee\u9898\u8fdb\u884c\u4f18\u5316\u53ef\u5f97\uff1a \\[ \\tag{17} \\label{softmax5} \\alpha \\ln P^*_i = z_i - \\alpha + \\lambda \\Rightarrow P^*_i = \\exp \\left\\{ \\frac{z_i - \\alpha + \\lambda}{\\alpha} \\right\\}. \\] \u5047\u8bbe\u6211\u4eec\u83b7\u5f97\u4e86 \\(\\lambda^*\\) \uff0c\u90a3\u4e48\u6839\u636e\u6982\u7387\u7684\u6027\u8d28\u53ef\u5f97\uff1a \\[ \\tag{18} \\label{softmax6} \\sum^{k}_{i = 1} \\exp\\left\\{ \\frac{z_i - \\alpha + \\lambda^*}{\\alpha} \\right\\} = \\sum^{k}_{i=1} P^*_i = 1, \\\\ \\Rightarrow exp \\left\\{ \\frac{-\\alpha + \\lambda^*}{\\alpha} \\right\\} = \\frac{1}{\\sum^{k}_{i=1}exp \\left\\{ z_i / \\alpha \\right\\}}. \\] \u5e26\u5165\u5230 \\(\\eqref{softmax5}\\) \u5f0f\uff0c\u6211\u4eec\u53ef\u5f97\uff1a \\[ \\tag{19} \\label{softmax7} P^*_i = \\frac{exp(z_i/\\alpha)}{\\sum^{k}_{i=1}exp(z_i/\\alpha)}. \\] \u56e0\u5b50 \\(\\alpha\\) \u53ef\u4ee5\u5305\u542b\u5230\u795e\u7ecf\u7f51\u7edc\u7684\u524d\u9762\u5c42\u4e2d\uff0c\u6240\u4ee5 Softmax \u5c42\u56fa\u5b9a \\(\\alpha=1\\) \u3002","title":"Classification"},{"location":"ML/08-Classification/#_1","text":"","title":"\u5206\u7c7b\u95ee\u9898"},{"location":"ML/08-Classification/#_2","text":"\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u6211\u4eec\u80fd\u83b7\u5f97\u4e00\u7cfb\u5217\u7684\u6837\u672c \\(\\mathcal{S} = \\left\\{ (\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, y_m) \\right\\}\\) \u3002 \u5176\u4e2d \\(\\mathbf{x} \\in \\mathbb{R}^d\\) \u5e76\u4e14 \\(y\\) \u5c5e\u4e8e\u67d0\u4e2a\u6709\u9650\u7684\u79bb\u6563\u96c6\u5408\uff0c\u4f8b\u5982\uff1a \\(y \\in \\{0, 1\\}\\) , \\(y \\in \\{-1, 1\\}\\) \u6216\u8005 \\(y \\in \\{1, 2, 3, \\ldots, k\\}\\) \u3002\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u6837\u672c\u670d\u4ece\u67d0\u4e2a\u672a\u77e5\u7684\u8054\u5408\u5206\u5e03, \u5373 \\((\\mathbf{x}, y) \\sim \\mathcal{D}\\) \u3002\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u5bf9\u5e94\u7684\u672a\u77e5\u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}} (y \\vert \\mathbf{x})\\) , \u7528\u6765\u6307\u5bfc\u6211\u4eec\u5728\u77e5\u9053 \\(\\mathbf{x}\\) \u7684\u60c5\u51b5\u4e0b\u9884\u6d4b \\(y\\) \u503c\u3002\u5982\u679c \\(y\\) \u6240\u5728\u96c6\u5408\u7684\u5927\u5c0f\u4e3a2\uff0c\u90a3\u6211\u4eec\u5c31\u79f0\u8fd9\u4e2a\u95ee\u9898\u4e3a\u4e8c\u5206\u7c7b\u95ee\u9898\u3002 \u901a\u5e38\u6211\u4eec\u4f1a\u6784\u9020\u4e00\u4e2a\u5047\u8bbe\u96c6\uff1a \\[ \\tag{1} \\label{hypothesis1} \\mathcal{H} = \\left\\{ p_{\\theta}(y \\vert \\mathbf{x}) \\right\\}. \\] SVM \u5c31\u662f\u7528\u6765\u89e3\u51b3\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u5b83\u5bf9\u5e94\u7684\u5047\u8bbe\u96c6\u4e3a \\[ \\tag{2} \\label{svmhypothesis} \\mathcal{H}_{\\theta} = \\left\\{ h(\\mathbf{x}) = sign(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_{\\theta}) \\right\\}, \\] \u8fd9\u91cc\u5bf9\u5e94\u7684\u5206\u5e03\u662f \\(P\\{y = h(\\mathbf{x}) \\} = 1\\) \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"ML/08-Classification/#_3","text":"\u903b\u8f91\u56de\u5f52\u89e3\u51b3\u7684\u95ee\u9898\u662f \\(y \\in \\{-1, 1\\}\\) . \u5b83\u4f7f\u7528\u7684\u5047\u8bbe\u96c6\u590d\u5408\u4e86\u7ebf\u6027\u51fd\u6570\u4e0esigmoid\u51fd\u6570: \\[ \\tag{3} \\label{logichypothesis} \\mathcal{H}_{\\theta} = \\left\\{ P_{\\theta}(y = 1 \\vert \\mathbf{x}) = \\frac{1}{1 + exp(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)} \\right\\}. \\] \u6211\u4eec\u4f9d\u65e7\u7528KL\u8ddd\u79bb\u6765\u8861\u91cf\u4e24\u4e2a\u5206\u5e03\u4e4b\u95f4\u7684\u8ddd\u79bb\uff1a \\[ \\tag{4} \\label{trueLossOfLogic} L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{P_{\\mathcal{D}}(\\mathbf{x})}\\left\\{\\mathbb{E}_{P_\\mathcal{D}(y \\vert \\mathbf{x})}\\left[\\ln \\frac{P_{\\mathcal{D}}(y \\vert \\mathbf{x})}{P_{\\theta}(y \\vert \\mathbf{x})}\\right]\\right\\}. \\] \u5bf9\u5e94\u7684\u7ecf\u9a8c\u635f\u5931\u51fd\u6570: \\[ \\tag{5} \\label{empiricalLossOfLogic} L_{S}(\\theta) = - \\frac{1}{m} \\sum^{m}_{i=1} \\ln P_{\\theta}(y_i \\vert \\mathbf{x}_i). \\] \u56e0\u4e3asigmoid\u51fd\u6570\u6709\u4e00\u4e2a\u7279\u522b\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u6bd4\u8f83\u6d41\u884c\u5427\uff1a \\[\\begin{align*} &P_{\\theta}(y = -1 \\vert \\mathbf{x}) \\\\ =& 1 - \\frac{1}{1 + exp(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)} \\\\ =& \\frac{exp(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)}{1 + exp(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)} \\\\ =& \\frac{1}{1 + exp[-(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)]}\\\\ \\tag{6} \\end{align*}\\] \u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\u6539\u5199\u6210\uff1a \\[ \\tag{7} L_{S}(\\theta) = \\frac{1}{m} \\sum^{m}_{i=1} \\ln \\{1 + exp[y(\\mathbf{w}^T_{\\theta} \\mathbf{x} + b_\\theta)]\\}. \\] \u6211\u8fd9\u91cc\u4e0d\u7ea0\u7ed3\u6b63\u8d1f\u53f7\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u4e0d\u6d89\u53ca\u672c\u8d28\u3002\u6211\u8981\u5410\u69fd\u7684\u662f\uff0c\u53ea\u662f\u56e0\u4e3a Sigmoid \u51fd\u6570\u7684\u7279\u522b\u6027\uff0c\u800c\u4e14\u53ea\u662f\u80fd\u591f\u7b80\u5316\u635f\u5931\u51fd\u6570\uff0c\u5c31\u53d7\u5230\u5f88\u591a\u7684\u5173\u6ce8\uff0c\u8fd9\u79cd\u4e8b\u60c5\u5c31\u5f88\u79bb\u8c31\u3002\u5bf9\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u7ebf\u6027\u51fd\u6570\u52a0 Sigmoid \u4ee3\u8868\u7684\u5206\u5e03 \\(P_\\theta(y \\vert \\mathbf{x})\\) \u5b9e\u5728\u662f\u592a\u5c40\u9650\u4e86\u3002","title":"\u903b\u8f91\u56de\u5f52"},{"location":"ML/08-Classification/#_4","text":"\u5404\u79cd\u6559\u6750\u4e2d\uff0c\u591a\u5206\u7c7b\u95ee\u9898\u603b\u662f\u7ea0\u7ed3\u5728 ''\u4e00\u5bf9\u4e00\u7b56\u7565'' \u548c ''\u4e00\u5bf9\u591a\u7b56\u7565''\uff0c\u5176\u5b9e\u5c31\u662f\u94bb\u4e86\u725b\u89d2\u5c16\uff0c\u60f3\u7528\u7ebf\u6027\u51fd\u6570\u6765\u89e3\u51b3\u591a\u5206\u7c7b\u95ee\u9898\u3002 \u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u5728\u7406\u8bba\u5206\u6790\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u642c\u7528\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u5206\u6790\u7ed3\u679c\uff0c\u4f46\u662f\u5b9e\u9645\u4e2d\u662f\u975e\u5e38\u5c40\u9650\uff0c\u6211\u76f8\u4fe1\u73b0\u5728\u7edd\u5927\u591a\u6570\u4eba\u6ca1\u6709\u7528\u7ebf\u6027\u51fd\u6570\u6765\u89e3\u51b3\u591a\u5206\u7c7b\u95ee\u9898\u4e86\u3002\u5f88\u591a\u4eba\u60ca\u8bb6\u795e\u7ecf\u7f51\u7edc\u7684\u9ad8\u6548\uff0c\u6211\u60ca\u8bb6\u7684\u662f\uff0c\u5f53\u5e74\u4eba\u4eec\u4f1a\u7528\u8d85\u5e73\u9762\u89e3\u51b3\u591a\u5206\u7c7b\u95ee\u9898\u3002 \u5bf9\u4e8ek\u5206\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u66f4\u5e0c\u671b\u4f7f\u7528\u67d0\u4e2a\u51fd\u6570 \\(f: \\mathbf{x} \\rightarrow \\pmb{\\mathcal{P}}\\) , \u5176\u4e2d \\(\\pmb{\\mathcal{P}}\\) \u662f\u4e00\u4e2a\u79bb\u6563\u6982\u7387\u5206\u5e03\uff0c\u5373 \\(\\pmb{\\mathcal{P}} \\in \\mathbb{R}^{k}\\) , \\(\\pmb{\\mathcal{P}} \\succeq \\pmb{0}\\) \u5e76\u4e14 \\(\\sum^{k}_{i=1} \\mathcal{P}_i = 1\\) \u3002\u90a3\u4e48\u5bf9\u5e94\u7684\u5047\u8bbe\u96c6\u5c31\u53d8\u6210\u4e86: \\[ \\tag{8} \\label{khypothesis} \\mathcal{H} = \\left\\{ P_{\\theta}(y \\vert \\mathbf{x}) \\right\\}. \\] \u8fd9\u4e2a\u5047\u8bbe\u96c6\u5c31\u76f8\u5f53\u5408\u7406\u4e86\u3002 \u6211\u4eec\u4f9d\u65e7\u53ef\u4ee5\u7528 KL \u8ddd\u79bb\u6765\u6784\u9020\u4e00\u4e2a\u635f\u5931\u51fd\u6570: \\[ \\tag{9} \\label{ktrueloss} L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{p_{\\mathcal{D}}(\\mathbf{x})} \\left\\{ \\mathbb{E}_{P_{\\mathcal{D}}(y \\vert \\mathbf{x})} \\left[ \\ln \\frac{P_{\\mathcal{D}}(y \\vert \\mathbf{x})}{P_{\\theta}(y \\vert \\mathbf{x})} \\right]. \\right\\} \\] \u5bf9\u5e94\u7684\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u4e3a: \\[ \\tag{10} \\label{kempiricalloss} L_{S}(\\theta) = -\\frac{1}{m} \\sum^{m}_{i=1} \\ln P_{\\theta}(y_i \\vert \\mathbf{x}_i). \\] \u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u4e00\u822c\u7684\u8f93\u51fa\u4e3a \\(\\{z_1, z_2, \\ldots, z_k\\}\\) \u5e76\u4e0d\u6ee1\u8db3\u6982\u7387\u5206\u5e03\u7684\u8981\u6c42\u3002 \u8fd9\u91cc\u6700\u76f4\u89c9\u7684\u65b9\u6cd5\u662f\uff1a\u6211\u4eec\u9884\u6d4b \\(y = {\\arg\\max}_i z_i\\) \uff0c \u8fd9\u79cd\u65b9\u6cd5\u76f8\u5f53\u4e8e\u628a\u5047\u8bbe\u96c6\u53c8\u7b80\u5316\u6210\u4e86\u786e\u5b9a\u6027\u5206\u7c7b\u51fd\u6570\u7684\u96c6\u5408\uff0c \u4e00\u65b9\u9762\u964d\u4f4e\u4e86\u5b83\u7684\u8868\u8fbe\u80fd\u529b, \u53e6\u4e00\u65b9\u9762\u5f53\u6211\u4eec\u505a\u51fa\u9519\u8bef\u9884\u6d4b\u65f6\uff0c \\(P_{\\theta} = 0\\) , \u6211\u4eec\u65e0\u6cd5\u518d\u4f7f\u7528 \\(\\eqref{kempiricalloss}\\) \u5f0f\u4f5c\u4e3a\u6211\u4eec\u7684\u635f\u5931\u51fd\u6570\u3002 \u901a\u5e38\u6211\u4eec\u901a\u8fc7\u4e00\u5c42 Softmax \u5c42 \u5b9e\u73b0\u5f52\u4e00\u5316\uff1a \\[ \\tag{11} \\label{sigmoid} p(y = i \\vert \\mathbf{x}) = \\frac{exp(z_i)}{\\sum^{k}_{j=1} exp(z_j) }. \\] \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u8bb2\u4e00\u4e0b \\({\\arg\\max}_i z_i\\) \u548c Softmax \u7684\u8054\u7cfb\u3002 \u9996\u5148\u6211\u4eec\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u6765\u7406\u89e3\u4e00\u4e0b \\({\\arg\\max}_i z_i\\) \u64cd\u4f5c\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 \\(\\{z_1, z_2, \\ldots z_k\\}\\) , \u6211\u4eec\u5b9e\u9645\u60f3\u4f18\u5316\uff1a \\[ \\tag{12} \\label{argmax} \\max_{P_\\theta(z)} \\mathbb{E}_{P_\\theta(z_i)}[z_i] = \\sum^{k}_{i=1} z_i P_{\\theta}(z_i). \\] \u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u81ea\u7136\u662f \\(P_{\\theta}(z = \\max z_i) = 1\\) \u3002 \u90a3\u4e48\uff0cSoftmax \u5bf9\u5e94\u7684\u4f18\u5316\u95ee\u9898\u662f\u589e\u52a0\u4e86\u4e00\u4e2a\u71b5\u7684\u60e9\u7f5a\u9879\uff1a \\[ \\tag{13} \\label{softmax} \\max_{P_\\theta(z)} \\sum^{k}_{i=1} z_i P_{\\theta}(z_i) - \\alpha \\sum^{k}_{i=1} P_{\\theta}(z_i) \\ln P_{\\theta}(z_i). \\] \u6216\u8005\u53ef\u4ee5\u5199\u6210 \\[ \\tag{14} \\label{softmax2} \\max_{\\mathbf{P}} \\sum^{k}_{i=1} z_i P_i - \\alpha \\sum^{k}_{i=1} P_i \\ln P_i, \\quad \\forall i, P_i > 0, \\sum^{k}_{i=1} P_i = 1. \\] \u5199\u6210\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u5f62\u5f0f\u53ef\u5f97 \\[ \\tag{15} \\label{softmax3} \\max_{\\mathbf{P}} \\min_{\\lambda \\ne 0} \\sum^{k}_{i=1} z_i P_i - \\alpha \\sum^{k}_{i=1} P_i \\ln P_i + \\lambda \\left(\\sum^{k}_{i=1} P_i - 1\\right), \\] \u5bf9\u5e94\u7684\u5bf9\u5076\u5f62\u5f0f\u662f \\[ \\tag{16} \\label{softmax4} \\min_{\\lambda \\ne 0} \\max_{\\mathbf{P}} \\sum^{k}_{i=1} z_i P_i - \\alpha \\sum^{k}_{i=1} P_i \\ln P_i + \\lambda \\left(\\sum^{k}_{i=1} P_i - 1\\right). \\] \u9996\u5148\u5bf9\u5185\u90e8\u5b50\u95ee\u9898\u8fdb\u884c\u4f18\u5316\u53ef\u5f97\uff1a \\[ \\tag{17} \\label{softmax5} \\alpha \\ln P^*_i = z_i - \\alpha + \\lambda \\Rightarrow P^*_i = \\exp \\left\\{ \\frac{z_i - \\alpha + \\lambda}{\\alpha} \\right\\}. \\] \u5047\u8bbe\u6211\u4eec\u83b7\u5f97\u4e86 \\(\\lambda^*\\) \uff0c\u90a3\u4e48\u6839\u636e\u6982\u7387\u7684\u6027\u8d28\u53ef\u5f97\uff1a \\[ \\tag{18} \\label{softmax6} \\sum^{k}_{i = 1} \\exp\\left\\{ \\frac{z_i - \\alpha + \\lambda^*}{\\alpha} \\right\\} = \\sum^{k}_{i=1} P^*_i = 1, \\\\ \\Rightarrow exp \\left\\{ \\frac{-\\alpha + \\lambda^*}{\\alpha} \\right\\} = \\frac{1}{\\sum^{k}_{i=1}exp \\left\\{ z_i / \\alpha \\right\\}}. \\] \u5e26\u5165\u5230 \\(\\eqref{softmax5}\\) \u5f0f\uff0c\u6211\u4eec\u53ef\u5f97\uff1a \\[ \\tag{19} \\label{softmax7} P^*_i = \\frac{exp(z_i/\\alpha)}{\\sum^{k}_{i=1}exp(z_i/\\alpha)}. \\] \u56e0\u5b50 \\(\\alpha\\) \u53ef\u4ee5\u5305\u542b\u5230\u795e\u7ecf\u7f51\u7edc\u7684\u524d\u9762\u5c42\u4e2d\uff0c\u6240\u4ee5 Softmax \u5c42\u56fa\u5b9a \\(\\alpha=1\\) \u3002","title":"\u591a\u5206\u7c7b\u95ee\u9898"},{"location":"ML/09-PCA/","text":"PAC Learning Framework \u00b6 \u6982\u7387\u6027\u5730\u8fd1\u4f3c\u5730\u6b63\u786e\u7684(PAC, Probably Approximately Correct)\u5b66\u4e60\u6846\u67b6\u662f\u975e\u5e38\u91cd\u8981\u7684\u6846\u67b6\uff0c \u5b83\u5c1d\u8bd5\u89e3\u51b3\u4e00\u4e9b\u672c\u8d28\u6027\u7684\u95ee\u9898\uff1a\u4ec0\u4e48\u5b66\u4e60\u662f\u6709\u6548\u7684\uff1f\u4ec0\u4e48\u5b66\u4e60\u662f\u56f0\u96be\u7684\uff1f\u6211\u4eec\u9700\u8981\u591a\u5c11\u7684\u6837\u672c\uff1f\u6709\u6ca1\u6709\u666e\u904d\u9002\u7528\u7684\u6a21\u578b\uff1f \u5f88\u591a\u4eba\u7c97\u66b4\u5730\u628a\u8fd9\u4e9b\u5f52\u7ed3\u4e3a''\u5927\u6570\u5b9a\u7406''\uff0c\u5176\u5b9e\u4e5f\u6ca1\u4ec0\u4e48\u4e0d\u5bf9\uff0c\u4e0d\u8fc7\u6211\u4eec\u5e0c\u671b\u6380\u5f00''\u5927\u6570\u5b9a\u7406''\u7684\u5e18\u5b50\uff0c\u518d\u8fdb\u4e00\u6b65\u5206\u6790\u4e00\u4e0b\u3002 \u95ee\u9898\u63cf\u8ff0 \u00b6 \u9996\u5148\u5b9a\u4e49\u6837\u672c\u7a7a\u95f4 \\(\\{\\mathcal{X}, \\mathcal{Y}, \\mathcal{Z} = \\mathcal{X} \\times \\mathcal{Y}\\}\\) , \u6211\u4eec\u901a\u5e38\u8ba4\u4e3a\u6837\u672c\u670d\u4ece\u67d0\u4e2a\u672a\u77e5\u5206\u5e03\uff0c\u5373 \\(\\mathcal{Z} \\sim \\mathcal{D}\\) \u3002\u76d1\u7763\u5b66\u4e60\u7684\u5927\u90e8\u5206\u95ee\u9898\u6b63\u662f\u6c42\u89e3\u5bf9\u5e94\u7684\u4e00\u4e2a\u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}}(\\mathbf{y} \\vert \\mathbf{x})\\) \u3002\u5f53\u6211\u4eec\u5df2\u77e5 \\(\\mathbf{x}\\) , \u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}}(\\mathbf{y} \\vert \\mathbf{x})\\) \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u63a8\u65ad \\(\\mathbf{y}\\) \u7684\u503c\u3002\u6211\u4eec\u7528\u7b26\u53f7 \\(\\mathcal{Z}_{\\mathcal{D}}\\) \u6765\u4ee3\u8868\u6837\u672c\u7a7a\u95f4 \\(\\mathcal{Z}\\) \u52a0\u4e0a\u6982\u7387\u5206\u5e03 \\(\\mathcal{D}\\) \uff0c\u6211\u4eec\u5c31\u79f0\u5b83\u4e3a \u6837\u672c\u6d4b\u5ea6\u7a7a\u95f4 \u3002 \u5728\u7edf\u8ba1\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u53ea\u80fd\u591f\u91c7\u6837\u6765\u7aa5\u89c6\u6837\u672c\u6d4b\u5ea6\u7a7a\u95f4 \\(\\mathcal{Z}_{\\mathcal{D}}\\) \u7684\u6837\u5b50, \u6211\u4eec\u901a\u5e38\u628a\u72ec\u7acb\u540c\u5206\u5e03\u7684\u6837\u672c\u7ec4\u6210\u7684\u5408\u96c6\u79f0\u4e3a\u6837\u672c\u96c6: \\[ \\tag{1} \\label{samples} \\mathcal{S} = \\{(\\mathbf{x}_1, \\mathbf{y}_1), (\\mathbf{x}_2, \\mathbf{y}_2), \\ldots, (\\mathbf{x}_m, \\mathbf{y}_m)\\}. \\] \u4e3a\u4e86\u6c42\u89e3 \\(P_{\\mathcal{D}}(\\mathbf{y}\\vert \\mathbf{x})\\) \uff0c\u6211\u4eec\u4f1a\u5148\u6784\u9020\u4e00\u4e2a\u5047\u8bbe\u96c6: \\[ \\tag{2} \\label{hypothesisSet} \\mathcal{H}_{\\theta} = \\left\\{ P_{\\theta}(\\mathbf{y} \\vert \\mathbf{x}) \\right\\}. \\] \u8fd9\u4e2a\u5047\u8bbe\u96c6\u5305\u542b\u4e86\u6211\u4eec\u7684\u5148\u9a8c\u77e5\u8bc6\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u6570\u5b66\u516c\u5f0f\u8868\u793a\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u7528\u6570\u5b66\u5de5\u5177\u6765\u6c42\u89e3\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u4f1a\u518d\u4f7f\u7528\u4e00\u4e9b\u5ea6\u91cf\u6982\u7387\u5206\u5e03\u4e4b\u95f4\u8ddd\u79bb\u7684\u51fd\u6570\u6765\u6784\u9020\u635f\u5931\u51fd\u6570\uff0c\u90a3\u4e48\u7edd\u5927\u90e8\u5206\u76d1\u7763\u5b66\u4e60\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u4e0b\u9762\u8fd9\u4e2a\u6570\u5b66\u95ee\u9898\uff1a \\[ \\tag{3} \\label{generalObjective} \\min_{\\theta} Distance(p_{\\mathcal{D}}(\\mathbf{y} \\vert \\mathbf{x}) \\Vert p_{\\theta}(\\mathbf{y} \\vert \\mathbf{x})). \\] \u6bd4\u5982\uff0c\u5f53\u6837\u672c\u7a7a\u95f4 \\(\\mathcal{Y} = \\{0, 1\\}\\) \u65f6\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u95ee\u9898\u4e3a \u4e8c\u5206\u7c7b\u95ee\u9898 \uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 KL \u8ddd\u79bb\u6765\u5ea6\u91cf\u4e24\u4e2a\u5206\u5e03\u7684\u5dee\u522b\uff1a \\[ \\tag{4} \\label{classificationObjective} \\min_{\\theta} L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{\\mathbf{x} \\sim p_{\\mathcal{D}}(\\mathbf{x})} \\left\\{ \\mathbb{E}_{{y} \\sim P_{\\mathcal{D}}({y} \\vert \\mathbf{x})} \\left[ \\ln \\left( \\frac{P_{\\mathcal{D}}({y}\\vert \\mathbf{x})}{P_{\\theta}({y}\\vert \\mathbf{x})} \\right) \\right] \\right\\}. \\] \u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u8981\u6c42 \\(P_{\\theta}(\\mathbf{y} \\vert \\mathbf{x})\\) \u5728 \\(y = 0\\) \u548c \\(y = 1\\) \u4e0a\u7684\u6982\u7387\u90fd\u5927\u4e8e0\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 Softmax \u51fd\u6570\u6765\u4fdd\u8bc1\u3002 \u6211\u4eec\u4e5f\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u5047\u8bbe\u96c6\uff0c\u53ea\u4f7f\u7528\u9000\u5316\u7684\u6982\u7387\u5206\u5e03\uff0c\u5373 \\(P_{\\theta}(y = 1 \\vert \\mathbf{x}) = 1\\) \u6216\u8005 \\(P_{\\theta}(y = 0 \\vert \\mathbf{x}) = 1\\) \uff0c\u6211\u4eec\u8868\u793a\u4e3a \\(\\mathcal{H}_{\\theta} = \\left\\{ h_{\\theta}(\\mathbf{x}) \\right\\}\\) \uff0c\u8fd9\u91cc\u7684 \\(h_\\theta(\\mathbf{x})\\) \u8868\u793a\u6982\u7387\u4e3a1\u7684 \\(y\\) \u503c\u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 Wasserstein \u8ddd\u79bb\u6765\u8861\u91cf\u6765\u6784\u9020\u635f\u5931\u51fd\u6570\uff0c\u5176\u4e2d\u82b1\u8d39\u51fd\u6570\u4e3a \\(c(a, b) = \\pmb{1}_{\\left\\{ a \\ne b \\right\\}}\\) : \\[ \\tag{5} \\label{classificationObjective2} \\min_{\\theta} L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{\\mathbf{x} \\sim p_{\\mathcal{D}}(\\mathbf{x})} \\left\\{ \\mathbb{E}_{{y} \\sim P_{\\mathcal{D}}({y} \\vert \\mathbf{x})} \\left[ c(y, h(\\mathbf{x}) \\right] \\right\\}. \\] \u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u5f97\u5230\u5316\u7b80\u7684\u635f\u5931\u51fd\u6570 \\(L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{(\\mathbf{x}, y) \\sim \\mathcal{D}}[c(y, h(\\mathbf{x})]\\) \u3002 \u518d\u56de\u5230\u672c\u5c0f\u8282\u5f00\u5934\u6211\u4eec\u8bf4\u7684\uff0c\u6211\u4eec\u53ea\u80fd\u83b7\u5f97\u4e00\u4e2a\u6837\u672c\u96c6 \\(\\mathcal{S} = \\{(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, {y}_m)\\}\\) , \u6240\u4ee5\u6211\u4eec\u4e5f\u53ea\u80fd\u4f18\u5316\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\uff1a \\[ \\tag{6} \\label{classificationEmpiricalLoss} \\min_{\\theta} L_{\\mathcal{S}}(\\theta) = \\frac{1}{m} \\sum^{m}_{i=1} c(y_i, h_{\\theta}(\\mathbf{x}_i)). \\] \u53e6\u5916\uff0c\u6211\u4eec\u628a\u6700\u5c0f\u5316\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u7684\u539f\u5219\u79f0\u4e3a \u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316 (ERM, Empirical Risk Minimization)\u3002 \u7ec8\u4e8e\u8fdb\u5165\u6211\u4eec\u5173\u5fc3\u7684\u95ee\u9898\uff0cERM\u5b66\u51fa\u6765\u7684 \\(h_S\\) \u7a76\u7adf\u6709\u591a\u597d\uff1f\u80fd\u4e0d\u80fd\u5b9a\u91cf\u5206\u6790\u5462\uff1f PAC \u00b6 \u5b9a\u4e491 ( PAC Learnability ). \u5982\u679c\u5047\u8bbe\u96c6\u662fPAC Learnable\u7684\uff0c\u5219\u8868\u793a\u5b58\u5728\u51fd\u6570 \\(m_{\\mathcal{H}}(\\epsilon, \\delta)\\) , \u548c\u67d0\u4e2a\u5b66\u4e60\u7b97\u6cd5 \\(A\\) \u6ee1\u8db3\uff1a \u5f53\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u5927\u5c0f\u5927\u4e8e \\(m_{\\mathcal{H}}(\\epsilon, \\delta)\\) \u65f6\uff0c \\[ \\tag{7} \\label{pacLearnability} \\mathcal{P}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ L_{\\mathcal{D}}(A(\\mathcal{S})) \\le \\min_{\\theta} L_{\\mathcal{D}}(\\theta) + \\epsilon \\right\\} \\ge 1 - \\delta. \\] \u5176\u4e2d \\(\\epsilon\\) \u8868\u793a\u7cbe\u5ea6\uff0c \\(\\delta\\) \u8868\u793a\u7f6e\u4fe1\u5ea6\u3002 \u9700\u8981\u5907\u6ce8\u7684\u662f\uff1a \\(L_{\\mathcal{D}}(\\theta)\\) \u5927\u4e8e\u7b49\u4e8e0\uff1b \u5982\u679c \\(\\min_{\\theta} L_{\\mathcal{D}}(\\theta) > 0\\) \uff0c\u90a3\u4e48\u6211\u4eec\u79f0 \\(\\mathcal{H}\\) \u662f Agnostic PAC Learnable \u7684\u3002 Agnostic \u8fd9\u4e2a\u8bcd\u662f\u60f3\u8bf4\uff0c\u6211\u4eec\u6784\u9020\u7684\u5047\u8bbe\u96c6\u4e0d\u591f\u5145\u5206\uff0c\u771f\u5b9e\u5206\u5e03 \\(\\mathcal{D}\\) \u8d85\u51fa\u4e86 \\(\\mathcal{H}\\) \u7684\u8ba4\u77e5\u3002 \u6211\u4eec\u53ef\u4ee5\u5148\u5728\u4e00\u4e2a\u975e\u5e38\u975e\u5e38\u7279\u6b8a\u7684\u4f8b\u5b50\u505a\u5206\u6790\u3002 \u5bf9\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u5047\u8bbe\u96c6\u662f \\(\\mathcal{H}_{\\theta} = \\{h_{\\theta_1}(\\mathbf{x}), h_{\\theta_2}(\\mathbf{x}), \\ldots, h_{\\theta_n}(\\mathbf{x})\\}\\) \uff0c\u5e76\u4e14\u5b58\u5728 \\(h_{\\theta^*}\\) \u6ee1\u8db3 \\(L_{\\mathcal{D}}(\\theta^*) = 0\\) (The Realizability Assumption)\u3002\u90a3\u4e48\uff0c\u4efb\u610f\u7ed9\u5b9a\u4e00\u4e2a\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u81f3\u5c11\u6709\u4e00\u4e2a \\(h_i(\\theta_i)\\) \u6ee1\u8db3 \\(L_{\\mathcal{S}}(\\theta_i) = 0\\) \uff0c\u5e76\u4e14\u6211\u4eec\u53ea\u4f1a\u4ece\u4e2d\u968f\u4fbf\u6311\u9009\u4e00\u4e2a\u5206\u7c7b\u51fd\u6570\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u5c31\u8981\u8bc1\u660e\uff0c\u968f\u4fbf\u6311\uff0c\u6311\u5230''\u6700\u5dee''\u7684\u4e5f\u6ca1\u5173\u7cfb\u3002 \u9996\u5148\u4ece\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u4e2d\u5206\u79bb\u51fa\u4e00\u4e2a\u574f\u5b50\u96c6 \\(\\mathcal{H}_{bad} = \\{h \\in \\mathcal{H}, L_{\\mathcal{D}}(h) > \\epsilon\\}\\) \u3002 \u6211\u4eec\u518d\u4ecb\u7ecd\u4e00\u4e2a\u574f\u7684\u6837\u672c\u96c6\u7684\u96c6\u5408 \\(M_{bad} = \\{S \\sim \\mathcal{D}: \\exists h \\in \\mathcal{H}_{bad}, L_{S}(h) = 0\\} = \\cup_{h\\in\\mathcal{H}_{bad}} \\{ \\mathcal{S}: L_{\\mathcal{S}}(h) = 0 \\}\\) \u3002\u90a3\u4e48\uff0c \\[ \\tag{8} \\label{step1} \\mathcal{P}_{S\\sim\\mathcal{D}}(\\{S: L_{\\mathcal{D}}(h_S) \\ge \\epsilon\\}) \\le \\mathcal{P}_{S\\sim\\mathcal{D}}(M_{bad}) \\le \\sum^{}_{h \\in \\mathcal{H}_{bad}} \\mathcal{P}_{S\\sim\\mathcal{D}}(\\{S: L_{S}(h) = 0\\}). \\] \u5bf9\u4e8e\u4efb\u610f\u7684 \\(h \\in \\mathcal{H}_{bad}\\) \uff0c\u6211\u4eec\u53ef\u5f97 \\[\\begin{align*} \\tag{9} \\label{step2} &\\mathcal{P}_{S\\sim\\mathcal{D}}(\\{S: L_{S}(h) = 0\\})\\\\ =& \\prod^{m}_{i=1} \\mathcal{P}_{(\\mathbf{x}_i, y_i)\\sim\\mathcal{D}}(c(y_i, h(\\mathbf{x}_i)))\\\\ \\le& (1 - \\epsilon)^{m} \\le e^{-\\epsilon m}. \\end{align*}\\] \u5e26\u5165 \\(\\eqref{step1}\\) \u53ef\u5f97 \\[\\begin{align*} \\tag{10} \\label{step3} &\\mathcal{P}_{S\\sim\\mathcal{D}}(\\{S: L_{\\mathcal{D}}(h_S) \\ge \\epsilon\\})\\\\ \\le& \\vert \\mathcal{H}_{B} \\vert \\mathcal{P}_{S\\sim\\mathcal{D}}(\\{S: L_{S}(h) = 0\\})\\\\ \\le& \\vert \\mathcal{H} \\vert e^{-\\epsilon m} = n e^{-\\epsilon m}. \\end{align*}\\] \u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u91c7\u6837\u590d\u6742\u5ea6\u4e3a \\(m \\ge \\frac{\\ln(n/\\delta)}{\\epsilon}\\) \u3002 Note ( Bayes Optimal Predictor ). \u5bf9\u4e8e\u4e0a\u6587\u63d0\u5230\u7684\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u662f\u5b58\u5728\u6700\u4f18\u7684deterministc\u5206\u7c7b\u5668\uff0c\u6211\u4eec\u53eb\u5b83\u8d1d\u53f6\u65af\u6700\u4f18\u5206\u7c7b\u5668\uff1a \\[ f_{\\mathcal{D}}(\\mathbf{x}) = \\begin{cases} 1, &\\mathcal{P}_{D}[y = 1 \\vert \\mathbf{x}] \\ge 1/2;\\\\ 0, &otherwise. \\end{cases} \\] Uniform Convergence \u00b6 \u5b9a\u4e492 ( \\(\\pmb{\\epsilon}\\) - representative sample ). \u6211\u4eec\u8bc4\u4ef7\u4e00\u4e2a\u6837\u672c\u96c6\u662f \\(\\epsilon\\) -representative sample\uff0c \u6307\u7684\u662f\uff1a \\[ \\tag{11} \\label{representative} \\forall h \\in \\mathcal{H}, \\vert L_{S}(h) - L_{\\mathcal{D}}(h) \\vert \\le \\epsilon. \\] \u51ed\u76f4\u89c9\uff0c\u6837\u672c\u591f\u591a\u7684\u65f6\u5019\uff0c\u603b\u80fd\u6210\u4e3a \\(\\epsilon\\) -representative \u6837\u672c. \u5f53\u6837\u672c\u662f \\(\\epsilon/2\\) -representative\uff0c\u90a3\u4e48 \\[ \\tag{12} L_{\\mathcal{D}}(ERM(S)) \\le \\min_{h \\in \\mathcal{H}} L_{\\mathcal{D}}(h) + \\epsilon. \\] \u8bc1\u660e\u5f88\u7b80\u5355\uff1a \u5bf9\u4e8e\u4efb\u610f\u7684 \\(h \\in \\mathcal{H}\\) \uff0c \\[ \\tag{13} L_{\\mathcal{D}}(ERM(S)) \\le L_{S}(ERM(S)) + \\epsilon/2 \\le L_{S}(h) + \\epsilon/2 \\le L_{\\mathcal{D}}(h) + \\epsilon. \\] \u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u4ecb\u7ecd Uniform Convergence \u4e86\u3002 \u5b9a\u4e493 ( Uniform Convergence ). \u6211\u4eec\u5f62\u5bb9\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u6709 Uniform Convergence \u6027\u8d28\uff0c\u8868\u793a\u5b58\u5728\u51fd\u6570 \\(m^{UC}_{\\mathcal{H}}(\\delta, \\epsilon)\\) \uff0c\u6ee1\u8db3\u5f53\u6837\u672c\u6570\u5927\u4e8e \\(m^{UC}_{\\mathcal{H}}(\\delta, \\epsilon)\\) \u65f6\uff0c \\[ \\tag{14} \\label{uniformConvergence} \\mathcal{P}_{S \\sim \\mathcal{D}} \\left\\{ S\\ is\\ \\epsilon\\ representative \\right\\} \\ge 1 - \\delta. \\] \u5f88\u5bb9\u6613\uff0c\u6211\u4eec\u77e5\u9053PCA learnable\u7684\u91c7\u6837\u590d\u6742\u5ea6\u51fd\u6570\u6ee1\u8db3 \\(m^{PCA}_{\\mathcal{H}}(\\delta, \\epsilon) \\le m^{UC}_{\\mathcal{H}}(\\delta, \\epsilon/2)\\) \u3002 \u5b9a\u74061 ( Hoeffding's Inequality ) \u5bf9\u4e8e \\(m\\) \u4e2a\u968f\u673a\u53d8\u91cf \\(\\mathcal{X}_1 \\in [a_1, b_1], \\mathcal{X}_2 \\in [a_2, b_2], \\ldots, \\mathcal{X}_{m} \\in [a_m, b_m]\\) , \u5b83\u4eec\u7684\u5747\u503c\u968f\u673a\u53d8\u91cf \\(\\bar{\\mathcal{X}}\\) \u6ee1\u8db3: \\[ \\tag{15} \\label{Hoeffding} \\mathcal{P}\\left\\{ \\vert \\bar{\\mathcal{X}} - \\mathbb{E} \\bar{\\mathcal{X}} \\vert \\ge \\epsilon \\right\\} \\le 2 \\exp\\left\\{ - \\frac{2 m^2 \\epsilon^2}{\\sum^{m}_{i=1}(b_i - a_i)^2} \\right\\}. \\] \u6211\u4eec\u53d1\u73b0\u5728\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u635f\u5931\u51fd\u6570 \\(\\eqref{classificationEmpiricalLoss}\\) \u4e2d\uff0c \\(c(y, h(\\mathbf{x})) \\in [0, 1]\\) \u53ef\u4ee5\u770b\u6210\u968f\u673a\u53d8\u91cf\uff0c \u90a3\u4e48 \\(L_{S}(h)\\) \u5c31\u662f \\(m\\) \u4e2a\u968f\u673a\u53d8\u91cf\u7684\u5747\u503c\uff0c\u5e76\u4e14 \\(L_{\\mathcal{D}}(h)\\) \u662f \\(L_{S}(h)\\) \u7684\u671f\u671b\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5e26\u5165\u970d\u592b\u542c\u4e0d\u7b49\u5f0f\uff0c\u53ef\u5f97\uff1a \\[ \\tag{16} \\forall h \\in \\mathcal{H}, \\mathcal{P}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\vert L_{\\mathcal{D}}(h) - L_{S}(h) \\vert \\ge \\epsilon \\right\\} \\le 2 \\exp\\left\\{ {-2 m \\epsilon^2} \\right\\}. \\] \u90a3\u4e48\uff0c\u53ef\u5f97 \\[ \\tag{17} \\mathcal{P}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{\\exists h \\in \\mathcal{H},\\vert L_{\\mathcal{D}}(h) - L_{S}(h) \\vert \\ge \\epsilon \\right\\} \\le 2 \\vert \\mathcal{H} \\vert \\exp\\left\\{ {-2 m \\epsilon^2} \\right\\}. \\] \u8fd9\u4e2a\u7ed3\u8bba\u6709\u4e00\u5b9a\u7684\u6cdb\u5316\u6027\uff0c\u5728\u5f88\u591a\u5176\u4ed6\u95ee\u9898\u4e2d\uff0c\u53ea\u8981\u635f\u5931\u51fd\u6570\u5bf9\u5e94\u4e8e \\(c(y, h(\\mathbf{x}))\\) \u7684\u9879\u90fd\u5728 \\([0, 1]\\) \u8303\u56f4\u5185\uff0c\u90fd\u53ef\u4ee5\u6ee1\u8db3\u4e0a\u9762\u7684\u7ed3\u679c\u3002 \u6574\u7406\u4e00\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u5b9a\u7406\uff1a \u5b9a\u74062 \u5047\u8bbe\u96c6\u6709\u9650\u7684\u8bdd\uff0c\u5b83\u4e00\u5b9a\u662f agnostic PAC learnable \uff0c\u5e76\u4e14 \\[ \\tag{18} m^{UC}_{\\mathcal{H}} (\\epsilon, \\delta) \\le \\left\\lceil \\frac{\\log(2\\vert\\mathcal{H}\\vert / \\delta)}{2\\epsilon^2} \\right\\rceil, \\quad m^{PAC}_{\\mathcal{H}} (\\epsilon, \\delta) \\le \\left\\lceil \\frac{2\\log(2\\vert\\mathcal{H}\\vert / \\delta)}{\\epsilon^2} \\right\\rceil. \\]","title":"PCA"},{"location":"ML/09-PCA/#pac-learning-framework","text":"\u6982\u7387\u6027\u5730\u8fd1\u4f3c\u5730\u6b63\u786e\u7684(PAC, Probably Approximately Correct)\u5b66\u4e60\u6846\u67b6\u662f\u975e\u5e38\u91cd\u8981\u7684\u6846\u67b6\uff0c \u5b83\u5c1d\u8bd5\u89e3\u51b3\u4e00\u4e9b\u672c\u8d28\u6027\u7684\u95ee\u9898\uff1a\u4ec0\u4e48\u5b66\u4e60\u662f\u6709\u6548\u7684\uff1f\u4ec0\u4e48\u5b66\u4e60\u662f\u56f0\u96be\u7684\uff1f\u6211\u4eec\u9700\u8981\u591a\u5c11\u7684\u6837\u672c\uff1f\u6709\u6ca1\u6709\u666e\u904d\u9002\u7528\u7684\u6a21\u578b\uff1f \u5f88\u591a\u4eba\u7c97\u66b4\u5730\u628a\u8fd9\u4e9b\u5f52\u7ed3\u4e3a''\u5927\u6570\u5b9a\u7406''\uff0c\u5176\u5b9e\u4e5f\u6ca1\u4ec0\u4e48\u4e0d\u5bf9\uff0c\u4e0d\u8fc7\u6211\u4eec\u5e0c\u671b\u6380\u5f00''\u5927\u6570\u5b9a\u7406''\u7684\u5e18\u5b50\uff0c\u518d\u8fdb\u4e00\u6b65\u5206\u6790\u4e00\u4e0b\u3002","title":"PAC Learning Framework"},{"location":"ML/09-PCA/#_1","text":"\u9996\u5148\u5b9a\u4e49\u6837\u672c\u7a7a\u95f4 \\(\\{\\mathcal{X}, \\mathcal{Y}, \\mathcal{Z} = \\mathcal{X} \\times \\mathcal{Y}\\}\\) , \u6211\u4eec\u901a\u5e38\u8ba4\u4e3a\u6837\u672c\u670d\u4ece\u67d0\u4e2a\u672a\u77e5\u5206\u5e03\uff0c\u5373 \\(\\mathcal{Z} \\sim \\mathcal{D}\\) \u3002\u76d1\u7763\u5b66\u4e60\u7684\u5927\u90e8\u5206\u95ee\u9898\u6b63\u662f\u6c42\u89e3\u5bf9\u5e94\u7684\u4e00\u4e2a\u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}}(\\mathbf{y} \\vert \\mathbf{x})\\) \u3002\u5f53\u6211\u4eec\u5df2\u77e5 \\(\\mathbf{x}\\) , \u6761\u4ef6\u5206\u5e03 \\(P_{\\mathcal{D}}(\\mathbf{y} \\vert \\mathbf{x})\\) \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u63a8\u65ad \\(\\mathbf{y}\\) \u7684\u503c\u3002\u6211\u4eec\u7528\u7b26\u53f7 \\(\\mathcal{Z}_{\\mathcal{D}}\\) \u6765\u4ee3\u8868\u6837\u672c\u7a7a\u95f4 \\(\\mathcal{Z}\\) \u52a0\u4e0a\u6982\u7387\u5206\u5e03 \\(\\mathcal{D}\\) \uff0c\u6211\u4eec\u5c31\u79f0\u5b83\u4e3a \u6837\u672c\u6d4b\u5ea6\u7a7a\u95f4 \u3002 \u5728\u7edf\u8ba1\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u53ea\u80fd\u591f\u91c7\u6837\u6765\u7aa5\u89c6\u6837\u672c\u6d4b\u5ea6\u7a7a\u95f4 \\(\\mathcal{Z}_{\\mathcal{D}}\\) \u7684\u6837\u5b50, \u6211\u4eec\u901a\u5e38\u628a\u72ec\u7acb\u540c\u5206\u5e03\u7684\u6837\u672c\u7ec4\u6210\u7684\u5408\u96c6\u79f0\u4e3a\u6837\u672c\u96c6: \\[ \\tag{1} \\label{samples} \\mathcal{S} = \\{(\\mathbf{x}_1, \\mathbf{y}_1), (\\mathbf{x}_2, \\mathbf{y}_2), \\ldots, (\\mathbf{x}_m, \\mathbf{y}_m)\\}. \\] \u4e3a\u4e86\u6c42\u89e3 \\(P_{\\mathcal{D}}(\\mathbf{y}\\vert \\mathbf{x})\\) \uff0c\u6211\u4eec\u4f1a\u5148\u6784\u9020\u4e00\u4e2a\u5047\u8bbe\u96c6: \\[ \\tag{2} \\label{hypothesisSet} \\mathcal{H}_{\\theta} = \\left\\{ P_{\\theta}(\\mathbf{y} \\vert \\mathbf{x}) \\right\\}. \\] \u8fd9\u4e2a\u5047\u8bbe\u96c6\u5305\u542b\u4e86\u6211\u4eec\u7684\u5148\u9a8c\u77e5\u8bc6\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u6570\u5b66\u516c\u5f0f\u8868\u793a\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u7528\u6570\u5b66\u5de5\u5177\u6765\u6c42\u89e3\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u4f1a\u518d\u4f7f\u7528\u4e00\u4e9b\u5ea6\u91cf\u6982\u7387\u5206\u5e03\u4e4b\u95f4\u8ddd\u79bb\u7684\u51fd\u6570\u6765\u6784\u9020\u635f\u5931\u51fd\u6570\uff0c\u90a3\u4e48\u7edd\u5927\u90e8\u5206\u76d1\u7763\u5b66\u4e60\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u4e0b\u9762\u8fd9\u4e2a\u6570\u5b66\u95ee\u9898\uff1a \\[ \\tag{3} \\label{generalObjective} \\min_{\\theta} Distance(p_{\\mathcal{D}}(\\mathbf{y} \\vert \\mathbf{x}) \\Vert p_{\\theta}(\\mathbf{y} \\vert \\mathbf{x})). \\] \u6bd4\u5982\uff0c\u5f53\u6837\u672c\u7a7a\u95f4 \\(\\mathcal{Y} = \\{0, 1\\}\\) \u65f6\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u95ee\u9898\u4e3a \u4e8c\u5206\u7c7b\u95ee\u9898 \uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 KL \u8ddd\u79bb\u6765\u5ea6\u91cf\u4e24\u4e2a\u5206\u5e03\u7684\u5dee\u522b\uff1a \\[ \\tag{4} \\label{classificationObjective} \\min_{\\theta} L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{\\mathbf{x} \\sim p_{\\mathcal{D}}(\\mathbf{x})} \\left\\{ \\mathbb{E}_{{y} \\sim P_{\\mathcal{D}}({y} \\vert \\mathbf{x})} \\left[ \\ln \\left( \\frac{P_{\\mathcal{D}}({y}\\vert \\mathbf{x})}{P_{\\theta}({y}\\vert \\mathbf{x})} \\right) \\right] \\right\\}. \\] \u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u8981\u6c42 \\(P_{\\theta}(\\mathbf{y} \\vert \\mathbf{x})\\) \u5728 \\(y = 0\\) \u548c \\(y = 1\\) \u4e0a\u7684\u6982\u7387\u90fd\u5927\u4e8e0\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 Softmax \u51fd\u6570\u6765\u4fdd\u8bc1\u3002 \u6211\u4eec\u4e5f\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u5047\u8bbe\u96c6\uff0c\u53ea\u4f7f\u7528\u9000\u5316\u7684\u6982\u7387\u5206\u5e03\uff0c\u5373 \\(P_{\\theta}(y = 1 \\vert \\mathbf{x}) = 1\\) \u6216\u8005 \\(P_{\\theta}(y = 0 \\vert \\mathbf{x}) = 1\\) \uff0c\u6211\u4eec\u8868\u793a\u4e3a \\(\\mathcal{H}_{\\theta} = \\left\\{ h_{\\theta}(\\mathbf{x}) \\right\\}\\) \uff0c\u8fd9\u91cc\u7684 \\(h_\\theta(\\mathbf{x})\\) \u8868\u793a\u6982\u7387\u4e3a1\u7684 \\(y\\) \u503c\u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 Wasserstein \u8ddd\u79bb\u6765\u8861\u91cf\u6765\u6784\u9020\u635f\u5931\u51fd\u6570\uff0c\u5176\u4e2d\u82b1\u8d39\u51fd\u6570\u4e3a \\(c(a, b) = \\pmb{1}_{\\left\\{ a \\ne b \\right\\}}\\) : \\[ \\tag{5} \\label{classificationObjective2} \\min_{\\theta} L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{\\mathbf{x} \\sim p_{\\mathcal{D}}(\\mathbf{x})} \\left\\{ \\mathbb{E}_{{y} \\sim P_{\\mathcal{D}}({y} \\vert \\mathbf{x})} \\left[ c(y, h(\\mathbf{x}) \\right] \\right\\}. \\] \u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u5f97\u5230\u5316\u7b80\u7684\u635f\u5931\u51fd\u6570 \\(L_{\\mathcal{D}}(\\theta) = \\mathbb{E}_{(\\mathbf{x}, y) \\sim \\mathcal{D}}[c(y, h(\\mathbf{x})]\\) \u3002 \u518d\u56de\u5230\u672c\u5c0f\u8282\u5f00\u5934\u6211\u4eec\u8bf4\u7684\uff0c\u6211\u4eec\u53ea\u80fd\u83b7\u5f97\u4e00\u4e2a\u6837\u672c\u96c6 \\(\\mathcal{S} = \\{(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, {y}_m)\\}\\) , \u6240\u4ee5\u6211\u4eec\u4e5f\u53ea\u80fd\u4f18\u5316\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\uff1a \\[ \\tag{6} \\label{classificationEmpiricalLoss} \\min_{\\theta} L_{\\mathcal{S}}(\\theta) = \\frac{1}{m} \\sum^{m}_{i=1} c(y_i, h_{\\theta}(\\mathbf{x}_i)). \\] \u53e6\u5916\uff0c\u6211\u4eec\u628a\u6700\u5c0f\u5316\u7ecf\u9a8c\u8bef\u5dee\u51fd\u6570\u7684\u539f\u5219\u79f0\u4e3a \u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316 (ERM, Empirical Risk Minimization)\u3002 \u7ec8\u4e8e\u8fdb\u5165\u6211\u4eec\u5173\u5fc3\u7684\u95ee\u9898\uff0cERM\u5b66\u51fa\u6765\u7684 \\(h_S\\) \u7a76\u7adf\u6709\u591a\u597d\uff1f\u80fd\u4e0d\u80fd\u5b9a\u91cf\u5206\u6790\u5462\uff1f","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"ML/09-PCA/#pac","text":"\u5b9a\u4e491 ( PAC Learnability ). \u5982\u679c\u5047\u8bbe\u96c6\u662fPAC Learnable\u7684\uff0c\u5219\u8868\u793a\u5b58\u5728\u51fd\u6570 \\(m_{\\mathcal{H}}(\\epsilon, \\delta)\\) , \u548c\u67d0\u4e2a\u5b66\u4e60\u7b97\u6cd5 \\(A\\) \u6ee1\u8db3\uff1a \u5f53\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u5927\u5c0f\u5927\u4e8e \\(m_{\\mathcal{H}}(\\epsilon, \\delta)\\) \u65f6\uff0c \\[ \\tag{7} \\label{pacLearnability} \\mathcal{P}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ L_{\\mathcal{D}}(A(\\mathcal{S})) \\le \\min_{\\theta} L_{\\mathcal{D}}(\\theta) + \\epsilon \\right\\} \\ge 1 - \\delta. \\] \u5176\u4e2d \\(\\epsilon\\) \u8868\u793a\u7cbe\u5ea6\uff0c \\(\\delta\\) \u8868\u793a\u7f6e\u4fe1\u5ea6\u3002 \u9700\u8981\u5907\u6ce8\u7684\u662f\uff1a \\(L_{\\mathcal{D}}(\\theta)\\) \u5927\u4e8e\u7b49\u4e8e0\uff1b \u5982\u679c \\(\\min_{\\theta} L_{\\mathcal{D}}(\\theta) > 0\\) \uff0c\u90a3\u4e48\u6211\u4eec\u79f0 \\(\\mathcal{H}\\) \u662f Agnostic PAC Learnable \u7684\u3002 Agnostic \u8fd9\u4e2a\u8bcd\u662f\u60f3\u8bf4\uff0c\u6211\u4eec\u6784\u9020\u7684\u5047\u8bbe\u96c6\u4e0d\u591f\u5145\u5206\uff0c\u771f\u5b9e\u5206\u5e03 \\(\\mathcal{D}\\) \u8d85\u51fa\u4e86 \\(\\mathcal{H}\\) \u7684\u8ba4\u77e5\u3002 \u6211\u4eec\u53ef\u4ee5\u5148\u5728\u4e00\u4e2a\u975e\u5e38\u975e\u5e38\u7279\u6b8a\u7684\u4f8b\u5b50\u505a\u5206\u6790\u3002 \u5bf9\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u5047\u8bbe\u96c6\u662f \\(\\mathcal{H}_{\\theta} = \\{h_{\\theta_1}(\\mathbf{x}), h_{\\theta_2}(\\mathbf{x}), \\ldots, h_{\\theta_n}(\\mathbf{x})\\}\\) \uff0c\u5e76\u4e14\u5b58\u5728 \\(h_{\\theta^*}\\) \u6ee1\u8db3 \\(L_{\\mathcal{D}}(\\theta^*) = 0\\) (The Realizability Assumption)\u3002\u90a3\u4e48\uff0c\u4efb\u610f\u7ed9\u5b9a\u4e00\u4e2a\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u81f3\u5c11\u6709\u4e00\u4e2a \\(h_i(\\theta_i)\\) \u6ee1\u8db3 \\(L_{\\mathcal{S}}(\\theta_i) = 0\\) \uff0c\u5e76\u4e14\u6211\u4eec\u53ea\u4f1a\u4ece\u4e2d\u968f\u4fbf\u6311\u9009\u4e00\u4e2a\u5206\u7c7b\u51fd\u6570\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u5c31\u8981\u8bc1\u660e\uff0c\u968f\u4fbf\u6311\uff0c\u6311\u5230''\u6700\u5dee''\u7684\u4e5f\u6ca1\u5173\u7cfb\u3002 \u9996\u5148\u4ece\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u4e2d\u5206\u79bb\u51fa\u4e00\u4e2a\u574f\u5b50\u96c6 \\(\\mathcal{H}_{bad} = \\{h \\in \\mathcal{H}, L_{\\mathcal{D}}(h) > \\epsilon\\}\\) \u3002 \u6211\u4eec\u518d\u4ecb\u7ecd\u4e00\u4e2a\u574f\u7684\u6837\u672c\u96c6\u7684\u96c6\u5408 \\(M_{bad} = \\{S \\sim \\mathcal{D}: \\exists h \\in \\mathcal{H}_{bad}, L_{S}(h) = 0\\} = \\cup_{h\\in\\mathcal{H}_{bad}} \\{ \\mathcal{S}: L_{\\mathcal{S}}(h) = 0 \\}\\) \u3002\u90a3\u4e48\uff0c \\[ \\tag{8} \\label{step1} \\mathcal{P}_{S\\sim\\mathcal{D}}(\\{S: L_{\\mathcal{D}}(h_S) \\ge \\epsilon\\}) \\le \\mathcal{P}_{S\\sim\\mathcal{D}}(M_{bad}) \\le \\sum^{}_{h \\in \\mathcal{H}_{bad}} \\mathcal{P}_{S\\sim\\mathcal{D}}(\\{S: L_{S}(h) = 0\\}). \\] \u5bf9\u4e8e\u4efb\u610f\u7684 \\(h \\in \\mathcal{H}_{bad}\\) \uff0c\u6211\u4eec\u53ef\u5f97 \\[\\begin{align*} \\tag{9} \\label{step2} &\\mathcal{P}_{S\\sim\\mathcal{D}}(\\{S: L_{S}(h) = 0\\})\\\\ =& \\prod^{m}_{i=1} \\mathcal{P}_{(\\mathbf{x}_i, y_i)\\sim\\mathcal{D}}(c(y_i, h(\\mathbf{x}_i)))\\\\ \\le& (1 - \\epsilon)^{m} \\le e^{-\\epsilon m}. \\end{align*}\\] \u5e26\u5165 \\(\\eqref{step1}\\) \u53ef\u5f97 \\[\\begin{align*} \\tag{10} \\label{step3} &\\mathcal{P}_{S\\sim\\mathcal{D}}(\\{S: L_{\\mathcal{D}}(h_S) \\ge \\epsilon\\})\\\\ \\le& \\vert \\mathcal{H}_{B} \\vert \\mathcal{P}_{S\\sim\\mathcal{D}}(\\{S: L_{S}(h) = 0\\})\\\\ \\le& \\vert \\mathcal{H} \\vert e^{-\\epsilon m} = n e^{-\\epsilon m}. \\end{align*}\\] \u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u91c7\u6837\u590d\u6742\u5ea6\u4e3a \\(m \\ge \\frac{\\ln(n/\\delta)}{\\epsilon}\\) \u3002 Note ( Bayes Optimal Predictor ). \u5bf9\u4e8e\u4e0a\u6587\u63d0\u5230\u7684\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u662f\u5b58\u5728\u6700\u4f18\u7684deterministc\u5206\u7c7b\u5668\uff0c\u6211\u4eec\u53eb\u5b83\u8d1d\u53f6\u65af\u6700\u4f18\u5206\u7c7b\u5668\uff1a \\[ f_{\\mathcal{D}}(\\mathbf{x}) = \\begin{cases} 1, &\\mathcal{P}_{D}[y = 1 \\vert \\mathbf{x}] \\ge 1/2;\\\\ 0, &otherwise. \\end{cases} \\]","title":"PAC"},{"location":"ML/09-PCA/#uniform-convergence","text":"\u5b9a\u4e492 ( \\(\\pmb{\\epsilon}\\) - representative sample ). \u6211\u4eec\u8bc4\u4ef7\u4e00\u4e2a\u6837\u672c\u96c6\u662f \\(\\epsilon\\) -representative sample\uff0c \u6307\u7684\u662f\uff1a \\[ \\tag{11} \\label{representative} \\forall h \\in \\mathcal{H}, \\vert L_{S}(h) - L_{\\mathcal{D}}(h) \\vert \\le \\epsilon. \\] \u51ed\u76f4\u89c9\uff0c\u6837\u672c\u591f\u591a\u7684\u65f6\u5019\uff0c\u603b\u80fd\u6210\u4e3a \\(\\epsilon\\) -representative \u6837\u672c. \u5f53\u6837\u672c\u662f \\(\\epsilon/2\\) -representative\uff0c\u90a3\u4e48 \\[ \\tag{12} L_{\\mathcal{D}}(ERM(S)) \\le \\min_{h \\in \\mathcal{H}} L_{\\mathcal{D}}(h) + \\epsilon. \\] \u8bc1\u660e\u5f88\u7b80\u5355\uff1a \u5bf9\u4e8e\u4efb\u610f\u7684 \\(h \\in \\mathcal{H}\\) \uff0c \\[ \\tag{13} L_{\\mathcal{D}}(ERM(S)) \\le L_{S}(ERM(S)) + \\epsilon/2 \\le L_{S}(h) + \\epsilon/2 \\le L_{\\mathcal{D}}(h) + \\epsilon. \\] \u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u4ecb\u7ecd Uniform Convergence \u4e86\u3002 \u5b9a\u4e493 ( Uniform Convergence ). \u6211\u4eec\u5f62\u5bb9\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u6709 Uniform Convergence \u6027\u8d28\uff0c\u8868\u793a\u5b58\u5728\u51fd\u6570 \\(m^{UC}_{\\mathcal{H}}(\\delta, \\epsilon)\\) \uff0c\u6ee1\u8db3\u5f53\u6837\u672c\u6570\u5927\u4e8e \\(m^{UC}_{\\mathcal{H}}(\\delta, \\epsilon)\\) \u65f6\uff0c \\[ \\tag{14} \\label{uniformConvergence} \\mathcal{P}_{S \\sim \\mathcal{D}} \\left\\{ S\\ is\\ \\epsilon\\ representative \\right\\} \\ge 1 - \\delta. \\] \u5f88\u5bb9\u6613\uff0c\u6211\u4eec\u77e5\u9053PCA learnable\u7684\u91c7\u6837\u590d\u6742\u5ea6\u51fd\u6570\u6ee1\u8db3 \\(m^{PCA}_{\\mathcal{H}}(\\delta, \\epsilon) \\le m^{UC}_{\\mathcal{H}}(\\delta, \\epsilon/2)\\) \u3002 \u5b9a\u74061 ( Hoeffding's Inequality ) \u5bf9\u4e8e \\(m\\) \u4e2a\u968f\u673a\u53d8\u91cf \\(\\mathcal{X}_1 \\in [a_1, b_1], \\mathcal{X}_2 \\in [a_2, b_2], \\ldots, \\mathcal{X}_{m} \\in [a_m, b_m]\\) , \u5b83\u4eec\u7684\u5747\u503c\u968f\u673a\u53d8\u91cf \\(\\bar{\\mathcal{X}}\\) \u6ee1\u8db3: \\[ \\tag{15} \\label{Hoeffding} \\mathcal{P}\\left\\{ \\vert \\bar{\\mathcal{X}} - \\mathbb{E} \\bar{\\mathcal{X}} \\vert \\ge \\epsilon \\right\\} \\le 2 \\exp\\left\\{ - \\frac{2 m^2 \\epsilon^2}{\\sum^{m}_{i=1}(b_i - a_i)^2} \\right\\}. \\] \u6211\u4eec\u53d1\u73b0\u5728\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u635f\u5931\u51fd\u6570 \\(\\eqref{classificationEmpiricalLoss}\\) \u4e2d\uff0c \\(c(y, h(\\mathbf{x})) \\in [0, 1]\\) \u53ef\u4ee5\u770b\u6210\u968f\u673a\u53d8\u91cf\uff0c \u90a3\u4e48 \\(L_{S}(h)\\) \u5c31\u662f \\(m\\) \u4e2a\u968f\u673a\u53d8\u91cf\u7684\u5747\u503c\uff0c\u5e76\u4e14 \\(L_{\\mathcal{D}}(h)\\) \u662f \\(L_{S}(h)\\) \u7684\u671f\u671b\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5e26\u5165\u970d\u592b\u542c\u4e0d\u7b49\u5f0f\uff0c\u53ef\u5f97\uff1a \\[ \\tag{16} \\forall h \\in \\mathcal{H}, \\mathcal{P}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\vert L_{\\mathcal{D}}(h) - L_{S}(h) \\vert \\ge \\epsilon \\right\\} \\le 2 \\exp\\left\\{ {-2 m \\epsilon^2} \\right\\}. \\] \u90a3\u4e48\uff0c\u53ef\u5f97 \\[ \\tag{17} \\mathcal{P}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{\\exists h \\in \\mathcal{H},\\vert L_{\\mathcal{D}}(h) - L_{S}(h) \\vert \\ge \\epsilon \\right\\} \\le 2 \\vert \\mathcal{H} \\vert \\exp\\left\\{ {-2 m \\epsilon^2} \\right\\}. \\] \u8fd9\u4e2a\u7ed3\u8bba\u6709\u4e00\u5b9a\u7684\u6cdb\u5316\u6027\uff0c\u5728\u5f88\u591a\u5176\u4ed6\u95ee\u9898\u4e2d\uff0c\u53ea\u8981\u635f\u5931\u51fd\u6570\u5bf9\u5e94\u4e8e \\(c(y, h(\\mathbf{x}))\\) \u7684\u9879\u90fd\u5728 \\([0, 1]\\) \u8303\u56f4\u5185\uff0c\u90fd\u53ef\u4ee5\u6ee1\u8db3\u4e0a\u9762\u7684\u7ed3\u679c\u3002 \u6574\u7406\u4e00\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u5b9a\u7406\uff1a \u5b9a\u74062 \u5047\u8bbe\u96c6\u6709\u9650\u7684\u8bdd\uff0c\u5b83\u4e00\u5b9a\u662f agnostic PAC learnable \uff0c\u5e76\u4e14 \\[ \\tag{18} m^{UC}_{\\mathcal{H}} (\\epsilon, \\delta) \\le \\left\\lceil \\frac{\\log(2\\vert\\mathcal{H}\\vert / \\delta)}{2\\epsilon^2} \\right\\rceil, \\quad m^{PAC}_{\\mathcal{H}} (\\epsilon, \\delta) \\le \\left\\lceil \\frac{2\\log(2\\vert\\mathcal{H}\\vert / \\delta)}{\\epsilon^2} \\right\\rceil. \\]","title":"Uniform Convergence"},{"location":"ML/10-NoFreeLunch/","text":"No Free Lunch \u00b6 \u6ca1\u6709\u514d\u8d39\u5348\u9910\u662f\u673a\u5668\u5b66\u4e60\u91cc\u7684\u4e00\u4e2a\u975e\u5e38\u7ecf\u5178\u7684\u7ed3\u8bba\uff0c\u90a3\u4e48\uff0c\u5b83\u7a76\u7adf\u6307\u7684\u662f\u4ec0\u4e48\u5462\uff1f \u6211\u4eec\u7a0d\u5fae\u4e25\u8c28\u5730\u8ba8\u8bba\u4e00\u4e0b\u3002 \u9996\u5148\u6211\u4eec\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1a\u6709\u6ca1\u6709\u4e00\u4e2a\u4e07\u80fd\u7684\u5b66\u4e60\u65b9\u6cd5\uff0c\u5bf9\u6240\u6709\u540c\u7c7b\u578b\u7684\u95ee\u9898\u90fd\u80fd\u89e3\u7684\u6700\u597d\u5462\uff1f \u6211\u4eec\u5728\u89e3\u51b3\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u95ee\u9898\u7684\u65f6\u5019\uff0c \u6211\u4eec\u9700\u8981\u901a\u8fc7\u4e00\u4e2a\u5148\u9a8c\u77e5\u8bc6\u6784\u9020\u4e00\u4e2a\u5047\u8bbe\u96c6\uff0c\u7136\u540e\u4ece\u5047\u8bbe\u96c6\u91cc\u6311\u51fa\u4e00\u4e2a\u6700\u63a5\u8fd1\u771f\u5b9e\u76ee\u6807\u5206\u5e03\u7684\u8fd1\u4f3c\u5206\u5e03\u6765\u3002\u90a3\u4e48\uff0c\u5982\u679c\u8fd9\u4e2a\u4e07\u80fd\u7684\u5b66\u4e60\u65b9\u6cd5\u5b58\u5728\uff0c\u5219\u610f\u5473\u7740\u8fd9\u4e2a\u5047\u8bbe\u96c6\u975e\u5e38\u5927\uff0c\u5305\u542b\u6240\u6709\u53ef\u80fd\u7684\u5206\u5e03\u3002 \u4e0a\u9762\u8fd9\u6bb5\u8bdd\u6bd4\u8f83\u62bd\u8c61\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bb2\u89e3\uff1a\u73b0\u5728\u6211\u4eec\u8981\u89e3\u51b3\u7684\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c \\(\\mathbf{x}\\in\\mathbb{R}^d\\) \u5e76\u4e14 \\(y \\in \\{0, 1\\}\\) \u3002 \\(P(y \\vert \\mathbf{x})\\) \u5bf9\u5e94\u67d0\u4e2a\u672a\u77e5\u7684\u5206\u5e03 \\(\\mathcal{D}\\) \u3002\u90a3\u4e48\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u4e07\u80fd\u7684\u5b66\u4e60\u65b9\u6cd5\uff0c\u65e0\u8bba \\(\\mathcal{D}\\) \u662f\u4ec0\u4e48\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u6982\u7387\u6e10\u8fdb\u6b63\u786e(PAC)\u7684\u3002 \u6ca1\u6709\u514d\u8d39\u5348\u9910 \u5b9a\u7406\u544a\u8bc9\u6211\u4eec\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u6837\u672c\u518d\u591a\u4e5f\u4e0d\u53ef\u80fd\u3002 \u5b9a\u7406\u7684\u8bc1\u660e\uff0c\u4e14\u4e0d\u8bf4 \\(\\mathcal{D}\\) \u662f\u4efb\u610f\u7684\u5206\u5e03\uff0c \\(P_{\\mathcal{D}}(y \\vert \\mathbf{x})\\) \u662fdeterministic\u5206\u5e03\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\uff0c\u4e5f\u662f\u4e0d\u53ef\u80fd\u7684\u3002 deterministic \u5206\u5e03\u6307\u7684\u662f \\(P_{\\mathcal{D}}(y = 1 \\vert \\mathbf{x}) = 1\\) \u6216\u8005 \\(P_{\\mathcal{D}}(y = 0 \\vert \\mathbf{x}) = 1\\) \u3002 \u6211\u4eec\u9650\u5b9a\u6240\u9762\u5bf9\u7684\u4e8c\u5206\u7c7b\u673a\u5668\u5b66\u4e60\u95ee\u9898\u4e2d\uff0c \\(P_{\\mathcal{D}}(y \\vert \\mathbf{x})\\) \u662f deterministic \u5206\u5e03, \u5e76\u4e14 \\(p_{\\mathcal{D}}(\\mathbf{x})\\) \u662f\u5747\u5300\u5206\u5e03\u3002\u6211\u4eec\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u4e5f\u662f\u6240\u6709 \\(deterministic\\) \u5206\u5e03\u7684\u96c6\u5408\u3002\u90a3\u4e48 \\(P_{\\mathcal{D}}(y \\vert \\mathbf{x}) \\in \\mathcal{H}\\) \u3002 \u63a5\u4e0b\u6765\u6211\u8981\u8bc1\u660e\uff0c\u65e0\u8bba\u6837\u672c\u6709\u591a\u5c11\u4e2a\uff0c\u6211\u4eec\u90fd\u4f1a\u5b58\u5728\u8fc7\u62df\u5408\u7684\u98ce\u9669\u3002 \u9996\u5148\uff0c\u6211\u4eec\u8ba8\u8bba\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u8ba4\u4e3a\u771f\u5b9e\u6570\u636e\u96c6\u5408\u4e3a\u6709\u9650\u96c6\u5408 \\(\\mathcal{Z}\\) , \u5176\u4e2d \\(\\vert \\mathcal{Z} \\vert = 2m\\) \uff0c\u6211\u4eec\u4ece\u4e2d\u91c7\u96c6m\u4e2a\u6837\u672c \\(\\mathcal{S} = \\{(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, y_m)\\}\\) , \u8fd9\u91cc\u8bbe\u6837\u672c\u96c6\u4e00\u5171\u53ef\u80fd\u6709 \\(K\\) \u79cd\u3002\u53e6\u5916\uff0c\u771f\u5b9e\u5206\u5e03 \\(\\mathcal{D}\\) \u4f1a\u6709 \\(T = 2^{2m}\\) \u79cd, \u5373 \\(\\mathcal{D} \\in \\{\\mathcal{D}_1, \\mathcal{D}_2, \\ldots, \\mathcal{D}_{T}\\}\\) \u3002 \u8fd9\u91cc\u6211\u4eec\u7528 \\(0-1\\) \u8bef\u5dee\u51fd\u6570\u6765\u8861\u91cf\u5206\u7c7b\u51fd\u6570\u3002 \u5173\u952e\u7684\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u5c06\u8981\u8bc1\u660e: \u5bf9\u4e8e\u4efb\u610f\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5 \\(A\\) , \\[ \\tag{1} \\label{step1} \\max_{i} \\mathbb{E}_{\\mathcal{S} \\sim \\mathcal{D}_i} [L_{\\mathcal{D}_i}(A(\\mathcal{S})] \\ge \\frac{1}{4}. \\] \u8bc1\u660e \u63d0\u9192\uff0c\u5bf9\u4e8e\u6709\u9650\u96c6\u5408 \\(\\mathcal{Z}\\) , \u771f\u5b9e\u7684 \\(p_{\\mathcal{D}}(\\mathbf{x})\\) \u662f\u5747\u5300\u5206\u5e03\u3002\u53e6\u5916\u5b9a\u4e49\uff1a\u5927\u5c0f\u4e3a m \u7684\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u4e00\u5171\u53ef\u80fd\u6709 \\(K\\) \u79cd\u3002 \\[\\begin{align*} \\tag{2} \\label{step2} &\\max_{i} \\mathbb{E}_{\\mathcal{S} \\sim \\mathcal{D}_i} [L_{\\mathcal{D}_i}(A(\\mathcal{S})] \\\\ =& \\max_{i} \\frac{1}{K} \\sum^{K}_{j=1} L_{\\mathcal{D}_i}(A(\\mathcal{S}_j)) \\\\ \\ge& \\frac{1}{T} \\sum^{T}_{i=1} \\frac{1}{K} \\sum^{K}_{j=1} L_{\\mathcal{D}_i}(A(\\mathcal{S}_j)) \\\\ =& \\frac{1}{K} \\sum^{K}_{j=1} \\frac{1}{T} \\sum^{T}_{i=1} L_{\\mathcal{D}_i}(A(\\mathcal{S}_j)) \\\\ \\ge& \\min_{j}\\frac{1}{T} \\sum^{T}_{i=1} L_{\\mathcal{D}_i}(A(\\mathcal{S}_j)). \\end{align*}\\] \u56e0\u4e3a\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u4f1a\u6709\u91cd\u590d\u7684\u5143\u7d20\uff0c\u6211\u4eec\u5b9a\u4e49\u6ca1\u6709\u51fa\u73b0\u5728\u6837\u672c\u96c6\u4e2d\u7684\u5143\u7d20\u5bf9\u5e94\u7684\u96c6\u5408\u662f \\(\\mathcal{Z}' = \\{(\\mathbf{x}_1, y_1), \\ldots, (\\mathbf{x}_p, y_p)\\}\\) \uff0c\u5176\u4e2d \\(p \\ge m\\) \u3002\u6211\u4eec\u53ef\u5f97 \\[\\begin{align*} \\tag{3} \\label{step3} &L_{\\mathcal{D}_i}(A(\\mathcal{S}_j)) \\\\ =& \\frac{1}{2m} \\sum^{}_{(\\mathbf{x}, y) \\in \\mathcal{Z}} 1 \\{A(\\mathcal{S}_j)(\\mathbf{x}) \\ne y\\}\\\\ \\ge& \\frac{1}{2p} \\sum^{}_{(\\mathbf{x}, y) \\in \\mathcal{Z}'} 1 \\{A(\\mathcal{S}_j)(\\mathbf{x}) \\ne y\\} \\\\ \\ge& \\frac{1}{2} \\min_{(\\mathbf{x}, y) \\in \\mathcal{Z}'} 1 \\{A(\\mathcal{S}_j)(\\mathbf{x}) \\ne y\\}. \\end{align*}\\] \u6211\u4eec\u5e26\u5165 \\(\\eqref{step2}\\) , \u53ef\u5f97 \\(\\forall A\\) , \\[\\begin{align*} \\tag{4} \\label{step4} &\\max_{i} \\mathbb{E}_{\\mathcal{S} \\sim \\mathcal{D}_i} [L_{\\mathcal{D}_i}(A(\\mathcal{S})] \\ge \\frac{1}{2} \\min_{(\\mathbf{x}, y) \\in \\mathcal{Z}'} \\frac{1}{T} \\sum^{T}_{i=1}1 \\{A(\\mathcal{S}_j)(\\mathbf{x}) \\ne y\\} \\ge \\frac{1}{4}. \\end{align*}\\] \u9a6c\u5c14\u53ef\u592b\u4e0d\u7b49\u5f0f\u53ca\u5176\u53d8\u79cd \u9a6c\u5c14\u53ef\u592b\u4e0d\u7b49\u5f0f\u662f\uff1a \\[ P[Z \\ge a] \\le \\mathbb{E}[Z] / a. \\] \u5e76\u4e14\uff0c\u5982\u679c \\(Z\\in[0,1]\\) \\(\\mathbb{E}[Z]=\\mu\\) , \u90a3\u4e48 \\(\\forall a \\in (0, 1)\\) \uff0c \\[ P[Z>1-a]=1-\\mathbb{P}[Z\\le 1-a]=1-P[{1-a\\ge Z}] \\ge1-\\frac{\\mathbb{E}[1-Z]}{a}=1-\\frac{1-\\mu}{a}. \\] \u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u5f97\uff1a \\(\\exists \\mathcal{D}\\) , \u6ee1\u8db3 \\[ \\tag{5} P_{S \\sim \\mathcal{D}}\\left[L_{\\mathcal{D}}(A(S)) \\ge \\frac{1}{8}\\right] \\ge \\frac{1}{7}. \\] \u8fdb\u4e00\u6b65\u6269\u5c55\u5730\u8bf4\uff0c\u5982\u679c \\(\\mathcal{Z}\\) \u4e2d\u7684 \\(\\mathbf{x}\\) \u7a7a\u95f4\u662f\u8fde\u7eed\u7684, \u4e0d\u518d\u662f\u6709\u9650\u7684\uff0c\u90a3\u4e48\u6837\u672c \\(m\\) \u518d\u5927\uff0c\u6211\u4eec\u4e5f\u4e0d\u53ef\u80fd\u6210\u529f\u5730\u5b66\u4e60\u3002","title":"No Free Lunch"},{"location":"ML/10-NoFreeLunch/#no-free-lunch","text":"\u6ca1\u6709\u514d\u8d39\u5348\u9910\u662f\u673a\u5668\u5b66\u4e60\u91cc\u7684\u4e00\u4e2a\u975e\u5e38\u7ecf\u5178\u7684\u7ed3\u8bba\uff0c\u90a3\u4e48\uff0c\u5b83\u7a76\u7adf\u6307\u7684\u662f\u4ec0\u4e48\u5462\uff1f \u6211\u4eec\u7a0d\u5fae\u4e25\u8c28\u5730\u8ba8\u8bba\u4e00\u4e0b\u3002 \u9996\u5148\u6211\u4eec\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1a\u6709\u6ca1\u6709\u4e00\u4e2a\u4e07\u80fd\u7684\u5b66\u4e60\u65b9\u6cd5\uff0c\u5bf9\u6240\u6709\u540c\u7c7b\u578b\u7684\u95ee\u9898\u90fd\u80fd\u89e3\u7684\u6700\u597d\u5462\uff1f \u6211\u4eec\u5728\u89e3\u51b3\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u95ee\u9898\u7684\u65f6\u5019\uff0c \u6211\u4eec\u9700\u8981\u901a\u8fc7\u4e00\u4e2a\u5148\u9a8c\u77e5\u8bc6\u6784\u9020\u4e00\u4e2a\u5047\u8bbe\u96c6\uff0c\u7136\u540e\u4ece\u5047\u8bbe\u96c6\u91cc\u6311\u51fa\u4e00\u4e2a\u6700\u63a5\u8fd1\u771f\u5b9e\u76ee\u6807\u5206\u5e03\u7684\u8fd1\u4f3c\u5206\u5e03\u6765\u3002\u90a3\u4e48\uff0c\u5982\u679c\u8fd9\u4e2a\u4e07\u80fd\u7684\u5b66\u4e60\u65b9\u6cd5\u5b58\u5728\uff0c\u5219\u610f\u5473\u7740\u8fd9\u4e2a\u5047\u8bbe\u96c6\u975e\u5e38\u5927\uff0c\u5305\u542b\u6240\u6709\u53ef\u80fd\u7684\u5206\u5e03\u3002 \u4e0a\u9762\u8fd9\u6bb5\u8bdd\u6bd4\u8f83\u62bd\u8c61\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bb2\u89e3\uff1a\u73b0\u5728\u6211\u4eec\u8981\u89e3\u51b3\u7684\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c \\(\\mathbf{x}\\in\\mathbb{R}^d\\) \u5e76\u4e14 \\(y \\in \\{0, 1\\}\\) \u3002 \\(P(y \\vert \\mathbf{x})\\) \u5bf9\u5e94\u67d0\u4e2a\u672a\u77e5\u7684\u5206\u5e03 \\(\\mathcal{D}\\) \u3002\u90a3\u4e48\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u4e07\u80fd\u7684\u5b66\u4e60\u65b9\u6cd5\uff0c\u65e0\u8bba \\(\\mathcal{D}\\) \u662f\u4ec0\u4e48\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u6982\u7387\u6e10\u8fdb\u6b63\u786e(PAC)\u7684\u3002 \u6ca1\u6709\u514d\u8d39\u5348\u9910 \u5b9a\u7406\u544a\u8bc9\u6211\u4eec\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u6837\u672c\u518d\u591a\u4e5f\u4e0d\u53ef\u80fd\u3002 \u5b9a\u7406\u7684\u8bc1\u660e\uff0c\u4e14\u4e0d\u8bf4 \\(\\mathcal{D}\\) \u662f\u4efb\u610f\u7684\u5206\u5e03\uff0c \\(P_{\\mathcal{D}}(y \\vert \\mathbf{x})\\) \u662fdeterministic\u5206\u5e03\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\uff0c\u4e5f\u662f\u4e0d\u53ef\u80fd\u7684\u3002 deterministic \u5206\u5e03\u6307\u7684\u662f \\(P_{\\mathcal{D}}(y = 1 \\vert \\mathbf{x}) = 1\\) \u6216\u8005 \\(P_{\\mathcal{D}}(y = 0 \\vert \\mathbf{x}) = 1\\) \u3002 \u6211\u4eec\u9650\u5b9a\u6240\u9762\u5bf9\u7684\u4e8c\u5206\u7c7b\u673a\u5668\u5b66\u4e60\u95ee\u9898\u4e2d\uff0c \\(P_{\\mathcal{D}}(y \\vert \\mathbf{x})\\) \u662f deterministic \u5206\u5e03, \u5e76\u4e14 \\(p_{\\mathcal{D}}(\\mathbf{x})\\) \u662f\u5747\u5300\u5206\u5e03\u3002\u6211\u4eec\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u4e5f\u662f\u6240\u6709 \\(deterministic\\) \u5206\u5e03\u7684\u96c6\u5408\u3002\u90a3\u4e48 \\(P_{\\mathcal{D}}(y \\vert \\mathbf{x}) \\in \\mathcal{H}\\) \u3002 \u63a5\u4e0b\u6765\u6211\u8981\u8bc1\u660e\uff0c\u65e0\u8bba\u6837\u672c\u6709\u591a\u5c11\u4e2a\uff0c\u6211\u4eec\u90fd\u4f1a\u5b58\u5728\u8fc7\u62df\u5408\u7684\u98ce\u9669\u3002 \u9996\u5148\uff0c\u6211\u4eec\u8ba8\u8bba\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u8ba4\u4e3a\u771f\u5b9e\u6570\u636e\u96c6\u5408\u4e3a\u6709\u9650\u96c6\u5408 \\(\\mathcal{Z}\\) , \u5176\u4e2d \\(\\vert \\mathcal{Z} \\vert = 2m\\) \uff0c\u6211\u4eec\u4ece\u4e2d\u91c7\u96c6m\u4e2a\u6837\u672c \\(\\mathcal{S} = \\{(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\ldots, (\\mathbf{x}_m, y_m)\\}\\) , \u8fd9\u91cc\u8bbe\u6837\u672c\u96c6\u4e00\u5171\u53ef\u80fd\u6709 \\(K\\) \u79cd\u3002\u53e6\u5916\uff0c\u771f\u5b9e\u5206\u5e03 \\(\\mathcal{D}\\) \u4f1a\u6709 \\(T = 2^{2m}\\) \u79cd, \u5373 \\(\\mathcal{D} \\in \\{\\mathcal{D}_1, \\mathcal{D}_2, \\ldots, \\mathcal{D}_{T}\\}\\) \u3002 \u8fd9\u91cc\u6211\u4eec\u7528 \\(0-1\\) \u8bef\u5dee\u51fd\u6570\u6765\u8861\u91cf\u5206\u7c7b\u51fd\u6570\u3002 \u5173\u952e\u7684\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u5c06\u8981\u8bc1\u660e: \u5bf9\u4e8e\u4efb\u610f\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5 \\(A\\) , \\[ \\tag{1} \\label{step1} \\max_{i} \\mathbb{E}_{\\mathcal{S} \\sim \\mathcal{D}_i} [L_{\\mathcal{D}_i}(A(\\mathcal{S})] \\ge \\frac{1}{4}. \\] \u8bc1\u660e \u63d0\u9192\uff0c\u5bf9\u4e8e\u6709\u9650\u96c6\u5408 \\(\\mathcal{Z}\\) , \u771f\u5b9e\u7684 \\(p_{\\mathcal{D}}(\\mathbf{x})\\) \u662f\u5747\u5300\u5206\u5e03\u3002\u53e6\u5916\u5b9a\u4e49\uff1a\u5927\u5c0f\u4e3a m \u7684\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u4e00\u5171\u53ef\u80fd\u6709 \\(K\\) \u79cd\u3002 \\[\\begin{align*} \\tag{2} \\label{step2} &\\max_{i} \\mathbb{E}_{\\mathcal{S} \\sim \\mathcal{D}_i} [L_{\\mathcal{D}_i}(A(\\mathcal{S})] \\\\ =& \\max_{i} \\frac{1}{K} \\sum^{K}_{j=1} L_{\\mathcal{D}_i}(A(\\mathcal{S}_j)) \\\\ \\ge& \\frac{1}{T} \\sum^{T}_{i=1} \\frac{1}{K} \\sum^{K}_{j=1} L_{\\mathcal{D}_i}(A(\\mathcal{S}_j)) \\\\ =& \\frac{1}{K} \\sum^{K}_{j=1} \\frac{1}{T} \\sum^{T}_{i=1} L_{\\mathcal{D}_i}(A(\\mathcal{S}_j)) \\\\ \\ge& \\min_{j}\\frac{1}{T} \\sum^{T}_{i=1} L_{\\mathcal{D}_i}(A(\\mathcal{S}_j)). \\end{align*}\\] \u56e0\u4e3a\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u4f1a\u6709\u91cd\u590d\u7684\u5143\u7d20\uff0c\u6211\u4eec\u5b9a\u4e49\u6ca1\u6709\u51fa\u73b0\u5728\u6837\u672c\u96c6\u4e2d\u7684\u5143\u7d20\u5bf9\u5e94\u7684\u96c6\u5408\u662f \\(\\mathcal{Z}' = \\{(\\mathbf{x}_1, y_1), \\ldots, (\\mathbf{x}_p, y_p)\\}\\) \uff0c\u5176\u4e2d \\(p \\ge m\\) \u3002\u6211\u4eec\u53ef\u5f97 \\[\\begin{align*} \\tag{3} \\label{step3} &L_{\\mathcal{D}_i}(A(\\mathcal{S}_j)) \\\\ =& \\frac{1}{2m} \\sum^{}_{(\\mathbf{x}, y) \\in \\mathcal{Z}} 1 \\{A(\\mathcal{S}_j)(\\mathbf{x}) \\ne y\\}\\\\ \\ge& \\frac{1}{2p} \\sum^{}_{(\\mathbf{x}, y) \\in \\mathcal{Z}'} 1 \\{A(\\mathcal{S}_j)(\\mathbf{x}) \\ne y\\} \\\\ \\ge& \\frac{1}{2} \\min_{(\\mathbf{x}, y) \\in \\mathcal{Z}'} 1 \\{A(\\mathcal{S}_j)(\\mathbf{x}) \\ne y\\}. \\end{align*}\\] \u6211\u4eec\u5e26\u5165 \\(\\eqref{step2}\\) , \u53ef\u5f97 \\(\\forall A\\) , \\[\\begin{align*} \\tag{4} \\label{step4} &\\max_{i} \\mathbb{E}_{\\mathcal{S} \\sim \\mathcal{D}_i} [L_{\\mathcal{D}_i}(A(\\mathcal{S})] \\ge \\frac{1}{2} \\min_{(\\mathbf{x}, y) \\in \\mathcal{Z}'} \\frac{1}{T} \\sum^{T}_{i=1}1 \\{A(\\mathcal{S}_j)(\\mathbf{x}) \\ne y\\} \\ge \\frac{1}{4}. \\end{align*}\\] \u9a6c\u5c14\u53ef\u592b\u4e0d\u7b49\u5f0f\u53ca\u5176\u53d8\u79cd \u9a6c\u5c14\u53ef\u592b\u4e0d\u7b49\u5f0f\u662f\uff1a \\[ P[Z \\ge a] \\le \\mathbb{E}[Z] / a. \\] \u5e76\u4e14\uff0c\u5982\u679c \\(Z\\in[0,1]\\) \\(\\mathbb{E}[Z]=\\mu\\) , \u90a3\u4e48 \\(\\forall a \\in (0, 1)\\) \uff0c \\[ P[Z>1-a]=1-\\mathbb{P}[Z\\le 1-a]=1-P[{1-a\\ge Z}] \\ge1-\\frac{\\mathbb{E}[1-Z]}{a}=1-\\frac{1-\\mu}{a}. \\] \u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u5f97\uff1a \\(\\exists \\mathcal{D}\\) , \u6ee1\u8db3 \\[ \\tag{5} P_{S \\sim \\mathcal{D}}\\left[L_{\\mathcal{D}}(A(S)) \\ge \\frac{1}{8}\\right] \\ge \\frac{1}{7}. \\] \u8fdb\u4e00\u6b65\u6269\u5c55\u5730\u8bf4\uff0c\u5982\u679c \\(\\mathcal{Z}\\) \u4e2d\u7684 \\(\\mathbf{x}\\) \u7a7a\u95f4\u662f\u8fde\u7eed\u7684, \u4e0d\u518d\u662f\u6709\u9650\u7684\uff0c\u90a3\u4e48\u6837\u672c \\(m\\) \u518d\u5927\uff0c\u6211\u4eec\u4e5f\u4e0d\u53ef\u80fd\u6210\u529f\u5730\u5b66\u4e60\u3002","title":"No Free Lunch"},{"location":"ML/11-VCDimension/","text":"VC Dimension \u00b6 \u4ece \u6ca1\u6709\u514d\u8d39\u5348\u9910 \u5f97\u5230\u542f\u793a\uff1a\u5bf9\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u5982\u679c\u4f7f\u7528\u67d0\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u5047\u8bbe\u96c6\uff0c\u90a3\u4e48\u5b66\u51fa\u6765\u7684\u5206\u7c7b\u5668\u5e76\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u7684\u5047\u8bbe\u96c6\u5e94\u8be5\u6ee1\u8db3\u4ec0\u4e48\u6027\u8d28\u624d\u80fd\u4fdd\u8bc1\u7b97\u6cd5\u662fPAC\u53ef\u5b66\u7684\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e2a\u6982\u5ff5\uff0cVC\u7ef4(\u7531Vladimir Vapnik \u548c Alexey Chervonenkis \u63d0\u51fa)\u3002 \u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u628a\u95ee\u9898\u9650\u5236\u5728\u4e8c\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u5373\u6837\u672c\u7a7a\u95f4 \\(\\mathcal{Z} = \\mathcal{X} \\times \\mathcal{Y}\\) , \u5176\u4e2d \\(\\mathcal{Y} = \\{-1, 1\\}\\) \u3002\u5e76\u4e14\uff0c\u6211\u4eec\u6784\u9020\u7684\u5047\u8bbe\u96c6 \\(\\mathcal{H} = \\{ h(\\mathbf{x}) \\}\\) \u662fdeterministc\u5206\u5e03\u7684\u96c6\u5408\u3002 \u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6837\u672c\u96c6 \\(\\mathcal{S} = (\\mathbf{x}_1, \\mathbf{x}_2, \\ldots, \\mathbf{x}_m)\\) \u3002\u90a3\u4e48\uff0c\u6211\u4eec\u7ed3\u5408 \\(\\mathcal{S}\\) \u548c \u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\uff1a \\[ \\tag{1} \\label{restriction} \\mathcal{H}_{\\mathcal{S}} = \\{(h(\\mathbf{x}_1), h(\\mathbf{x}_2), \\ldots, h(\\mathbf{x}_m)), h \\in \\mathcal{H}, \\mathbf{x}_i \\in \\mathcal{S}\\}. \\] \u8fd9\u4e2a\u96c6\u5408\u662f \\(\\mathcal{S}\\) \u4e0a\u7684\u4e00\u4e2a\u5047\u8bbe\u96c6\uff0c\u5e76\u4e14\u662f\u6709\u9650\u7684\uff0c \\(\\vert \\mathcal{H}_{\\mathcal{S}} \\vert \\le 2^{m}\\) \u3002\u5982\u679c \\(\\vert \\mathcal{H}_{\\mathcal{S}} \\vert = 2^{m}\\) , \u6211\u4eec\u79f0 \\(\\mathcal{H}\\) shatters \\(\\mathcal{S}\\) \u3002 \u5b9a\u4e49 ( VC Dimension ) \u7ed9\u5b9a\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \uff0c\u5b83\u7684VC\u7ef4\u662f $$ \\max \\vert \\mathcal{S} \\vert, \\quad \\vert \\mathcal{H}_{\\mathcal{S}} \\vert = 2 ^{\\vert \\mathcal{S} \\vert}. $$ \u8981\u6c42\u89e3\u4e00\u4e2a\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u7684VC\u7ef4\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u6ee1\u8db3\uff1a\u5b83 \u7684 \\(\\mathcal{H}_{\\mathcal{S}}\\) \u80fd\u5b8c\u5168\u8868\u8fbe\u6837\u672c\u96c6\u7684\u6240\u6709\u53ef\u80fd\u7684\u5206\u7c7b\u51fd\u6570\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u8fd8 \u8981\u8bc1\u660e\uff0c\u6240\u6709\u5927\u4e8e \\(\\mathcal{S}\\) \u7684\u6837\u672c\u96c6 \\(\\mathcal{S}'\\) \u5bf9\u5e94\u7684 \\(\\mathcal{H}_{\\mathcal{S}'}\\) \u4e0d\u80fd\u5b8c\u5168\u5305\u542b \\(\\mathcal{S}'\\) \u7684\u5206\u7c7b\u51fd\u6570\u3002 Growth Function and Sauer's Lemma \u00b6 \u5b9a\u4e49 ( Growth Function ) \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \uff0c\u6211\u4eec\u7684\u5b9a\u4e49\u5b83\u7684\u6210\u957f\u51fd\u6570\u4e3a $$ \\tau_{\\mathcal{H}}(m) = \\max_{\\mathcal{S} \\subset \\mathcal{X}, \\vert \\mathcal{S} \\vert = m} \\vert \\mathcal{H}_{S} \\vert. $$ \u9996\u5148\uff0c\u5982\u679c \\(VCdim(\\mathcal{H}) = d\\) \uff0c\u90a3\u4e48\u5f53 \\(m \\le d\\) \u65f6\uff0c \\(\\tau_{\\mathcal{H}}(m) = 2^m\\) \u3002\u5e76\u4e14\uff0c\u6839\u636e Sauer-Shelah-Perles \u5f15\u7406\uff0c\u6211\u4eec\u53ef\u77e5\uff0c \\(\\tau_{\\mathcal{H}}(m)\\) \u7684\u589e\u957f \u901f\u5ea6\u662f\u591a\u9879\u5f0f\u7684\uff0c\u800c\u4e0d\u662f\u6307\u6570\u7684\u3002 \u5f15\u7406 ( Sauer-Shelah-Perles \u5f15\u7406) \u5982\u679c \\(VCdim(\\mathcal{H}) \\le d\\) , \u90a3\u4e48 \\(\\tau(m) \\le \\sum^d_{i=1} C^i_m\\) \u3002\u7279\u522b\u5730\uff0c\u5f53 \\(m > d+1\\) \u65f6\uff0c \\(\\tau_{\\mathcal{H}}(m) \\le (em / d)^d\\) \u3002 VC\u7ef4\u4e0eRademacher\u590d\u6742\u5ea6\u7684\u8054\u7cfb \u00b6 \u6211\u4eec\u5df2\u77e5\uff0c\u5bf9\u4e8e\u6709\u9650\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) , \u4f7f\u7528 \\(0-1\\) \u8bef\u5dee\u65f6\uff0c\u6211\u4eec\u6709\u754c \\[ R(\\mathcal{H} \\circ \\mathcal{S}) \\le \\sqrt{\\frac{2 \\ln \\vert \\mathcal{H} \\vert}{m}}. \\] \u5176\u5b9e VC-\u7ef4 \u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u65e0\u9650\u5047\u8bbe\u96c6\u7684\u6709\u9650\u754c\uff0c\u6240\u4ee5\u6211\u4eec\u5f88\u5feb\u53ef\u4ee5\u5f97\u51fa\uff1a\u5982\u679c\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u7684 VC\u7ef4 \u662f \\(d\\) \uff0c\u5e76\u4e14 \\(m \\ge d \\ge 1\\) \uff0c\u90a3\u4e48\uff1a $$ R(\\mathcal{H} \\circ \\mathcal{S}) \\le \\sqrt{\\frac{2 \\ln \\vert \\Pi_{\\mathcal{H}}(\\mathcal{S}) \\vert}{m}} \\le \\sqrt{\\frac{2 d \\ln(em/d) }{m}}. $$","title":"VC Dimension"},{"location":"ML/11-VCDimension/#vc-dimension","text":"\u4ece \u6ca1\u6709\u514d\u8d39\u5348\u9910 \u5f97\u5230\u542f\u793a\uff1a\u5bf9\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u5982\u679c\u4f7f\u7528\u67d0\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u5047\u8bbe\u96c6\uff0c\u90a3\u4e48\u5b66\u51fa\u6765\u7684\u5206\u7c7b\u5668\u5e76\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u7684\u5047\u8bbe\u96c6\u5e94\u8be5\u6ee1\u8db3\u4ec0\u4e48\u6027\u8d28\u624d\u80fd\u4fdd\u8bc1\u7b97\u6cd5\u662fPAC\u53ef\u5b66\u7684\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e2a\u6982\u5ff5\uff0cVC\u7ef4(\u7531Vladimir Vapnik \u548c Alexey Chervonenkis \u63d0\u51fa)\u3002 \u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u628a\u95ee\u9898\u9650\u5236\u5728\u4e8c\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u5373\u6837\u672c\u7a7a\u95f4 \\(\\mathcal{Z} = \\mathcal{X} \\times \\mathcal{Y}\\) , \u5176\u4e2d \\(\\mathcal{Y} = \\{-1, 1\\}\\) \u3002\u5e76\u4e14\uff0c\u6211\u4eec\u6784\u9020\u7684\u5047\u8bbe\u96c6 \\(\\mathcal{H} = \\{ h(\\mathbf{x}) \\}\\) \u662fdeterministc\u5206\u5e03\u7684\u96c6\u5408\u3002 \u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6837\u672c\u96c6 \\(\\mathcal{S} = (\\mathbf{x}_1, \\mathbf{x}_2, \\ldots, \\mathbf{x}_m)\\) \u3002\u90a3\u4e48\uff0c\u6211\u4eec\u7ed3\u5408 \\(\\mathcal{S}\\) \u548c \u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\uff1a \\[ \\tag{1} \\label{restriction} \\mathcal{H}_{\\mathcal{S}} = \\{(h(\\mathbf{x}_1), h(\\mathbf{x}_2), \\ldots, h(\\mathbf{x}_m)), h \\in \\mathcal{H}, \\mathbf{x}_i \\in \\mathcal{S}\\}. \\] \u8fd9\u4e2a\u96c6\u5408\u662f \\(\\mathcal{S}\\) \u4e0a\u7684\u4e00\u4e2a\u5047\u8bbe\u96c6\uff0c\u5e76\u4e14\u662f\u6709\u9650\u7684\uff0c \\(\\vert \\mathcal{H}_{\\mathcal{S}} \\vert \\le 2^{m}\\) \u3002\u5982\u679c \\(\\vert \\mathcal{H}_{\\mathcal{S}} \\vert = 2^{m}\\) , \u6211\u4eec\u79f0 \\(\\mathcal{H}\\) shatters \\(\\mathcal{S}\\) \u3002 \u5b9a\u4e49 ( VC Dimension ) \u7ed9\u5b9a\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \uff0c\u5b83\u7684VC\u7ef4\u662f $$ \\max \\vert \\mathcal{S} \\vert, \\quad \\vert \\mathcal{H}_{\\mathcal{S}} \\vert = 2 ^{\\vert \\mathcal{S} \\vert}. $$ \u8981\u6c42\u89e3\u4e00\u4e2a\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u7684VC\u7ef4\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u6ee1\u8db3\uff1a\u5b83 \u7684 \\(\\mathcal{H}_{\\mathcal{S}}\\) \u80fd\u5b8c\u5168\u8868\u8fbe\u6837\u672c\u96c6\u7684\u6240\u6709\u53ef\u80fd\u7684\u5206\u7c7b\u51fd\u6570\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u8fd8 \u8981\u8bc1\u660e\uff0c\u6240\u6709\u5927\u4e8e \\(\\mathcal{S}\\) \u7684\u6837\u672c\u96c6 \\(\\mathcal{S}'\\) \u5bf9\u5e94\u7684 \\(\\mathcal{H}_{\\mathcal{S}'}\\) \u4e0d\u80fd\u5b8c\u5168\u5305\u542b \\(\\mathcal{S}'\\) \u7684\u5206\u7c7b\u51fd\u6570\u3002","title":"VC Dimension"},{"location":"ML/11-VCDimension/#growth-function-and-sauers-lemma","text":"\u5b9a\u4e49 ( Growth Function ) \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \uff0c\u6211\u4eec\u7684\u5b9a\u4e49\u5b83\u7684\u6210\u957f\u51fd\u6570\u4e3a $$ \\tau_{\\mathcal{H}}(m) = \\max_{\\mathcal{S} \\subset \\mathcal{X}, \\vert \\mathcal{S} \\vert = m} \\vert \\mathcal{H}_{S} \\vert. $$ \u9996\u5148\uff0c\u5982\u679c \\(VCdim(\\mathcal{H}) = d\\) \uff0c\u90a3\u4e48\u5f53 \\(m \\le d\\) \u65f6\uff0c \\(\\tau_{\\mathcal{H}}(m) = 2^m\\) \u3002\u5e76\u4e14\uff0c\u6839\u636e Sauer-Shelah-Perles \u5f15\u7406\uff0c\u6211\u4eec\u53ef\u77e5\uff0c \\(\\tau_{\\mathcal{H}}(m)\\) \u7684\u589e\u957f \u901f\u5ea6\u662f\u591a\u9879\u5f0f\u7684\uff0c\u800c\u4e0d\u662f\u6307\u6570\u7684\u3002 \u5f15\u7406 ( Sauer-Shelah-Perles \u5f15\u7406) \u5982\u679c \\(VCdim(\\mathcal{H}) \\le d\\) , \u90a3\u4e48 \\(\\tau(m) \\le \\sum^d_{i=1} C^i_m\\) \u3002\u7279\u522b\u5730\uff0c\u5f53 \\(m > d+1\\) \u65f6\uff0c \\(\\tau_{\\mathcal{H}}(m) \\le (em / d)^d\\) \u3002","title":"Growth Function and Sauer's Lemma"},{"location":"ML/11-VCDimension/#vcrademacher","text":"\u6211\u4eec\u5df2\u77e5\uff0c\u5bf9\u4e8e\u6709\u9650\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) , \u4f7f\u7528 \\(0-1\\) \u8bef\u5dee\u65f6\uff0c\u6211\u4eec\u6709\u754c \\[ R(\\mathcal{H} \\circ \\mathcal{S}) \\le \\sqrt{\\frac{2 \\ln \\vert \\mathcal{H} \\vert}{m}}. \\] \u5176\u5b9e VC-\u7ef4 \u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u65e0\u9650\u5047\u8bbe\u96c6\u7684\u6709\u9650\u754c\uff0c\u6240\u4ee5\u6211\u4eec\u5f88\u5feb\u53ef\u4ee5\u5f97\u51fa\uff1a\u5982\u679c\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u7684 VC\u7ef4 \u662f \\(d\\) \uff0c\u5e76\u4e14 \\(m \\ge d \\ge 1\\) \uff0c\u90a3\u4e48\uff1a $$ R(\\mathcal{H} \\circ \\mathcal{S}) \\le \\sqrt{\\frac{2 \\ln \\vert \\Pi_{\\mathcal{H}}(\\mathcal{S}) \\vert}{m}} \\le \\sqrt{\\frac{2 d \\ln(em/d) }{m}}. $$","title":"VC\u7ef4\u4e0eRademacher\u590d\u6742\u5ea6\u7684\u8054\u7cfb"},{"location":"ML/12-GenerationsOfBoosting/","text":"Generations Of Boosting \u00b6 \u8fd9\u4e00\u7bc7\u6d89\u53ca\u7684\u662fBoosting\u7b97\u6cd5\u7684\u8fdb\u4e00\u6b65\u7406\u89e3\uff0c\u7b97\u662f\u4e00\u7bc7\u8bfb\u4e66\u7b14\u8bb0\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u7684\u6536\u83b7\u5f88\u5927\u3002 \u51e0\u4e4e\u6240\u6709\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6784\u9020\u7684\u903b\u8f91\u90fd\u662f\uff1a\u5148\u786e\u5b9a\u4e00\u4e2a\u5047\u8bbe\u96c6\uff0c\u7136\u540e\u6784\u9020\u4e00\u4e2a\u635f\u5931\u51fd\u6570\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u5047\u8bbe\u96c6\u91cc\u6311\u51fa\u90a3\u4e2a\u4f7f\u635f\u5931\u51fd\u6570\u6700\u5c0f\u7684\u5143\u7d20\u3002 \u5728\u5b9e\u9645\u4e2d\uff0c\u6211\u4eec\u53ea\u80fd\u901a\u8fc7\u6837\u672c\u6765\u4f18\u5316\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u80fd\u4f18\u5316\u5bf9\u5e94\u7684 \u7ecf\u9a8c\u635f\u5931\u51fd\u6570 \u3002\u5bf9\u5e94\u7684,\u539f\u672c\u7684\u635f\u5931\u51fd\u6570\u6211\u4eec\u79f0\u4e3a \u771f\u5b9e\u635f\u5931\u51fd\u6570 \u3002\u5728\u7edf\u8ba1\u673a\u5668\u5b66\u4e60\u7684\u7406\u8bba\u4e2d\uff0c\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u662f\u5728\u7814\u7a76\u8fd9\u4e24\u4e2a\u635f\u5931\u51fd\u6570\u4e4b\u95f4\u7684\u8ddd\u79bb\u8be5\u600e\u4e48\u4fdd\u969c\u3002 \u5728\u6211\u7684\u6240\u77e5\u91cc\uff0c\u6240\u6709\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u90fd\u53ef\u4ee5\u6309\u7167\u8fd9\u4e2a\u903b\u8f91\u8fdb\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u903b\u8f91\u975e\u5e38\u6e05\u6670\u660e\u4e86\uff0c\u4f46\u662f\u8d1d\u53f6\u65af\u7b97\u6cd5\u9664\u5916\u3002\u8d1d\u53f6\u65af\u6846\u67b6\u4e0b\u7684\u7b97\u6cd5\u5f88\u96be\u5199\u51fa\u4e00\u4e2a\u771f\u5b9e\u635f\u5931\u51fd\u6570\u548c\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\uff0c\u5bfc\u81f4\u4e86\u5b83\u7684\u6cdb\u5316\u8bef\u5dee\u6bd4\u8f83\u96be\u5206\u6790\u3002\u5173\u4e8e\u8d1d\u53f6\u65af\u65b9\u6cd5\u6211\u8fd8\u6709\u5f88\u591a\u8981\u8bf4\u7684\uff0c\u4f46\u662f\u8d85\u8fc7\u4e86\u8fd9\u4e00\u7bc7\u8bfb\u4e66\u7b14\u8bb0\u7684\u4e3b\u9898\uff0c\u6211\u5c31\u4e0d\u518d\u7ee7\u7eed\u4e86\u3002 Boosting\u7b97\u6cd5\u662f\u80fd\u591f\u4ece\u635f\u5931\u51fd\u6570\u7684\u89d2\u5ea6\u6765\u7406\u89e3\uff0c\u5728 AdaBoost \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u81ea\u7136\u6307\u6570\u635f\u5931\u51fd\u6570\u7684\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u8fc7\u7a0b\u3002\u4e0d\u8fc7\u8fd9\u79cd\u7406\u89e3\u4e0d\u591f\u5177\u6709\u6cdb\u5316\u80fd\u529b\uff0c\u6211\u4eec\u65e0\u6cd5\u5c06\u5b83\u63a8\u5e7f\u5230\u5176\u4ed6\u9886\u57df\u3002\u8fd9\u7bc7\u6587\u7ae0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u635f\u5931\u51fd\u6570\u6765\u7406\u89e3AdaBoost\u7b97\u6cd5\uff0c\u540c\u65f6\u4e5f\u80fd\u63a8\u5e7f\u51fa\u5176\u4ed6\u7684Boosting\u7b97\u6cd5\u3002 AdaBoost\u7b97\u6cd5\u7684\u590d\u4e60\u4e0e\u7b80\u5355\u63a8\u5e7f \u00b6 \u6211\u4eec\u9996\u5148\u56de\u5fc6\u4e00\u4e0bAdaBoost\u7b97\u6cd5\u3002AdaBoost\u7b97\u6cd5\u662f\u89e3\u51b3\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u4e00\u4e2a\u7b97\u6cd5\u3002\u5b83\u7684\u6837\u672c\u7a7a\u95f4 \\((\\mathbf{x}, y)\\) \u4e2d\u7684 \\(y \\in \\{-1, 1\\}\\) \u3002\u5b83\u7684\u5047\u8bbe\u96c6\u5982\u4e0b \\[ \\tag{1} \\mathcal{H}_{Ada} = \\left\\{ F_{\\pmb{\\lambda}} = \\sum^{N}_{j=1}\\lambda_j h_j, h_j \\in \\mathcal{H} \\right\\}. \\] \u5176\u4e2d \\(\\mathcal{H}\\) \u662f\u4e00\u4e2a\u5f31\u5206\u7c7b\u5668\u7684\u96c6\u5408 \\[ \\tag{2} \\mathcal{H} = \\left\\{ h_1, \\ldots, h_N \\right\\}, \\] \u5b83\u4eec\u7684\u771f\u5b9e\u51c6\u786e\u7387\u90fd\u5927\u4e8e50%\u3002 AdaBoost\u7b97\u6cd5\u6784\u9020\u7684\u635f\u5931\u51fd\u6570\u662f \\[ \\tag{3} L_S(\\pmb{\\lambda}) = \\frac{1}{m}\\sum^{m}_{i=1}\\exp(-y_i F_{\\pmb{\\lambda}}(\\mathbf{x}_i)). \\] \u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u591a\u79cd\u65b9\u6cd5\u6765\u4f18\u5316\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\uff1a\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u3001\u968f\u673a\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u4ee5\u53ca\u68af\u5ea6\u4e0b\u964d\u3002 \u6211\u4eec\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u6269\u5c55\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u7528\u4e8e\u56de\u5f52\u95ee\u9898\u3002 \u65e2\u7136\u662f\u56de\u5f52\u95ee\u9898\uff0c\u6211\u4eec\u7684\u6837\u672c\u7a7a\u95f4 \\((\\mathbf{x}, y)\\) \u4e2d\u7684 \\(y\\in\\mathbb{R}\\) \u3002 \u6211\u4eec\u5148\u4e0d\u7ba1\u5f31\u5206\u7c7b\u5668\u7684\u5b9a\u4e49\u662f\u4ec0\u4e48\uff0c\u603b\u4e4b\u6211\u4eec\u62e5\u6709\u4e00\u4e2a\u5f31\u5206\u7c7b\u5668\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5047\u8bbe\u96c6\uff0c\u5b83\u7684\u5143\u7d20\u662f\u5f31\u5206\u7c7b\u5668\u7684\u7ebf\u6027\u7ec4\u5408\u3002 \u90a3\u4e48\u5bf9\u5e94\u7684\u635f\u5931\u51fd\u6570\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e3a\uff1a \\[ \\tag{4} L_S(\\pmb{\\lambda}) = \\frac{1}{m}\\sum^{m}_{i=1}(F_{\\pmb{\\lambda}}(\\mathbf{x}_i) - y_i)^2. \\] \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u60f3\u7528\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u6cd5\u6765\u4f18\u5316\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6bcf\u4e00\u6b65\u9700\u8981\u6c42\u89e3\u4e0b\u9762\u8fd9\u4e2a\u5b50\u95ee\u9898\uff1a \\[ \\tag{5} \\min_{\\alpha_t, h_t} \\frac{1}{m}\\sum^{m}_{i=1}(F_{t-1}(\\mathbf{x}_i) + \\alpha_t h_t(\\mathbf{x}_i) - y_i)^2. \\] \u9996\u5148\u6211\u4eec\u53ef\u4ee5\u6c42\u89e3\u5f97\u5230\uff1a \\[ \\tag{6} \\label{alphaOptimalStep} \\alpha^*_t = \\sum^{m}_{i=1}r_i \\frac{h_t(\\mathbf{x}_i)}{\\Vert h_t \\Vert^2_2}, \\] \u5176\u4e2d \\(r_i = y_i - F_{t-1}(\\mathbf{x}_i)\\) , \u5e76\u4e14 \\(\\Vert h_t \\Vert_2 = \\sqrt{\\sum^{m}_{i=1}h^2_t(\\mathbf{x}_i)}\\) . \u6211\u4eec\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u7684\u5dee\u503c\u53ef\u5f97\uff1a \\[\\begin{align*} & \\frac{1}{m}\\sum^{m}_{i=1}(F_{t-1}(\\mathbf{x}_i) + \\alpha_t h_t(\\mathbf{x}_i) - y_i)^2 - \\frac{1}{m}\\sum^{m}_{i=1}(F_{t-1}(\\mathbf{x}_i)- y_i)^2\\\\ =& \\frac{1}{m}\\sum^{m}_{i=1}[2 F_{t-1}(\\mathbf{x}_i) - 2 y_i + \\alpha_t h_t(\\mathbf{x}_i)] \\cdot \\alpha_t h_t(\\mathbf{x}_i)\\\\ =& \\frac{1}{m}\\sum^{m}_{i=1}[\\alpha_t h_t(\\mathbf{x}_i) - 2 r_i] \\cdot \\alpha_t h_t(\\mathbf{x}_i) \\end{align*}\\] \u6211\u4eec\u5c06 \\(\\alpha^*_t\\) \u5e26\u5165\u4e0a\u5f0f\u53ef\u5f97\u4e00\u4e2a\u65b0\u7684\u5b50\u95ee\u9898 \\[ \\tag{7} \\label{} \\min_{h_t} -\\frac{1}{m}\\left( \\sum^{m}_{i=1} r_i \\frac{h_t(\\mathbf{x}_i)}{\\Vert h_t \\Vert_2} \\right)^2. \\] \u5982\u679c\u6211\u4eec\u80fd\u4fdd\u8bc1 \\(h_t(x_i) r_i\\) \u662f\u6b63\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u7b49\u4ef7\u7684\u635f\u5931\u51fd\u6570 \\[ \\tag{8} \\min_{h_t} \\frac{1}{m}\\sum^{m}_{i=1} \\left( \\frac{h_t(x_i)}{\\Vert h_t \\Vert_2} - r_i \\right)^2. \\] \u6cdb\u51fd\u68af\u5ea6\u4e0b\u964d \u00b6 \u5728\u524d\u9762\uff0c\u6211\u4eec\u8ba4\u4e3aAdaBoost\u662f\u4e00\u79cd\u53c2\u6570\u7a7a\u95f4 \\(\\pmb{\\lambda}\\) \u4e0a\u7684\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u3002\u8fd9\u79cd\u7406\u89e3\u867d\u7136\u5f88\u6709\u7528\u5e76\u4e14\u4f18\u7f8e\uff0c\u4f46\u662f\u4e5f\u963b\u788d\u4e86\u6211\u4eec\u6269\u5c55\u8fd9\u4e2a\u7b97\u6cd5\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u53e6\u4e00\u79cd\u89c6\u89d2\u6765\u7406\u89e3AdaBoost\uff0c\u5b83\u66f4\u6709\u7528\u66f4\u4f18\u7f8e\uff0c\u5e76\u4e14\u5b83\u5f88\u5bb9\u6613\u63a8\u5e7f\u5230\u5176\u4ed6\u635f\u5931\u51fd\u6570\u4e0a\u3002\u8fd9\u4e2a\u89c6\u89d2\u5c31\u662f \u6cdb\u51fd\u68af\u5ea6\u4e0b\u964d \u3002 \u9996\u5148\uff0c\u6211\u4eec\u4e0d\u518d\u4ee5\u53c2\u6570\u7a7a\u95f4 \\(\\pmb{\\lambda}\\) \u7684\u89c6\u89d2\u6765\u770b\u5f85\u5047\u8bbe\u96c6\u4ee5\u53ca\u635f\u5931\u51fd\u6570\uff0c\u6211\u4eec\u8ba4\u4e3a\u5047\u8bbe\u96c6\u7684\u5143\u7d20\u5c31\u662f\u4e00\u4e2a\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u7684\u635f\u5931\u51fd\u6570\u7684\u81ea\u53d8\u91cf\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\u3002\u6bd4\u5982\uff0c\u5728AdaBoost\u4e2d\uff0c\u635f\u5931\u51fd\u6570\u4e3a\uff1a \\[ \\tag{9} L_S(F) = \\frac{1}{m}\\sum^{m}_{i=1} \\exp{(-y_i F(\\mathbf{x}_i))}. \\] \u5728\u8fd9\u4e2a\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\u4e2d, \u6211\u4eec\u53ea\u5173\u5fc3\u51fd\u6570 \\(F\\) \u5728\u6837\u672c\u96c6\u4e0a\u7684\u53d6\u503c\uff0c\u56e0\u6b64\u51fd\u6570 \\(F\\) \u4e5f\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u5728\u7a7a\u95f4 \\(\\mathbb{R}^{m}\\) \u4e0a\u7684\u5411\u91cf \\(f\\) \u3002\u6211\u4eec\u8981\u5728\u5168\u7a7a\u95f4 \\(\\mathbb{R}^{m}\\) \u4e0a\u505a\u4f18\u5316\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff0c\u90a3\u4e48\u5b83\u7684\u66f4\u65b0\u7b56\u7565\u5c31\u53d8\u6210\u4e86 \\[ \\tag{10}\\label{functionalGradientDescent} F \\leftarrow F - \\alpha \\nabla L_S(F), \\] \u5176\u4e2d \\(\\nabla L_S(F) = \\left[\\frac{\\partial{L_S(F)}}{\\partial{F(\\mathbf{x}_1)}}, \\frac{\\partial{L_S(F)}}{\\partial{F(\\mathbf{x}_2)}}, \\ldots, \\frac{\\partial{L_S(F)}}{\\partial{F(\\mathbf{x}_m)}}\\right]^T\\) . \u5982\u679c \\(F\\) \u662f\u5728 \\(\\mathbb{R}^{m}\\) \u4e0a\uff0c\u4e00\u65b9\u9762\u5b83\u5728 \\(\\mathbb{R}^{m}\\) \u4e0a\u6ca1\u6709\u9650\u5236\uff0c\u5bfc\u81f4\u5b83\u53ef\u4ee5\u5b8c\u7f8e\u62df\u5408\u6837\u672c\u96c6\uff0c\u53e6\u4e00\u65b9\u9762\u5b83\u53c8\u53ea\u5728 \\(\\mathbb{R}^{m}\\) \u4e0a\u6709\u5b9a\u4e49\uff0c\u5bfc\u81f4\u5b83\u6ca1\u6709\u6cdb\u5316\u6027\u3002 \u6211\u4eec\u56de\u5f52\u5230\u539f\u59cb\u7684\u5047\u8bbe\u96c6\uff0c\u6211\u4eec\u5e0c\u671b \\(F\\) \u662f\u5728\u5f31\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u7684\u5143\u7d20\u4f5c\u4e3a\u57fa\u7684\u7a7a\u95f4\u4e0a\uff0c\u5e76\u4e14\u6211\u4eec\u9650\u5236 \\(F\\) \u7684\u66f4\u65b0\u89c4\u5219\u662f \\[ \\tag{11} F(\\mathbf{x}_i) \\leftarrow F(\\mathbf{x}_i) + \\alpha h, \\quad s.t. h \\in \\mathcal{H}. \\] \u90a3\u4e48\uff0c\u6211\u4eec\u4e3a\u4e86\u5c3d\u53ef\u80fd\u8ba9\u4e0a\u5f0f\u63a5\u8fd1 \u6cdb\u51fd\u68af\u5ea6\u4e0b\u964d \uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u8ba9 \\(h\\) \u4e0e \\(-\\nabla L_S(F)\\) \u5c3d\u53ef\u80fd\u540c\u5411\u3002\u8fd9\u91cc\u6211\u4eec\u5c06\u5b83\u8f6c\u5316\u4e3a\u6700\u5927\u5316\u5185\u79ef\u7684\u95ee\u9898\uff0c\u6784\u9020\u4e00\u4e2a\u5b50\u95ee\u9898\uff1a \\[ \\tag{12} \\max_{h \\in \\mathcal{H}} - \\nabla L_S(F) \\cdot h = - \\sum^{m}_{i=1} \\frac{\\partial{L_S(F)}}{\\partial{F(\\mathbf{x}_i)}} h(\\mathbf{x}_i). \\] \u6211\u4eec\u79f0\u4e0a\u9762\u8fd9\u79cd\u65b9\u6cd5\u4e3a AnyBoost \u3002 \u6211\u4eec\u9996\u5148\u628aAdaBoost\u7684\u6307\u6570\u635f\u5931\u51fd\u6570\u5e26\u5165\u5230\u4e0a\u5f0f\u53ef\u4ee5\u5f97\u5230AdaBoost\u6709\u5173\u7684\u5b50\u95ee\u9898\uff1a \\[ \\tag{13}\\label{AdaBoostFunctional} \\min_{h_t} \\frac{1}{m}\\sum^{m}_{i=1}y_i h_t(\\mathbf{x}_i) \\exp(-y_i F_{t-1}(\\mathbf{x}_i)). \\] \u6cbf\u7528AdaBoost\u5b9a\u4e49\u7684\u7b26\u53f7\uff0c\u6211\u4eec\u4f7f\u7528 \\(D_t(i) = \\frac{exp(-y_i F_{t-1} (\\mathbf{x}_i))}{\\sum^{m}_{j=1}exp(-y_j F(\\mathbf{x}_j))}\\) \uff0c\u4ee5\u53ca \\(\\epsilon_t = P_{(\\mathbf{x}, y) \\sim D_t} [h_t(\\mathbf{x}) \\ne y]\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(\\eqref{AdaBoostFunctional}\\) \u5f0f\u7684\u4e00\u4e2a\u7b49\u4ef7\u95ee\u9898 \\[ \\tag{14} \\min_{h_t} \\epsilon_t\uff0c \\] \u8fd9\u5c31\u662fAdaBoost\u4e2d\u6bcf\u4e00\u6b65\u4e2d\uff0c\u5bf9\u6837\u672c\u52a0\u6743\u540e\u7684\u5206\u7c7b\u95ee\u9898\u3002 \u8fd9\u65f6\uff0c\u6211\u4eec\u518d\u6765\u56de\u5934\u770b\u770b\u56de\u5f52\u95ee\u9898\u6cdb\u51fd\u5f62\u5f0f\u7684\u635f\u5931\u51fd\u6570\uff1a \\[ \\tag{15} L(F) = \\frac{1}{m} \\sum^{m}_{i=1}(F(\\mathbf{x}_i) - y_i)^2\uff0c \\] \u5b83\u5bf9\u5e94\u7684\u68af\u5ea6\u4e3a \\[ \\tag{16} \\frac{\\partial{L_S(F)}}{\\partial{F(\\mathbf{x}_i)}} = \\frac{2}{m}(F(\\mathbf{x}_i) - y_i), \\] \u5e76\u4e14\u5b83\u5bf9\u5e94\u7684\u5b50\u95ee\u9898\u662f \\[ \\tag{17} \\max_{h_t} \\frac{2}{m} \\sum^{m}_{i=1} h_t(\\mathbf{x}_i) (y_i - F(\\mathbf{x}_i)). \\] \u5907\u6ce8\uff0c\u6bcf\u4e00\u6b65\u7684\u6700\u4f18\u6b65\u957f\u5df2\u7ecf\u5728 \\(\\eqref{alphaOptimalStep}\\) \u4e2d\u7b97\u51fa\u6765\u4e86\u3002 \u903b\u8f91\u56de\u5f52\u4e0e\u6761\u4ef6\u6982\u7387 \u00b6 \u6211\u4eec\u7528\u903b\u8f91\u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\u6765\u66ff\u6362AdaBoost\u6240\u4f7f\u7528\u7684\u6307\u6570\u635f\u5931\u51fd\u6570\uff1a \\[ \\tag{18} L_S(F) = \\sum^{m}_{i = 1}\\ln[1 + exp(-y_i F(\\mathbf{x}_i))], \\] \u90a3\u4e48\u5b83\u7684\u68af\u5ea6\u5c31\u662f \\[ \\tag{19} \\frac{\\partial{L(F)}}{\\partial{F(\\mathbf{x}_i)}} = \\frac{-y_i}{1 + \\exp(y_i F(\\mathbf{x}_i))}, \\] \u90a3\u4e48\u6211\u4eec\u9700\u8981\u6c42\u89e3\u7684\u5b50\u95ee\u9898\u662f: \\[ \\tag{20} \\max_{h_t \\in \\mathcal{H}} \\sum^{m}_{i=1}\\frac{y_i h(\\mathbf{x}_i)}{1 + \\exp(y_i F(\\mathbf{x}_i))}. \\] \u8fd9\u4e2a\u5b50\u95ee\u9898\u76f8\u76f8\u5f53\u4e8e\u7ed9\u6bcf\u4e2a\u6837\u672c\u589e\u52a0\u6743\u91cd \\(\\frac{1}{1 + \\exp{(y_i F(\\mathbf{x}_i))}}\\) \u7684\u5206\u7c7b\u95ee\u9898\u3002 \u8fd9\u4e2a\u6743\u91cd\u662f\u5728[0,1]\u533a\u95f4\u5185\u7684\uff0c\u800c\u539f\u672c\u7684AdaBoost\u7684\u6743\u91cd \\(\\exp(-y_iF(\\mathbf{x}_i)\\) \u662f\u6ca1\u6709\u4e0a\u754c\u7684\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6700\u4f18\u7684\u66f4\u65b0\u6b65\u957f \\(\\alpha_t\\) \u3002 \u6211\u4eec\u4f9d\u65e7\u662f\u6784\u9020\u4e00\u4e2a\u5b50\u95ee\u9898\u6765\u6c42\u89e3\u6700\u4f18\u6b65\u957f \\(\\alpha_t\\) : \\[ \\tag{21} \\min_{\\alpha_t} \\sum^{m}_{i=1} \\frac{\\exp{(-y_i \\alpha h(\\mathbf{x}_i))} - 1}{1 + \\exp(y_i F(\\mathbf{x}_i))} \\] \u8bc1\u660e \u8fd9\u91cc\u7684\u8bc1\u660e\u6211\u76f4\u63a5\u4ece\u539f\u4e66\u4e2d\u62ff\u8fc7\u6765\u4e86\uff0c\u6240\u4ee5\u7b26\u53f7\u6709\u4e00\u70b9\u70b9\u4e0d\u540c\uff0c\u4e0d\u8fc7\u4e0d\u5f71\u54cd\u7406\u89e3\uff1a \\[\\begin{aligned} \\Delta \\mathcal{L} & \\doteq \\mathcal{L}(F+\\alpha h)-\\mathcal{L}(F) \\\\ &=\\sum_{i=1}^{m} \\ln \\left(1+e^{-y_{i}\\left(F\\left(x_{i}\\right)+\\alpha h\\left(x_{i}\\right)\\right)}\\right)-\\sum_{i=1}^{m} \\ln \\left(1+e^{-y_{i} F\\left(x_{i}\\right)}\\right) \\\\ &=\\sum_{i=1}^{m} \\ln \\left(\\frac{1+e^{-y_{i}\\left(F\\left(x_{i}\\right)+\\alpha h\\left(x_{i}\\right)\\right)}}{1+e^{-y_{i} F\\left(x_{i}\\right)}}\\right) \\\\ &=\\sum_{i=1}^{m} \\ln \\left(1+\\frac{e^{-y_{i}\\left(F\\left(x_{i}\\right)+\\alpha h\\left(x_{i}\\right)\\right)}-e^{-y_{i} F\\left(x_{i}\\right)}}{1+e^{-y_{i} F\\left(x_{i}\\right)}}\\right) \\\\ & \\leq \\sum_{i=1}^{m} \\frac{e^{-y_{i}\\left(F\\left(x_{i}\\right)+\\alpha h\\left(x_{i}\\right)\\right)}-e^{-y_{i} F\\left(x_{i}\\right)}}{1+e^{-y_{i} F\\left(x_{i}\\right)}} \\\\ &=\\sum_{i=1}^{m} \\frac{e^{-y_{i} \\alpha h\\left(x_{i}\\right)}-1}{1+e^{y_{i} F\\left(x_{i}\\right)}} \\end{aligned}\\] \u6211\u4eec\u5b9a\u4e49 \\(D_t(i) = \\frac{1/(1 + exp(y_i F(\\mathbf{x}_i)))}{\\sum^{m}_{j=1} 1/(1 + \\exp(y_i F(\\mathbf{x}_i)) }\\) , \u4ee5\u53ca\u8bef\u5dee\u503c \\(\\epsilon_t = P_{(\\mathbf{x}, y) \\sim D_t}[y \\ne h(\\mathbf{x})]\\) , \u90a3\u4e48\u548cAdaBoost\u4e2d\u6700\u4f18\u6b65\u957f\u63a8\u5bfc\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230: \\[ \\tag{22} \\alpha^* = \\frac{1}{2} \\ln\\left( \\frac{1-\\epsilon}{\\epsilon} \\right). \\] \u4e0a\u9762\u7684\u8fd9\u4e2a\u7b97\u6cd5\u4e5f\u53eb\u4f5c AdaBoost.L \u3002\u4ece\u5b83\u4e2d\u95f4\u6784\u9020\u7684 \\(D_t\\) \u53ef\u5f97\uff1a\u5728\u79bb\u7fa4\u70b9\u6570\u636e\u4e2d\uff0c\u5b83\u6bd4AdaBoost\u66f4\u9c81\u90a6\uff0c\u654f\u611f\u5ea6\u66f4\u4f4e\u3002 \u867d\u7136\u6211\u4eec\u5728\u63a8\u5bfc\u4e2d\u7ecf\u8fc7\u4e86\u4e00\u6b21\u653e\u7f29\uff0c\u6700\u540e\u7684\u7684 \\(\\alpha^*\\) \u4e5f\u662f\u539f\u95ee\u9898\u7684\u6700\u4f18\u89e3\u7684\u3002(\u5177\u4f53\u5206\u6790\u5728\u4e66\u4e2d\u7b2c200\u9875\uff09\u3002 Cite Boosting:Fundations and Algorithms ,ch7.","title":"Generation Of Boosting"},{"location":"ML/12-GenerationsOfBoosting/#generations-of-boosting","text":"\u8fd9\u4e00\u7bc7\u6d89\u53ca\u7684\u662fBoosting\u7b97\u6cd5\u7684\u8fdb\u4e00\u6b65\u7406\u89e3\uff0c\u7b97\u662f\u4e00\u7bc7\u8bfb\u4e66\u7b14\u8bb0\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u7684\u6536\u83b7\u5f88\u5927\u3002 \u51e0\u4e4e\u6240\u6709\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6784\u9020\u7684\u903b\u8f91\u90fd\u662f\uff1a\u5148\u786e\u5b9a\u4e00\u4e2a\u5047\u8bbe\u96c6\uff0c\u7136\u540e\u6784\u9020\u4e00\u4e2a\u635f\u5931\u51fd\u6570\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u5047\u8bbe\u96c6\u91cc\u6311\u51fa\u90a3\u4e2a\u4f7f\u635f\u5931\u51fd\u6570\u6700\u5c0f\u7684\u5143\u7d20\u3002 \u5728\u5b9e\u9645\u4e2d\uff0c\u6211\u4eec\u53ea\u80fd\u901a\u8fc7\u6837\u672c\u6765\u4f18\u5316\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u80fd\u4f18\u5316\u5bf9\u5e94\u7684 \u7ecf\u9a8c\u635f\u5931\u51fd\u6570 \u3002\u5bf9\u5e94\u7684,\u539f\u672c\u7684\u635f\u5931\u51fd\u6570\u6211\u4eec\u79f0\u4e3a \u771f\u5b9e\u635f\u5931\u51fd\u6570 \u3002\u5728\u7edf\u8ba1\u673a\u5668\u5b66\u4e60\u7684\u7406\u8bba\u4e2d\uff0c\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u662f\u5728\u7814\u7a76\u8fd9\u4e24\u4e2a\u635f\u5931\u51fd\u6570\u4e4b\u95f4\u7684\u8ddd\u79bb\u8be5\u600e\u4e48\u4fdd\u969c\u3002 \u5728\u6211\u7684\u6240\u77e5\u91cc\uff0c\u6240\u6709\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u90fd\u53ef\u4ee5\u6309\u7167\u8fd9\u4e2a\u903b\u8f91\u8fdb\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u903b\u8f91\u975e\u5e38\u6e05\u6670\u660e\u4e86\uff0c\u4f46\u662f\u8d1d\u53f6\u65af\u7b97\u6cd5\u9664\u5916\u3002\u8d1d\u53f6\u65af\u6846\u67b6\u4e0b\u7684\u7b97\u6cd5\u5f88\u96be\u5199\u51fa\u4e00\u4e2a\u771f\u5b9e\u635f\u5931\u51fd\u6570\u548c\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\uff0c\u5bfc\u81f4\u4e86\u5b83\u7684\u6cdb\u5316\u8bef\u5dee\u6bd4\u8f83\u96be\u5206\u6790\u3002\u5173\u4e8e\u8d1d\u53f6\u65af\u65b9\u6cd5\u6211\u8fd8\u6709\u5f88\u591a\u8981\u8bf4\u7684\uff0c\u4f46\u662f\u8d85\u8fc7\u4e86\u8fd9\u4e00\u7bc7\u8bfb\u4e66\u7b14\u8bb0\u7684\u4e3b\u9898\uff0c\u6211\u5c31\u4e0d\u518d\u7ee7\u7eed\u4e86\u3002 Boosting\u7b97\u6cd5\u662f\u80fd\u591f\u4ece\u635f\u5931\u51fd\u6570\u7684\u89d2\u5ea6\u6765\u7406\u89e3\uff0c\u5728 AdaBoost \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u81ea\u7136\u6307\u6570\u635f\u5931\u51fd\u6570\u7684\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u8fc7\u7a0b\u3002\u4e0d\u8fc7\u8fd9\u79cd\u7406\u89e3\u4e0d\u591f\u5177\u6709\u6cdb\u5316\u80fd\u529b\uff0c\u6211\u4eec\u65e0\u6cd5\u5c06\u5b83\u63a8\u5e7f\u5230\u5176\u4ed6\u9886\u57df\u3002\u8fd9\u7bc7\u6587\u7ae0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u635f\u5931\u51fd\u6570\u6765\u7406\u89e3AdaBoost\u7b97\u6cd5\uff0c\u540c\u65f6\u4e5f\u80fd\u63a8\u5e7f\u51fa\u5176\u4ed6\u7684Boosting\u7b97\u6cd5\u3002","title":"Generations Of Boosting"},{"location":"ML/12-GenerationsOfBoosting/#adaboost","text":"\u6211\u4eec\u9996\u5148\u56de\u5fc6\u4e00\u4e0bAdaBoost\u7b97\u6cd5\u3002AdaBoost\u7b97\u6cd5\u662f\u89e3\u51b3\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u4e00\u4e2a\u7b97\u6cd5\u3002\u5b83\u7684\u6837\u672c\u7a7a\u95f4 \\((\\mathbf{x}, y)\\) \u4e2d\u7684 \\(y \\in \\{-1, 1\\}\\) \u3002\u5b83\u7684\u5047\u8bbe\u96c6\u5982\u4e0b \\[ \\tag{1} \\mathcal{H}_{Ada} = \\left\\{ F_{\\pmb{\\lambda}} = \\sum^{N}_{j=1}\\lambda_j h_j, h_j \\in \\mathcal{H} \\right\\}. \\] \u5176\u4e2d \\(\\mathcal{H}\\) \u662f\u4e00\u4e2a\u5f31\u5206\u7c7b\u5668\u7684\u96c6\u5408 \\[ \\tag{2} \\mathcal{H} = \\left\\{ h_1, \\ldots, h_N \\right\\}, \\] \u5b83\u4eec\u7684\u771f\u5b9e\u51c6\u786e\u7387\u90fd\u5927\u4e8e50%\u3002 AdaBoost\u7b97\u6cd5\u6784\u9020\u7684\u635f\u5931\u51fd\u6570\u662f \\[ \\tag{3} L_S(\\pmb{\\lambda}) = \\frac{1}{m}\\sum^{m}_{i=1}\\exp(-y_i F_{\\pmb{\\lambda}}(\\mathbf{x}_i)). \\] \u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u591a\u79cd\u65b9\u6cd5\u6765\u4f18\u5316\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\uff1a\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u3001\u968f\u673a\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u4ee5\u53ca\u68af\u5ea6\u4e0b\u964d\u3002 \u6211\u4eec\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u6269\u5c55\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u7528\u4e8e\u56de\u5f52\u95ee\u9898\u3002 \u65e2\u7136\u662f\u56de\u5f52\u95ee\u9898\uff0c\u6211\u4eec\u7684\u6837\u672c\u7a7a\u95f4 \\((\\mathbf{x}, y)\\) \u4e2d\u7684 \\(y\\in\\mathbb{R}\\) \u3002 \u6211\u4eec\u5148\u4e0d\u7ba1\u5f31\u5206\u7c7b\u5668\u7684\u5b9a\u4e49\u662f\u4ec0\u4e48\uff0c\u603b\u4e4b\u6211\u4eec\u62e5\u6709\u4e00\u4e2a\u5f31\u5206\u7c7b\u5668\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5047\u8bbe\u96c6\uff0c\u5b83\u7684\u5143\u7d20\u662f\u5f31\u5206\u7c7b\u5668\u7684\u7ebf\u6027\u7ec4\u5408\u3002 \u90a3\u4e48\u5bf9\u5e94\u7684\u635f\u5931\u51fd\u6570\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e3a\uff1a \\[ \\tag{4} L_S(\\pmb{\\lambda}) = \\frac{1}{m}\\sum^{m}_{i=1}(F_{\\pmb{\\lambda}}(\\mathbf{x}_i) - y_i)^2. \\] \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u60f3\u7528\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u6cd5\u6765\u4f18\u5316\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6bcf\u4e00\u6b65\u9700\u8981\u6c42\u89e3\u4e0b\u9762\u8fd9\u4e2a\u5b50\u95ee\u9898\uff1a \\[ \\tag{5} \\min_{\\alpha_t, h_t} \\frac{1}{m}\\sum^{m}_{i=1}(F_{t-1}(\\mathbf{x}_i) + \\alpha_t h_t(\\mathbf{x}_i) - y_i)^2. \\] \u9996\u5148\u6211\u4eec\u53ef\u4ee5\u6c42\u89e3\u5f97\u5230\uff1a \\[ \\tag{6} \\label{alphaOptimalStep} \\alpha^*_t = \\sum^{m}_{i=1}r_i \\frac{h_t(\\mathbf{x}_i)}{\\Vert h_t \\Vert^2_2}, \\] \u5176\u4e2d \\(r_i = y_i - F_{t-1}(\\mathbf{x}_i)\\) , \u5e76\u4e14 \\(\\Vert h_t \\Vert_2 = \\sqrt{\\sum^{m}_{i=1}h^2_t(\\mathbf{x}_i)}\\) . \u6211\u4eec\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u7684\u5dee\u503c\u53ef\u5f97\uff1a \\[\\begin{align*} & \\frac{1}{m}\\sum^{m}_{i=1}(F_{t-1}(\\mathbf{x}_i) + \\alpha_t h_t(\\mathbf{x}_i) - y_i)^2 - \\frac{1}{m}\\sum^{m}_{i=1}(F_{t-1}(\\mathbf{x}_i)- y_i)^2\\\\ =& \\frac{1}{m}\\sum^{m}_{i=1}[2 F_{t-1}(\\mathbf{x}_i) - 2 y_i + \\alpha_t h_t(\\mathbf{x}_i)] \\cdot \\alpha_t h_t(\\mathbf{x}_i)\\\\ =& \\frac{1}{m}\\sum^{m}_{i=1}[\\alpha_t h_t(\\mathbf{x}_i) - 2 r_i] \\cdot \\alpha_t h_t(\\mathbf{x}_i) \\end{align*}\\] \u6211\u4eec\u5c06 \\(\\alpha^*_t\\) \u5e26\u5165\u4e0a\u5f0f\u53ef\u5f97\u4e00\u4e2a\u65b0\u7684\u5b50\u95ee\u9898 \\[ \\tag{7} \\label{} \\min_{h_t} -\\frac{1}{m}\\left( \\sum^{m}_{i=1} r_i \\frac{h_t(\\mathbf{x}_i)}{\\Vert h_t \\Vert_2} \\right)^2. \\] \u5982\u679c\u6211\u4eec\u80fd\u4fdd\u8bc1 \\(h_t(x_i) r_i\\) \u662f\u6b63\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u7b49\u4ef7\u7684\u635f\u5931\u51fd\u6570 \\[ \\tag{8} \\min_{h_t} \\frac{1}{m}\\sum^{m}_{i=1} \\left( \\frac{h_t(x_i)}{\\Vert h_t \\Vert_2} - r_i \\right)^2. \\]","title":"AdaBoost\u7b97\u6cd5\u7684\u590d\u4e60\u4e0e\u7b80\u5355\u63a8\u5e7f"},{"location":"ML/12-GenerationsOfBoosting/#_1","text":"\u5728\u524d\u9762\uff0c\u6211\u4eec\u8ba4\u4e3aAdaBoost\u662f\u4e00\u79cd\u53c2\u6570\u7a7a\u95f4 \\(\\pmb{\\lambda}\\) \u4e0a\u7684\u5750\u6807\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u3002\u8fd9\u79cd\u7406\u89e3\u867d\u7136\u5f88\u6709\u7528\u5e76\u4e14\u4f18\u7f8e\uff0c\u4f46\u662f\u4e5f\u963b\u788d\u4e86\u6211\u4eec\u6269\u5c55\u8fd9\u4e2a\u7b97\u6cd5\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u53e6\u4e00\u79cd\u89c6\u89d2\u6765\u7406\u89e3AdaBoost\uff0c\u5b83\u66f4\u6709\u7528\u66f4\u4f18\u7f8e\uff0c\u5e76\u4e14\u5b83\u5f88\u5bb9\u6613\u63a8\u5e7f\u5230\u5176\u4ed6\u635f\u5931\u51fd\u6570\u4e0a\u3002\u8fd9\u4e2a\u89c6\u89d2\u5c31\u662f \u6cdb\u51fd\u68af\u5ea6\u4e0b\u964d \u3002 \u9996\u5148\uff0c\u6211\u4eec\u4e0d\u518d\u4ee5\u53c2\u6570\u7a7a\u95f4 \\(\\pmb{\\lambda}\\) \u7684\u89c6\u89d2\u6765\u770b\u5f85\u5047\u8bbe\u96c6\u4ee5\u53ca\u635f\u5931\u51fd\u6570\uff0c\u6211\u4eec\u8ba4\u4e3a\u5047\u8bbe\u96c6\u7684\u5143\u7d20\u5c31\u662f\u4e00\u4e2a\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u7684\u635f\u5931\u51fd\u6570\u7684\u81ea\u53d8\u91cf\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\u3002\u6bd4\u5982\uff0c\u5728AdaBoost\u4e2d\uff0c\u635f\u5931\u51fd\u6570\u4e3a\uff1a \\[ \\tag{9} L_S(F) = \\frac{1}{m}\\sum^{m}_{i=1} \\exp{(-y_i F(\\mathbf{x}_i))}. \\] \u5728\u8fd9\u4e2a\u7ecf\u9a8c\u635f\u5931\u51fd\u6570\u4e2d, \u6211\u4eec\u53ea\u5173\u5fc3\u51fd\u6570 \\(F\\) \u5728\u6837\u672c\u96c6\u4e0a\u7684\u53d6\u503c\uff0c\u56e0\u6b64\u51fd\u6570 \\(F\\) \u4e5f\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u5728\u7a7a\u95f4 \\(\\mathbb{R}^{m}\\) \u4e0a\u7684\u5411\u91cf \\(f\\) \u3002\u6211\u4eec\u8981\u5728\u5168\u7a7a\u95f4 \\(\\mathbb{R}^{m}\\) \u4e0a\u505a\u4f18\u5316\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff0c\u90a3\u4e48\u5b83\u7684\u66f4\u65b0\u7b56\u7565\u5c31\u53d8\u6210\u4e86 \\[ \\tag{10}\\label{functionalGradientDescent} F \\leftarrow F - \\alpha \\nabla L_S(F), \\] \u5176\u4e2d \\(\\nabla L_S(F) = \\left[\\frac{\\partial{L_S(F)}}{\\partial{F(\\mathbf{x}_1)}}, \\frac{\\partial{L_S(F)}}{\\partial{F(\\mathbf{x}_2)}}, \\ldots, \\frac{\\partial{L_S(F)}}{\\partial{F(\\mathbf{x}_m)}}\\right]^T\\) . \u5982\u679c \\(F\\) \u662f\u5728 \\(\\mathbb{R}^{m}\\) \u4e0a\uff0c\u4e00\u65b9\u9762\u5b83\u5728 \\(\\mathbb{R}^{m}\\) \u4e0a\u6ca1\u6709\u9650\u5236\uff0c\u5bfc\u81f4\u5b83\u53ef\u4ee5\u5b8c\u7f8e\u62df\u5408\u6837\u672c\u96c6\uff0c\u53e6\u4e00\u65b9\u9762\u5b83\u53c8\u53ea\u5728 \\(\\mathbb{R}^{m}\\) \u4e0a\u6709\u5b9a\u4e49\uff0c\u5bfc\u81f4\u5b83\u6ca1\u6709\u6cdb\u5316\u6027\u3002 \u6211\u4eec\u56de\u5f52\u5230\u539f\u59cb\u7684\u5047\u8bbe\u96c6\uff0c\u6211\u4eec\u5e0c\u671b \\(F\\) \u662f\u5728\u5f31\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u7684\u5143\u7d20\u4f5c\u4e3a\u57fa\u7684\u7a7a\u95f4\u4e0a\uff0c\u5e76\u4e14\u6211\u4eec\u9650\u5236 \\(F\\) \u7684\u66f4\u65b0\u89c4\u5219\u662f \\[ \\tag{11} F(\\mathbf{x}_i) \\leftarrow F(\\mathbf{x}_i) + \\alpha h, \\quad s.t. h \\in \\mathcal{H}. \\] \u90a3\u4e48\uff0c\u6211\u4eec\u4e3a\u4e86\u5c3d\u53ef\u80fd\u8ba9\u4e0a\u5f0f\u63a5\u8fd1 \u6cdb\u51fd\u68af\u5ea6\u4e0b\u964d \uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u8ba9 \\(h\\) \u4e0e \\(-\\nabla L_S(F)\\) \u5c3d\u53ef\u80fd\u540c\u5411\u3002\u8fd9\u91cc\u6211\u4eec\u5c06\u5b83\u8f6c\u5316\u4e3a\u6700\u5927\u5316\u5185\u79ef\u7684\u95ee\u9898\uff0c\u6784\u9020\u4e00\u4e2a\u5b50\u95ee\u9898\uff1a \\[ \\tag{12} \\max_{h \\in \\mathcal{H}} - \\nabla L_S(F) \\cdot h = - \\sum^{m}_{i=1} \\frac{\\partial{L_S(F)}}{\\partial{F(\\mathbf{x}_i)}} h(\\mathbf{x}_i). \\] \u6211\u4eec\u79f0\u4e0a\u9762\u8fd9\u79cd\u65b9\u6cd5\u4e3a AnyBoost \u3002 \u6211\u4eec\u9996\u5148\u628aAdaBoost\u7684\u6307\u6570\u635f\u5931\u51fd\u6570\u5e26\u5165\u5230\u4e0a\u5f0f\u53ef\u4ee5\u5f97\u5230AdaBoost\u6709\u5173\u7684\u5b50\u95ee\u9898\uff1a \\[ \\tag{13}\\label{AdaBoostFunctional} \\min_{h_t} \\frac{1}{m}\\sum^{m}_{i=1}y_i h_t(\\mathbf{x}_i) \\exp(-y_i F_{t-1}(\\mathbf{x}_i)). \\] \u6cbf\u7528AdaBoost\u5b9a\u4e49\u7684\u7b26\u53f7\uff0c\u6211\u4eec\u4f7f\u7528 \\(D_t(i) = \\frac{exp(-y_i F_{t-1} (\\mathbf{x}_i))}{\\sum^{m}_{j=1}exp(-y_j F(\\mathbf{x}_j))}\\) \uff0c\u4ee5\u53ca \\(\\epsilon_t = P_{(\\mathbf{x}, y) \\sim D_t} [h_t(\\mathbf{x}) \\ne y]\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(\\eqref{AdaBoostFunctional}\\) \u5f0f\u7684\u4e00\u4e2a\u7b49\u4ef7\u95ee\u9898 \\[ \\tag{14} \\min_{h_t} \\epsilon_t\uff0c \\] \u8fd9\u5c31\u662fAdaBoost\u4e2d\u6bcf\u4e00\u6b65\u4e2d\uff0c\u5bf9\u6837\u672c\u52a0\u6743\u540e\u7684\u5206\u7c7b\u95ee\u9898\u3002 \u8fd9\u65f6\uff0c\u6211\u4eec\u518d\u6765\u56de\u5934\u770b\u770b\u56de\u5f52\u95ee\u9898\u6cdb\u51fd\u5f62\u5f0f\u7684\u635f\u5931\u51fd\u6570\uff1a \\[ \\tag{15} L(F) = \\frac{1}{m} \\sum^{m}_{i=1}(F(\\mathbf{x}_i) - y_i)^2\uff0c \\] \u5b83\u5bf9\u5e94\u7684\u68af\u5ea6\u4e3a \\[ \\tag{16} \\frac{\\partial{L_S(F)}}{\\partial{F(\\mathbf{x}_i)}} = \\frac{2}{m}(F(\\mathbf{x}_i) - y_i), \\] \u5e76\u4e14\u5b83\u5bf9\u5e94\u7684\u5b50\u95ee\u9898\u662f \\[ \\tag{17} \\max_{h_t} \\frac{2}{m} \\sum^{m}_{i=1} h_t(\\mathbf{x}_i) (y_i - F(\\mathbf{x}_i)). \\] \u5907\u6ce8\uff0c\u6bcf\u4e00\u6b65\u7684\u6700\u4f18\u6b65\u957f\u5df2\u7ecf\u5728 \\(\\eqref{alphaOptimalStep}\\) \u4e2d\u7b97\u51fa\u6765\u4e86\u3002","title":"\u6cdb\u51fd\u68af\u5ea6\u4e0b\u964d"},{"location":"ML/12-GenerationsOfBoosting/#_2","text":"\u6211\u4eec\u7528\u903b\u8f91\u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\u6765\u66ff\u6362AdaBoost\u6240\u4f7f\u7528\u7684\u6307\u6570\u635f\u5931\u51fd\u6570\uff1a \\[ \\tag{18} L_S(F) = \\sum^{m}_{i = 1}\\ln[1 + exp(-y_i F(\\mathbf{x}_i))], \\] \u90a3\u4e48\u5b83\u7684\u68af\u5ea6\u5c31\u662f \\[ \\tag{19} \\frac{\\partial{L(F)}}{\\partial{F(\\mathbf{x}_i)}} = \\frac{-y_i}{1 + \\exp(y_i F(\\mathbf{x}_i))}, \\] \u90a3\u4e48\u6211\u4eec\u9700\u8981\u6c42\u89e3\u7684\u5b50\u95ee\u9898\u662f: \\[ \\tag{20} \\max_{h_t \\in \\mathcal{H}} \\sum^{m}_{i=1}\\frac{y_i h(\\mathbf{x}_i)}{1 + \\exp(y_i F(\\mathbf{x}_i))}. \\] \u8fd9\u4e2a\u5b50\u95ee\u9898\u76f8\u76f8\u5f53\u4e8e\u7ed9\u6bcf\u4e2a\u6837\u672c\u589e\u52a0\u6743\u91cd \\(\\frac{1}{1 + \\exp{(y_i F(\\mathbf{x}_i))}}\\) \u7684\u5206\u7c7b\u95ee\u9898\u3002 \u8fd9\u4e2a\u6743\u91cd\u662f\u5728[0,1]\u533a\u95f4\u5185\u7684\uff0c\u800c\u539f\u672c\u7684AdaBoost\u7684\u6743\u91cd \\(\\exp(-y_iF(\\mathbf{x}_i)\\) \u662f\u6ca1\u6709\u4e0a\u754c\u7684\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6700\u4f18\u7684\u66f4\u65b0\u6b65\u957f \\(\\alpha_t\\) \u3002 \u6211\u4eec\u4f9d\u65e7\u662f\u6784\u9020\u4e00\u4e2a\u5b50\u95ee\u9898\u6765\u6c42\u89e3\u6700\u4f18\u6b65\u957f \\(\\alpha_t\\) : \\[ \\tag{21} \\min_{\\alpha_t} \\sum^{m}_{i=1} \\frac{\\exp{(-y_i \\alpha h(\\mathbf{x}_i))} - 1}{1 + \\exp(y_i F(\\mathbf{x}_i))} \\] \u8bc1\u660e \u8fd9\u91cc\u7684\u8bc1\u660e\u6211\u76f4\u63a5\u4ece\u539f\u4e66\u4e2d\u62ff\u8fc7\u6765\u4e86\uff0c\u6240\u4ee5\u7b26\u53f7\u6709\u4e00\u70b9\u70b9\u4e0d\u540c\uff0c\u4e0d\u8fc7\u4e0d\u5f71\u54cd\u7406\u89e3\uff1a \\[\\begin{aligned} \\Delta \\mathcal{L} & \\doteq \\mathcal{L}(F+\\alpha h)-\\mathcal{L}(F) \\\\ &=\\sum_{i=1}^{m} \\ln \\left(1+e^{-y_{i}\\left(F\\left(x_{i}\\right)+\\alpha h\\left(x_{i}\\right)\\right)}\\right)-\\sum_{i=1}^{m} \\ln \\left(1+e^{-y_{i} F\\left(x_{i}\\right)}\\right) \\\\ &=\\sum_{i=1}^{m} \\ln \\left(\\frac{1+e^{-y_{i}\\left(F\\left(x_{i}\\right)+\\alpha h\\left(x_{i}\\right)\\right)}}{1+e^{-y_{i} F\\left(x_{i}\\right)}}\\right) \\\\ &=\\sum_{i=1}^{m} \\ln \\left(1+\\frac{e^{-y_{i}\\left(F\\left(x_{i}\\right)+\\alpha h\\left(x_{i}\\right)\\right)}-e^{-y_{i} F\\left(x_{i}\\right)}}{1+e^{-y_{i} F\\left(x_{i}\\right)}}\\right) \\\\ & \\leq \\sum_{i=1}^{m} \\frac{e^{-y_{i}\\left(F\\left(x_{i}\\right)+\\alpha h\\left(x_{i}\\right)\\right)}-e^{-y_{i} F\\left(x_{i}\\right)}}{1+e^{-y_{i} F\\left(x_{i}\\right)}} \\\\ &=\\sum_{i=1}^{m} \\frac{e^{-y_{i} \\alpha h\\left(x_{i}\\right)}-1}{1+e^{y_{i} F\\left(x_{i}\\right)}} \\end{aligned}\\] \u6211\u4eec\u5b9a\u4e49 \\(D_t(i) = \\frac{1/(1 + exp(y_i F(\\mathbf{x}_i)))}{\\sum^{m}_{j=1} 1/(1 + \\exp(y_i F(\\mathbf{x}_i)) }\\) , \u4ee5\u53ca\u8bef\u5dee\u503c \\(\\epsilon_t = P_{(\\mathbf{x}, y) \\sim D_t}[y \\ne h(\\mathbf{x})]\\) , \u90a3\u4e48\u548cAdaBoost\u4e2d\u6700\u4f18\u6b65\u957f\u63a8\u5bfc\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230: \\[ \\tag{22} \\alpha^* = \\frac{1}{2} \\ln\\left( \\frac{1-\\epsilon}{\\epsilon} \\right). \\] \u4e0a\u9762\u7684\u8fd9\u4e2a\u7b97\u6cd5\u4e5f\u53eb\u4f5c AdaBoost.L \u3002\u4ece\u5b83\u4e2d\u95f4\u6784\u9020\u7684 \\(D_t\\) \u53ef\u5f97\uff1a\u5728\u79bb\u7fa4\u70b9\u6570\u636e\u4e2d\uff0c\u5b83\u6bd4AdaBoost\u66f4\u9c81\u90a6\uff0c\u654f\u611f\u5ea6\u66f4\u4f4e\u3002 \u867d\u7136\u6211\u4eec\u5728\u63a8\u5bfc\u4e2d\u7ecf\u8fc7\u4e86\u4e00\u6b21\u653e\u7f29\uff0c\u6700\u540e\u7684\u7684 \\(\\alpha^*\\) \u4e5f\u662f\u539f\u95ee\u9898\u7684\u6700\u4f18\u89e3\u7684\u3002(\u5177\u4f53\u5206\u6790\u5728\u4e66\u4e2d\u7b2c200\u9875\uff09\u3002 Cite Boosting:Fundations and Algorithms ,ch7.","title":"\u903b\u8f91\u56de\u5f52\u4e0e\u6761\u4ef6\u6982\u7387"},{"location":"ML/13-TheMarginsExplainationForBoosting/","text":"The Margins Explanation for Boosting\u2019s Effectiveness \u00b6 \u8fd9\u662f\u4e00\u7bc7\u9605\u8bfb\u7b14\u8bb0\uff0c\u5173\u4e8e\u300aBoosting Fundations and algorithms\u300b\u7684\u7b2c\u4e94\u7ae0\u3002\u8fd9\u4e00\u7ae0\u89e3\u91ca\u4e86 Margin Theory \u4ee5\u53ca\u5b83\u5728Boosting\u4e2d\u7684\u5e94\u7528\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e00\u4e0bMargin Theory\u6700\u539f\u59cb\u7684\u52a8\u673a\uff0c\u300aUnderstanding Machine Learning\u300b \u6240\u6d89\u53ca\u7684\u7406\u8bba\u8bef\u5dee\u754c\u5206\u6790\u7684\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\uff08 \\(y \\in \\{-1, 1\\}\\) \uff09\u7684\u5982\u4e0b\u7684\u5173\u7cfb\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}}\\{ \\mathbb{E}_{(\\mathbf{x}, y) \\sim \\mathcal{D}}[\\mathbf{1}_{h(\\mathbf{x}) \\ne y}] \\le \\mathbb{E}_{(\\mathbf{x}, y) \\sim \\mathcal{S}}[\\mathbf{1}_{h(\\mathbf{x}) \\ne y}] + \\epsilon(m, \\delta)\\} \\ge 1 - \\delta, \\] \u5176\u4e2d \\(\\mathcal{S}\\) \u662f\u4ece \\(\\mathcal{D}\\) \u4e2d\u72ec\u7acb\u540c\u5206\u5e03\u91c7\u7528\u4e86 \\(m\\) \u4e2a\u6837\u672c\u7684\u6837\u672c\u96c6\u3002\u4e0a\u5f0f\u8981\u6c42 \\(h(\\mathcal{x}) \\in \\{-1, 1\\}\\) , \u5982\u679c \\(h(\\mathcal{x}) \\in [-1, 1]\\) \uff0c\u90a3\u4e48\u6211\u4eec\u901a\u5e38\u4f7f\u7528 \\(sign(h(\\mathcal{x}))\\) \u6765\u4f5c\u4e3a\u6700\u7ec8\u7684\u4e8c\u5206\u7c7b\u5668\u3002 \u4f46\u662f\uff0c\u5982\u679c \\(h(\\mathcal{x}) \\in [-1, 1]\\) \u90a3\u4e48\u4e0a\u9762\u7684\u8bef\u5dee\u5206\u6790\u5c31\u4e0d\u591f\u7cbe\u786e\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3 \\(sign(h(\\mathbf{x}))\\) \u662f\u5426\u7b49\u4e8e \\(y\\) \uff0c\u6216\u8005\u8bf4 \\(yh(\\mathbf{x})\\) \u662f\u5426\u5c0f\u4e8e0\u3002\u6211\u4eec\u56de\u8fc7\u5934\u518d \u770b\uff1a\u5982\u679c \\(h(\\mathbf{x}) \\in [-1, 1]\\) \uff0c\u90a3\u4e48 \\(yh(\\mathbf{x})\\) \u672c\u8eab\u4e5f\u53cd\u6620\u7740\u5206\u7c7b\u5668 \\(h\\) \u7684\u67d0\u79cd\u7f6e\u4fe1\u7a0b\u5ea6\uff1a\u5982\u679c \\(h(\\mathbf{x})\\) \u8fdc\u8fdc\u5927\u4e8e0\uff0c\u90a3\u4e48 \\(h(\\mathbf{x})\\) \u6709\u5f88\u5927\u7684\u81ea\u4fe1 \\(y = 1\\) \u3002\u5982\u679c\u6211\u6ca1\u6709\u7406\u89e3\u9519\uff0c\u90a3\u4e48 \\(y h(\\mathcal{x})\\) \u5c31\u662f\u67d0\u79cd margin \uff0c\u5e76\u4e14\u4e0e margin \u6709\u5173\u7684\u5206\u6790\u7406\u8bba\u5c31\u53eb\u505a margin theory \u3002 \u6211\u4eec\u4eca\u5929\u7528 margin theory \u6765\u7814\u7a76\u4e00\u4e0b Boosting \u7684\u6cdb\u5316\u8bef\u5dee\uff0c\u4e5f\u5c31\u662f \\(\\mathbf{Pr}_{\\mathcal{D}}(y h(\\mathbf{x}) \\le 0)\\) \u7684\u4e0a\u754c\u3002 \u5f53\u7136\u4e0b\u9762\u7684\u6587\u7ae0\u7b26\u53f7\u4f1a\u6709\u4e9b\u8bb8\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u5148\u4ecb\u7ecd\u4e00\u4e0b\u3002 \u5bf9\u4e8e Boosting \u7b97\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a Base Hypothesis Set \\(\\mathcal{H}\\) \uff0c\u800c Boosting \u7b97\u6cd5 \u4f1a\u4ece \\(\\mathcal{H}\\) \u7684\u51f8\u5305\u4e2d\u9009\u62e9\u4e00\u4e2a\u5206\u7c7b\u5668\uff1a \\[ Co(\\mathcal{H}) = \\left\\{f(\\mathbf{x}) = \\sum^T_{t=1} \\alpha_t h(\\mathcal{x}) \\vert \\alpha_1, \\ldots, \\alpha_T \\ge 0; \\sum^T_{t=1} \\alpha_t = 1; h_1, \\ldots, h_T \\in \\mathcal{H}; T \\ge 1\\right\\}. \\] Finite Base Hypothesis Space \u00b6 \u5c31\u50cf\u9898\u76ee\u8bf4\u7684\uff0c\u6211\u4eec\u9996\u5148\u6765\u7814\u7a76\u4e00\u4e0b \\(\\mathcal{H}\\) \u662f\u6709\u9650\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u80fd\u591f\u5f97\u5230\u4ec0\u4e48\u3002 \u5b9a\u74061 \u6837\u672c\u7a7a\u95f4 \\(\\mathcal{X} \\times \\{-1, 1\\}\\) \u670d\u4ece\u672a\u77e5\u5206\u5e03 \\(\\mathcal{D}\\) \u3002\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u5305\u542b \\(m\\) \u4e2a\u6837\u672c\u7a7a\u95f4\u91c7\u96c6\u7684\u6837\u672c\u3002\u5982\u679c \\(\\mathcal{H}\\) \u662f\u6709\u9650\u7684\uff0c \u90a3\u4e48\u5b58\u5728 \\(1 - \\delta\\) \u7684\u53ef\u80fd\u6ee1\u8db3\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684 \\(f \\in Co(\\mathcal{H})\\) , \\[ \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{D}} [y f(\\mathbf{x}) \\le 0] \\le \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{S}} [y f(\\mathbf{x}) \\le \\theta] + O \\left(\\sqrt{\\frac{\\ln \\vert \\mathcal{H} \\vert}{m \\theta^{2}} \\ln\\frac{m\\theta^{2}}{\\ln \\vert \\mathcal{H} \\vert} + \\frac{\\ln(1/\\delta)}{m}}\\right), \\] \u5176\u4e2d\u8981\u6c42 \\(\\theta > \\sqrt{\\ln \\vert \\mathcal{H} \\vert / (4m)}\\) \u3002 \u9996\u5148\uff0c\u8fd9\u4e2a\u754c\u548c AdaBoost \u7684\u8f6e\u6b21 \\(T\\) \u6ca1\u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u9ad8\u8f6e\u6b21\u7684 AdaBoost \u5e76\u4e0d\u4f1a\u5f15\u8d77 \u8fc7\u62df\u5408\u3002 \u8fd9\u4e2a\u5b9a\u7406\u7684\u8bc1\u660e\u601d\u8def\u8fd8\u662f\u975e\u5e38\u5de7\u5999\u7684\uff0c\u6211\u5c1d\u8bd5\u6574\u7406\u4e00\u4e0b\u5427\u3002 \u8bc1\u660e\u8fc7\u7a0b\u4e2d\u6784\u9020\u4e86\u4e00\u4e2a\u7ecf\u9a8c\u5206\u7c7b\u5668\u96c6\u5408\uff0c\u5b83\u5bf9\u5e94\u7740 \\(Co(\\mathcal{H})\\) \uff1a \\[ \\mathcal{A}_{n} = \\left\\{f(\\mathbf{x}) = \\frac{1}{n}\\sum^{n}_{j=1}h_j(\\mathbf{x}) \\vert h_1, \\ldots, h_n \\in \\mathcal{H}\\right\\}. \\] \u5bf9\u4e8e\u4efb\u610f\u7684 \\(f = \\sum^{\\vert \\mathcal{H} \\vert}_{i=1} \\alpha_i h_i\\) , \u6211\u4eec\u4f9d\u636e\u6743\u91cd \\(\\alpha_i\\) \u4ece \\(\\mathcal{H}\\) \u4e2d\u72ec\u7acb\u540c\u5206\u5e03\u91c7\u96c6 \\(n\\) \u4e2a\u5206\u7c7b\u5668\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a \u7ecf\u9a8c\u5206\u7c7b\u5668 \\(\\hat f = \\frac{1}{n} \\sum^{n}_{j = 1} h_j\\) \uff0c\u5b83\u662f\u5c5e\u4e8e \\(\\mathcal{A}_n\\) \u7684\uff0c\u6211\u4eec\u5b9a\u4e49\u7ecf\u9a8c\u5206\u7c7b\u5668\u670d\u4ece\u7684\u6d4b\u5ea6\u7a7a\u95f4\u4e3a \\(\\mathcal{A}_n(f)\\) \u3002 \u4e0d\u89c4\u8303\u7684\u8bf4\uff0c\u4e3b\u4f53\u7684\u8bc1\u660e\u601d\u8def\u662f\uff1a \\[ \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{D}} \\left[y f(\\mathbf{x}) \\le 0\\right] \\le \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{D}} \\left[y \\hat f(\\mathbf{x}) \\le \\frac{\\theta}{2}\\right] \\\\ \\le \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{S}} \\left[y \\hat f(\\mathbf{x}) \\le \\frac{\\theta}{2}\\right] \\le \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{S}} \\left[y f(\\mathbf{x}) \\le \\theta\\right]. \\] \u5176\u4e2d \\(\\hat f\\) \u8d77\u5230\u4e86\u5f88\u91cd\u8981\u7684\u6865\u6881\u7684\u4f5c\u7528\u3002 \u5f15\u74061 \u6839\u636e\u970d\u592b\u542c\u4e0d\u7b49\u5f0f\uff0c\u6211\u4eec\u53ef\u5f97\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684 \\(x, f\\) , \u4ee5\u53ca \\(n \\ge 1, \\theta > 0\\) \uff0c\u6ee1\u8db3 \\[ \\mathbf{Pr}_{\\hat f \\sim \\mathcal{A}_n(f)} \\left[ \\vert \\hat f(x) - f(x) \\vert \\ge \\frac{\\theta}{2} \\right] \\le 2 e ^{-n\\theta^2/8} = \\beta_{n, \\theta}. \\] \u81ea\u7136\u6211\u4eec\u53ef\u5f97\u4e00\u6761\u65b0\u7684\u5f15\u7406 \u5f15\u74062 \u5bf9\u4e8e\u4efb\u610f\u7684 \\((x, y) \\sim \\mathcal{D}, f\\) \uff0c\u4ee5\u53ca \\(n \\ge 1, \\theta > 0\\) \uff0c\u6ee1\u8db3 \\[ \\mathbf{Pr}_{(x,y)\\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[\\vert y f(x) - y \\hat f(x) \\vert \\ge \\frac{\\theta}{2} \\right] \\le \\beta_{n, \\theta}. \\] \u8fd9\u6761\u5f15\u7406\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a \\(y \\in \\{-1, 1\\}\\) \uff0c\u4ee5\u53ca\u7edd\u5bf9\u503c\u7b26\u5408\u4fdd\u8bc1\u5b83\u53ef\u4ee5\u88ab\u5ffd\u7565\uff0c\u63a5\u4e0b\u6765\u5c31\u662f \u4f7f\u7528\u5f15\u74061\u5373\u53ef\u3002 \u90a3\u4e48\u6211\u4eec\u5148\u505a\u7b2c\u4e00\u6b65\u653e\u7f29\uff1a \\[ \\begin{aligned} &\\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}}[y f(x) \\le 0] \\\\ =& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)}[y f(x) \\le 0]\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[y \\hat f(x) \\le \\frac{\\theta}{2}\\right] \\\\ & + \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ y f(x) \\le 0, y \\hat f(x) > \\frac{\\theta}{2} \\right]\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[y \\hat f(x) \\le \\frac{\\theta}{2}\\right] \\\\ & + \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ \\vert y f(x) - y \\hat f(x) \\vert > \\frac{\\theta}{2} \\right]\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[y \\hat f(x) \\le \\frac{\\theta}{2}\\right] + \\beta_{n, \\theta}. \\end{aligned} \\] \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97 \\[ \\begin{aligned} &\\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right]\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ y f(x) \\le \\theta \\right]\\\\ &+ \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2}, y f(x) \\ge \\theta \\right] \\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ y f(x) \\le \\theta \\right]\\\\ &+ \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ \\vert y \\hat f(x) - y f(x) \\vert \\ge \\frac{\\theta}{2} \\right] \\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}}[y f(x) \\le \\theta] + \\beta_{n, \\theta}. \\end{aligned} \\] \u6211\u4eec\u6700\u540e\u8fd8\u5dee\u4e00\u6761\u5f15\u7406\uff0c\u6765\u8fde\u63a5\u4e0a\u9762\u4e24\u4e2a\u7ed3\u8bba\uff1a \u5f15\u74063 \u5b9a\u4e49 \\(\\epsilon_n = \\sqrt{\\ln[n(n+1)^2 \\vert \\mathcal{H} \\vert^n / \\delta]/2m}\\) , \u5176\u4e2d \\(m\\) \u662f \\(\\mathcal{S}\\) \u7684\u5927\u5c0f\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u6709 \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left \\{ \\forall n \\ge 1, \\hat f \\in \\mathcal{A}_n, \\theta>0: \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right] \\le \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right] + \\epsilon_n \\right\\} \\ge 1 - \\delta. \\] \u8bc1\u660e \u8bbe \\[ p_{\\hat f, \\theta} = \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right], \\] \u4ee5\u53ca \\[ \\hat p_{\\hat f, \\theta} = \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right]. \\] \u5f88\u660e\u663e \\(\\mathbb{E}_{\\mathcal{S} \\sim \\mathcal{D}}[\\hat p_{\\hat f,\\theta}] = p_{\\hat f, \\theta}\\) , \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u970d\u592b\u542c\u4e0d\u7b49\u5f0f\u5f97\u5230\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left[ p_{\\hat f, \\theta} \\ge \\hat p_{\\hat f, \\theta} + \\epsilon_n \\right] \\le e^{-2\\epsilon^2_n m}. \\] \u63a5\u4e0b\u6765\u7684\u4e8b\u60c5\u5c31\u6bd4\u8f83\u5de7\u5999\u4e86\u3002 \u6211\u4eec\u6ce8\u610f\u5230 \\(\\hat f(x) = \\frac{1}{n}\\sum^n_{j=1}\\hat h_j(x)\\) \uff0c\u6240\u4ee5\u5982\u679c \\(y \\hat f(x) \\le \\frac{\\theta}{2}\\) \u5f53\u4e14\u4ec5\u5f53 \\(y\\sum^n_{j=1}\\hat h_j(x) \\le \\frac{n \\theta}{2}\\) \u3002 \u53c8\u56e0\u4e3a \\(h_j(x) \\in \\{-1, 1\\}\\) \uff0c\u6240\u4ee5\u8fd8\u7b49\u4ef7\u4e8e \\(y\\sum^n_{j=1}\\hat h_j(x) \\le \\lfloor{n \\theta}/{2}\\rfloor\\) \u3002 \u53c8\u56e0\u4e3a \\(\\theta > 2\\) \u6ca1\u5fc5\u8981\u8003\u8651\uff0c\u6240\u4ee5\u542f\u53d1\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u96c6\u5408 \\[ \\Theta_n = \\left\\{ \\frac{2i}{n}: i = 0, 1, \\ldots, n \\right\\}. \\] \u90a3\u4e48\u6211\u4eec\u6709 \\[ \\begin{aligned} &\\mathbf{Pr} \\left[ \\exists \\hat f \\in \\mathcal{A}_n, \\theta \\ge 0: p_{\\hat f, \\theta} \\ge \\hat p_{\\hat f, \\theta} + \\epsilon_n \\right] \\\\ =&\\mathbf{Pr} \\left[ \\exists \\hat f \\in \\mathcal{A}_n, \\theta \\in \\Theta_n: p_{\\hat f, \\theta} \\ge \\hat p_{\\hat f, \\theta} + \\epsilon_n \\right] \\\\ =& \\vert \\mathcal{A}_n \\vert \\cdot \\vert \\Theta_n \\vert \\cdot e ^{-2\\epsilon^2_n m}\\\\ \\le& \\vert \\mathcal{H} \\vert^n \\cdot (n + 1) \\cdot e ^{-2\\epsilon^2_n m}\\\\ =& \\frac{\\delta}{n(n+1)}. \\end{aligned} \\] \u53c8\u56e0\u4e3a \\(\\sum^{\\infty}_{n=1} \\frac{\\delta}{n(n+1)} = \\delta\\) \uff0c\u6211\u4eec\u6700\u7ec8\u8bc1\u660e\u4e86\u5b9a\u74063\u3002 \u6700\u7ec8\uff0c\u6211\u4eec\u8bc1\u660e\u4e86\u5b9a\u74061\uff1a \\[ \\begin{aligned} &\\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}}[y f(x) \\le 0]\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f\\sim \\mathcal{A}_n(f)} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right] + \\beta_{n, \\theta}\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f\\sim \\mathcal{A}_n(f)} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right] + \\epsilon_n + \\beta_{n, \\theta}\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}} \\left[ y f(x) \\le \\theta \\right] + \\epsilon_n + 2\\beta_{n, \\theta}\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}} \\left[ y f(x) \\le \\theta \\right] + 4e^{-n\\theta^2/8} \\\\ & + \\sqrt{\\ln[n(n+1)^2 \\vert \\mathcal{H} \\vert^n / \\delta]/2m}. \\end{aligned} \\] \u5f53\u8bbe\u5b9a \\[ n = \\left\\lceil \\frac{4}{\\theta^2} \\ln \\left(\\frac{4m\\theta^2}{\\ln\\vert\\mathcal{H}\\vert}\\right) \\right\\rceil, \\] \u6211\u4eec\u5c31\u5f97\u5230\u4e86\u5b9a\u74061\uff0c\u5e94\u8be5\u8fd8\u662f\u9700\u8981\u4e00\u4e9b\u4e0d\u7b49\u5f0f\u653e\u7f29\u7684\u6b65\u9aa4\uff0c\u8fd9\u91cc\u4e66\u4e0a\u7701\u7565\u4e86\uff0c\u6211\u4e5f\u4e0d\u8ffd\u7a76\u4e86\u3002 \u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u4e2a\u754c\u5bf9 \\(n\\) \u7684\u5927\u5c0f\u6709\u9650\u5236\uff0c \\(m\\) \u8d8a\u5927\uff0c \\(n\\) \u53ef\u4ee5\u8d8a\u5927\u3002\u8fd9\u4e2a\u754c\u8fd8\u662f\u5f88\u5947\u602a\u7684\uff0c \u6211\u89c9\u5f97\u76ee\u524d\u7684\u8868\u8fbe\u65b9\u5f0f\u5e76\u6ca1\u6709\u4f53\u73b0\u51fa\u5b83\u7684\u672c\u8d28\uff1a\u5bf9\u4efb\u610f\u7684 \\(f\\) \u90fd\u6709\u8fd9\u4e2a\u754c\uff0c\u8fd9\u4e2a\u754c\u4e5f\u592a\u677e\u5f1b\u4e86\u5427\u3002 Infinite Base Hypothesis Spaces \u00b6 \u6211\u4eec\u4f7f\u7528\u5047\u8bbe\u96c6\u7684 VC-\u7ef4 \u6765\u505a\u7c7b\u4f3c\u7684\u91c7\u6837\u590d\u6742\u5ea6\u7684\u754c\uff0c\u4e0b\u9762\u7684\u5b9a\u7406\u975e\u5e38\u7c7b\u4f3c\u5b9a\u74061\u3002 \u5b9a\u74062 \u6837\u672c\u7a7a\u95f4 \\(\\mathcal{X} \\times \\{-1, 1\\}\\) \u670d\u4ece\u672a\u77e5\u5206\u5e03 \\(\\mathcal{D}\\) \u3002\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u5305\u542b \\(m\\) \u4e2a\u6837\u672c\u7a7a\u95f4\u91c7\u96c6\u7684\u6837\u672c\u3002\u5982\u679c \\(\\mathcal{H}\\) \u7684 VC-\u7ef4 \u662f \\(d\\) \u3002 \u5bf9\u4e8e \\(m \\ge d \\ge 1\\) \u4ee5\u53ca \\(\\delta > 0\\) \uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684 \\(f \\in Co(\\mathcal{H})\\) , \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\forall \\theta > \\sqrt{8d \\ln(em / d) / m}: \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}} [ y f(x) \\le 0] \\le \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}}[y f(x) \\le \\theta] + O \\left( \\sqrt{ \\frac{d \\ln(m / d) \\ln(m \\theta^2 / d)}{m\\theta^2} + \\frac{\\ln(1 / \\delta)}{m} }\\right) \\right\\} > 1 - \\delta. \\] \u76f8\u6bd4\u4e8e\u5b9a\u74061\uff0c\u5b9a\u74062\u7684\u8bc1\u660e\u9700\u8981\u89e3\u51b3\u7684\u5173\u952e\u95ee\u9898\u662f\u5982\u4f55\u4fee\u6539\u5f15\u74063\u3002 \u5f15\u74064 \u5b9a\u4e49 \\[ \\epsilon_n = \\sqrt{\\frac{32}{m} [\\ln(n(n+1)^2) + dn \\ln(em / d) + \\ln(8/\\delta)]}. \\] \u6211\u4eec\u6709\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S}\\sim \\mathcal{D}} \\left\\{ \\forall n \\ge 1, \\hat f \\in \\mathcal{A}_n, \\theta \\ge 0: \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}} \\left[y \\hat f(x) \\le \\frac{\\theta}{2}\\right] \\le \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}} \\left[y \\hat f(x) \\le \\frac{\\theta}{2}\\right] + \\epsilon_n \\right\\} \\ge 1 - \\delta. \\] \u8bc1\u660e \u5bf9\u4e8e\u6837\u672c\u7a7a\u95f4 \\(\\mathcal{Z} = \\mathcal{X} \\times \\{-1, +1\\}\\) \uff0c\u6211\u4eec\u6784\u9020\u5b83\u7684\u4e00\u4e2a\u5b50\u96c6 \\[ B_{\\hat f, \\theta} = \\left\\{ (x, y) \\in \\mathcal{Z}: y \\hat f(x) \\le \\theta/2 \\right\\} \\] \u6765\u8868\u793a\u6837\u672c\u70b9\u6ee1\u8db3\u5bf9\u5e94 \\(\\hat f(x)\\) \u7684 margin \u6700\u591a\u4e3a \\(\\theta/2\\) \u7684\u70b9\u7684\u96c6\u5408\u3002 \u6211\u4eec\u518d\u5b9a\u4e49 \\(B_{\\hat f, \\theta}\\) \u7684\u96c6\u5408\uff1a \\[ \\mathcal{B}_n = \\left\\{ B_{\\hat f, \\theta}: \\hat f \\in \\mathcal{A}_n, \\theta \\ge 0 \\right\\}. \\] \u63a5\u4e0b\u6765\u6211\u4eec\u5e0c\u671b\u6c42\u89e3\u4e00\u4e0b \\(\\mathcal{B}_n\\) \u7684\u589e\u957f\u51fd\u6570 \\(\\Pi_{\\mathcal{B}_n}(m)\\) \uff08\u518d\u6211\u7684\u7b14\u8bb0\u91cc\uff0c\u4e5f\u53eb\u5b83 \\(\\tau_{\\mathcal{B}_n}(m)\\) \uff09\u3002 \u56e0\u4e3a\u5047\u8bbe \\(\\mathcal{H}\\) \u7684 VC\u7ef4 \u662f \\(d\\) \uff0c\u6240\u4ee5\u6839\u636e Sauer's \u5f15\u7406\uff0c\u5f53 \\(m \\ge d \\ge 1\\) \u65f6\uff0c \u6211\u4eec\u53ef\u5f97\uff1a \\[ \\vert \\left\\{ \\langle h(x_1), \\ldots, h(x_m) \\rangle: h \\in \\mathcal{H} \\right\\} \\vert \\le (em / d)^d. \\] \u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u5730\u5f97\u5230\u4e00\u4e2a\u975e\u5e38\u677e\u5f1b\u7684\u754c \\[ \\vert \\left\\{ \\langle y_1 \\hat f(x_1), \\ldots, y_m \\hat f(x_m) \\rangle: \\hat f \\in \\mathcal{A}_n \\right\\} \\vert \\le (em / d)^{dn}. \\] \u8fd9\u91cc\u56e0\u4e3a \\(n\\) \u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5 \\(\\hat f(x)\\) \u4e5f\u662f\u79bb\u6563\u7684\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u5f15\u74063\u7684 \u6280\u672f\uff0c\u6784\u9020\u96c6\u5408 \\(\\Theta_n\\) , \u5f97\u5230\uff1a \\[ \\Pi_{\\mathcal{B}_n}(m) \\le (n+1) (em/d)^{dn}. \\] VC\u7ef4\u6709\u4e00\u4e2a\u5b9a\u7406\uff08\u539f\u4e66\u5b9a\u74062.6\uff09\uff1a\u5982\u679c \\(\\mathcal{A}\\) \u662f\u96c6\u5408 \\(Z\\) \u5b50\u96c6\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u6709\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\exists A \\in \\mathcal{A}: \\mathbf{Pr}_{z \\sim \\mathcal{D}}[z \\in A] \\ge \\mathbf{Pr}_{z \\sim \\mathcal{S}}[z \\in A] + \\epsilon \\right\\} \\le 8 \\Pi_{\\mathcal{A}}(m) e^{-m \\epsilon^2 / 32}. \\] \u5e26\u5165\u53ef\u5f97\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\forall B_{\\hat f, \\theta} \\in \\mathcal{B}_n, \\mathbf{Pr}_{z \\sim \\mathcal{D}}[z \\in B_{\\hat f, \\theta}] \\le \\mathbf{Pr}_{z \\sim \\mathcal{S}}[z \\in B_{\\hat f, \\theta}] + \\epsilon_n \\right\\} \\ge 1 - \\delta/(n(n+1)). \\] \u90a3\u4e48\uff0c\u6211\u4eec\u518d\u805a\u96c6\u4e00\u4e0b \\(\\mathbf{B}_n\\) \uff0c\u5bf9\u4e8e\u4efb\u610f\u7684 \\(n \\ge 1\\) \uff0c\u6211\u4eec\u90fd\u6709\u81f3\u5c11 \\(1 - \\delta\\) \u7684\u6982\u7387\u5f97\u5230\u5f15\u74064\u3002 \u6211\u4eec\u7efc\u5408\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u7c7b\u4f3c\u4e8e\u6709\u9650\u5047\u8bbe\u96c6\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5b9a\u74062\uff0c\u4e0d\u8fc7\u8981\u8bbe\u7f6e\uff1a \\[ n = \\left\\lceil \\frac{4}{\\theta^2} \\ln \\left( \\frac{m \\theta^2}{8d \\ln(em / d)} \\right) \\right\\rceil. \\] \u7efc\u4e0a\u6240\u8ff0\uff0c \\(\\tilde O(1 / \\sqrt{m})\\) \u662f\u4e00\u4e2a\u975e\u5e38\u677e\u5f1b\u7684\u754c\uff0c\u5982\u679c\u6211\u4eec\u6709 consistent \u5047\u8bbe\uff0c \u4e5f\u5c31\u662f\u6240\u6709\u7ecf\u9a8c\u8bef\u5dee\u503c\u53ef\u4ee5\u964d\u52300\uff0c\u90a3\u4e48\u6211\u4eec\u80fd\u591f\u83b7\u5f97\u4e00\u4e2a\u66f4\u597d\u7684\u754c \\(\\tilde O(1 / m)\\) \u3002 \u57fa\u4e8e Rademacher \u590d\u6742\u5ea6\u7684\u5206\u6790 \u00b6 \u4e00\u4e9b Rademacher \u7684\u524d\u7f6e\u77e5\u8bc6\u53ef\u4ee5\u7ffb\u9605\u524d\u9762\u7684\u7b14\u8bb0\u3002\u63a5\u4e0b\u6765\u7528\u5230\u4e86\u4e00\u7cfb\u5217 Rademacher \u590d\u6742\u5ea6\u7684 \u6570\u5b66\u6027\u8d28\u3002 \u6211\u4eec\u5148\u5f15\u5165\u4e00\u4e2a\u51fd\u6570\u96c6\u5408 \\[ \\mathcal{M} = \\left\\{ (x, y) \\mapsto y f(x) \\vert f \\in co(\\mathcal{H}) \\right\\}. \\] \u53d7\u9650\u6211\u4eec\u53ef\u5f97\uff1a \\(R_S(\\mathcal{M}) = R_S(co(\\mathcal{H})) = R_S(\\mathcal{H})\\) \u3002 \u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u5206\u6bb5\u7ebf\u6027\u51fd\u6570\uff08 \\(0-1\\) \u635f\u5931\u51fd\u6570\u7684\u53d8\u5f62\uff09\uff1a \\[ \\phi(u) = \\begin{cases} 1 & u \\le 0,\\\\ 1 - u/\\theta & 0\\le u \\le \\theta,\\\\ 0 & u \\ge \\theta. \\end{cases} \\] \u56e0\u4e3a \\(\\phi(u)\\) \u662f \\(1/\\theta\\) -Lipschitz \u8fde\u7eed\u51fd\u6570\uff0c\u5982\u679c\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u7684 VC-\u7ef4 \u662f \\(d\\) , \u6211\u4eec\u5c31\u80fd\u5f97\u5230\uff1a \\[ R_S(\\phi \\circ \\mathcal{M}) \\le \\frac{1}{\\theta} R_S(\\mathcal{M}) \\le \\frac{1}{\\theta} \\sqrt{\\frac{2d}{m} \\ln(em/d)}. \\] \u6211\u4eec\u5e26\u5165\u5230 Rademacher \u590d\u6742\u5ea6\u7684\u754c\u53ef\u4ee5\u5f97\u5230\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\forall f \\in co(\\mathcal{H}): \\mathbb{E}_{(x, y) \\sim \\mathcal{D}}[\\phi(y f(x))] - \\mathbb{E}_{(x, y) \\sim \\mathcal{S}}[\\phi(y f(x))] \\le R_S(\\phi \\circ \\mathcal{M}) + 3 \\sqrt{\\frac{2}{m}\\ln(2 / \\delta)} \\right\\} \\ge 1 - \\delta. \\] \u56e0\u4e3a \\(\\pmb{1}\\{u \\le 0\\} \\le \\phi(u) \\le \\pmb{1}\\{u \\le \\theta\\}\\) \uff0c\u6240\u4ee5\u6211\u4eec\u6709 \\[ \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}}[y f(x) \\le 0] = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}}[\\pmb{1}\\{y f(x) \\le 0\\}] \\le \\mathbb{E}_{(x, y) \\sim \\mathcal{D}} [\\phi(y f(x))]. \\] \u4ee5\u53ca \\[ \\mathbb{E}_{(x, y) \\sim \\mathcal{S}} [\\phi(y f(x))] \\le \\mathbb{E}_{(x, y) \\sim \\mathcal{S}}[\\pmb{1}\\{y f(x) \\le 0\\}] = \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}}[y f(x) \\le 0]. \\] \u56e0\u6b64\u6211\u4eec\u53ef\u5f97\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\forall f \\in co(\\mathcal{H}): \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}}[y f(x) \\le 0] - \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}}[y f(x) \\le \\theta] \\le \\frac{2}{\\theta} \\sqrt{\\frac{2d}{m} \\ln(em/d)} + 3 \\sqrt{\\frac{2}{m}\\ln(2 / \\delta)} \\right\\} \\ge 1 - \\delta. \\] \u901a\u5e38\u6211\u4eec\u5c06\u8bef\u5dee\u8fdb\u4e00\u6b65\u8fd1\u4f3c\u4e3a \\[ \\begin{aligned} &\\frac{2}{\\theta} \\sqrt{\\frac{2d}{m} \\ln(em/d)} + 3 \\sqrt{\\frac{2}{m}\\ln(2 / \\delta)} \\\\ \\approx& \\tilde{O} \\bigg( \\sqrt{\\frac{d/\\theta^2}{m}} \\bigg) + O\\bigg( \\sqrt{\\ln(1 / \\delta)}{m}\\bigg) \\\\ \\approx& \\tilde{O} \\bigg(\\sqrt{\\frac{d/\\theta^2 + \\ln(1/\\delta)}{m}}\\bigg). \\end{aligned} \\] Boosting \u5bf9 Margin \u5206\u5e03\u7684\u5f71\u54cd \u00b6 \u524d\u9762\u7684\u5206\u6790\u5e7f\u6cdb\u9002\u7528\u4e8e\u4f7f\u7528\u5047\u8bbe\u96c6 \\(co(\\mathcal{H})\\) \u7684\u7b97\u6cd5\uff0c\u4f8b\u5982\uff1a\u6295\u7968\u5206\u7c7b\u7b97\u6cd5\uff08voting classifier\uff09\u3002\u8fd9\u4e00\u8282\uff0c\u6211\u4eec\u5206\u6790\u4e00\u4e0b Boosting \u7684\u7279\u522b\u4e4b\u5904\uff0c\u603b\u7684\u6765\u8bf4\u5c31\u662f\u901a\u8fc7\u7ed9\u5c0fmargin\u6837\u672c\u66f4\u5927\u7684\u6743\u91cd\uff0c\u6765\u663e\u8457\u589e\u5927\u6574\u4e2a\u8bad\u7ec3\u96c6\u7684margin\u3002 \u5b9a\u74063 \u5728 AdaBoost \u4e2d\u5b9a\u4e49 \\(\\gamma_t = \\frac{1}{2} - \\epsilon_t\\) , \u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\uff1a \u8bad\u7ec3\u96c6\u4e2dmargin\u6700\u591a\u4e3a \\(\\theta\\) \u7684\u6837\u672c\u4e2a\u6570\u5360\u603b\u6837\u672c\u4e2a\u6570\u7684\u6bd4\u4f8b\u4e3a\uff1a \\[ \\prod^T_{t=1} \\sqrt{(1 + 2 \\gamma_t)^{1 + \\theta} (1 - 2 \\gamma_t)^{1 - \\theta}}. \\] \u8bc1\u660e \u6211\u4eec\u6cbf\u7528\u5b9a\u4e49 \\(f(x) = \\frac{\\sum^T_{t=1} \\alpha_t h_t(x)}{\\sum^T_{t=1} \\alpha_t}\\) \uff0c \u90a3\u4e48 \\(y f(x) \\le \\theta\\) \u5f53\u4e14\u4ec5\u5f53 \\(y \\sum^T_{t=1} \\alpha_t h_t(x) \\le \\theta \\sum^T_{t=1} \\alpha_t\\) \uff0c \u8fdb\u4e00\u6b65\u5f53\u4e14\u4ec5\u5f53 \\[ \\exp\\left( -y \\sum^T_{t=1} \\alpha_t h_t(x) +\\theta \\sum^T_{t=1} \\alpha_t \\right) \\ge 1. \\] \u56e0\u6b64 \\[ \\pmb{1} [y f(x) \\le \\theta] \\le \\exp\\left( -y \\sum^T_{t=1} \\alpha_t h_t(x) +\\theta \\sum^T_{t=1} \\alpha_t \\right). \\] \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u5f97 \\[ \\begin{aligned} &\\mathbf{Pr}_{(x, y) \\sim S} [y f(x) \\le \\theta] = \\frac{1}{m} \\sum^m_{i=1} \\pmb{1}[y_i f(x_i) \\le \\theta]\\\\ \\le& \\frac{1}{m} \\exp\\left( -y \\sum^T_{t=1} \\alpha_t h_t(x) +\\theta \\sum^T_{t=1} \\alpha_t \\right)\\\\ =& \\frac{1}{m} \\exp\\left(\\theta \\sum^T_{t=1} \\alpha_t \\right) \\sum^m_{i=1} \\exp\\left(-y_i \\sum^T_{t=1} \\alpha_t h_t(x_i)\\right)\\\\ =& \\exp\\left(\\theta \\sum^T_{t=1} \\alpha_t \\right) \\prod^T_{t=1} Z_t\\\\ =& \\prod^{T}_{t=1} e^{\\theta \\alpha_t} Z_t\\\\ =& \\prod^{T}_{t=1} \\bigg[2 \\sqrt{\\epsilon^{1-\\theta}_t (1 - \\epsilon_t)^{1+\\theta}}\\bigg]\\\\ &\\quad \\bigg(\\alpha_t = \\frac{1}{2} \\ln \\frac{1 - \\epsilon_t}{\\epsilon_t}, Z_t=2\\sqrt{\\epsilon_t(1 - \\epsilon_t)} \\bigg)\\\\ =& \\prod^{T}_{t=1} \\bigg[(1 - 2 \\gamma_t)^{1 - \\theta} (1 + 2\\gamma_t)^{1+\\theta}\\bigg]. \\quad \\bigg(\\epsilon_t = \\frac{1}{2} - \\gamma_t\\bigg) \\end{aligned} \\] \u5176\u4e2d\u4e00\u4e2a\u7b49\u5f0f\u7528\u5230\u4e86 \\(\\prod^{T}_{t=1}Z_t\\) \uff0c\u7279\u6b64\u8bc1\u660e\u4e00\u4e0b\u3002\u6211\u4eec\u56de\u5fc6\u4e00\u4e0bAdaboost\u91cc \\[ \\begin{aligned} D_{T+1}(i) &= D_1(i) \\times \\frac{e^{-y_i \\alpha_1 h_1(x_i)}}{Z_1} \\times \\cdots \\times \\frac{e^{-y_i\\alpha_T h_T(x_i)}}{Z_T}\\\\ &= \\frac{1}{m} \\frac{\\exp{\\left(-y_i \\sum^T_{t=1} \\alpha_t h_t(x_i)\\right)}}{\\prod^T_{t=1} Z_t}. \\end{aligned} \\] \u6240\u4ee5 \\[ {\\prod^T_{t=1} Z_t} ={\\prod^T_{t=1} Z_t} \\sum^m_{i=1} D_{T+1}(i) = \\frac{1}{m} \\sum^m_{i=1} \\exp{\\left(-y_i \\sum^T_{t=1} \\alpha_t h_t(x_i)\\right)}. \\] \u5982\u679c \\(\\epsilon_t \\le \\frac{1}{2} - \\gamma\\) , \u90a3\u4e48\u754c\u5c31\u53d8\u6210\u4e86 \\(\\left(\\sqrt{(1 + 2 \\gamma)^{1 + \\theta} (1 - 2 \\gamma)^{1 - \\theta}}\\right)^T\\) \u3002 \u5982\u679c \\(\\sqrt{(1 + 2 \\gamma)^{1 + \\theta} (1 - 2 \\gamma)^{1 - \\theta}} < 1\\) \uff0c \u90a3\u4e48\u968f\u7740 AdaBoost \u7684\u8f6e\u6b21\u589e\u52a0\uff0c \\(yf(x) \\le \\theta\\) \u7684\u53ef\u80fd\u6307\u6570\u4e0b\u964d\u52300\u3002 \u6211\u4eec\u6574\u7406\u4e00\u4e0b\u5f97\u5230\uff1a \\[ \\theta < \\Upsilon(\\gamma) = \\frac{-\\ln(1 - 4\\gamma^2)} {\\ln\\left(\\frac{1 + 2 \\gamma}{ 1 - 2 \\gamma}\\right)}. \\] \u56e0\u4e3a \\(0 \\le \\gamma \\le \\frac{1}{2}\\) \uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u5230 \\(\\gamma \\le \\Upsilon(\\gamma) \\le 2 \\gamma\\) \u3002 \u800c\u4e14\uff0c\u5f53 \\(\\gamma\\) \u63a5\u8fd10\u65f6\uff0c \\(\\Upsilon(\\gamma) \\approx \\gamma\\) \u3002\u6240\u4ee5\u7ecf\u8fc7\u4e00\u5b9a\u8f6e\u6570\uff0c \\(\\Upsilon(\\gamma)\\) \u7ed9\u4e86\u4e00\u5b9a\u7684\u754c\u4fdd\u969c\u4e86 margin\u3002 \\(\\gamma_t\\) \u8d8a\u5927\uff0cmargin\u8d8a\u5927\u3002\u8fd9\u91cc\u901a\u5e38\u5c06 \\(\\gamma_t\\) \u79f0\u4e3a edge\u3002\u8fd9\u91cc\u6709\u70b9\u535a\u5f08\u7684\u610f\u5473\uff1a\u66f4\u5f3a\u7684\u57fa\u7840\u5206\u7c7b\u5668\u80fd\u4fdd\u8bc1 edge \u66f4\u5927\uff0cmargin\u4e5f\u8d8a\u5927\uff0c\u80fd\u591f\u907f\u514d\u8fc7\u62df\u5408\u3002\u4f46\u662f\u66f4\u5f3a\u7684\u57fa\u7840\u5206\u7c7b\u5668\u4e5f\u4f1a\u5bfc\u81f4\u7684\u590d\u6742\u5ea6\u589e\u52a0\uff08Rademacher\u590d\u6742\u5ea6\u5927\uff09\uff0c\u4e5f\u4f1a\u5bf9\u7b97\u6cd5\u7684\u6548\u679c\u6709\u8d1f\u9762\u5f71\u54cd\u3002 Margin\u6700\u5927\u5316Boosting \u00b6 \u4e0a\u4e00\u8282\u8bc1\u660e\u4e86\uff0c\u5728\u539f\u59cb\u7684AdaBoost\u4e2d\uff0cMargin\u7531 \\(\\Upsilon(\\gamma)\\) \u9650\u5236\u3002\u800c \\(\\Upsilon(\\gamma)\\) \u5728 \\(\\gamma\\) \u8d8b\u8fd1\u4e8e0\u65f6\uff0c\u6ee1\u8db3 \\(\\Upsilon(\\gamma) \\approx \\gamma\\) \u3002 \\(\\gamma\\) \u8fd9\u4e2a\u754c\u592a\u5c0f\u4e86\uff0c\u672c\u8282\u63d0\u51fa\u4e00\u79cdAdaBoost\u7684\u53d8\u79cd\uff0c\u5c06\u4f1a\u63d0\u9ad8\u8fd9\u4e2a\u7ed3\u679c\u5230 \\(2\\gamma\\) \u3002 \u5728AdaBoost\u4e2d\uff0c\u6709\u5173\u7cfb \\[ Z_t = e^{-\\alpha_t} \\bigg(\\frac{1}{2} + \\gamma_t\\bigg) + e^{\\alpha_t} \\bigg( \\frac{1}{2} - \\gamma_t\\bigg). \\] \u5e26\u5165\u4e0a\u8282\u7684\u4e00\u4e2a\u7b49\u5f0f\u53ef\u5f97 \\[ \\mathbb{Pr}_{(x, y)\\sim \\mathcal{S}} [y f(x) \\le \\theta] \\le \\prod^{T}_{t=1} \\bigg[e^{(\\theta-1)\\alpha_t}(\\frac{1}{2} + \\gamma_t) + e^{(\\theta+1) \\alpha_t} (\\frac{1}{2} - \\gamma_t)\\bigg]. \\] \u90a3\u4e48\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u6700\u5c0f\u5316\u4e0a\u9762\u7684margin\u7684\u754c\u5462\uff1f\u5bf9 \\(\\alpha_t\\) \u6c42\u6781\u503c\u53ef\u5f97 \\[ \\alpha^*_t = \\frac{1}{2}\\ln\\frac{1+2\\gamma_t}{1-2\\gamma_t} - \\frac{1}{2} \\ln\\frac{1 + \\theta}{1 - \\theta}. \\] \u5982\u679c\u6211\u4eec\u63d0\u524d\u53d6 \\(\\theta\\) \u6ee1\u8db3 \\(\\gamma_t \\ge \\theta/2\\) \uff0c\u90a3\u4e48 \\(\\alpha^*_t \\ge 0\\) \u3002\u7ecf\u8fc7\u4e00\u4e9b\u590d\u6742\u7684\u7f29\u653e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7b80\u6d01\u7684\u754c\uff08\u6211\u6ca1\u6709\u9a8c\u8bc1\u8fc7\uff0c\u4e66\u4e0a\u4e5f\u662f\u8df3\u8fc7\u4e86\u8fd9\u4e2a\u8bc1\u660e\uff09 \\[ \\mathbb{Pr}_{(x, y)\\sim \\mathcal{S}} [y f(x) \\le \\theta] \\le \\exp\\bigg[- \\sum^T_{t=1} \\mathrm{RE}_{b}\\bigg(\\frac{1}{2}+\\frac{\\theta}{2} \\bigg\\Vert \\frac{1}{2} + \\gamma_t\\bigg)\\bigg]. \\] \u5176\u4e2d \\(\\mathrm{RE}_b(p \\Vert q)\\) \u8868\u793a\u4e24\u4e2a\u4f2f\u52aa\u5229\u5206\u5e03\u7684\u76f8\u5bf9\u71b5 \\[ \\mathrm{RE}_b(p \\Vert q) = p \\ln\\frac{p}{q} + (1 - p) \\ln\\frac{1 - p}{1 - q}. \\] \u5982\u679c\u63d0\u524d\u786e\u5b9a\u4e86 \\(\\theta\\) \u5e76\u4e14 \\(\\gamma\\) -\u5f31\u5206\u7c7b\u5047\u8bbe\u4e2d \\(\\gamma > \\theta_2\\) \uff0c\u90a3\u4e48\u8bad\u7ec3\u96c6\u7684\u5173\u4e8emargin\u754c\u7684\u8bef\u5dee\u7387\u4e0d\u5927\u4e8e \\[ \\exp\\bigg[- T \\cdot \\mathrm{RE}_{b}\\bigg(\\frac{1}{2}+\\frac{\\theta}{2} \\bigg\\Vert \\frac{1}{2} + \\gamma\\bigg)\\bigg]. \\] \u53cd\u4e4b\uff0c\u5982\u679c\u63d0\u524d\u77e5\u9053\u4e86 \\(\\gamma\\) \uff0c\u90a3\u4e48 \\(\\theta\\) \u53ef\u4ee5\u53d6\u5f97\u6bd4 \\(2\\gamma\\) \u7565\u5c0f\u4e00\u4e9b\u3002 \u7406\u8bba\u5f88\u4e30\u6ee1\uff0c\u73b0\u5b9e\u5f88\u9aa8\u611f\u3002\u6211\u4eec\u901a\u5e38\u4e0d\u80fd\u83b7\u5f97 \\(\\gamma\\) \u6216\u8005 \\(\\theta\\) \u7684\u4fe1\u606f\uff0c\u53ea\u80fd\u901a\u8fc7\u4e0d\u65ad\u8c03\u6574 \\(\\theta\\) \u6765\u5f97\u5230\u7c7b\u4f3c\u7684\u754c\uff0c\u5982\u7b97\u6cd5 \\(arc-gv\\) \u6216\u8005 \\(AdaBoost^*_\\nu\\) \uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u5177\u4f53\u7ec6\u8282\uff0c\u4f46\u662f\u5e94\u8be5\u6ca1\u5173\u7cfb\uff09\u3002\u8bbe\u7f6e \\(\\theta\\) \u7684\u76ee\u7684\u672c\u610f\u662f\u4e3a\u4e86\u589e\u52a0\u6cdb\u5316\u6027\uff0c\u4f46\u662f\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5f80\u5f80\u4f1a\u5931\u8d25\u3002\u7b2c\u4e00\u4e2a\u539f\u56e0\u662f margin \u8bbe\u7f6e\u5f97\u9ad8\uff0c\u8fd8\u8981\u4fdd\u6301\u9519\u8bef\u7387\u4f4e\uff0c\u5c31\u9700\u8981\u57fa\u7840\u5206\u7c7b\u5668\u7684\u590d\u6742\u5ea6\u975e\u5e38\u9ad8\uff08\u4f8b\u5982\u51b3\u7b56\u6811\u7684\u6811\u7684\u6df1\u5ea6\u548c\u5bbd\u5ea6\u4f1a\u975e\u5e38\u5927\uff09\uff0c\u6837\u672c\u9700\u6c42\u5c31\u8d8a\u6765\u8d8a\u5927\u3002 \u6211\u4eec\u5f80\u5f80\u6ca1\u6709\u90a3\u4e48\u591a\u6837\u672c\uff0c\u5c31\u5bfc\u81f4\u4e86\u7b97\u6cd5\u7684\u5931\u8d25\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4f7f\u7528\u8868\u8fbe\u80fd\u529b\u8f83\u5dee\u7684\u5206\u7c7b\u5668\uff08\u5982 decision stumps\uff09\u540c\u6837\u4e5f\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u63d0\u5347 AdaBoost\u3002\u867d\u7136\u5b83\u63d0\u9ad8\u4e86\u6700\u5c0f\u7684margin\uff0c\u4f46\u662f\u4ed8\u51fa\u7684\u4ee3\u4ef7\u53ef\u80fd\u662f\u5927\u90e8\u5206\u5176\u4ed6\u6837\u672c\u7684margin\u964d\u4f4e\uff0c\u6574\u4f53\u6765\u770b\uff0cmargin\u5176\u5b9e\u8fd8\u662f\u964d\u4f4e\u7684\u3002\u800c\u6cdb\u5316\u8bef\u5dee\u7684\u754c\u662f\u548c\u6574\u4f53\u7684margin\u6709\u5173\uff0c\u800c\u4e0d\u662f\u6700\u5c0f\u7684margin\u3002 Weak Learnability \u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6 \u00b6 \u5145\u5206\u6761\u4ef6 \u00b6 \u5145\u5206\u6761\u4ef6\u662f\u5bf9\u4e8e\u6240\u6709\u7684\u6837\u672c \\((x_i, y_i) \\in \\mathcal{S}\\) \uff0c\u5f31\u5206\u7c7b\u5668 \\(g_1, \\ldots, g_k\\) \u5b58\u5728\u51f8\u7ec4\u5408\u5206\u7c7b\u5668\u6ee1\u8db3 \\[ y_i \\sum^{k}_{j=1} a_j g_j(x_i) \\ge \\theta. \\] \u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u5b9a\u4e49\u5728\u8bad\u7ec3\u96c6 \\(\\mathcal{S}\\) \u4e0a\u7684\u5206\u5e03 \\(\\mathcal{D}\\) \u90fd\u6709 \\[ \\sum^{k}_{j=1} \\alpha_j \\mathbb{E}_{i \\sim\\mathcal{D}} [y_i g_j(x_i)] = \\mathbb{E}_{i \\sim \\mathcal{D}} \\bigg[y_i \\sum^{k}_{j=1} a_j g_j(x_i)\\bigg] \\ge \\theta. \\] \u53c8\u56e0\u4e3a \\[ \\begin{aligned} \\mathbb{E}_{i \\sim \\mathcal{D}} [y_i g_j(x_i)] =& 1 \\cdot \\mathbf{Pr}_{i \\sim \\mathcal{D}}[y_i = g_j(x_i)] + (-1) \\cdot \\mathbf{Pr}_{i \\sim \\mathcal{D}} [y_i \\ne g_j(x_i)]\\\\ =& 1 - 2 \\mathbf{Pr}_{i \\sim \\mathcal{D}} [y_i \\ne g_j(x_i)], \\end{aligned} \\] \u6240\u4ee5 \\[ \\mathbf{Pr}_{i \\sim \\mathcal{D}}[y_i \\ne g_j(x_i)] \\le \\frac{1}{2} - \\frac{\\theta}{2}. \\] \u6240\u4ee5\uff0c\u5f31\u5206\u7c7b\u5668\u7684\u4e00\u4e2a\u5145\u5206\u6761\u4ef6\u662f\uff0c\u5728\u6837\u672c\u662f\u7ebf\u6027\u53ef\u5206\u7684\uff0c\u5e76\u4e14\u7ebf\u6027\u5206\u7c7b\u7684margin\u81f3\u5c11\u4e3a \\(2\\gamma\\) \u3002 \u5fc5\u8981\u6761\u4ef6 \u00b6 \u4e0a\u9762\u7684 \\(2\\gamma\\) -\u7ebf\u6027\u53ef\u5206\u6761\u4ef6\u4e5f\u662f\u5fc5\u8981\u6761\u4ef6\u3002","title":"The Margins Explanation For Boosting"},{"location":"ML/13-TheMarginsExplainationForBoosting/#the-margins-explanation-for-boostings-effectiveness","text":"\u8fd9\u662f\u4e00\u7bc7\u9605\u8bfb\u7b14\u8bb0\uff0c\u5173\u4e8e\u300aBoosting Fundations and algorithms\u300b\u7684\u7b2c\u4e94\u7ae0\u3002\u8fd9\u4e00\u7ae0\u89e3\u91ca\u4e86 Margin Theory \u4ee5\u53ca\u5b83\u5728Boosting\u4e2d\u7684\u5e94\u7528\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e00\u4e0bMargin Theory\u6700\u539f\u59cb\u7684\u52a8\u673a\uff0c\u300aUnderstanding Machine Learning\u300b \u6240\u6d89\u53ca\u7684\u7406\u8bba\u8bef\u5dee\u754c\u5206\u6790\u7684\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\uff08 \\(y \\in \\{-1, 1\\}\\) \uff09\u7684\u5982\u4e0b\u7684\u5173\u7cfb\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}}\\{ \\mathbb{E}_{(\\mathbf{x}, y) \\sim \\mathcal{D}}[\\mathbf{1}_{h(\\mathbf{x}) \\ne y}] \\le \\mathbb{E}_{(\\mathbf{x}, y) \\sim \\mathcal{S}}[\\mathbf{1}_{h(\\mathbf{x}) \\ne y}] + \\epsilon(m, \\delta)\\} \\ge 1 - \\delta, \\] \u5176\u4e2d \\(\\mathcal{S}\\) \u662f\u4ece \\(\\mathcal{D}\\) \u4e2d\u72ec\u7acb\u540c\u5206\u5e03\u91c7\u7528\u4e86 \\(m\\) \u4e2a\u6837\u672c\u7684\u6837\u672c\u96c6\u3002\u4e0a\u5f0f\u8981\u6c42 \\(h(\\mathcal{x}) \\in \\{-1, 1\\}\\) , \u5982\u679c \\(h(\\mathcal{x}) \\in [-1, 1]\\) \uff0c\u90a3\u4e48\u6211\u4eec\u901a\u5e38\u4f7f\u7528 \\(sign(h(\\mathcal{x}))\\) \u6765\u4f5c\u4e3a\u6700\u7ec8\u7684\u4e8c\u5206\u7c7b\u5668\u3002 \u4f46\u662f\uff0c\u5982\u679c \\(h(\\mathcal{x}) \\in [-1, 1]\\) \u90a3\u4e48\u4e0a\u9762\u7684\u8bef\u5dee\u5206\u6790\u5c31\u4e0d\u591f\u7cbe\u786e\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3 \\(sign(h(\\mathbf{x}))\\) \u662f\u5426\u7b49\u4e8e \\(y\\) \uff0c\u6216\u8005\u8bf4 \\(yh(\\mathbf{x})\\) \u662f\u5426\u5c0f\u4e8e0\u3002\u6211\u4eec\u56de\u8fc7\u5934\u518d \u770b\uff1a\u5982\u679c \\(h(\\mathbf{x}) \\in [-1, 1]\\) \uff0c\u90a3\u4e48 \\(yh(\\mathbf{x})\\) \u672c\u8eab\u4e5f\u53cd\u6620\u7740\u5206\u7c7b\u5668 \\(h\\) \u7684\u67d0\u79cd\u7f6e\u4fe1\u7a0b\u5ea6\uff1a\u5982\u679c \\(h(\\mathbf{x})\\) \u8fdc\u8fdc\u5927\u4e8e0\uff0c\u90a3\u4e48 \\(h(\\mathbf{x})\\) \u6709\u5f88\u5927\u7684\u81ea\u4fe1 \\(y = 1\\) \u3002\u5982\u679c\u6211\u6ca1\u6709\u7406\u89e3\u9519\uff0c\u90a3\u4e48 \\(y h(\\mathcal{x})\\) \u5c31\u662f\u67d0\u79cd margin \uff0c\u5e76\u4e14\u4e0e margin \u6709\u5173\u7684\u5206\u6790\u7406\u8bba\u5c31\u53eb\u505a margin theory \u3002 \u6211\u4eec\u4eca\u5929\u7528 margin theory \u6765\u7814\u7a76\u4e00\u4e0b Boosting \u7684\u6cdb\u5316\u8bef\u5dee\uff0c\u4e5f\u5c31\u662f \\(\\mathbf{Pr}_{\\mathcal{D}}(y h(\\mathbf{x}) \\le 0)\\) \u7684\u4e0a\u754c\u3002 \u5f53\u7136\u4e0b\u9762\u7684\u6587\u7ae0\u7b26\u53f7\u4f1a\u6709\u4e9b\u8bb8\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u5148\u4ecb\u7ecd\u4e00\u4e0b\u3002 \u5bf9\u4e8e Boosting \u7b97\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a Base Hypothesis Set \\(\\mathcal{H}\\) \uff0c\u800c Boosting \u7b97\u6cd5 \u4f1a\u4ece \\(\\mathcal{H}\\) \u7684\u51f8\u5305\u4e2d\u9009\u62e9\u4e00\u4e2a\u5206\u7c7b\u5668\uff1a \\[ Co(\\mathcal{H}) = \\left\\{f(\\mathbf{x}) = \\sum^T_{t=1} \\alpha_t h(\\mathcal{x}) \\vert \\alpha_1, \\ldots, \\alpha_T \\ge 0; \\sum^T_{t=1} \\alpha_t = 1; h_1, \\ldots, h_T \\in \\mathcal{H}; T \\ge 1\\right\\}. \\]","title":"The Margins Explanation for Boosting\u2019s Effectiveness"},{"location":"ML/13-TheMarginsExplainationForBoosting/#finite-base-hypothesis-space","text":"\u5c31\u50cf\u9898\u76ee\u8bf4\u7684\uff0c\u6211\u4eec\u9996\u5148\u6765\u7814\u7a76\u4e00\u4e0b \\(\\mathcal{H}\\) \u662f\u6709\u9650\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u80fd\u591f\u5f97\u5230\u4ec0\u4e48\u3002 \u5b9a\u74061 \u6837\u672c\u7a7a\u95f4 \\(\\mathcal{X} \\times \\{-1, 1\\}\\) \u670d\u4ece\u672a\u77e5\u5206\u5e03 \\(\\mathcal{D}\\) \u3002\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u5305\u542b \\(m\\) \u4e2a\u6837\u672c\u7a7a\u95f4\u91c7\u96c6\u7684\u6837\u672c\u3002\u5982\u679c \\(\\mathcal{H}\\) \u662f\u6709\u9650\u7684\uff0c \u90a3\u4e48\u5b58\u5728 \\(1 - \\delta\\) \u7684\u53ef\u80fd\u6ee1\u8db3\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684 \\(f \\in Co(\\mathcal{H})\\) , \\[ \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{D}} [y f(\\mathbf{x}) \\le 0] \\le \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{S}} [y f(\\mathbf{x}) \\le \\theta] + O \\left(\\sqrt{\\frac{\\ln \\vert \\mathcal{H} \\vert}{m \\theta^{2}} \\ln\\frac{m\\theta^{2}}{\\ln \\vert \\mathcal{H} \\vert} + \\frac{\\ln(1/\\delta)}{m}}\\right), \\] \u5176\u4e2d\u8981\u6c42 \\(\\theta > \\sqrt{\\ln \\vert \\mathcal{H} \\vert / (4m)}\\) \u3002 \u9996\u5148\uff0c\u8fd9\u4e2a\u754c\u548c AdaBoost \u7684\u8f6e\u6b21 \\(T\\) \u6ca1\u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u9ad8\u8f6e\u6b21\u7684 AdaBoost \u5e76\u4e0d\u4f1a\u5f15\u8d77 \u8fc7\u62df\u5408\u3002 \u8fd9\u4e2a\u5b9a\u7406\u7684\u8bc1\u660e\u601d\u8def\u8fd8\u662f\u975e\u5e38\u5de7\u5999\u7684\uff0c\u6211\u5c1d\u8bd5\u6574\u7406\u4e00\u4e0b\u5427\u3002 \u8bc1\u660e\u8fc7\u7a0b\u4e2d\u6784\u9020\u4e86\u4e00\u4e2a\u7ecf\u9a8c\u5206\u7c7b\u5668\u96c6\u5408\uff0c\u5b83\u5bf9\u5e94\u7740 \\(Co(\\mathcal{H})\\) \uff1a \\[ \\mathcal{A}_{n} = \\left\\{f(\\mathbf{x}) = \\frac{1}{n}\\sum^{n}_{j=1}h_j(\\mathbf{x}) \\vert h_1, \\ldots, h_n \\in \\mathcal{H}\\right\\}. \\] \u5bf9\u4e8e\u4efb\u610f\u7684 \\(f = \\sum^{\\vert \\mathcal{H} \\vert}_{i=1} \\alpha_i h_i\\) , \u6211\u4eec\u4f9d\u636e\u6743\u91cd \\(\\alpha_i\\) \u4ece \\(\\mathcal{H}\\) \u4e2d\u72ec\u7acb\u540c\u5206\u5e03\u91c7\u96c6 \\(n\\) \u4e2a\u5206\u7c7b\u5668\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a \u7ecf\u9a8c\u5206\u7c7b\u5668 \\(\\hat f = \\frac{1}{n} \\sum^{n}_{j = 1} h_j\\) \uff0c\u5b83\u662f\u5c5e\u4e8e \\(\\mathcal{A}_n\\) \u7684\uff0c\u6211\u4eec\u5b9a\u4e49\u7ecf\u9a8c\u5206\u7c7b\u5668\u670d\u4ece\u7684\u6d4b\u5ea6\u7a7a\u95f4\u4e3a \\(\\mathcal{A}_n(f)\\) \u3002 \u4e0d\u89c4\u8303\u7684\u8bf4\uff0c\u4e3b\u4f53\u7684\u8bc1\u660e\u601d\u8def\u662f\uff1a \\[ \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{D}} \\left[y f(\\mathbf{x}) \\le 0\\right] \\le \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{D}} \\left[y \\hat f(\\mathbf{x}) \\le \\frac{\\theta}{2}\\right] \\\\ \\le \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{S}} \\left[y \\hat f(\\mathbf{x}) \\le \\frac{\\theta}{2}\\right] \\le \\mathbf{Pr}_{(\\mathbf{x}, y) \\sim \\mathcal{S}} \\left[y f(\\mathbf{x}) \\le \\theta\\right]. \\] \u5176\u4e2d \\(\\hat f\\) \u8d77\u5230\u4e86\u5f88\u91cd\u8981\u7684\u6865\u6881\u7684\u4f5c\u7528\u3002 \u5f15\u74061 \u6839\u636e\u970d\u592b\u542c\u4e0d\u7b49\u5f0f\uff0c\u6211\u4eec\u53ef\u5f97\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684 \\(x, f\\) , \u4ee5\u53ca \\(n \\ge 1, \\theta > 0\\) \uff0c\u6ee1\u8db3 \\[ \\mathbf{Pr}_{\\hat f \\sim \\mathcal{A}_n(f)} \\left[ \\vert \\hat f(x) - f(x) \\vert \\ge \\frac{\\theta}{2} \\right] \\le 2 e ^{-n\\theta^2/8} = \\beta_{n, \\theta}. \\] \u81ea\u7136\u6211\u4eec\u53ef\u5f97\u4e00\u6761\u65b0\u7684\u5f15\u7406 \u5f15\u74062 \u5bf9\u4e8e\u4efb\u610f\u7684 \\((x, y) \\sim \\mathcal{D}, f\\) \uff0c\u4ee5\u53ca \\(n \\ge 1, \\theta > 0\\) \uff0c\u6ee1\u8db3 \\[ \\mathbf{Pr}_{(x,y)\\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[\\vert y f(x) - y \\hat f(x) \\vert \\ge \\frac{\\theta}{2} \\right] \\le \\beta_{n, \\theta}. \\] \u8fd9\u6761\u5f15\u7406\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a \\(y \\in \\{-1, 1\\}\\) \uff0c\u4ee5\u53ca\u7edd\u5bf9\u503c\u7b26\u5408\u4fdd\u8bc1\u5b83\u53ef\u4ee5\u88ab\u5ffd\u7565\uff0c\u63a5\u4e0b\u6765\u5c31\u662f \u4f7f\u7528\u5f15\u74061\u5373\u53ef\u3002 \u90a3\u4e48\u6211\u4eec\u5148\u505a\u7b2c\u4e00\u6b65\u653e\u7f29\uff1a \\[ \\begin{aligned} &\\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}}[y f(x) \\le 0] \\\\ =& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)}[y f(x) \\le 0]\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[y \\hat f(x) \\le \\frac{\\theta}{2}\\right] \\\\ & + \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ y f(x) \\le 0, y \\hat f(x) > \\frac{\\theta}{2} \\right]\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[y \\hat f(x) \\le \\frac{\\theta}{2}\\right] \\\\ & + \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ \\vert y f(x) - y \\hat f(x) \\vert > \\frac{\\theta}{2} \\right]\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[y \\hat f(x) \\le \\frac{\\theta}{2}\\right] + \\beta_{n, \\theta}. \\end{aligned} \\] \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97 \\[ \\begin{aligned} &\\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right]\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ y f(x) \\le \\theta \\right]\\\\ &+ \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2}, y f(x) \\ge \\theta \\right] \\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ y f(x) \\le \\theta \\right]\\\\ &+ \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f \\sim \\mathcal{A}_n(f)} \\left[ \\vert y \\hat f(x) - y f(x) \\vert \\ge \\frac{\\theta}{2} \\right] \\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}}[y f(x) \\le \\theta] + \\beta_{n, \\theta}. \\end{aligned} \\] \u6211\u4eec\u6700\u540e\u8fd8\u5dee\u4e00\u6761\u5f15\u7406\uff0c\u6765\u8fde\u63a5\u4e0a\u9762\u4e24\u4e2a\u7ed3\u8bba\uff1a \u5f15\u74063 \u5b9a\u4e49 \\(\\epsilon_n = \\sqrt{\\ln[n(n+1)^2 \\vert \\mathcal{H} \\vert^n / \\delta]/2m}\\) , \u5176\u4e2d \\(m\\) \u662f \\(\\mathcal{S}\\) \u7684\u5927\u5c0f\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u6709 \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left \\{ \\forall n \\ge 1, \\hat f \\in \\mathcal{A}_n, \\theta>0: \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right] \\le \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right] + \\epsilon_n \\right\\} \\ge 1 - \\delta. \\] \u8bc1\u660e \u8bbe \\[ p_{\\hat f, \\theta} = \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right], \\] \u4ee5\u53ca \\[ \\hat p_{\\hat f, \\theta} = \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right]. \\] \u5f88\u660e\u663e \\(\\mathbb{E}_{\\mathcal{S} \\sim \\mathcal{D}}[\\hat p_{\\hat f,\\theta}] = p_{\\hat f, \\theta}\\) , \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u970d\u592b\u542c\u4e0d\u7b49\u5f0f\u5f97\u5230\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left[ p_{\\hat f, \\theta} \\ge \\hat p_{\\hat f, \\theta} + \\epsilon_n \\right] \\le e^{-2\\epsilon^2_n m}. \\] \u63a5\u4e0b\u6765\u7684\u4e8b\u60c5\u5c31\u6bd4\u8f83\u5de7\u5999\u4e86\u3002 \u6211\u4eec\u6ce8\u610f\u5230 \\(\\hat f(x) = \\frac{1}{n}\\sum^n_{j=1}\\hat h_j(x)\\) \uff0c\u6240\u4ee5\u5982\u679c \\(y \\hat f(x) \\le \\frac{\\theta}{2}\\) \u5f53\u4e14\u4ec5\u5f53 \\(y\\sum^n_{j=1}\\hat h_j(x) \\le \\frac{n \\theta}{2}\\) \u3002 \u53c8\u56e0\u4e3a \\(h_j(x) \\in \\{-1, 1\\}\\) \uff0c\u6240\u4ee5\u8fd8\u7b49\u4ef7\u4e8e \\(y\\sum^n_{j=1}\\hat h_j(x) \\le \\lfloor{n \\theta}/{2}\\rfloor\\) \u3002 \u53c8\u56e0\u4e3a \\(\\theta > 2\\) \u6ca1\u5fc5\u8981\u8003\u8651\uff0c\u6240\u4ee5\u542f\u53d1\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u96c6\u5408 \\[ \\Theta_n = \\left\\{ \\frac{2i}{n}: i = 0, 1, \\ldots, n \\right\\}. \\] \u90a3\u4e48\u6211\u4eec\u6709 \\[ \\begin{aligned} &\\mathbf{Pr} \\left[ \\exists \\hat f \\in \\mathcal{A}_n, \\theta \\ge 0: p_{\\hat f, \\theta} \\ge \\hat p_{\\hat f, \\theta} + \\epsilon_n \\right] \\\\ =&\\mathbf{Pr} \\left[ \\exists \\hat f \\in \\mathcal{A}_n, \\theta \\in \\Theta_n: p_{\\hat f, \\theta} \\ge \\hat p_{\\hat f, \\theta} + \\epsilon_n \\right] \\\\ =& \\vert \\mathcal{A}_n \\vert \\cdot \\vert \\Theta_n \\vert \\cdot e ^{-2\\epsilon^2_n m}\\\\ \\le& \\vert \\mathcal{H} \\vert^n \\cdot (n + 1) \\cdot e ^{-2\\epsilon^2_n m}\\\\ =& \\frac{\\delta}{n(n+1)}. \\end{aligned} \\] \u53c8\u56e0\u4e3a \\(\\sum^{\\infty}_{n=1} \\frac{\\delta}{n(n+1)} = \\delta\\) \uff0c\u6211\u4eec\u6700\u7ec8\u8bc1\u660e\u4e86\u5b9a\u74063\u3002 \u6700\u7ec8\uff0c\u6211\u4eec\u8bc1\u660e\u4e86\u5b9a\u74061\uff1a \\[ \\begin{aligned} &\\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}}[y f(x) \\le 0]\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}, \\hat f\\sim \\mathcal{A}_n(f)} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right] + \\beta_{n, \\theta}\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}, \\hat f\\sim \\mathcal{A}_n(f)} \\left[ y \\hat f(x) \\le \\frac{\\theta}{2} \\right] + \\epsilon_n + \\beta_{n, \\theta}\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}} \\left[ y f(x) \\le \\theta \\right] + \\epsilon_n + 2\\beta_{n, \\theta}\\\\ \\le& \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}} \\left[ y f(x) \\le \\theta \\right] + 4e^{-n\\theta^2/8} \\\\ & + \\sqrt{\\ln[n(n+1)^2 \\vert \\mathcal{H} \\vert^n / \\delta]/2m}. \\end{aligned} \\] \u5f53\u8bbe\u5b9a \\[ n = \\left\\lceil \\frac{4}{\\theta^2} \\ln \\left(\\frac{4m\\theta^2}{\\ln\\vert\\mathcal{H}\\vert}\\right) \\right\\rceil, \\] \u6211\u4eec\u5c31\u5f97\u5230\u4e86\u5b9a\u74061\uff0c\u5e94\u8be5\u8fd8\u662f\u9700\u8981\u4e00\u4e9b\u4e0d\u7b49\u5f0f\u653e\u7f29\u7684\u6b65\u9aa4\uff0c\u8fd9\u91cc\u4e66\u4e0a\u7701\u7565\u4e86\uff0c\u6211\u4e5f\u4e0d\u8ffd\u7a76\u4e86\u3002 \u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u4e2a\u754c\u5bf9 \\(n\\) \u7684\u5927\u5c0f\u6709\u9650\u5236\uff0c \\(m\\) \u8d8a\u5927\uff0c \\(n\\) \u53ef\u4ee5\u8d8a\u5927\u3002\u8fd9\u4e2a\u754c\u8fd8\u662f\u5f88\u5947\u602a\u7684\uff0c \u6211\u89c9\u5f97\u76ee\u524d\u7684\u8868\u8fbe\u65b9\u5f0f\u5e76\u6ca1\u6709\u4f53\u73b0\u51fa\u5b83\u7684\u672c\u8d28\uff1a\u5bf9\u4efb\u610f\u7684 \\(f\\) \u90fd\u6709\u8fd9\u4e2a\u754c\uff0c\u8fd9\u4e2a\u754c\u4e5f\u592a\u677e\u5f1b\u4e86\u5427\u3002","title":"Finite Base Hypothesis Space"},{"location":"ML/13-TheMarginsExplainationForBoosting/#infinite-base-hypothesis-spaces","text":"\u6211\u4eec\u4f7f\u7528\u5047\u8bbe\u96c6\u7684 VC-\u7ef4 \u6765\u505a\u7c7b\u4f3c\u7684\u91c7\u6837\u590d\u6742\u5ea6\u7684\u754c\uff0c\u4e0b\u9762\u7684\u5b9a\u7406\u975e\u5e38\u7c7b\u4f3c\u5b9a\u74061\u3002 \u5b9a\u74062 \u6837\u672c\u7a7a\u95f4 \\(\\mathcal{X} \\times \\{-1, 1\\}\\) \u670d\u4ece\u672a\u77e5\u5206\u5e03 \\(\\mathcal{D}\\) \u3002\u6837\u672c\u96c6 \\(\\mathcal{S}\\) \u5305\u542b \\(m\\) \u4e2a\u6837\u672c\u7a7a\u95f4\u91c7\u96c6\u7684\u6837\u672c\u3002\u5982\u679c \\(\\mathcal{H}\\) \u7684 VC-\u7ef4 \u662f \\(d\\) \u3002 \u5bf9\u4e8e \\(m \\ge d \\ge 1\\) \u4ee5\u53ca \\(\\delta > 0\\) \uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684 \\(f \\in Co(\\mathcal{H})\\) , \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\forall \\theta > \\sqrt{8d \\ln(em / d) / m}: \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}} [ y f(x) \\le 0] \\le \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}}[y f(x) \\le \\theta] + O \\left( \\sqrt{ \\frac{d \\ln(m / d) \\ln(m \\theta^2 / d)}{m\\theta^2} + \\frac{\\ln(1 / \\delta)}{m} }\\right) \\right\\} > 1 - \\delta. \\] \u76f8\u6bd4\u4e8e\u5b9a\u74061\uff0c\u5b9a\u74062\u7684\u8bc1\u660e\u9700\u8981\u89e3\u51b3\u7684\u5173\u952e\u95ee\u9898\u662f\u5982\u4f55\u4fee\u6539\u5f15\u74063\u3002 \u5f15\u74064 \u5b9a\u4e49 \\[ \\epsilon_n = \\sqrt{\\frac{32}{m} [\\ln(n(n+1)^2) + dn \\ln(em / d) + \\ln(8/\\delta)]}. \\] \u6211\u4eec\u6709\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S}\\sim \\mathcal{D}} \\left\\{ \\forall n \\ge 1, \\hat f \\in \\mathcal{A}_n, \\theta \\ge 0: \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}} \\left[y \\hat f(x) \\le \\frac{\\theta}{2}\\right] \\le \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}} \\left[y \\hat f(x) \\le \\frac{\\theta}{2}\\right] + \\epsilon_n \\right\\} \\ge 1 - \\delta. \\] \u8bc1\u660e \u5bf9\u4e8e\u6837\u672c\u7a7a\u95f4 \\(\\mathcal{Z} = \\mathcal{X} \\times \\{-1, +1\\}\\) \uff0c\u6211\u4eec\u6784\u9020\u5b83\u7684\u4e00\u4e2a\u5b50\u96c6 \\[ B_{\\hat f, \\theta} = \\left\\{ (x, y) \\in \\mathcal{Z}: y \\hat f(x) \\le \\theta/2 \\right\\} \\] \u6765\u8868\u793a\u6837\u672c\u70b9\u6ee1\u8db3\u5bf9\u5e94 \\(\\hat f(x)\\) \u7684 margin \u6700\u591a\u4e3a \\(\\theta/2\\) \u7684\u70b9\u7684\u96c6\u5408\u3002 \u6211\u4eec\u518d\u5b9a\u4e49 \\(B_{\\hat f, \\theta}\\) \u7684\u96c6\u5408\uff1a \\[ \\mathcal{B}_n = \\left\\{ B_{\\hat f, \\theta}: \\hat f \\in \\mathcal{A}_n, \\theta \\ge 0 \\right\\}. \\] \u63a5\u4e0b\u6765\u6211\u4eec\u5e0c\u671b\u6c42\u89e3\u4e00\u4e0b \\(\\mathcal{B}_n\\) \u7684\u589e\u957f\u51fd\u6570 \\(\\Pi_{\\mathcal{B}_n}(m)\\) \uff08\u518d\u6211\u7684\u7b14\u8bb0\u91cc\uff0c\u4e5f\u53eb\u5b83 \\(\\tau_{\\mathcal{B}_n}(m)\\) \uff09\u3002 \u56e0\u4e3a\u5047\u8bbe \\(\\mathcal{H}\\) \u7684 VC\u7ef4 \u662f \\(d\\) \uff0c\u6240\u4ee5\u6839\u636e Sauer's \u5f15\u7406\uff0c\u5f53 \\(m \\ge d \\ge 1\\) \u65f6\uff0c \u6211\u4eec\u53ef\u5f97\uff1a \\[ \\vert \\left\\{ \\langle h(x_1), \\ldots, h(x_m) \\rangle: h \\in \\mathcal{H} \\right\\} \\vert \\le (em / d)^d. \\] \u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u5730\u5f97\u5230\u4e00\u4e2a\u975e\u5e38\u677e\u5f1b\u7684\u754c \\[ \\vert \\left\\{ \\langle y_1 \\hat f(x_1), \\ldots, y_m \\hat f(x_m) \\rangle: \\hat f \\in \\mathcal{A}_n \\right\\} \\vert \\le (em / d)^{dn}. \\] \u8fd9\u91cc\u56e0\u4e3a \\(n\\) \u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5 \\(\\hat f(x)\\) \u4e5f\u662f\u79bb\u6563\u7684\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u5f15\u74063\u7684 \u6280\u672f\uff0c\u6784\u9020\u96c6\u5408 \\(\\Theta_n\\) , \u5f97\u5230\uff1a \\[ \\Pi_{\\mathcal{B}_n}(m) \\le (n+1) (em/d)^{dn}. \\] VC\u7ef4\u6709\u4e00\u4e2a\u5b9a\u7406\uff08\u539f\u4e66\u5b9a\u74062.6\uff09\uff1a\u5982\u679c \\(\\mathcal{A}\\) \u662f\u96c6\u5408 \\(Z\\) \u5b50\u96c6\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u6709\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\exists A \\in \\mathcal{A}: \\mathbf{Pr}_{z \\sim \\mathcal{D}}[z \\in A] \\ge \\mathbf{Pr}_{z \\sim \\mathcal{S}}[z \\in A] + \\epsilon \\right\\} \\le 8 \\Pi_{\\mathcal{A}}(m) e^{-m \\epsilon^2 / 32}. \\] \u5e26\u5165\u53ef\u5f97\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\forall B_{\\hat f, \\theta} \\in \\mathcal{B}_n, \\mathbf{Pr}_{z \\sim \\mathcal{D}}[z \\in B_{\\hat f, \\theta}] \\le \\mathbf{Pr}_{z \\sim \\mathcal{S}}[z \\in B_{\\hat f, \\theta}] + \\epsilon_n \\right\\} \\ge 1 - \\delta/(n(n+1)). \\] \u90a3\u4e48\uff0c\u6211\u4eec\u518d\u805a\u96c6\u4e00\u4e0b \\(\\mathbf{B}_n\\) \uff0c\u5bf9\u4e8e\u4efb\u610f\u7684 \\(n \\ge 1\\) \uff0c\u6211\u4eec\u90fd\u6709\u81f3\u5c11 \\(1 - \\delta\\) \u7684\u6982\u7387\u5f97\u5230\u5f15\u74064\u3002 \u6211\u4eec\u7efc\u5408\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u7c7b\u4f3c\u4e8e\u6709\u9650\u5047\u8bbe\u96c6\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5b9a\u74062\uff0c\u4e0d\u8fc7\u8981\u8bbe\u7f6e\uff1a \\[ n = \\left\\lceil \\frac{4}{\\theta^2} \\ln \\left( \\frac{m \\theta^2}{8d \\ln(em / d)} \\right) \\right\\rceil. \\] \u7efc\u4e0a\u6240\u8ff0\uff0c \\(\\tilde O(1 / \\sqrt{m})\\) \u662f\u4e00\u4e2a\u975e\u5e38\u677e\u5f1b\u7684\u754c\uff0c\u5982\u679c\u6211\u4eec\u6709 consistent \u5047\u8bbe\uff0c \u4e5f\u5c31\u662f\u6240\u6709\u7ecf\u9a8c\u8bef\u5dee\u503c\u53ef\u4ee5\u964d\u52300\uff0c\u90a3\u4e48\u6211\u4eec\u80fd\u591f\u83b7\u5f97\u4e00\u4e2a\u66f4\u597d\u7684\u754c \\(\\tilde O(1 / m)\\) \u3002","title":"Infinite Base Hypothesis Spaces"},{"location":"ML/13-TheMarginsExplainationForBoosting/#rademacher","text":"\u4e00\u4e9b Rademacher \u7684\u524d\u7f6e\u77e5\u8bc6\u53ef\u4ee5\u7ffb\u9605\u524d\u9762\u7684\u7b14\u8bb0\u3002\u63a5\u4e0b\u6765\u7528\u5230\u4e86\u4e00\u7cfb\u5217 Rademacher \u590d\u6742\u5ea6\u7684 \u6570\u5b66\u6027\u8d28\u3002 \u6211\u4eec\u5148\u5f15\u5165\u4e00\u4e2a\u51fd\u6570\u96c6\u5408 \\[ \\mathcal{M} = \\left\\{ (x, y) \\mapsto y f(x) \\vert f \\in co(\\mathcal{H}) \\right\\}. \\] \u53d7\u9650\u6211\u4eec\u53ef\u5f97\uff1a \\(R_S(\\mathcal{M}) = R_S(co(\\mathcal{H})) = R_S(\\mathcal{H})\\) \u3002 \u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u5206\u6bb5\u7ebf\u6027\u51fd\u6570\uff08 \\(0-1\\) \u635f\u5931\u51fd\u6570\u7684\u53d8\u5f62\uff09\uff1a \\[ \\phi(u) = \\begin{cases} 1 & u \\le 0,\\\\ 1 - u/\\theta & 0\\le u \\le \\theta,\\\\ 0 & u \\ge \\theta. \\end{cases} \\] \u56e0\u4e3a \\(\\phi(u)\\) \u662f \\(1/\\theta\\) -Lipschitz \u8fde\u7eed\u51fd\u6570\uff0c\u5982\u679c\u5047\u8bbe\u96c6 \\(\\mathcal{H}\\) \u7684 VC-\u7ef4 \u662f \\(d\\) , \u6211\u4eec\u5c31\u80fd\u5f97\u5230\uff1a \\[ R_S(\\phi \\circ \\mathcal{M}) \\le \\frac{1}{\\theta} R_S(\\mathcal{M}) \\le \\frac{1}{\\theta} \\sqrt{\\frac{2d}{m} \\ln(em/d)}. \\] \u6211\u4eec\u5e26\u5165\u5230 Rademacher \u590d\u6742\u5ea6\u7684\u754c\u53ef\u4ee5\u5f97\u5230\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\forall f \\in co(\\mathcal{H}): \\mathbb{E}_{(x, y) \\sim \\mathcal{D}}[\\phi(y f(x))] - \\mathbb{E}_{(x, y) \\sim \\mathcal{S}}[\\phi(y f(x))] \\le R_S(\\phi \\circ \\mathcal{M}) + 3 \\sqrt{\\frac{2}{m}\\ln(2 / \\delta)} \\right\\} \\ge 1 - \\delta. \\] \u56e0\u4e3a \\(\\pmb{1}\\{u \\le 0\\} \\le \\phi(u) \\le \\pmb{1}\\{u \\le \\theta\\}\\) \uff0c\u6240\u4ee5\u6211\u4eec\u6709 \\[ \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}}[y f(x) \\le 0] = \\mathbb{E}_{(x, y) \\sim \\mathcal{D}}[\\pmb{1}\\{y f(x) \\le 0\\}] \\le \\mathbb{E}_{(x, y) \\sim \\mathcal{D}} [\\phi(y f(x))]. \\] \u4ee5\u53ca \\[ \\mathbb{E}_{(x, y) \\sim \\mathcal{S}} [\\phi(y f(x))] \\le \\mathbb{E}_{(x, y) \\sim \\mathcal{S}}[\\pmb{1}\\{y f(x) \\le 0\\}] = \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}}[y f(x) \\le 0]. \\] \u56e0\u6b64\u6211\u4eec\u53ef\u5f97\uff1a \\[ \\mathbf{Pr}_{\\mathcal{S} \\sim \\mathcal{D}} \\left\\{ \\forall f \\in co(\\mathcal{H}): \\mathbf{Pr}_{(x, y) \\sim \\mathcal{D}}[y f(x) \\le 0] - \\mathbf{Pr}_{(x, y) \\sim \\mathcal{S}}[y f(x) \\le \\theta] \\le \\frac{2}{\\theta} \\sqrt{\\frac{2d}{m} \\ln(em/d)} + 3 \\sqrt{\\frac{2}{m}\\ln(2 / \\delta)} \\right\\} \\ge 1 - \\delta. \\] \u901a\u5e38\u6211\u4eec\u5c06\u8bef\u5dee\u8fdb\u4e00\u6b65\u8fd1\u4f3c\u4e3a \\[ \\begin{aligned} &\\frac{2}{\\theta} \\sqrt{\\frac{2d}{m} \\ln(em/d)} + 3 \\sqrt{\\frac{2}{m}\\ln(2 / \\delta)} \\\\ \\approx& \\tilde{O} \\bigg( \\sqrt{\\frac{d/\\theta^2}{m}} \\bigg) + O\\bigg( \\sqrt{\\ln(1 / \\delta)}{m}\\bigg) \\\\ \\approx& \\tilde{O} \\bigg(\\sqrt{\\frac{d/\\theta^2 + \\ln(1/\\delta)}{m}}\\bigg). \\end{aligned} \\]","title":"\u57fa\u4e8e Rademacher \u590d\u6742\u5ea6\u7684\u5206\u6790"},{"location":"ML/13-TheMarginsExplainationForBoosting/#boosting-margin","text":"\u524d\u9762\u7684\u5206\u6790\u5e7f\u6cdb\u9002\u7528\u4e8e\u4f7f\u7528\u5047\u8bbe\u96c6 \\(co(\\mathcal{H})\\) \u7684\u7b97\u6cd5\uff0c\u4f8b\u5982\uff1a\u6295\u7968\u5206\u7c7b\u7b97\u6cd5\uff08voting classifier\uff09\u3002\u8fd9\u4e00\u8282\uff0c\u6211\u4eec\u5206\u6790\u4e00\u4e0b Boosting \u7684\u7279\u522b\u4e4b\u5904\uff0c\u603b\u7684\u6765\u8bf4\u5c31\u662f\u901a\u8fc7\u7ed9\u5c0fmargin\u6837\u672c\u66f4\u5927\u7684\u6743\u91cd\uff0c\u6765\u663e\u8457\u589e\u5927\u6574\u4e2a\u8bad\u7ec3\u96c6\u7684margin\u3002 \u5b9a\u74063 \u5728 AdaBoost \u4e2d\u5b9a\u4e49 \\(\\gamma_t = \\frac{1}{2} - \\epsilon_t\\) , \u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\uff1a \u8bad\u7ec3\u96c6\u4e2dmargin\u6700\u591a\u4e3a \\(\\theta\\) \u7684\u6837\u672c\u4e2a\u6570\u5360\u603b\u6837\u672c\u4e2a\u6570\u7684\u6bd4\u4f8b\u4e3a\uff1a \\[ \\prod^T_{t=1} \\sqrt{(1 + 2 \\gamma_t)^{1 + \\theta} (1 - 2 \\gamma_t)^{1 - \\theta}}. \\] \u8bc1\u660e \u6211\u4eec\u6cbf\u7528\u5b9a\u4e49 \\(f(x) = \\frac{\\sum^T_{t=1} \\alpha_t h_t(x)}{\\sum^T_{t=1} \\alpha_t}\\) \uff0c \u90a3\u4e48 \\(y f(x) \\le \\theta\\) \u5f53\u4e14\u4ec5\u5f53 \\(y \\sum^T_{t=1} \\alpha_t h_t(x) \\le \\theta \\sum^T_{t=1} \\alpha_t\\) \uff0c \u8fdb\u4e00\u6b65\u5f53\u4e14\u4ec5\u5f53 \\[ \\exp\\left( -y \\sum^T_{t=1} \\alpha_t h_t(x) +\\theta \\sum^T_{t=1} \\alpha_t \\right) \\ge 1. \\] \u56e0\u6b64 \\[ \\pmb{1} [y f(x) \\le \\theta] \\le \\exp\\left( -y \\sum^T_{t=1} \\alpha_t h_t(x) +\\theta \\sum^T_{t=1} \\alpha_t \\right). \\] \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u5f97 \\[ \\begin{aligned} &\\mathbf{Pr}_{(x, y) \\sim S} [y f(x) \\le \\theta] = \\frac{1}{m} \\sum^m_{i=1} \\pmb{1}[y_i f(x_i) \\le \\theta]\\\\ \\le& \\frac{1}{m} \\exp\\left( -y \\sum^T_{t=1} \\alpha_t h_t(x) +\\theta \\sum^T_{t=1} \\alpha_t \\right)\\\\ =& \\frac{1}{m} \\exp\\left(\\theta \\sum^T_{t=1} \\alpha_t \\right) \\sum^m_{i=1} \\exp\\left(-y_i \\sum^T_{t=1} \\alpha_t h_t(x_i)\\right)\\\\ =& \\exp\\left(\\theta \\sum^T_{t=1} \\alpha_t \\right) \\prod^T_{t=1} Z_t\\\\ =& \\prod^{T}_{t=1} e^{\\theta \\alpha_t} Z_t\\\\ =& \\prod^{T}_{t=1} \\bigg[2 \\sqrt{\\epsilon^{1-\\theta}_t (1 - \\epsilon_t)^{1+\\theta}}\\bigg]\\\\ &\\quad \\bigg(\\alpha_t = \\frac{1}{2} \\ln \\frac{1 - \\epsilon_t}{\\epsilon_t}, Z_t=2\\sqrt{\\epsilon_t(1 - \\epsilon_t)} \\bigg)\\\\ =& \\prod^{T}_{t=1} \\bigg[(1 - 2 \\gamma_t)^{1 - \\theta} (1 + 2\\gamma_t)^{1+\\theta}\\bigg]. \\quad \\bigg(\\epsilon_t = \\frac{1}{2} - \\gamma_t\\bigg) \\end{aligned} \\] \u5176\u4e2d\u4e00\u4e2a\u7b49\u5f0f\u7528\u5230\u4e86 \\(\\prod^{T}_{t=1}Z_t\\) \uff0c\u7279\u6b64\u8bc1\u660e\u4e00\u4e0b\u3002\u6211\u4eec\u56de\u5fc6\u4e00\u4e0bAdaboost\u91cc \\[ \\begin{aligned} D_{T+1}(i) &= D_1(i) \\times \\frac{e^{-y_i \\alpha_1 h_1(x_i)}}{Z_1} \\times \\cdots \\times \\frac{e^{-y_i\\alpha_T h_T(x_i)}}{Z_T}\\\\ &= \\frac{1}{m} \\frac{\\exp{\\left(-y_i \\sum^T_{t=1} \\alpha_t h_t(x_i)\\right)}}{\\prod^T_{t=1} Z_t}. \\end{aligned} \\] \u6240\u4ee5 \\[ {\\prod^T_{t=1} Z_t} ={\\prod^T_{t=1} Z_t} \\sum^m_{i=1} D_{T+1}(i) = \\frac{1}{m} \\sum^m_{i=1} \\exp{\\left(-y_i \\sum^T_{t=1} \\alpha_t h_t(x_i)\\right)}. \\] \u5982\u679c \\(\\epsilon_t \\le \\frac{1}{2} - \\gamma\\) , \u90a3\u4e48\u754c\u5c31\u53d8\u6210\u4e86 \\(\\left(\\sqrt{(1 + 2 \\gamma)^{1 + \\theta} (1 - 2 \\gamma)^{1 - \\theta}}\\right)^T\\) \u3002 \u5982\u679c \\(\\sqrt{(1 + 2 \\gamma)^{1 + \\theta} (1 - 2 \\gamma)^{1 - \\theta}} < 1\\) \uff0c \u90a3\u4e48\u968f\u7740 AdaBoost \u7684\u8f6e\u6b21\u589e\u52a0\uff0c \\(yf(x) \\le \\theta\\) \u7684\u53ef\u80fd\u6307\u6570\u4e0b\u964d\u52300\u3002 \u6211\u4eec\u6574\u7406\u4e00\u4e0b\u5f97\u5230\uff1a \\[ \\theta < \\Upsilon(\\gamma) = \\frac{-\\ln(1 - 4\\gamma^2)} {\\ln\\left(\\frac{1 + 2 \\gamma}{ 1 - 2 \\gamma}\\right)}. \\] \u56e0\u4e3a \\(0 \\le \\gamma \\le \\frac{1}{2}\\) \uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u5230 \\(\\gamma \\le \\Upsilon(\\gamma) \\le 2 \\gamma\\) \u3002 \u800c\u4e14\uff0c\u5f53 \\(\\gamma\\) \u63a5\u8fd10\u65f6\uff0c \\(\\Upsilon(\\gamma) \\approx \\gamma\\) \u3002\u6240\u4ee5\u7ecf\u8fc7\u4e00\u5b9a\u8f6e\u6570\uff0c \\(\\Upsilon(\\gamma)\\) \u7ed9\u4e86\u4e00\u5b9a\u7684\u754c\u4fdd\u969c\u4e86 margin\u3002 \\(\\gamma_t\\) \u8d8a\u5927\uff0cmargin\u8d8a\u5927\u3002\u8fd9\u91cc\u901a\u5e38\u5c06 \\(\\gamma_t\\) \u79f0\u4e3a edge\u3002\u8fd9\u91cc\u6709\u70b9\u535a\u5f08\u7684\u610f\u5473\uff1a\u66f4\u5f3a\u7684\u57fa\u7840\u5206\u7c7b\u5668\u80fd\u4fdd\u8bc1 edge \u66f4\u5927\uff0cmargin\u4e5f\u8d8a\u5927\uff0c\u80fd\u591f\u907f\u514d\u8fc7\u62df\u5408\u3002\u4f46\u662f\u66f4\u5f3a\u7684\u57fa\u7840\u5206\u7c7b\u5668\u4e5f\u4f1a\u5bfc\u81f4\u7684\u590d\u6742\u5ea6\u589e\u52a0\uff08Rademacher\u590d\u6742\u5ea6\u5927\uff09\uff0c\u4e5f\u4f1a\u5bf9\u7b97\u6cd5\u7684\u6548\u679c\u6709\u8d1f\u9762\u5f71\u54cd\u3002","title":"Boosting \u5bf9 Margin \u5206\u5e03\u7684\u5f71\u54cd"},{"location":"ML/13-TheMarginsExplainationForBoosting/#marginboosting","text":"\u4e0a\u4e00\u8282\u8bc1\u660e\u4e86\uff0c\u5728\u539f\u59cb\u7684AdaBoost\u4e2d\uff0cMargin\u7531 \\(\\Upsilon(\\gamma)\\) \u9650\u5236\u3002\u800c \\(\\Upsilon(\\gamma)\\) \u5728 \\(\\gamma\\) \u8d8b\u8fd1\u4e8e0\u65f6\uff0c\u6ee1\u8db3 \\(\\Upsilon(\\gamma) \\approx \\gamma\\) \u3002 \\(\\gamma\\) \u8fd9\u4e2a\u754c\u592a\u5c0f\u4e86\uff0c\u672c\u8282\u63d0\u51fa\u4e00\u79cdAdaBoost\u7684\u53d8\u79cd\uff0c\u5c06\u4f1a\u63d0\u9ad8\u8fd9\u4e2a\u7ed3\u679c\u5230 \\(2\\gamma\\) \u3002 \u5728AdaBoost\u4e2d\uff0c\u6709\u5173\u7cfb \\[ Z_t = e^{-\\alpha_t} \\bigg(\\frac{1}{2} + \\gamma_t\\bigg) + e^{\\alpha_t} \\bigg( \\frac{1}{2} - \\gamma_t\\bigg). \\] \u5e26\u5165\u4e0a\u8282\u7684\u4e00\u4e2a\u7b49\u5f0f\u53ef\u5f97 \\[ \\mathbb{Pr}_{(x, y)\\sim \\mathcal{S}} [y f(x) \\le \\theta] \\le \\prod^{T}_{t=1} \\bigg[e^{(\\theta-1)\\alpha_t}(\\frac{1}{2} + \\gamma_t) + e^{(\\theta+1) \\alpha_t} (\\frac{1}{2} - \\gamma_t)\\bigg]. \\] \u90a3\u4e48\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u6700\u5c0f\u5316\u4e0a\u9762\u7684margin\u7684\u754c\u5462\uff1f\u5bf9 \\(\\alpha_t\\) \u6c42\u6781\u503c\u53ef\u5f97 \\[ \\alpha^*_t = \\frac{1}{2}\\ln\\frac{1+2\\gamma_t}{1-2\\gamma_t} - \\frac{1}{2} \\ln\\frac{1 + \\theta}{1 - \\theta}. \\] \u5982\u679c\u6211\u4eec\u63d0\u524d\u53d6 \\(\\theta\\) \u6ee1\u8db3 \\(\\gamma_t \\ge \\theta/2\\) \uff0c\u90a3\u4e48 \\(\\alpha^*_t \\ge 0\\) \u3002\u7ecf\u8fc7\u4e00\u4e9b\u590d\u6742\u7684\u7f29\u653e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7b80\u6d01\u7684\u754c\uff08\u6211\u6ca1\u6709\u9a8c\u8bc1\u8fc7\uff0c\u4e66\u4e0a\u4e5f\u662f\u8df3\u8fc7\u4e86\u8fd9\u4e2a\u8bc1\u660e\uff09 \\[ \\mathbb{Pr}_{(x, y)\\sim \\mathcal{S}} [y f(x) \\le \\theta] \\le \\exp\\bigg[- \\sum^T_{t=1} \\mathrm{RE}_{b}\\bigg(\\frac{1}{2}+\\frac{\\theta}{2} \\bigg\\Vert \\frac{1}{2} + \\gamma_t\\bigg)\\bigg]. \\] \u5176\u4e2d \\(\\mathrm{RE}_b(p \\Vert q)\\) \u8868\u793a\u4e24\u4e2a\u4f2f\u52aa\u5229\u5206\u5e03\u7684\u76f8\u5bf9\u71b5 \\[ \\mathrm{RE}_b(p \\Vert q) = p \\ln\\frac{p}{q} + (1 - p) \\ln\\frac{1 - p}{1 - q}. \\] \u5982\u679c\u63d0\u524d\u786e\u5b9a\u4e86 \\(\\theta\\) \u5e76\u4e14 \\(\\gamma\\) -\u5f31\u5206\u7c7b\u5047\u8bbe\u4e2d \\(\\gamma > \\theta_2\\) \uff0c\u90a3\u4e48\u8bad\u7ec3\u96c6\u7684\u5173\u4e8emargin\u754c\u7684\u8bef\u5dee\u7387\u4e0d\u5927\u4e8e \\[ \\exp\\bigg[- T \\cdot \\mathrm{RE}_{b}\\bigg(\\frac{1}{2}+\\frac{\\theta}{2} \\bigg\\Vert \\frac{1}{2} + \\gamma\\bigg)\\bigg]. \\] \u53cd\u4e4b\uff0c\u5982\u679c\u63d0\u524d\u77e5\u9053\u4e86 \\(\\gamma\\) \uff0c\u90a3\u4e48 \\(\\theta\\) \u53ef\u4ee5\u53d6\u5f97\u6bd4 \\(2\\gamma\\) \u7565\u5c0f\u4e00\u4e9b\u3002 \u7406\u8bba\u5f88\u4e30\u6ee1\uff0c\u73b0\u5b9e\u5f88\u9aa8\u611f\u3002\u6211\u4eec\u901a\u5e38\u4e0d\u80fd\u83b7\u5f97 \\(\\gamma\\) \u6216\u8005 \\(\\theta\\) \u7684\u4fe1\u606f\uff0c\u53ea\u80fd\u901a\u8fc7\u4e0d\u65ad\u8c03\u6574 \\(\\theta\\) \u6765\u5f97\u5230\u7c7b\u4f3c\u7684\u754c\uff0c\u5982\u7b97\u6cd5 \\(arc-gv\\) \u6216\u8005 \\(AdaBoost^*_\\nu\\) \uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u5177\u4f53\u7ec6\u8282\uff0c\u4f46\u662f\u5e94\u8be5\u6ca1\u5173\u7cfb\uff09\u3002\u8bbe\u7f6e \\(\\theta\\) \u7684\u76ee\u7684\u672c\u610f\u662f\u4e3a\u4e86\u589e\u52a0\u6cdb\u5316\u6027\uff0c\u4f46\u662f\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5f80\u5f80\u4f1a\u5931\u8d25\u3002\u7b2c\u4e00\u4e2a\u539f\u56e0\u662f margin \u8bbe\u7f6e\u5f97\u9ad8\uff0c\u8fd8\u8981\u4fdd\u6301\u9519\u8bef\u7387\u4f4e\uff0c\u5c31\u9700\u8981\u57fa\u7840\u5206\u7c7b\u5668\u7684\u590d\u6742\u5ea6\u975e\u5e38\u9ad8\uff08\u4f8b\u5982\u51b3\u7b56\u6811\u7684\u6811\u7684\u6df1\u5ea6\u548c\u5bbd\u5ea6\u4f1a\u975e\u5e38\u5927\uff09\uff0c\u6837\u672c\u9700\u6c42\u5c31\u8d8a\u6765\u8d8a\u5927\u3002 \u6211\u4eec\u5f80\u5f80\u6ca1\u6709\u90a3\u4e48\u591a\u6837\u672c\uff0c\u5c31\u5bfc\u81f4\u4e86\u7b97\u6cd5\u7684\u5931\u8d25\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4f7f\u7528\u8868\u8fbe\u80fd\u529b\u8f83\u5dee\u7684\u5206\u7c7b\u5668\uff08\u5982 decision stumps\uff09\u540c\u6837\u4e5f\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u63d0\u5347 AdaBoost\u3002\u867d\u7136\u5b83\u63d0\u9ad8\u4e86\u6700\u5c0f\u7684margin\uff0c\u4f46\u662f\u4ed8\u51fa\u7684\u4ee3\u4ef7\u53ef\u80fd\u662f\u5927\u90e8\u5206\u5176\u4ed6\u6837\u672c\u7684margin\u964d\u4f4e\uff0c\u6574\u4f53\u6765\u770b\uff0cmargin\u5176\u5b9e\u8fd8\u662f\u964d\u4f4e\u7684\u3002\u800c\u6cdb\u5316\u8bef\u5dee\u7684\u754c\u662f\u548c\u6574\u4f53\u7684margin\u6709\u5173\uff0c\u800c\u4e0d\u662f\u6700\u5c0f\u7684margin\u3002","title":"Margin\u6700\u5927\u5316Boosting"},{"location":"ML/13-TheMarginsExplainationForBoosting/#weak-learnability","text":"","title":"Weak Learnability \u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6"},{"location":"ML/13-TheMarginsExplainationForBoosting/#_1","text":"\u5145\u5206\u6761\u4ef6\u662f\u5bf9\u4e8e\u6240\u6709\u7684\u6837\u672c \\((x_i, y_i) \\in \\mathcal{S}\\) \uff0c\u5f31\u5206\u7c7b\u5668 \\(g_1, \\ldots, g_k\\) \u5b58\u5728\u51f8\u7ec4\u5408\u5206\u7c7b\u5668\u6ee1\u8db3 \\[ y_i \\sum^{k}_{j=1} a_j g_j(x_i) \\ge \\theta. \\] \u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u5b9a\u4e49\u5728\u8bad\u7ec3\u96c6 \\(\\mathcal{S}\\) \u4e0a\u7684\u5206\u5e03 \\(\\mathcal{D}\\) \u90fd\u6709 \\[ \\sum^{k}_{j=1} \\alpha_j \\mathbb{E}_{i \\sim\\mathcal{D}} [y_i g_j(x_i)] = \\mathbb{E}_{i \\sim \\mathcal{D}} \\bigg[y_i \\sum^{k}_{j=1} a_j g_j(x_i)\\bigg] \\ge \\theta. \\] \u53c8\u56e0\u4e3a \\[ \\begin{aligned} \\mathbb{E}_{i \\sim \\mathcal{D}} [y_i g_j(x_i)] =& 1 \\cdot \\mathbf{Pr}_{i \\sim \\mathcal{D}}[y_i = g_j(x_i)] + (-1) \\cdot \\mathbf{Pr}_{i \\sim \\mathcal{D}} [y_i \\ne g_j(x_i)]\\\\ =& 1 - 2 \\mathbf{Pr}_{i \\sim \\mathcal{D}} [y_i \\ne g_j(x_i)], \\end{aligned} \\] \u6240\u4ee5 \\[ \\mathbf{Pr}_{i \\sim \\mathcal{D}}[y_i \\ne g_j(x_i)] \\le \\frac{1}{2} - \\frac{\\theta}{2}. \\] \u6240\u4ee5\uff0c\u5f31\u5206\u7c7b\u5668\u7684\u4e00\u4e2a\u5145\u5206\u6761\u4ef6\u662f\uff0c\u5728\u6837\u672c\u662f\u7ebf\u6027\u53ef\u5206\u7684\uff0c\u5e76\u4e14\u7ebf\u6027\u5206\u7c7b\u7684margin\u81f3\u5c11\u4e3a \\(2\\gamma\\) \u3002","title":"\u5145\u5206\u6761\u4ef6"},{"location":"ML/13-TheMarginsExplainationForBoosting/#_2","text":"\u4e0a\u9762\u7684 \\(2\\gamma\\) -\u7ebf\u6027\u53ef\u5206\u6761\u4ef6\u4e5f\u662f\u5fc5\u8981\u6761\u4ef6\u3002","title":"\u5fc5\u8981\u6761\u4ef6"},{"location":"ML/14-GameTheory/","text":"Game Theory, Online Learning and Boosting \u00b6 Abstract \u672c\u6587\u6458\u81ea Boosting: Foundations and algorithms \u7684\u7b2c\u516d\u7ae0\u3002\u8fd9\u4e00\u7ae0\u4ecb\u7ecd\u4e86Game Theory\u3001Online Learning \u548c Boosting \u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u975e\u5e38\u6709\u610f\u601d\u3002GAN\u548cRL\u7684\u76f8\u5173\u7b97\u6cd5\u5b9e\u9645\u4e0a\u4e5f\u662f\u5728\u6c42\u89e3\u4e00\u4e2a\u535a\u5f08\u6e38\u620f\uff0c\u6240\u4ee5\u8fd9\u4e00\u7ae0\u7684\u601d\u60f3\u53ef\u80fd\u975e\u5e38\u5177\u6709\u542f\u53d1\u6027\u3002 Game Theory \u00b6 \u5b9a\u4e49 \u5bf9\u4e8e\u4e00\u4e2a \u535a\u5f08\u6e38\u620f \\(\\mathbf{M}\\) \u77e9\u9635\uff0c\u4e24\u4e2a\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9\u5b83\u7684\u884c \\(i\\) \u548c\u5217 \\(j\\) \uff0c\u5f97\u5230\u4e00\u4e2a\u6e38\u620f\u6570\u503c \\(\\mathbf{M}(i, j)\\) \u3002\u5f53\u4e24\u4e2a\u73a9\u5bb6\u9009\u62e9\u4e24\u4e2a\u5206\u5e03 \\(P\\) \u548c \\(Q\\) \u540e\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u6e38\u620f\u6570\u503c \\[ M(P, Q) = \\sum_{i,j} P(i)\\mathbf{M}(i, j)Q(j) = P^T \\mathbf{M} Q. \\] \u5b9a\u4e49 \u5bf9\u4e8e\u4e00\u4e2a\u535a\u5f08\u6e38\u620f \\(\\mathbf{M}\\) \uff0c\u5b83\u7684 \u8f6e\u6b21\u73a9\u6cd5 (sequential play)\u5219\u5bf9\u5e94\u4e24\u4e2a\u6e38\u620f\u76ee\u7684 \\[ \\min_{P}\\max_{Q} \\mathbf{M}(P, Q) \\] \u548c \\[ \\max_{Q}\\min_{P} \\mathbf{M}(P, Q). \\] \u51af\u8bfa\u4f9d\u66fc\u7684 Minmax\u5b9a\u7406 \u8bc1\u660e\u4e86\uff1a\u5728\u4e0a\u8ff0\u7684\u77e9\u9635\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e24\u4e2a\u6e38\u620f\u7684\u7ed3\u679c\u662f\u7b49\u4ef7\u7684\u3002\u4f46\u662f\uff0c\u5f53 \\(\\mathbf{M}\\) \u672a\u77e5\u6216\u8005\u592a\u5927\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u6c42\u89e3\u6700\u4f18\u7b56\u7565 \\(P^*\\) \u548c \\(Q^*\\) \u5c31\u6210\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u5e0c\u671b\u901a\u8fc7 \u4e0d\u65ad\u5730\u73a9\u6e38\u620f \u6765\u6c42\u89e3\u6700\u4f18\u7b56\u7565\uff08Learning in Repeated Game Playing\uff09\u3002 \u5b9a\u4e49 \u5bf9\u4e8e\u4e00\u4e2a\u535a\u5f08\u6e38\u620f \\(\\mathbf{M}\\) \uff0c\u5b83\u7684 \u91cd\u590d\u73a9\u6cd5 \uff08repeated play\uff09\u8bbe\u5b9a\u5982\u4e0b\u3002\u535a\u5f08\u6e38\u620f \\(\\mathbf{M}\\) \u672a\u77e5\uff0c\u4f46\u662f\u6ee1\u8db3 \\(\\mathbf{M}(i, j) \\in [0, 1]\\) \u3002\u5e76\u4e14\u5b58\u5728\u4e24\u4e2a\u73a9\u5bb6\uff08\u5b66\u4e60\u8005learner\u548c\u73af\u5883environment\uff09\u3002\u6e38\u620f\u88ab\u5206\u4e3a \\(t = 1, \\ldots, T\\) \u8f6e\u6b21\uff0c\u6bcf\u4e2a\u8f6e\u6b21\u53ef\u4ee5\u505a\u4e00\u4e0b\u4e8b\u60c5\uff1a \u5b66\u4e60\u8005\u9009\u62e9\u4e00\u4e2a\u6df7\u5408\u7b56\u7565 \\(P_t\\) \uff1b \u73af\u5883\u5728\u53ef\u80fd\u5df2\u77e5 \\(P_t\\) \u7684\u60c5\u51b5\u4e0b\u9009\u62e9\u4e00\u4e2a \\(Q_t\\) \uff1b \u5b66\u4e60\u8005\u53ea\u80fd\u89c2\u6d4b\u5230\u635f\u5931 \\(\\mathbf{M}(i, Q_t)\\) \uff1b \u5b66\u4e60\u8005\u7684\u635f\u5931\u662f$\\mathbf{M}(P_t, Q_t); \u5b66\u4e60\u8005\u7684\u7d2f\u8ba1\u635f\u5931\u4e3a \\[ \\sum^{T}_{t=1} \\mathbf{M}(P_t, Q_t), \\] \u5e76\u4e14\u5b83\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316 \\[ \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t). \\] \u5373\u6700\u5c0f\u5316\u4e8b\u540e\u8bf8\u845b\u4eae\uff08hindsight\uff09\u635f\u5931\u3002 \u4ecb\u7ecd\u4e00\u4e2a\u4e58\u5b50\u6743\u91cd\u6cd5\uff08multiplicative weights, MW\uff09\u6765\u6c42\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002 \u7b97\u6cd5 \u4e58\u5b50\u6743\u91cd\u7b97\u6cd5\uff08multiplicative weights, MW\uff09\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u6765\u4e0d\u65ad\u66f4\u65b0 \\(P_t\\) \uff1a \\[ P_{t+1} = \\arg\\min_{P} \\sum_i P(i) \\mathbf{M}(i, Q_t) + \\frac{1}{\\eta} D_{KL}(P \\Vert P_t). \\] \u5373 $$ P_{t+1}(i) = \\frac{P_t(i) \\exp(-\\eta \\mathbf{M}(i, Q_t))}{Z_t}, $$ \u5176\u4e2d \\[ Z_t = \\sum^{m}_{t=1} P_t(i) \\exp(-\\eta \\mathbf{M}(i, Q_t)). \\] \u8fd9\u79cd\u7b97\u6cd5\u4e0b\u83b7\u5f97\u7684 \\(\\{P_t\\}^{T}_{t=1}\\) \u6ee1\u8db3\u5982\u4e0b\u5b9a\u7406\u3002 \u5b9a\u7406 MW\u7b97\u6cd5\u83b7\u5f97\u7684\u6df7\u5408\u7b56\u7565\u6ee1\u8db3 \\[ \\sum^{T}_{t=1}\\mathbf{M}(P_t, Q_t) \\le \\min_P \\bigg[a_{\\eta} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + c_\\eta D_{KL}(P \\Vert P_1)\\bigg], \\] \u5176\u4e2d \\(a_\\eta = \\frac{\\eta}{1 - e^{-\\eta}}\\) \uff0c \\(c_\\eta = \\frac{1}{1 - e^{-\\eta}}\\) \u3002 \u8bc1\u660e \u9996\u5148\u662f\u4e00\u4e2a\u5f15\u7406\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684\u968f\u673a\u51b3\u7b56 \\(P\\) \u6ee1\u8db3 \\[ D_{KL}(P \\Vert P_{t+1}) - D_{KL}(P \\Vert P_t) \\le \\eta \\mathbf{M}(P, Q_t) - (1 - e^{-\\eta}) \\mathbf{M}(P_t, Q_t). \\] \u8fd9\u4e2a\u5f15\u7406\u8bc1\u660e\u5f88\u7b80\u7b54 \\[ \\begin{aligned} & D_{KL}(P \\Vert P_{t+1}) - D_{KL}(P \\Vert P_t) \\\\ =& \\sum_i P(i) \\ln \\frac{P(i)}{P_{t+1}(i)} - \\sum_i P(i) \\ln \\frac{P(i)}{P_t(i)} \\\\ =& \\sum_i P(i) \\ln \\frac{P_t(i)}{P_{t+1}(i)} \\\\ =& \\sum_i P(i) \\ln \\frac{Z_t}{\\exp(-\\eta \\mathbf{M}(i, Q_t))} \\\\ =& \\eta \\sum_{i} P(i) \\mathbf{M}(i, Q_t) + \\ln \\bigg[\\sum_i P_t(i) \\exp(-\\eta \\mathbf{M}(i, Q_t))\\bigg] \\\\ \\le& \\eta \\mathbf{M}(P, Q_t) + \\ln \\bigg[\\sum_i P_t(i)(1 - (1 - e^{-\\eta})\\mathbf{M}(i, Q_t))\\bigg] \\\\ =& \\eta \\mathbf{M}(P, Q_t) + \\ln \\bigg[(1 - (1 - e^{-\\eta})\\mathbf{M}(P_t, Q_t))\\bigg] \\\\ \\le& \\eta \\mathbf{M}(P, Q_t) - (1 - e^{-\\eta}) \\mathbf{M}(P_t, Q_t). \\end{aligned} \\] \u5176\u4e2d\u7528\u5230\u4e86\u4e0d\u7b49\u5f0f \\[ e^{-\\eta q} = e^{q(-\\eta) + (1 - q)\\cdot 0} \\le q e^{-\\eta} + (1 - q) e^0 = 1 - (1 - e^{-\\eta}) q \\] \u548c\u5bf9\u4e8e \\(x < 1\\) \uff0c \\[ \\ln(1 - x) \\le -x. \\] \u90a3\u4e48\uff0c\u5c06 \\(t=1\\ldots, T\\) \u6240\u6709\u9879\u7d2f\u52a0\u4e4b\u540e\uff0c\u53ef\u5f97 \\[ (1 - e^{-\\eta}) \\sum^{T}_{t=1} \\mathbf{M}(P_t, Q_t) \\le \\eta \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + D_{KL}(P \\Vert P_1) - D_{KL}(P\\Vert P_{t+1}). \\] \u56e0\u4e3a \\(P\\) \u662f\u4efb\u610f\u7684\uff0c\u5e76\u4e14 \\(D_{KL}(P \\Vert P_{t+1}) \\ge 0\\) \uff0c\u6240\u4ee5\u53ef\u5f97\u4e0a\u9762\u5b9a\u7406\u7684\u7ed3\u8bba\u3002 \u5982\u679c\u53d6 \\(P_1\\) \u662f\u5747\u5300\u5206\u5e03\uff0c\u90a3\u4e48 \\[ \\sum^{T}_{t=1}\\mathbf{M}(P_t, Q_t) \\le \\min_P \\bigg[a_{\\eta} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + c_\\eta \\ln m\\bigg], \\] \u5176\u4e2d \\(m\\) \u662f \\(\\mathbf{M}\\) \u7684\u884c\u6570\u3002 \u56e0\u4e3a\u5f53 \\(\\eta \\le 0\\) \u65f6\uff0c \\(1 - \\eta \\le e^{-\\eta}\\) \uff0c\u6240\u4ee5 \\(a_{\\eta} \\ge 1\\) \u3002\u5f53 \\(\\eta\\) \u8d8b\u54110\u7684\u65f6\u5019\uff0c \\(c_{\\eta}\\) \u53c8\u8d8b\u5411\u4e8e\u65e0\u7a77\u5927\u3002\u6240\u4ee5\u76ee\u524d\u6211\u4eec\u65e0\u6cd5\u4fdd\u8bc1\u8fd9\u4e2aBound\u662f\u6709\u610f\u4e49\u7684\uff0c\u8981\u8fdb\u4e00\u6b65\u5730\u5206\u6790\u3002 \u63a8\u8bba \u5f53 \\(\\eta\\) \u53d6 \\[ \\ln \\bigg(1 + \\sqrt{\\frac{2\\ln m}{T}}\\bigg), \\] \u53ef\u4ee5\u4fdd\u8bc1 \\[ \\frac{1}{T} \\sum^{T}_{t=1} \\mathbf{M}(P_t, Q_t) \\le \\min_{P} \\frac{1}{T} \\sum^T_{t=1} \\mathbf{M}(P, Q_t) + \\sqrt{\\frac{2\\ln m}{T}} + \\frac{\\ln m}{T}. \\] \u8bc1\u660e \\[ \\begin{aligned} &\\sum^{T}_{t=1}\\mathbf{M}(P_t, Q_t) \\\\ =& \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + (a_\\eta - 1) T + c_\\eta \\ln m \\quad(\\mathbf{M} \\in [0, 1])\\\\ =& \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + \\bigg[\\bigg(\\frac{\\eta}{1 - e^{-\\eta}} - 1 \\bigg)T + \\frac{\\ln m}{1 - e^{-\\eta}}\\bigg]\\\\ \\le& \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + \\bigg[\\bigg(\\frac{e^{\\eta} - e^{-\\eta}}{2(1 - e^{-\\eta})} - 1 \\bigg)T + \\frac{\\ln m}{1 - e^{-\\eta}}\\bigg] \\quad(\\eta \\le (e^{\\eta}- e^{-\\eta})/2)\\\\ =& \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + \\bigg[\\frac{e^{\\eta} - 1}{2} T + \\frac{\\ln m}{e^{\\eta} - 1} + \\ln m\\bigg] \\\\ \\le& \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + \\sqrt{\\frac{2\\ln m}{T}} + \\frac{\\ln m}{T}. \\quad \\bigg(\\eta = \\ln\\bigg(1 + \\sqrt{\\frac{2\\ln m}{T}}\\bigg)\\bigg)\\\\ \\end{aligned} \\] \u63a8\u8bba \\[ \\frac{1}{T} \\sum^{T}_{t=1} \\mathbf{M}(P_t, Q_t) \\le \\min_{P}\\max_{Q} \\mathbf{M}(P, Q) + \\Delta_T, \\] \u5176\u4e2d \\(\\Delta_T = \\sqrt{\\frac{\\ln m}{T}} + \\frac{\\ln m}{T}\\) . \u4ece\u4e0a\u9762\u7684\u5f15\u7406\u5c31\u80fd\u5f97\u5230\u51af\u8bfa\u4f9d\u66fc\u7684Minmax\u5b9a\u7406 \u5b9a\u7406 \\[ \\min_{P}\\max_{Q} \\mathbf{M}(P, Q) = \\max_{Q} \\min_{P} \\mathbf{M}(P, Q). \\] \u8bc1\u660e \u9996\u5148\u6211\u4eec\u8bc1\u660e \\(\\min_{P} \\max_{Q} \\mathbf{M}(P, Q) \\ge \\max_{Q} \\min_{P} \\mathbf{M}(P, Q)\\) \u3002\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\hat P\\) \u548c \\(Q\\) \u6ee1\u8db3 \\(\\mathbf{M}(\\hat P, Q) \\ge \\min_{P} \\mathbf{M}(P, Q)\\) \u3002\u6240\u4ee5 \\(\\max_{Q} \\mathbf{M}(\\hat P, Q) \\ge \\max_{Q} \\min_{P} \\mathbf{M}(P, Q)\\) \u3002\u56e0\u4e3a \\(\\hat P\\) \u662f\u4efb\u610f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u5230\u4e86\u672c\u6bb5\u5f00\u5934\u7684\u7ed3\u8bba\u3002 \u96be\u5ea6\u5728\u4e8e\u5982\u4f55\u6c42\u8bc1 \\(\\min_{P} \\max_{Q} \\mathbf{M}(P, Q) \\le \\max_{Q} \\min_{P} \\mathbf{M}(P, Q)\\) \u3002 \u8bbeMW\u7b97\u6cd5\u4e2d\uff0c\u73af\u5883\u83b7\u5f97\u7684 \\(Q_t = \\arg\\max_{Q} \\mathbf{M}(P_t, Q)\\) \u3002\u540c\u65f6\uff0c\u8bbe \\(\\bar P = \\frac{1}{T} \\sum^{T}_{t=1} P_t\\) \u548c \\(\\bar Q = \\frac{1}{T} \\sum^{T}_{t=1} Q_t\\) \u3002\u90a3\u4e48 \\[ \\begin{aligned} &\\min_{P}\\max_{Q} P^T \\mathbf{M} Q \\le \\max_{Q} \\bar P^T \\mathbf{M} Q \\\\ =& \\max_{Q} \\frac{1}{T} \\sum^T_{t=1} P^T_t \\mathbf{M} Q \\le \\frac{1}{T} \\sum^T_{t=1}\\max_Q P^T_t \\mathbf{M} Q \\\\ =& \\frac{1}{T} \\sum^T_{t=1} P^T_t \\mathbf{M} Q_t \\le \\min_{P} \\frac{1}{T} \\sum^T_{t=1} P^T \\mathbf{M} Q_t + \\Delta_T \\\\ =& \\min_P P^T \\mathbf{M} \\bar Q + \\Delta_T \\le \\max_Q \\min_P P^T \\mathbf{M}Q + \\Delta_T. \\end{aligned} \\] \u4ece\u4e0a\u9762\u7684\u8bc1\u660e\u4e2d\u53ef\u77e5MW\u7b97\u6cd5\u80fd\u591f\u83b7\u5f97\u4e00\u4e2a\u4e0d\u9519\u7684\u7b56\u7565 \\(\\bar P = \\frac{1}{T} \\sum^T_{t=1} P_t\\) \u80fd\u591f\u4fdd\u8bc1 \\[ \\max_{Q} \\mathbf{M}(\\bar P, Q) \\le \\max_{Q} \\min_{P} \\mathbf{M}(P, Q) + \\Delta_T. \\] \u540c\u7406 \\(\\bar Q = \\frac{1}{T} \\sum^T_{t=1} Q_t\\) \u6ee1\u8db3 \\[ \\min_{P} \\mathbf{M}(P, \\bar Q) \\ge \\min_{P} \\max_{Q} \\mathbf{M}(P, Q) - \\Delta_T. \\] Online Learning \u00b6 \u5728\u4e00\u822c\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e2d\uff0c\u6570\u636e\u662f\u4ece\u8bad\u7ec3\u96c6\u4e2d\u968f\u673a\u91c7\u6837\u51fa\u6765\u7684 batch \uff0c\u7b97\u6cd5\u501f\u6b64\u5b66\u4e60\u5230\u4e00\u4e2a\u6a21\u578b\u540e\uff0c\u5c06\u5728\u6d4b\u8bd5\u96c6\u4e2d\u8fdb\u884c\u8bad\u7ec3\u3002\u800c\u5728\u5728\u7ebf\u5b66\u4e60\u4e2d\uff0c\u6574\u4e2a\u6570\u636e\u6a21\u578b\u53d1\u751f\u4e86\u6539\u53d8\u3002\u6837\u672c\u662f\u4e00\u4e2a\u4e2a\u4f9d\u6b21\u8f93\u5165\u5230\u7b97\u6cd5\u4e2d\u7684\uff0c\u7136\u540e\u7b97\u6cd5\u7ed9\u51fa\u4e00\u4e2a\u9884\u6d4b\u6807\u7b7e\uff0c\u63a5\u7740\u7b97\u6cd5\u63a5\u53d7\u4e00\u4e2a\u771f\u5b9e\u6807\u7b7e\uff0c\u8fd9\u65f6\u9884\u6d4b\u6807\u7b7e\u548c\u771f\u5b9e\u6807\u7b7e\u7684\u8bef\u5dee\u65e2\u662f\u8bad\u7ec3\u635f\u5931\uff0c\u4e5f\u662f\u6d4b\u8bd5\u635f\u5931\u3002\u5728\u7ebf\u5b66\u4e60\u548c\u5176\u4ed6\u673a\u5668\u5b66\u4e60\u6700\u5927\u7684\u4e0d\u540c\u5c31\u662f\u7b97\u6cd5\u5bf9\u6837\u672c\u7684\u6765\u6e90\u6ca1\u6709\u4efb\u4f55\u9650\u5236\uff0c\u5b83\u65e2\u53ef\u4ee5\u662f\u968f\u673a\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u5168\u77e5\u5168\u80fd\u7684\u654c\u5bf9\u6570\u636e\uff08adversarial)\u3002 \u5b9a\u4e49 \u5728\u7ebf\u5b66\u4e60\u7684\u6574\u4f53\u6a21\u578b\u5982\u4e0b\u6240\u793a\u3002\u8bbe\u6837\u672c\u5728\u6709\u9650\u96c6\u5408 \\(\\mathcal{X}\\) \u4e2d\uff0c\u4ee5\u53ca\u4e00\u4e2a\u9488\u5bf9\u4e8c\u5206\u7c7b\u7684\u6709\u9650\u5047\u8bbe\u96c6 \\(\\mathcal{H} = \\{h: \\mathcal{X} \\rightarrow \\{-1, 1\\}\\}\\) \u3002\u5e76\u4e14\u5047\u8bbe\u6837\u672c\u670d\u4ece\u4e00\u4e2a\u672a\u77e5\u7684\u6807\u7b7e\u51fd\u6570 \\(c:\\mathcal{X} \\rightarrow \\{-1, 1\\}\\) \u3002\uff08\u8fd9\u4e2a\u76ee\u6807\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u6807\u7b7e\u51fd\u6570\uff0c\u662f\u968f\u673a\u5206\u5e03\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u8fd9\u91cc\u5047\u8bbe\u4e3a\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u6807\u7b7e\u51fd\u6570\u662f\u4e3a\u4e86\u7b80\u5316\u540e\u9762\u7684\u8fc7\u7a0b\u3002\uff09\u63a5\u7740 \u73af\u5883\u4ee5\u4efb\u610f\u65b9\u5f0f\u7ed9\u5b66\u4e60\u8005\u9009\u5b9a\u4e00\u4e2a\u6837\u672c \\(x_t \\in \\mathcal{X}\\) \uff1b \u5b66\u4e60\u8005\u9009\u5b9a\u4e00\u4e2a\u9488\u5bf9 \\(x_t\\) \u7684\u4f30\u8ba1\u6807\u7b7e \\(\\hat y_t \\in \\{-1, 1\\}\\) \uff1b \u5b66\u4e60\u8005\u89c2\u6d4b\u5230\u4e86\u771f\u5b9e\u6807\u7b7e \\(c(x_t)\\) \uff1b \u7ecf\u9a8c\u7d2f\u8ba1\u8bef\u5dee\u4e3a \\[ \\mathbb{E}\\bigg[\\sum^{T}_{t=1} \\mathbf{1}[\\hat y_t \\ne c(x_t)]\\bigg] = \\sum^T_{t=1} \\mathbf{Pr}[\\hat y_t \\ne c(x_t)]. \\] \u5728\u7ebf\u5b66\u4e60\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316\u4e8b\u540e\u8bf8\u845b\u4eae\u7d2f\u8ba1\u8bef\u5dee \\[ \\min_{h \\in \\mathcal{H}} \\sum^T_{t=1} \\mathbf{1}[h(x_t) \\ne c(x_t)]. \\] \u5c06\u5728\u7ebf\u5b66\u4e60\u8f6c\u5316\u4e3a\u535a\u5f08\u8bba\u95ee\u9898\uff1a \\(\\mathbf{M}\\) \u662f\u4e00\u4e2a \\(\\vert \\mathcal{H} \\vert\\) \u884c\uff0c \\(\\vert \\mathcal{X} \\vert\\) \u5217\u7684\u5728\u7ebf\u535a\u5f08\u95ee\u9898\uff0c\u6ee1\u8db3 \\[ \\mathbf{M}(h, x) = \\mathbf{1}[h(x) \\ne c(x)]. \\] \u5982\u679c\u4f7f\u7528MW\u7b97\u6cd5\u6765\u6c42\u89e3Online Learning\u95ee\u9898\uff0c\u90a3\u4e48\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6c42\u89e3Online Learning\u95ee\u9898\u7684\u7b97\u6cd5 Weighted Majority Algorithm \u3002 \\[ P_{t+1}(h) = \\frac{P_t(h) e^{-\\eta \\cdot \\mathbf{1}[h(x_t) \\ne c(x_t)]}}{Z_t}. \\] \u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u6536\u655b\u7387\u4e3a \\(O \\bigg(\\sqrt{\\frac{\\ln \\vert \\mathcal{H} \\vert}{T}}\\bigg)\\) . Boosting \u00b6 Boosting\u7684\u7b97\u6cd5\u6d41\u7a0b\u662f\uff1a Booster\u6784\u9020\u4e00\u4e2a\u57fa\u4e8e\u8bad\u7ec3\u96c6 \\(X\\) \u7684\u5206\u5e03 \\(\\mathcal{D}_t\\) \u7ed9\u5f31\u5b66\u4e60\u5668\uff1b \u5f31\u5b66\u4e60\u5668\u63d0\u4f9b\u4e00\u4e2a\u5206\u7c7b\u51fd\u6570 \\(h_t \\in \\mathcal{H}\\) \u6ee1\u8db3\u7ecf\u9a8c\u8bef\u5dee\u5c0f\u4e8e \\(\\frac{1}{2} - \\gamma\\) \uff0c\u5373 \\(\\mathbf{Pr}_{x \\sim \\mathcal{D}_t} [h_t (x) \\ne c(x)] \\le \\frac{1}{2} - \\gamma\\) \u3002 AdaBoost\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b97\u6cd5\u6765\u6784\u9020 \\(\\mathcal{D}_t\\) \u4ee5\u53ca\u7ec4\u5408 \\(\\{h_t\\}^T_{t=1}\\) \u7684\u65b9\u5f0f\uff0c\u4f7f\u5f97\u6700\u7ec8\u7684\u5206\u7c7b\u5668\u8fbe\u5230\u7406\u60f3\u6548\u679c\u3002 \u5c06Boost\u8f6c\u5316\u4e3a\u535a\u5f08\u6e38\u620f \\(\\mathbf{M}(h, x) = \\mathbf{1}[h(x) \\ne c(x)]\\) \u3002 \u90a3\u4e48\uff0c\u6839\u636e\u51af\u8bfa\u4f9d\u66fc\u7684Minmax\u5b9a\u7406\uff0c\u53ef\u5f97 \\[ \\begin{aligned} &\\min_{P} \\max_{x \\in X} \\mathbf{M}(P, x) \\\\ =& \\min_{P} \\max_{Q} \\mathbf{M}(P, Q) = \\nu \\\\ =& \\max_{Q} \\min_{P} \\mathbf{M}(P, Q) \\\\ =& \\max_{Q} \\min_{h \\in \\mathcal{H}} \\mathbf{M}(h, Q) \\end{aligned} \\] \u6839\u636e\u5b9a\u4e49 \\[ \\mathbf{M}(h, Q) = \\mathbf{Pr}_{x \\sim Q} [h(x) \\ne c(x)], \\] \u6240\u4ee5 \\[ \\nu \\le \\mathbf{M}(h, Q^*) = \\mathbf{Pr}_{x \\sim Q^*}[h(x) \\ne c(x)] \\le \\frac{1}{2} - \\gamma. \\] \u53c8\u56e0\u4e3aAdaboost\u5f00\u5934\u7684 \\(\\gamma\\) -\u5f31\u5b66\u4e60\u5047\u8bbe\u53ef\u77e5 \\[ \\mathbf{Pr}_{h \\sim P^*}[h(x) \\ne c(x)] = \\mathbf{M}(P^*, x) \\le \\nu \\le \\frac{1}{2} - \\gamma < \\frac{1}{2}. \\] \u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6837\u672c\u96c6\u7684\u6837\u672c\u53ef\u4ee5\u88ab\u5982\u4e0b\u52a0\u6743\u5206\u7c7b\u5668\u5b8c\u7f8e\u5206\u7c7b \\[ c(x) = sign\\bigg(\\sum_{h \\in \\mathcal{H}} P^*(h) h(x)\\bigg). \\] \u4eceminimax\u6e38\u620f\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u8fd9\u4e2a\u5206\u7c7b\u5668\u7684margin\u81f3\u5c11\u662f \\(2\\gamma\\) \uff0c\u5e76\u4e14edge\u548cmargin\u7684\u5173\u7cfb\u4e00\u76ee\u4e86\u7136\u3002 Adaboost\u7684\u539f\u7406\u662f\u6c42\u89e3\u95ee\u9898 \\[ \\max_{Q} \\min_{h \\in \\mathcal{H}} \\mathbf{M}(h, Q), \\] \u6240\u4ee5Boosting\u8981\u6c42\u89e3\u4e00\u4e2a \\(Q^*\\) \u5206\u90e8\u800c\u4e0d\u518d\u662f \\(P^*\\) \u5206\u90e8\u3002\u6211\u4eec\u5982\u679c\u8981\u4f7f\u7528MW\u7b97\u6cd5\u6211\u4eec\u9700\u8981\u5bf9\u95ee\u9898 \\(\\mathbf{M}\\) \u505a\u4fee\u6539\uff0c\u800c\u4f7f\u7528\u5bf9\u5076\u6e38\u620f \\(\\mathbf{M}'\\) \\[ \\mathbf{M}' = \\mathbf{1} - \\mathbf{M}^T. \\] \u90a3\u4e48\uff0cBoosting\u7b97\u6cd5\u7684\u6bcf\u4e00\u6b65\u90fd\u8981\u5b8c\u6210\u5982\u4e0b\u6b65\u9aa4\uff1a \u5c06\u5206\u5e03 \\(Q_t = \\mathcal{D}_t\\) \u4f20\u7ed9\u5f31\u5b66\u4e60\u5668\uff1b \u83b7\u5f97\u5f31\u5b66\u4e60\u5668\u8fd4\u56de\u7684\u5206\u7c7b\u51fd\u6570 \\(h_t\\) \u6ee1\u8db3 \\(\\mathbf{Pr}_{x\\sim\\mathcal{D}_t}[h_t(x) = c(x)] \\ge \\frac{1}{2}+\\gamma\\) \uff1b \u83b7\u5f97\u4e0e \\(Q_t\\) \u671f\u671b\u7b49\u4ef7\u7684\u5206\u7c7b\u51fd\u6570 \\(h_t\\) \uff1a \\(\\mathbf{M}'(x, Q_t) = \\mathbf{M}'(x, h_t) = \\mathbf{1}\\{h_t(x) = c(x)\\}\\) \uff1b \u8ba1\u7b97\u65b0\u7684\u5206\u5e03 \\(Q_{t+1} = {Q_t e^{-\\eta \\mathbf{1}\\{h_t(x) = c(x)\\}}}/{Z_t}\\) \u3002 \u7b97\u6cd5\u6700\u7ec8\u8fd4\u56de\u7684\u5206\u7c7b\u5668\u4e3a \\[ H(x) = sign\\bigg(\\sum^T_{t=1} h_t(x)\\bigg). \\] \u8fd9\u4e2a\u7b97\u6cd5\u4e5f\u88ab\u79f0\u4e3a \\(\\epsilon\\) -boosting \u6216\u8005 \\(\\epsilon\\) -AdaBoost\u3002 \u6839\u636e\u524d\u9762\u5bf9\u535a\u5f08\u6e38\u620f\u7684\u5206\u6790\u6211\u4eec\u53ef\u5f97 \\[ \\frac{1}{2} + \\gamma \\le \\frac{1}{T} \\sum^T_{t=1} \\mathbf{M}'(P_t, h_t) \\le \\min_{x \\in X} \\frac{1}{T} \\sum^T_{t=1} \\mathbf{M}'(x, h_t) + \\Delta_T, \\] \u4e5f\u5c31\u662f\u8bf4 \\[ \\min_{x \\in X} \\frac{1}{T} \\sum^T_{t=1} \\mathbf{M}'(x, h_t) \\ge \\frac{1}{2} + \\gamma - \\Delta_T \\] \u5373\u5f53 \\(T\\) \u591f\u5927\u65f6\uff0c\u5206\u7c7b\u5668\u80fd\u591f\u62df\u5408\u76ee\u6807\u51fd\u6570 \\(c(x)\\) \u3002 \u53e6\u4e00\u4e2a\u5173\u4e8e\u535a\u5f08\u6e38\u620f\u7684\u7ed3\u8bba\u53ef\u5f97 \\[ \\frac{1}{2} + \\gamma \\le \\frac{1}{T} \\sum^T_{t=1}\\mathbf{M}'(P_t, h_t) \\le a_{\\eta} \\min_{x \\in X} \\frac{1}{T} \\sum^T_{t=1} \\mathbf{M}'(x, h_t) + \\frac{c_{\\eta}\\ln m}{T}. \\] \u8bbe \\(\\eta = 2 \\alpha\\) \uff0c\u53ef\u5f97 \\[ \\begin{aligned} &\\min_{x \\in X} \\frac{1}{T} \\sum^T_{t=1}\\mathbf{M}'(x, h_t) \\ge \\frac{1}{a_{\\eta}} \\bigg[\\frac{1}{2}+\\gamma - \\frac{c_{\\eta}\\ln m}{T}\\bigg]\\\\ =& \\frac{1}{2} + \\gamma - \\bigg(1 - \\frac{1 - e^{-2\\alpha}}{2\\alpha}\\bigg)\\bigg(\\frac{1}{2} + \\gamma\\bigg) - \\frac{\\ln m}{2\\alpha T}\\\\ \\ge& \\bigg(\\frac{1}{2} + \\gamma\\bigg) - \\alpha\\bigg(\\frac{1}{2} + \\gamma\\bigg) - \\frac{\\ln m}{2\\alpha T}. \\quad(e^{-z} \\le 1 - z + z^2/2) \\end{aligned} \\] \u5f53 \\(\\alpha\\) \u8db3\u591f\u5c0f\uff0c\u5e76\u4e14 \\(T\\) \u8db3\u591f\u5927\u65f6\uff0c \\(\\alpha\\) -Adaboost\u80fd\u591f\u8fbe\u5230AdaBoost\u7684\u6027\u80fd\u3002 @article { schapire2013boosting , title = {Boosting: Foundations and algorithms} , author = {Schapire, Robert E and Freund, Yoav} , journal = {Kybernetes} , year = {2013} , publisher = {Emerald Group Publishing Limited} }","title":"Game Theory, Online Learning and Boosting"},{"location":"ML/14-GameTheory/#game-theory-online-learning-and-boosting","text":"Abstract \u672c\u6587\u6458\u81ea Boosting: Foundations and algorithms \u7684\u7b2c\u516d\u7ae0\u3002\u8fd9\u4e00\u7ae0\u4ecb\u7ecd\u4e86Game Theory\u3001Online Learning \u548c Boosting \u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u975e\u5e38\u6709\u610f\u601d\u3002GAN\u548cRL\u7684\u76f8\u5173\u7b97\u6cd5\u5b9e\u9645\u4e0a\u4e5f\u662f\u5728\u6c42\u89e3\u4e00\u4e2a\u535a\u5f08\u6e38\u620f\uff0c\u6240\u4ee5\u8fd9\u4e00\u7ae0\u7684\u601d\u60f3\u53ef\u80fd\u975e\u5e38\u5177\u6709\u542f\u53d1\u6027\u3002","title":"Game Theory, Online Learning and Boosting"},{"location":"ML/14-GameTheory/#game-theory","text":"\u5b9a\u4e49 \u5bf9\u4e8e\u4e00\u4e2a \u535a\u5f08\u6e38\u620f \\(\\mathbf{M}\\) \u77e9\u9635\uff0c\u4e24\u4e2a\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9\u5b83\u7684\u884c \\(i\\) \u548c\u5217 \\(j\\) \uff0c\u5f97\u5230\u4e00\u4e2a\u6e38\u620f\u6570\u503c \\(\\mathbf{M}(i, j)\\) \u3002\u5f53\u4e24\u4e2a\u73a9\u5bb6\u9009\u62e9\u4e24\u4e2a\u5206\u5e03 \\(P\\) \u548c \\(Q\\) \u540e\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u6e38\u620f\u6570\u503c \\[ M(P, Q) = \\sum_{i,j} P(i)\\mathbf{M}(i, j)Q(j) = P^T \\mathbf{M} Q. \\] \u5b9a\u4e49 \u5bf9\u4e8e\u4e00\u4e2a\u535a\u5f08\u6e38\u620f \\(\\mathbf{M}\\) \uff0c\u5b83\u7684 \u8f6e\u6b21\u73a9\u6cd5 (sequential play)\u5219\u5bf9\u5e94\u4e24\u4e2a\u6e38\u620f\u76ee\u7684 \\[ \\min_{P}\\max_{Q} \\mathbf{M}(P, Q) \\] \u548c \\[ \\max_{Q}\\min_{P} \\mathbf{M}(P, Q). \\] \u51af\u8bfa\u4f9d\u66fc\u7684 Minmax\u5b9a\u7406 \u8bc1\u660e\u4e86\uff1a\u5728\u4e0a\u8ff0\u7684\u77e9\u9635\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e24\u4e2a\u6e38\u620f\u7684\u7ed3\u679c\u662f\u7b49\u4ef7\u7684\u3002\u4f46\u662f\uff0c\u5f53 \\(\\mathbf{M}\\) \u672a\u77e5\u6216\u8005\u592a\u5927\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u6c42\u89e3\u6700\u4f18\u7b56\u7565 \\(P^*\\) \u548c \\(Q^*\\) \u5c31\u6210\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u5e0c\u671b\u901a\u8fc7 \u4e0d\u65ad\u5730\u73a9\u6e38\u620f \u6765\u6c42\u89e3\u6700\u4f18\u7b56\u7565\uff08Learning in Repeated Game Playing\uff09\u3002 \u5b9a\u4e49 \u5bf9\u4e8e\u4e00\u4e2a\u535a\u5f08\u6e38\u620f \\(\\mathbf{M}\\) \uff0c\u5b83\u7684 \u91cd\u590d\u73a9\u6cd5 \uff08repeated play\uff09\u8bbe\u5b9a\u5982\u4e0b\u3002\u535a\u5f08\u6e38\u620f \\(\\mathbf{M}\\) \u672a\u77e5\uff0c\u4f46\u662f\u6ee1\u8db3 \\(\\mathbf{M}(i, j) \\in [0, 1]\\) \u3002\u5e76\u4e14\u5b58\u5728\u4e24\u4e2a\u73a9\u5bb6\uff08\u5b66\u4e60\u8005learner\u548c\u73af\u5883environment\uff09\u3002\u6e38\u620f\u88ab\u5206\u4e3a \\(t = 1, \\ldots, T\\) \u8f6e\u6b21\uff0c\u6bcf\u4e2a\u8f6e\u6b21\u53ef\u4ee5\u505a\u4e00\u4e0b\u4e8b\u60c5\uff1a \u5b66\u4e60\u8005\u9009\u62e9\u4e00\u4e2a\u6df7\u5408\u7b56\u7565 \\(P_t\\) \uff1b \u73af\u5883\u5728\u53ef\u80fd\u5df2\u77e5 \\(P_t\\) \u7684\u60c5\u51b5\u4e0b\u9009\u62e9\u4e00\u4e2a \\(Q_t\\) \uff1b \u5b66\u4e60\u8005\u53ea\u80fd\u89c2\u6d4b\u5230\u635f\u5931 \\(\\mathbf{M}(i, Q_t)\\) \uff1b \u5b66\u4e60\u8005\u7684\u635f\u5931\u662f$\\mathbf{M}(P_t, Q_t); \u5b66\u4e60\u8005\u7684\u7d2f\u8ba1\u635f\u5931\u4e3a \\[ \\sum^{T}_{t=1} \\mathbf{M}(P_t, Q_t), \\] \u5e76\u4e14\u5b83\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316 \\[ \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t). \\] \u5373\u6700\u5c0f\u5316\u4e8b\u540e\u8bf8\u845b\u4eae\uff08hindsight\uff09\u635f\u5931\u3002 \u4ecb\u7ecd\u4e00\u4e2a\u4e58\u5b50\u6743\u91cd\u6cd5\uff08multiplicative weights, MW\uff09\u6765\u6c42\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002 \u7b97\u6cd5 \u4e58\u5b50\u6743\u91cd\u7b97\u6cd5\uff08multiplicative weights, MW\uff09\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u6765\u4e0d\u65ad\u66f4\u65b0 \\(P_t\\) \uff1a \\[ P_{t+1} = \\arg\\min_{P} \\sum_i P(i) \\mathbf{M}(i, Q_t) + \\frac{1}{\\eta} D_{KL}(P \\Vert P_t). \\] \u5373 $$ P_{t+1}(i) = \\frac{P_t(i) \\exp(-\\eta \\mathbf{M}(i, Q_t))}{Z_t}, $$ \u5176\u4e2d \\[ Z_t = \\sum^{m}_{t=1} P_t(i) \\exp(-\\eta \\mathbf{M}(i, Q_t)). \\] \u8fd9\u79cd\u7b97\u6cd5\u4e0b\u83b7\u5f97\u7684 \\(\\{P_t\\}^{T}_{t=1}\\) \u6ee1\u8db3\u5982\u4e0b\u5b9a\u7406\u3002 \u5b9a\u7406 MW\u7b97\u6cd5\u83b7\u5f97\u7684\u6df7\u5408\u7b56\u7565\u6ee1\u8db3 \\[ \\sum^{T}_{t=1}\\mathbf{M}(P_t, Q_t) \\le \\min_P \\bigg[a_{\\eta} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + c_\\eta D_{KL}(P \\Vert P_1)\\bigg], \\] \u5176\u4e2d \\(a_\\eta = \\frac{\\eta}{1 - e^{-\\eta}}\\) \uff0c \\(c_\\eta = \\frac{1}{1 - e^{-\\eta}}\\) \u3002 \u8bc1\u660e \u9996\u5148\u662f\u4e00\u4e2a\u5f15\u7406\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684\u968f\u673a\u51b3\u7b56 \\(P\\) \u6ee1\u8db3 \\[ D_{KL}(P \\Vert P_{t+1}) - D_{KL}(P \\Vert P_t) \\le \\eta \\mathbf{M}(P, Q_t) - (1 - e^{-\\eta}) \\mathbf{M}(P_t, Q_t). \\] \u8fd9\u4e2a\u5f15\u7406\u8bc1\u660e\u5f88\u7b80\u7b54 \\[ \\begin{aligned} & D_{KL}(P \\Vert P_{t+1}) - D_{KL}(P \\Vert P_t) \\\\ =& \\sum_i P(i) \\ln \\frac{P(i)}{P_{t+1}(i)} - \\sum_i P(i) \\ln \\frac{P(i)}{P_t(i)} \\\\ =& \\sum_i P(i) \\ln \\frac{P_t(i)}{P_{t+1}(i)} \\\\ =& \\sum_i P(i) \\ln \\frac{Z_t}{\\exp(-\\eta \\mathbf{M}(i, Q_t))} \\\\ =& \\eta \\sum_{i} P(i) \\mathbf{M}(i, Q_t) + \\ln \\bigg[\\sum_i P_t(i) \\exp(-\\eta \\mathbf{M}(i, Q_t))\\bigg] \\\\ \\le& \\eta \\mathbf{M}(P, Q_t) + \\ln \\bigg[\\sum_i P_t(i)(1 - (1 - e^{-\\eta})\\mathbf{M}(i, Q_t))\\bigg] \\\\ =& \\eta \\mathbf{M}(P, Q_t) + \\ln \\bigg[(1 - (1 - e^{-\\eta})\\mathbf{M}(P_t, Q_t))\\bigg] \\\\ \\le& \\eta \\mathbf{M}(P, Q_t) - (1 - e^{-\\eta}) \\mathbf{M}(P_t, Q_t). \\end{aligned} \\] \u5176\u4e2d\u7528\u5230\u4e86\u4e0d\u7b49\u5f0f \\[ e^{-\\eta q} = e^{q(-\\eta) + (1 - q)\\cdot 0} \\le q e^{-\\eta} + (1 - q) e^0 = 1 - (1 - e^{-\\eta}) q \\] \u548c\u5bf9\u4e8e \\(x < 1\\) \uff0c \\[ \\ln(1 - x) \\le -x. \\] \u90a3\u4e48\uff0c\u5c06 \\(t=1\\ldots, T\\) \u6240\u6709\u9879\u7d2f\u52a0\u4e4b\u540e\uff0c\u53ef\u5f97 \\[ (1 - e^{-\\eta}) \\sum^{T}_{t=1} \\mathbf{M}(P_t, Q_t) \\le \\eta \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + D_{KL}(P \\Vert P_1) - D_{KL}(P\\Vert P_{t+1}). \\] \u56e0\u4e3a \\(P\\) \u662f\u4efb\u610f\u7684\uff0c\u5e76\u4e14 \\(D_{KL}(P \\Vert P_{t+1}) \\ge 0\\) \uff0c\u6240\u4ee5\u53ef\u5f97\u4e0a\u9762\u5b9a\u7406\u7684\u7ed3\u8bba\u3002 \u5982\u679c\u53d6 \\(P_1\\) \u662f\u5747\u5300\u5206\u5e03\uff0c\u90a3\u4e48 \\[ \\sum^{T}_{t=1}\\mathbf{M}(P_t, Q_t) \\le \\min_P \\bigg[a_{\\eta} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + c_\\eta \\ln m\\bigg], \\] \u5176\u4e2d \\(m\\) \u662f \\(\\mathbf{M}\\) \u7684\u884c\u6570\u3002 \u56e0\u4e3a\u5f53 \\(\\eta \\le 0\\) \u65f6\uff0c \\(1 - \\eta \\le e^{-\\eta}\\) \uff0c\u6240\u4ee5 \\(a_{\\eta} \\ge 1\\) \u3002\u5f53 \\(\\eta\\) \u8d8b\u54110\u7684\u65f6\u5019\uff0c \\(c_{\\eta}\\) \u53c8\u8d8b\u5411\u4e8e\u65e0\u7a77\u5927\u3002\u6240\u4ee5\u76ee\u524d\u6211\u4eec\u65e0\u6cd5\u4fdd\u8bc1\u8fd9\u4e2aBound\u662f\u6709\u610f\u4e49\u7684\uff0c\u8981\u8fdb\u4e00\u6b65\u5730\u5206\u6790\u3002 \u63a8\u8bba \u5f53 \\(\\eta\\) \u53d6 \\[ \\ln \\bigg(1 + \\sqrt{\\frac{2\\ln m}{T}}\\bigg), \\] \u53ef\u4ee5\u4fdd\u8bc1 \\[ \\frac{1}{T} \\sum^{T}_{t=1} \\mathbf{M}(P_t, Q_t) \\le \\min_{P} \\frac{1}{T} \\sum^T_{t=1} \\mathbf{M}(P, Q_t) + \\sqrt{\\frac{2\\ln m}{T}} + \\frac{\\ln m}{T}. \\] \u8bc1\u660e \\[ \\begin{aligned} &\\sum^{T}_{t=1}\\mathbf{M}(P_t, Q_t) \\\\ =& \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + (a_\\eta - 1) T + c_\\eta \\ln m \\quad(\\mathbf{M} \\in [0, 1])\\\\ =& \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + \\bigg[\\bigg(\\frac{\\eta}{1 - e^{-\\eta}} - 1 \\bigg)T + \\frac{\\ln m}{1 - e^{-\\eta}}\\bigg]\\\\ \\le& \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + \\bigg[\\bigg(\\frac{e^{\\eta} - e^{-\\eta}}{2(1 - e^{-\\eta})} - 1 \\bigg)T + \\frac{\\ln m}{1 - e^{-\\eta}}\\bigg] \\quad(\\eta \\le (e^{\\eta}- e^{-\\eta})/2)\\\\ =& \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + \\bigg[\\frac{e^{\\eta} - 1}{2} T + \\frac{\\ln m}{e^{\\eta} - 1} + \\ln m\\bigg] \\\\ \\le& \\min_{P} \\sum^{T}_{t=1} \\mathbf{M}(P, Q_t) + \\sqrt{\\frac{2\\ln m}{T}} + \\frac{\\ln m}{T}. \\quad \\bigg(\\eta = \\ln\\bigg(1 + \\sqrt{\\frac{2\\ln m}{T}}\\bigg)\\bigg)\\\\ \\end{aligned} \\] \u63a8\u8bba \\[ \\frac{1}{T} \\sum^{T}_{t=1} \\mathbf{M}(P_t, Q_t) \\le \\min_{P}\\max_{Q} \\mathbf{M}(P, Q) + \\Delta_T, \\] \u5176\u4e2d \\(\\Delta_T = \\sqrt{\\frac{\\ln m}{T}} + \\frac{\\ln m}{T}\\) . \u4ece\u4e0a\u9762\u7684\u5f15\u7406\u5c31\u80fd\u5f97\u5230\u51af\u8bfa\u4f9d\u66fc\u7684Minmax\u5b9a\u7406 \u5b9a\u7406 \\[ \\min_{P}\\max_{Q} \\mathbf{M}(P, Q) = \\max_{Q} \\min_{P} \\mathbf{M}(P, Q). \\] \u8bc1\u660e \u9996\u5148\u6211\u4eec\u8bc1\u660e \\(\\min_{P} \\max_{Q} \\mathbf{M}(P, Q) \\ge \\max_{Q} \\min_{P} \\mathbf{M}(P, Q)\\) \u3002\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\hat P\\) \u548c \\(Q\\) \u6ee1\u8db3 \\(\\mathbf{M}(\\hat P, Q) \\ge \\min_{P} \\mathbf{M}(P, Q)\\) \u3002\u6240\u4ee5 \\(\\max_{Q} \\mathbf{M}(\\hat P, Q) \\ge \\max_{Q} \\min_{P} \\mathbf{M}(P, Q)\\) \u3002\u56e0\u4e3a \\(\\hat P\\) \u662f\u4efb\u610f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u5230\u4e86\u672c\u6bb5\u5f00\u5934\u7684\u7ed3\u8bba\u3002 \u96be\u5ea6\u5728\u4e8e\u5982\u4f55\u6c42\u8bc1 \\(\\min_{P} \\max_{Q} \\mathbf{M}(P, Q) \\le \\max_{Q} \\min_{P} \\mathbf{M}(P, Q)\\) \u3002 \u8bbeMW\u7b97\u6cd5\u4e2d\uff0c\u73af\u5883\u83b7\u5f97\u7684 \\(Q_t = \\arg\\max_{Q} \\mathbf{M}(P_t, Q)\\) \u3002\u540c\u65f6\uff0c\u8bbe \\(\\bar P = \\frac{1}{T} \\sum^{T}_{t=1} P_t\\) \u548c \\(\\bar Q = \\frac{1}{T} \\sum^{T}_{t=1} Q_t\\) \u3002\u90a3\u4e48 \\[ \\begin{aligned} &\\min_{P}\\max_{Q} P^T \\mathbf{M} Q \\le \\max_{Q} \\bar P^T \\mathbf{M} Q \\\\ =& \\max_{Q} \\frac{1}{T} \\sum^T_{t=1} P^T_t \\mathbf{M} Q \\le \\frac{1}{T} \\sum^T_{t=1}\\max_Q P^T_t \\mathbf{M} Q \\\\ =& \\frac{1}{T} \\sum^T_{t=1} P^T_t \\mathbf{M} Q_t \\le \\min_{P} \\frac{1}{T} \\sum^T_{t=1} P^T \\mathbf{M} Q_t + \\Delta_T \\\\ =& \\min_P P^T \\mathbf{M} \\bar Q + \\Delta_T \\le \\max_Q \\min_P P^T \\mathbf{M}Q + \\Delta_T. \\end{aligned} \\] \u4ece\u4e0a\u9762\u7684\u8bc1\u660e\u4e2d\u53ef\u77e5MW\u7b97\u6cd5\u80fd\u591f\u83b7\u5f97\u4e00\u4e2a\u4e0d\u9519\u7684\u7b56\u7565 \\(\\bar P = \\frac{1}{T} \\sum^T_{t=1} P_t\\) \u80fd\u591f\u4fdd\u8bc1 \\[ \\max_{Q} \\mathbf{M}(\\bar P, Q) \\le \\max_{Q} \\min_{P} \\mathbf{M}(P, Q) + \\Delta_T. \\] \u540c\u7406 \\(\\bar Q = \\frac{1}{T} \\sum^T_{t=1} Q_t\\) \u6ee1\u8db3 \\[ \\min_{P} \\mathbf{M}(P, \\bar Q) \\ge \\min_{P} \\max_{Q} \\mathbf{M}(P, Q) - \\Delta_T. \\]","title":"Game Theory"},{"location":"ML/14-GameTheory/#online-learning","text":"\u5728\u4e00\u822c\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e2d\uff0c\u6570\u636e\u662f\u4ece\u8bad\u7ec3\u96c6\u4e2d\u968f\u673a\u91c7\u6837\u51fa\u6765\u7684 batch \uff0c\u7b97\u6cd5\u501f\u6b64\u5b66\u4e60\u5230\u4e00\u4e2a\u6a21\u578b\u540e\uff0c\u5c06\u5728\u6d4b\u8bd5\u96c6\u4e2d\u8fdb\u884c\u8bad\u7ec3\u3002\u800c\u5728\u5728\u7ebf\u5b66\u4e60\u4e2d\uff0c\u6574\u4e2a\u6570\u636e\u6a21\u578b\u53d1\u751f\u4e86\u6539\u53d8\u3002\u6837\u672c\u662f\u4e00\u4e2a\u4e2a\u4f9d\u6b21\u8f93\u5165\u5230\u7b97\u6cd5\u4e2d\u7684\uff0c\u7136\u540e\u7b97\u6cd5\u7ed9\u51fa\u4e00\u4e2a\u9884\u6d4b\u6807\u7b7e\uff0c\u63a5\u7740\u7b97\u6cd5\u63a5\u53d7\u4e00\u4e2a\u771f\u5b9e\u6807\u7b7e\uff0c\u8fd9\u65f6\u9884\u6d4b\u6807\u7b7e\u548c\u771f\u5b9e\u6807\u7b7e\u7684\u8bef\u5dee\u65e2\u662f\u8bad\u7ec3\u635f\u5931\uff0c\u4e5f\u662f\u6d4b\u8bd5\u635f\u5931\u3002\u5728\u7ebf\u5b66\u4e60\u548c\u5176\u4ed6\u673a\u5668\u5b66\u4e60\u6700\u5927\u7684\u4e0d\u540c\u5c31\u662f\u7b97\u6cd5\u5bf9\u6837\u672c\u7684\u6765\u6e90\u6ca1\u6709\u4efb\u4f55\u9650\u5236\uff0c\u5b83\u65e2\u53ef\u4ee5\u662f\u968f\u673a\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u5168\u77e5\u5168\u80fd\u7684\u654c\u5bf9\u6570\u636e\uff08adversarial)\u3002 \u5b9a\u4e49 \u5728\u7ebf\u5b66\u4e60\u7684\u6574\u4f53\u6a21\u578b\u5982\u4e0b\u6240\u793a\u3002\u8bbe\u6837\u672c\u5728\u6709\u9650\u96c6\u5408 \\(\\mathcal{X}\\) \u4e2d\uff0c\u4ee5\u53ca\u4e00\u4e2a\u9488\u5bf9\u4e8c\u5206\u7c7b\u7684\u6709\u9650\u5047\u8bbe\u96c6 \\(\\mathcal{H} = \\{h: \\mathcal{X} \\rightarrow \\{-1, 1\\}\\}\\) \u3002\u5e76\u4e14\u5047\u8bbe\u6837\u672c\u670d\u4ece\u4e00\u4e2a\u672a\u77e5\u7684\u6807\u7b7e\u51fd\u6570 \\(c:\\mathcal{X} \\rightarrow \\{-1, 1\\}\\) \u3002\uff08\u8fd9\u4e2a\u76ee\u6807\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u6807\u7b7e\u51fd\u6570\uff0c\u662f\u968f\u673a\u5206\u5e03\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u8fd9\u91cc\u5047\u8bbe\u4e3a\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u6807\u7b7e\u51fd\u6570\u662f\u4e3a\u4e86\u7b80\u5316\u540e\u9762\u7684\u8fc7\u7a0b\u3002\uff09\u63a5\u7740 \u73af\u5883\u4ee5\u4efb\u610f\u65b9\u5f0f\u7ed9\u5b66\u4e60\u8005\u9009\u5b9a\u4e00\u4e2a\u6837\u672c \\(x_t \\in \\mathcal{X}\\) \uff1b \u5b66\u4e60\u8005\u9009\u5b9a\u4e00\u4e2a\u9488\u5bf9 \\(x_t\\) \u7684\u4f30\u8ba1\u6807\u7b7e \\(\\hat y_t \\in \\{-1, 1\\}\\) \uff1b \u5b66\u4e60\u8005\u89c2\u6d4b\u5230\u4e86\u771f\u5b9e\u6807\u7b7e \\(c(x_t)\\) \uff1b \u7ecf\u9a8c\u7d2f\u8ba1\u8bef\u5dee\u4e3a \\[ \\mathbb{E}\\bigg[\\sum^{T}_{t=1} \\mathbf{1}[\\hat y_t \\ne c(x_t)]\\bigg] = \\sum^T_{t=1} \\mathbf{Pr}[\\hat y_t \\ne c(x_t)]. \\] \u5728\u7ebf\u5b66\u4e60\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316\u4e8b\u540e\u8bf8\u845b\u4eae\u7d2f\u8ba1\u8bef\u5dee \\[ \\min_{h \\in \\mathcal{H}} \\sum^T_{t=1} \\mathbf{1}[h(x_t) \\ne c(x_t)]. \\] \u5c06\u5728\u7ebf\u5b66\u4e60\u8f6c\u5316\u4e3a\u535a\u5f08\u8bba\u95ee\u9898\uff1a \\(\\mathbf{M}\\) \u662f\u4e00\u4e2a \\(\\vert \\mathcal{H} \\vert\\) \u884c\uff0c \\(\\vert \\mathcal{X} \\vert\\) \u5217\u7684\u5728\u7ebf\u535a\u5f08\u95ee\u9898\uff0c\u6ee1\u8db3 \\[ \\mathbf{M}(h, x) = \\mathbf{1}[h(x) \\ne c(x)]. \\] \u5982\u679c\u4f7f\u7528MW\u7b97\u6cd5\u6765\u6c42\u89e3Online Learning\u95ee\u9898\uff0c\u90a3\u4e48\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6c42\u89e3Online Learning\u95ee\u9898\u7684\u7b97\u6cd5 Weighted Majority Algorithm \u3002 \\[ P_{t+1}(h) = \\frac{P_t(h) e^{-\\eta \\cdot \\mathbf{1}[h(x_t) \\ne c(x_t)]}}{Z_t}. \\] \u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u6536\u655b\u7387\u4e3a \\(O \\bigg(\\sqrt{\\frac{\\ln \\vert \\mathcal{H} \\vert}{T}}\\bigg)\\) .","title":"Online Learning"},{"location":"ML/14-GameTheory/#boosting","text":"Boosting\u7684\u7b97\u6cd5\u6d41\u7a0b\u662f\uff1a Booster\u6784\u9020\u4e00\u4e2a\u57fa\u4e8e\u8bad\u7ec3\u96c6 \\(X\\) \u7684\u5206\u5e03 \\(\\mathcal{D}_t\\) \u7ed9\u5f31\u5b66\u4e60\u5668\uff1b \u5f31\u5b66\u4e60\u5668\u63d0\u4f9b\u4e00\u4e2a\u5206\u7c7b\u51fd\u6570 \\(h_t \\in \\mathcal{H}\\) \u6ee1\u8db3\u7ecf\u9a8c\u8bef\u5dee\u5c0f\u4e8e \\(\\frac{1}{2} - \\gamma\\) \uff0c\u5373 \\(\\mathbf{Pr}_{x \\sim \\mathcal{D}_t} [h_t (x) \\ne c(x)] \\le \\frac{1}{2} - \\gamma\\) \u3002 AdaBoost\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b97\u6cd5\u6765\u6784\u9020 \\(\\mathcal{D}_t\\) \u4ee5\u53ca\u7ec4\u5408 \\(\\{h_t\\}^T_{t=1}\\) \u7684\u65b9\u5f0f\uff0c\u4f7f\u5f97\u6700\u7ec8\u7684\u5206\u7c7b\u5668\u8fbe\u5230\u7406\u60f3\u6548\u679c\u3002 \u5c06Boost\u8f6c\u5316\u4e3a\u535a\u5f08\u6e38\u620f \\(\\mathbf{M}(h, x) = \\mathbf{1}[h(x) \\ne c(x)]\\) \u3002 \u90a3\u4e48\uff0c\u6839\u636e\u51af\u8bfa\u4f9d\u66fc\u7684Minmax\u5b9a\u7406\uff0c\u53ef\u5f97 \\[ \\begin{aligned} &\\min_{P} \\max_{x \\in X} \\mathbf{M}(P, x) \\\\ =& \\min_{P} \\max_{Q} \\mathbf{M}(P, Q) = \\nu \\\\ =& \\max_{Q} \\min_{P} \\mathbf{M}(P, Q) \\\\ =& \\max_{Q} \\min_{h \\in \\mathcal{H}} \\mathbf{M}(h, Q) \\end{aligned} \\] \u6839\u636e\u5b9a\u4e49 \\[ \\mathbf{M}(h, Q) = \\mathbf{Pr}_{x \\sim Q} [h(x) \\ne c(x)], \\] \u6240\u4ee5 \\[ \\nu \\le \\mathbf{M}(h, Q^*) = \\mathbf{Pr}_{x \\sim Q^*}[h(x) \\ne c(x)] \\le \\frac{1}{2} - \\gamma. \\] \u53c8\u56e0\u4e3aAdaboost\u5f00\u5934\u7684 \\(\\gamma\\) -\u5f31\u5b66\u4e60\u5047\u8bbe\u53ef\u77e5 \\[ \\mathbf{Pr}_{h \\sim P^*}[h(x) \\ne c(x)] = \\mathbf{M}(P^*, x) \\le \\nu \\le \\frac{1}{2} - \\gamma < \\frac{1}{2}. \\] \u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6837\u672c\u96c6\u7684\u6837\u672c\u53ef\u4ee5\u88ab\u5982\u4e0b\u52a0\u6743\u5206\u7c7b\u5668\u5b8c\u7f8e\u5206\u7c7b \\[ c(x) = sign\\bigg(\\sum_{h \\in \\mathcal{H}} P^*(h) h(x)\\bigg). \\] \u4eceminimax\u6e38\u620f\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u8fd9\u4e2a\u5206\u7c7b\u5668\u7684margin\u81f3\u5c11\u662f \\(2\\gamma\\) \uff0c\u5e76\u4e14edge\u548cmargin\u7684\u5173\u7cfb\u4e00\u76ee\u4e86\u7136\u3002 Adaboost\u7684\u539f\u7406\u662f\u6c42\u89e3\u95ee\u9898 \\[ \\max_{Q} \\min_{h \\in \\mathcal{H}} \\mathbf{M}(h, Q), \\] \u6240\u4ee5Boosting\u8981\u6c42\u89e3\u4e00\u4e2a \\(Q^*\\) \u5206\u90e8\u800c\u4e0d\u518d\u662f \\(P^*\\) \u5206\u90e8\u3002\u6211\u4eec\u5982\u679c\u8981\u4f7f\u7528MW\u7b97\u6cd5\u6211\u4eec\u9700\u8981\u5bf9\u95ee\u9898 \\(\\mathbf{M}\\) \u505a\u4fee\u6539\uff0c\u800c\u4f7f\u7528\u5bf9\u5076\u6e38\u620f \\(\\mathbf{M}'\\) \\[ \\mathbf{M}' = \\mathbf{1} - \\mathbf{M}^T. \\] \u90a3\u4e48\uff0cBoosting\u7b97\u6cd5\u7684\u6bcf\u4e00\u6b65\u90fd\u8981\u5b8c\u6210\u5982\u4e0b\u6b65\u9aa4\uff1a \u5c06\u5206\u5e03 \\(Q_t = \\mathcal{D}_t\\) \u4f20\u7ed9\u5f31\u5b66\u4e60\u5668\uff1b \u83b7\u5f97\u5f31\u5b66\u4e60\u5668\u8fd4\u56de\u7684\u5206\u7c7b\u51fd\u6570 \\(h_t\\) \u6ee1\u8db3 \\(\\mathbf{Pr}_{x\\sim\\mathcal{D}_t}[h_t(x) = c(x)] \\ge \\frac{1}{2}+\\gamma\\) \uff1b \u83b7\u5f97\u4e0e \\(Q_t\\) \u671f\u671b\u7b49\u4ef7\u7684\u5206\u7c7b\u51fd\u6570 \\(h_t\\) \uff1a \\(\\mathbf{M}'(x, Q_t) = \\mathbf{M}'(x, h_t) = \\mathbf{1}\\{h_t(x) = c(x)\\}\\) \uff1b \u8ba1\u7b97\u65b0\u7684\u5206\u5e03 \\(Q_{t+1} = {Q_t e^{-\\eta \\mathbf{1}\\{h_t(x) = c(x)\\}}}/{Z_t}\\) \u3002 \u7b97\u6cd5\u6700\u7ec8\u8fd4\u56de\u7684\u5206\u7c7b\u5668\u4e3a \\[ H(x) = sign\\bigg(\\sum^T_{t=1} h_t(x)\\bigg). \\] \u8fd9\u4e2a\u7b97\u6cd5\u4e5f\u88ab\u79f0\u4e3a \\(\\epsilon\\) -boosting \u6216\u8005 \\(\\epsilon\\) -AdaBoost\u3002 \u6839\u636e\u524d\u9762\u5bf9\u535a\u5f08\u6e38\u620f\u7684\u5206\u6790\u6211\u4eec\u53ef\u5f97 \\[ \\frac{1}{2} + \\gamma \\le \\frac{1}{T} \\sum^T_{t=1} \\mathbf{M}'(P_t, h_t) \\le \\min_{x \\in X} \\frac{1}{T} \\sum^T_{t=1} \\mathbf{M}'(x, h_t) + \\Delta_T, \\] \u4e5f\u5c31\u662f\u8bf4 \\[ \\min_{x \\in X} \\frac{1}{T} \\sum^T_{t=1} \\mathbf{M}'(x, h_t) \\ge \\frac{1}{2} + \\gamma - \\Delta_T \\] \u5373\u5f53 \\(T\\) \u591f\u5927\u65f6\uff0c\u5206\u7c7b\u5668\u80fd\u591f\u62df\u5408\u76ee\u6807\u51fd\u6570 \\(c(x)\\) \u3002 \u53e6\u4e00\u4e2a\u5173\u4e8e\u535a\u5f08\u6e38\u620f\u7684\u7ed3\u8bba\u53ef\u5f97 \\[ \\frac{1}{2} + \\gamma \\le \\frac{1}{T} \\sum^T_{t=1}\\mathbf{M}'(P_t, h_t) \\le a_{\\eta} \\min_{x \\in X} \\frac{1}{T} \\sum^T_{t=1} \\mathbf{M}'(x, h_t) + \\frac{c_{\\eta}\\ln m}{T}. \\] \u8bbe \\(\\eta = 2 \\alpha\\) \uff0c\u53ef\u5f97 \\[ \\begin{aligned} &\\min_{x \\in X} \\frac{1}{T} \\sum^T_{t=1}\\mathbf{M}'(x, h_t) \\ge \\frac{1}{a_{\\eta}} \\bigg[\\frac{1}{2}+\\gamma - \\frac{c_{\\eta}\\ln m}{T}\\bigg]\\\\ =& \\frac{1}{2} + \\gamma - \\bigg(1 - \\frac{1 - e^{-2\\alpha}}{2\\alpha}\\bigg)\\bigg(\\frac{1}{2} + \\gamma\\bigg) - \\frac{\\ln m}{2\\alpha T}\\\\ \\ge& \\bigg(\\frac{1}{2} + \\gamma\\bigg) - \\alpha\\bigg(\\frac{1}{2} + \\gamma\\bigg) - \\frac{\\ln m}{2\\alpha T}. \\quad(e^{-z} \\le 1 - z + z^2/2) \\end{aligned} \\] \u5f53 \\(\\alpha\\) \u8db3\u591f\u5c0f\uff0c\u5e76\u4e14 \\(T\\) \u8db3\u591f\u5927\u65f6\uff0c \\(\\alpha\\) -Adaboost\u80fd\u591f\u8fbe\u5230AdaBoost\u7684\u6027\u80fd\u3002 @article { schapire2013boosting , title = {Boosting: Foundations and algorithms} , author = {Schapire, Robert E and Freund, Yoav} , journal = {Kybernetes} , year = {2013} , publisher = {Emerald Group Publishing Limited} }","title":"Boosting"},{"location":"Math/Group/","text":"Group \u00b6 Definition \u00b6 Definition of function \u00b6 \\[\\begin{align} Function(A, B) =& \\{f \\in P(A \\times B) \\vert \\phi_1(f), \\phi_2(f) \\}, \\\\ \\phi_1(f) = & (\\forall a \\in A \\exists b \\in B ((a, b) \\in f) ), \\\\ \\phi_2(f) =& (\\forall a \\in A\\forall b_1, b_2 \\in B ((a, b_1) \\in f \\land (a, b_2) \\in f \\to b_1 = b_2)). \\end{align}\\] Definition of semigroup on set \\(S\\) \u00b6 \\[ \\begin{align} SemiGroup(S) =& \\{f \\in Function(S\\times S, S) \\vert \\phi(f)\\},\\\\ \\phi(f) =& \\forall a, b, c, m, n, x, y \\in f (\\{(a, b, m), (m, c, x), (b, c, n), (a, n, y)\\}\\subset f \\to x = y). \\\\ p.s.& f(f(a, b) ,c) = f(a, f(b, c)). \\end{align} \\] Definition of left-monoid on set \\(S\\) and left-identity \u00b6 \\[ \\begin{align} LeftIdentity(f) = \\{e_L \\in S \\vert \\forall a \\in S((e_L, a, a)\\in f)\\}. \\end{align} \\] \\[ \\begin{align} LeftMonoid(S) =& \\{f \\in SemiGroup(S) \\vert LeftIdentity(f) \\ne \\varnothing\\}. \\end{align} \\] Definition of right-monoid on set \\(S\\) and right-identity \u00b6 \\[ \\begin{align} RightIdentity(f) = \\{e_R \\in S \\vert \\forall a \\in S((a, e_R, a)\\in f)\\}. \\end{align} \\] \\[ \\begin{align} RightMonoid(S) =& \\{f \\in SemiGroup(S) \\vert RightIdentity(f) \\ne \\varnothing\\}. \\end{align} \\] Definition of left-group on set \\(S\\) and left-inverse \u00b6 \\[ \\begin{align} LeftInverse(f) =& \\{g_L \\in P(S \\times S) \\vert \\phi_1(f, g_L), \\phi_2(f, g_L) \\}, \\\\ \\phi_1(f, g_L) = & \\forall a \\in S \\exists b \\in S ((a, b) \\in g_L) \\\\ \\phi_2(f, g_L) =& \\forall a,b \\in S ((a, b) \\in g_L \\to f(b, a) \\in LeftIdentity(f)). \\end{align} \\] \\[ \\begin{align} LeftGroup(S) =& \\{f \\in LeftMonoid(S) \\vert LeftInverse(f) \\ne \\varnothing\\}. \\end{align} \\] Definition of right-group on set \\(S\\) and right-inverse \u00b6 \\[ \\begin{align} RightInverse(f) =& \\{g_R \\in P(S \\times S) \\vert \\phi_1(f, g_R), \\phi_2(f, g_R) \\}, \\\\ \\phi_1(f, g_R) =& \\forall a \\in S \\exists b \\in S ((a, b) \\in g_R), \\\\ \\phi_2(f, g_R) =& \\forall a, b \\in S ((a, b) \\in g_R \\to f(a, b) \\in RightIdentity(f)). \\end{align} \\] \\[ \\begin{align} RightGroup(S) =& \\{f \\in RightMonoid(S) \\vert RightInverse(f) \\ne \\varnothing\\}. \\end{align} \\] Definition of group on set \\(S\\) \u00b6 \\[ Group(S) = LeftGroup(S) \\cap RightGroup(S) \\] Proposition \u00b6 Proposition1 \u00b6 \\[ \\begin{align} \\forall f \\in Group(S) \\\\ \\forall e_{L1}, e_{L2} \\in LeftIdentity(f) \\\\ \\forall e_{R1}, e_{R2} \\in RightIdentity(f)\\\\ (e_{L1} = e_{L2} = e_{R1} = e_{R2}) \\end{align} \\] Proof. $$ \\begin{align} (7) \\Rightarrow& (e_{L1}, e_{R1}, e_L) \\in f \\ (9) \\Rightarrow& (e_{L1}, e_{R1}, e_R) \\in f \\ (3) \\Rightarrow& e_{L1} = e_{R1} \\ Similarity \\Rightarrow& e_{L2} = e_{R1} \\land e_{L1} = e_{R2} \\ (25), (26) \\Rightarrow& e_{L1} = e_{L2} = e_{R1} = e_{R2} \\end{align} $$ P.S. Now, we can use \\(e\\) safely. Proposition2 \u00b6 \\[ \\begin{align} \\forall f\\in Group(f) \\\\ \\forall g_L \\in LeftInverse(f) \\forall (a, b_{L1}), (a, b_{L2}) \\in g_L (b_{L1} = b_{L2})\\\\ \\forall g_R \\in RightInverse(f) \\forall (a, b_{R1}), (a, b_{R2}) \\in g_L (b_{R1} = b_{R2})\\\\ (b_{L1} = b_{L2} = b_{R1} = b_{R2}) \\end{align} \\] Proof. $$ \\begin{align} (11) \\Rightarrow& f(b_{R1}, a), f(b_{R2}, a) \\in LeftIdentity(f) \\ (22) \\Rightarrow& f(b_{R1}, a) = f(b_{R2}, a) = e \\ (9) \\Rightarrow& \\forall g_R \\in RightInverse(f) \\forall b_{R1} \\in g_R(b) \\ & (f(f(b_{L1}, a), b_{R1}) = f(f(b_{L2}, a), b_{R1}) = f(e, b_{R1}) = b_{R1}) \\ (6) \\Rightarrow& f(b_{L1}, f(a, b_{R1})) = f(b_{L2}, f(a, b_{R1})) = b_{R1} \\ (9)(15) \\Rightarrow& b_{L1} = f(b_{L1}, f(a, b_{R1})), b_{L2} = f(b_{L2}, f(a, b_{R1})) \\ (36) \\Rightarrow& b_{L1} = b_{L2}=b_{R1} \\ Similarity \\Rightarrow& b_{L1} = b_{L2} = b_{R2} \\end{align} $$ P.S. Now we can use function \\(g(a)\\) safely. Proposition3 \u00b6 \\[ \\begin{align} \\forall f \\in Group(S) \\forall a \\in S (g(g(a)) = a) \\end{align} \\] Proof. $$ \\begin{align} Definition \\Rightarrow& f(g(g(a)), g(a)) = e = f(a, g(a))\\ \\to& f(f(g(g(a)), g(a)), a) = f(f(a, g(a)), a)\\ \\to& f(g(g(a)), f(g(a), a)) = f(a, f(g(a), a))\\ \\to& f(g(g(a)), e) = f(a, e)\\ \\to& g(g(a)) = a \\end{align} $$ Proposition4 \u00b6 \\[ \\begin{align} g(f(a, b)) = f(g(b), g(a)) \\end{align} \\] Proof. $$ \\begin{align} A =& g(f(a, b)) \\ B =& f(g(b), g(a))\\ e =& f(A, f(a, b))\\ B=& f(e, B)\\ =& f(f(A, f(a, b)), B)\\ =& f(A, f(f(a, b), B))\\ =& f(A, f(a, f(b, B)))\\ =& f(A, f(a, f(f(b, g(b)), g(a))))\\ =& f(A, f(a, f(e, g(a))))\\ =& f(A, f(a, g(a)))\\ =& f(A, e) = A \\end{align} $$ Proposition5 \u00b6 \\[ \\begin{align} \\forall f \\in LeftGroup(S)\\forall c \\in S ((c, c, c) \\in f \\to c = e). \\end{align} \\] Proof. $$ \\begin{align} (Condition) \\Rightarrow& LeftInverse(f) \\ne \\varnothing, (13), (6), (7)\\ (13) \\Rightarrow& \\forall g_L \\in LeftInverse(f) \\forall b \\in g_L\u00a9 (f(c, b) \\in LeftIdentity) \\ (Condition) \\Rightarrow& \\forall g_L \\in LeftInverse(f) \\forall b \\in g_L\u00a9 (f(f(c, c), b) \\in LeftIdentity) \\ (6) \\Rightarrow& \\forall g_L \\in LeftInverse(f) \\forall b \\in g_L\u00a9 (f(c, f(c, b)) \\in LeftIdentity)\\ (60)(7) \\Rightarrow& \\forall g_L \\in LeftInverse(f) \\forall b \\in g_L\u00a9 (c \\in LeftIdentity) \\end{align} $$ Proposition \\(LeftGroup(S) = RightGroup(S)\\) \u00b6 Proof. $$ \\begin{align} (13)\\Rightarrow&\\forall f \\in LeftGroup(S) \\forall g_L \\in LeftInverse(f) \\forall a, b \\in S\\forall e_L \\in LeftIdentity(f) \\ &(a, b) \\in g_L \\to (b, a, e_L) \\in f \\ (6)\\Rightarrow& f(f(a, b), f(a, b)) =f(a, f(b, f(a, b))) = f(a, f(f(b, a), b)) = f(a, f(e_L, b)) = f(a, b)\\ (66)(58) \\Rightarrow& f(a, b) = e_L\\ (65)(67) \\Rightarrow& (a, b) \\in g_L \\to (a, b, e_L) \\in f\\ \\Rightarrow& g_L \\in RightInverse(f)\\ \\Rightarrow& RightInverse(f) \\ne \\varnothing \\ (69)\\Rightarrow& \\forall e_L \\in LeftIdentity(f) \\forall a \\in S((e_L, a, a) \\in f \\land \\phi) \\ & \\phi = \\exists b \\in S ((b, a, e_L) \\in f \\land (a, b, e_L) \\in f)\\ & f(a, e_L) = f(a, f(b, a)) = f(f(a, b), a) = f(e_L, a) = a\\ \\Rightarrow& e_L \\in RightInverse(f)\\ \\Rightarrow& RightInverse(f) \\ne \\varnothing \\end{align} $$ Proposition6 \u00b6 \\[ \\begin{align} Group(S) = \\{f \\in SemiGroup(S) \\vert \\phi_1(f), \\phi_2(f)\\},\\\\ \\phi_1(f) = (\\{x \\in S \\vert \\forall a, b \\in S, (a, x, b) \\in f\\} \\ne \\varnothing),\\\\ \\phi_1(f) = (\\{y \\in S \\vert \\forall a, b \\in S, (y, a, b) \\in f\\} \\ne \\varnothing). \\end{align} \\] Proof. $$ \\begin{align} (Condition) \\Rightarrow& \\forall a, b \\in S, \\exists y_a, x_a,\\ &f(y_a, a) = a, f(a, x_a) = b \\ (80) \\Rightarrow& f(f(y_a, a), x_a) = f(a, x_a) = b \\ (6),(81) \\Rightarrow& f(y_a, f(a, x_a)) = b \\ (80) \\Rightarrow& f(y_a, b) = b \\ (83)(7) \\Rightarrow& y_a \\in LeftIdentity(f), LeftIdentity(f) \\ne \\varnothing \\ (78) \\Rightarrow& \\forall c \\in S \\exists d \\in S ((d, c, y_a) \\in f) \\ (85) \\Rightarrow& LeftInverse(f) \\ne \\varnothing \\ (84)(86)(14)(63.5) \\Rightarrow& {f \\in SemiGroup(S) \\vert \\phi_1(f), \\phi_2(f)} = LeftGroup(S) = Group(S) \\end{align} $$ Definition of equivalence relation \u00b6 \\[ \\begin{align} EqRelation(S) =& \\{r \\in P(S \\times S) \\vert \\phi_1(r), \\phi_2(r), \\phi_3(r)\\},\\\\ \\phi_1(r) =& \\forall a \\in S((a, a) \\in R),\\\\ \\phi_2(r) =& \\forall a, b \\in S((a, b) \\in R \\to (b, a) \\in R),\\\\ \\phi_3(r) =& \\forall a, b, c \\in S((a, b) \\in R \\lang (b, c) \\in R \\to (a, c) \\in R). \\end{align} \\] Also define $$ \\begin{align} \\forall r \\in Relation(S) \\forall a \\in S(r(a) = {b \\in S \\vert (a, b) \\in r}). \\end{align} $$ Proposition7 \u00b6 \\[ \\begin{align} \\forall r \\in EqRelation(S) \\forall a, b \\in S ((a, b) \\in r \\leftrightarrow r(a) = r(b)). \\end{align} \\] Proof. $$ \\begin{align} (89) \\Rightarrow& b \\in r(b)\\ r(b) = r(a), Axiom Extension \\Rightarrow& b \\in r(a)\\ (92) \\Rightarrow& (a, b) \\in r\\ (92) \\Rightarrow& \\forall c \\in r(a), (a, c) \\in r\\ (90) \\Rightarrow& (c, a) \\in r\\ (98)(96)(91) \\Rightarrow& (c, b) \\in r, c \\in r(b) \\ (99) \\Rightarrow& r(a) \\subset r(b)\\ Similarty \\Rightarrow& r(b) \\subset r(a) \\ (100, 101) \\Rightarrow& r(a) = r(b) \\end{align} $$ Definition of congruence relation \u00b6 \\[ \\begin{align} \\forall f \\in Monoid(S)\\\\ Congruence(f) = \\{r \\in EqRelation \\vert \\phi(r)\\}, \\\\ \\phi(r) = \\forall a, b, c, d \\in S((a_1, a_2) \\in r \\land (b_1, b_2) \\in r \\to (f(a_1, b_1), f(a_2, b_2))\\in r). \\end{align} \\] Theorem1 \u00b6 Denote \\[ \\begin{align} r(S) = \\cup_{a \\in S} \\{r(a)\\} = \\{r(a), r(b), r(c), \\ldots\\}. \\end{align} \\] \\[ \\begin{align} \\forall f \\in Monoid(S) \\forall r \\in Congruence(f) \\\\ \\{f_r \\in P(r(S) \\times r(S) \\times r(S)) \\vert \\forall a, b \\in S((r(a), r(b), r(f(a, b)) \\in f_r)\\} \\subset Monoid(r(S)). \\end{align} \\] Proof. $$ \\begin{align} (93) \\Rightarrow& \\forall a_1, a_2 \\in S (r(a_1) = r(a_2) \\rightarrow (a_1, a_2) \\in r)\\ (93) \\Rightarrow& \\forall b_1, b_2 \\in S (r(b_1) = r(b_2) \\rightarrow (b_1, b_2) \\in r)\\ (109)(110)(105) \\Rightarrow& (f(a_1, b_1), f(a_2, b_2)) \\in r \\ (93) \\Rightarrow& r(f(a_1, b_1)) = r(f(a_2, b_2)) \\ (3)\\Rightarrow& f_r \\in Function(r(S) \\times r(S), r(S)) \\ (108) \\Rightarrow& f_r(f_r(r(a), r(b)), r\u00a9) = f_r(r(f(a, b)), r\u00a9) = r(f(f(a, b), c)) \\ (108) \\Rightarrow& f_r(r(a), f_r(r(b), r\u00a9)) = f_r(r(a), r(f(b, c))) = r(f(a, f(b, c))) \\ (6) \\Rightarrow& f_r(f_r(r(a), r(b)), r\u00a9) = f_r(r(a), f_r(r(b), r\u00a9))\\ (113)(116) \\Rightarrow& f_r \\in SemiGroup(S) \\ (7) \\Rightarrow& \\exists e \\in S \\forall a \\in S (f_r(r(e), r(a)) = r(f(e, a)) = r(a))\\ \\Rightarrow& r(e) \\in LeftIdentity(f_r) \\ (117)(118)(7) \\Rightarrow& f_r \\in LeftMonoid(S) \\ (14) \\Rightarrow& (f(g_L(a), a) = e) \\ \\Rightarrow& f_r(r(g_L(a)), r(a)) = r(f(g_L(a), a)) = r(e) \\in LeftIdentity(f_r)\\ \\Rightarrow& r(g_L(a)) \\in LeftInverse(r(a)) \\ \\Rightarrow& f_r \\in LeftGroup(S) \\end{align} $$","title":"Group"},{"location":"Math/Group/#group","text":"","title":"Group"},{"location":"Math/Group/#definition","text":"","title":"Definition"},{"location":"Math/Group/#definition-of-function","text":"\\[\\begin{align} Function(A, B) =& \\{f \\in P(A \\times B) \\vert \\phi_1(f), \\phi_2(f) \\}, \\\\ \\phi_1(f) = & (\\forall a \\in A \\exists b \\in B ((a, b) \\in f) ), \\\\ \\phi_2(f) =& (\\forall a \\in A\\forall b_1, b_2 \\in B ((a, b_1) \\in f \\land (a, b_2) \\in f \\to b_1 = b_2)). \\end{align}\\]","title":"Definition of function"},{"location":"Math/Group/#definition-of-semigroup-on-set-s","text":"\\[ \\begin{align} SemiGroup(S) =& \\{f \\in Function(S\\times S, S) \\vert \\phi(f)\\},\\\\ \\phi(f) =& \\forall a, b, c, m, n, x, y \\in f (\\{(a, b, m), (m, c, x), (b, c, n), (a, n, y)\\}\\subset f \\to x = y). \\\\ p.s.& f(f(a, b) ,c) = f(a, f(b, c)). \\end{align} \\]","title":"Definition of semigroup on set \\(S\\)"},{"location":"Math/Group/#definition-of-left-monoid-on-set-s-and-left-identity","text":"\\[ \\begin{align} LeftIdentity(f) = \\{e_L \\in S \\vert \\forall a \\in S((e_L, a, a)\\in f)\\}. \\end{align} \\] \\[ \\begin{align} LeftMonoid(S) =& \\{f \\in SemiGroup(S) \\vert LeftIdentity(f) \\ne \\varnothing\\}. \\end{align} \\]","title":"Definition of left-monoid on set \\(S\\) and left-identity"},{"location":"Math/Group/#definition-of-right-monoid-on-set-s-and-right-identity","text":"\\[ \\begin{align} RightIdentity(f) = \\{e_R \\in S \\vert \\forall a \\in S((a, e_R, a)\\in f)\\}. \\end{align} \\] \\[ \\begin{align} RightMonoid(S) =& \\{f \\in SemiGroup(S) \\vert RightIdentity(f) \\ne \\varnothing\\}. \\end{align} \\]","title":"Definition of right-monoid on set \\(S\\) and right-identity"},{"location":"Math/Group/#definition-of-left-group-on-set-s-and-left-inverse","text":"\\[ \\begin{align} LeftInverse(f) =& \\{g_L \\in P(S \\times S) \\vert \\phi_1(f, g_L), \\phi_2(f, g_L) \\}, \\\\ \\phi_1(f, g_L) = & \\forall a \\in S \\exists b \\in S ((a, b) \\in g_L) \\\\ \\phi_2(f, g_L) =& \\forall a,b \\in S ((a, b) \\in g_L \\to f(b, a) \\in LeftIdentity(f)). \\end{align} \\] \\[ \\begin{align} LeftGroup(S) =& \\{f \\in LeftMonoid(S) \\vert LeftInverse(f) \\ne \\varnothing\\}. \\end{align} \\]","title":"Definition of left-group on set \\(S\\) and left-inverse"},{"location":"Math/Group/#definition-of-right-group-on-set-s-and-right-inverse","text":"\\[ \\begin{align} RightInverse(f) =& \\{g_R \\in P(S \\times S) \\vert \\phi_1(f, g_R), \\phi_2(f, g_R) \\}, \\\\ \\phi_1(f, g_R) =& \\forall a \\in S \\exists b \\in S ((a, b) \\in g_R), \\\\ \\phi_2(f, g_R) =& \\forall a, b \\in S ((a, b) \\in g_R \\to f(a, b) \\in RightIdentity(f)). \\end{align} \\] \\[ \\begin{align} RightGroup(S) =& \\{f \\in RightMonoid(S) \\vert RightInverse(f) \\ne \\varnothing\\}. \\end{align} \\]","title":"Definition of right-group on set \\(S\\) and right-inverse"},{"location":"Math/Group/#definition-of-group-on-set-s","text":"\\[ Group(S) = LeftGroup(S) \\cap RightGroup(S) \\]","title":"Definition of group on set \\(S\\)"},{"location":"Math/Group/#proposition","text":"","title":"Proposition"},{"location":"Math/Group/#proposition1","text":"\\[ \\begin{align} \\forall f \\in Group(S) \\\\ \\forall e_{L1}, e_{L2} \\in LeftIdentity(f) \\\\ \\forall e_{R1}, e_{R2} \\in RightIdentity(f)\\\\ (e_{L1} = e_{L2} = e_{R1} = e_{R2}) \\end{align} \\] Proof. $$ \\begin{align} (7) \\Rightarrow& (e_{L1}, e_{R1}, e_L) \\in f \\ (9) \\Rightarrow& (e_{L1}, e_{R1}, e_R) \\in f \\ (3) \\Rightarrow& e_{L1} = e_{R1} \\ Similarity \\Rightarrow& e_{L2} = e_{R1} \\land e_{L1} = e_{R2} \\ (25), (26) \\Rightarrow& e_{L1} = e_{L2} = e_{R1} = e_{R2} \\end{align} $$ P.S. Now, we can use \\(e\\) safely.","title":"Proposition1"},{"location":"Math/Group/#proposition2","text":"\\[ \\begin{align} \\forall f\\in Group(f) \\\\ \\forall g_L \\in LeftInverse(f) \\forall (a, b_{L1}), (a, b_{L2}) \\in g_L (b_{L1} = b_{L2})\\\\ \\forall g_R \\in RightInverse(f) \\forall (a, b_{R1}), (a, b_{R2}) \\in g_L (b_{R1} = b_{R2})\\\\ (b_{L1} = b_{L2} = b_{R1} = b_{R2}) \\end{align} \\] Proof. $$ \\begin{align} (11) \\Rightarrow& f(b_{R1}, a), f(b_{R2}, a) \\in LeftIdentity(f) \\ (22) \\Rightarrow& f(b_{R1}, a) = f(b_{R2}, a) = e \\ (9) \\Rightarrow& \\forall g_R \\in RightInverse(f) \\forall b_{R1} \\in g_R(b) \\ & (f(f(b_{L1}, a), b_{R1}) = f(f(b_{L2}, a), b_{R1}) = f(e, b_{R1}) = b_{R1}) \\ (6) \\Rightarrow& f(b_{L1}, f(a, b_{R1})) = f(b_{L2}, f(a, b_{R1})) = b_{R1} \\ (9)(15) \\Rightarrow& b_{L1} = f(b_{L1}, f(a, b_{R1})), b_{L2} = f(b_{L2}, f(a, b_{R1})) \\ (36) \\Rightarrow& b_{L1} = b_{L2}=b_{R1} \\ Similarity \\Rightarrow& b_{L1} = b_{L2} = b_{R2} \\end{align} $$ P.S. Now we can use function \\(g(a)\\) safely.","title":"Proposition2"},{"location":"Math/Group/#proposition3","text":"\\[ \\begin{align} \\forall f \\in Group(S) \\forall a \\in S (g(g(a)) = a) \\end{align} \\] Proof. $$ \\begin{align} Definition \\Rightarrow& f(g(g(a)), g(a)) = e = f(a, g(a))\\ \\to& f(f(g(g(a)), g(a)), a) = f(f(a, g(a)), a)\\ \\to& f(g(g(a)), f(g(a), a)) = f(a, f(g(a), a))\\ \\to& f(g(g(a)), e) = f(a, e)\\ \\to& g(g(a)) = a \\end{align} $$","title":"Proposition3"},{"location":"Math/Group/#proposition4","text":"\\[ \\begin{align} g(f(a, b)) = f(g(b), g(a)) \\end{align} \\] Proof. $$ \\begin{align} A =& g(f(a, b)) \\ B =& f(g(b), g(a))\\ e =& f(A, f(a, b))\\ B=& f(e, B)\\ =& f(f(A, f(a, b)), B)\\ =& f(A, f(f(a, b), B))\\ =& f(A, f(a, f(b, B)))\\ =& f(A, f(a, f(f(b, g(b)), g(a))))\\ =& f(A, f(a, f(e, g(a))))\\ =& f(A, f(a, g(a)))\\ =& f(A, e) = A \\end{align} $$","title":"Proposition4"},{"location":"Math/Group/#proposition5","text":"\\[ \\begin{align} \\forall f \\in LeftGroup(S)\\forall c \\in S ((c, c, c) \\in f \\to c = e). \\end{align} \\] Proof. $$ \\begin{align} (Condition) \\Rightarrow& LeftInverse(f) \\ne \\varnothing, (13), (6), (7)\\ (13) \\Rightarrow& \\forall g_L \\in LeftInverse(f) \\forall b \\in g_L\u00a9 (f(c, b) \\in LeftIdentity) \\ (Condition) \\Rightarrow& \\forall g_L \\in LeftInverse(f) \\forall b \\in g_L\u00a9 (f(f(c, c), b) \\in LeftIdentity) \\ (6) \\Rightarrow& \\forall g_L \\in LeftInverse(f) \\forall b \\in g_L\u00a9 (f(c, f(c, b)) \\in LeftIdentity)\\ (60)(7) \\Rightarrow& \\forall g_L \\in LeftInverse(f) \\forall b \\in g_L\u00a9 (c \\in LeftIdentity) \\end{align} $$","title":"Proposition5"},{"location":"Math/Group/#proposition-leftgroups-rightgroups","text":"Proof. $$ \\begin{align} (13)\\Rightarrow&\\forall f \\in LeftGroup(S) \\forall g_L \\in LeftInverse(f) \\forall a, b \\in S\\forall e_L \\in LeftIdentity(f) \\ &(a, b) \\in g_L \\to (b, a, e_L) \\in f \\ (6)\\Rightarrow& f(f(a, b), f(a, b)) =f(a, f(b, f(a, b))) = f(a, f(f(b, a), b)) = f(a, f(e_L, b)) = f(a, b)\\ (66)(58) \\Rightarrow& f(a, b) = e_L\\ (65)(67) \\Rightarrow& (a, b) \\in g_L \\to (a, b, e_L) \\in f\\ \\Rightarrow& g_L \\in RightInverse(f)\\ \\Rightarrow& RightInverse(f) \\ne \\varnothing \\ (69)\\Rightarrow& \\forall e_L \\in LeftIdentity(f) \\forall a \\in S((e_L, a, a) \\in f \\land \\phi) \\ & \\phi = \\exists b \\in S ((b, a, e_L) \\in f \\land (a, b, e_L) \\in f)\\ & f(a, e_L) = f(a, f(b, a)) = f(f(a, b), a) = f(e_L, a) = a\\ \\Rightarrow& e_L \\in RightInverse(f)\\ \\Rightarrow& RightInverse(f) \\ne \\varnothing \\end{align} $$","title":"Proposition \\(LeftGroup(S) = RightGroup(S)\\)"},{"location":"Math/Group/#proposition6","text":"\\[ \\begin{align} Group(S) = \\{f \\in SemiGroup(S) \\vert \\phi_1(f), \\phi_2(f)\\},\\\\ \\phi_1(f) = (\\{x \\in S \\vert \\forall a, b \\in S, (a, x, b) \\in f\\} \\ne \\varnothing),\\\\ \\phi_1(f) = (\\{y \\in S \\vert \\forall a, b \\in S, (y, a, b) \\in f\\} \\ne \\varnothing). \\end{align} \\] Proof. $$ \\begin{align} (Condition) \\Rightarrow& \\forall a, b \\in S, \\exists y_a, x_a,\\ &f(y_a, a) = a, f(a, x_a) = b \\ (80) \\Rightarrow& f(f(y_a, a), x_a) = f(a, x_a) = b \\ (6),(81) \\Rightarrow& f(y_a, f(a, x_a)) = b \\ (80) \\Rightarrow& f(y_a, b) = b \\ (83)(7) \\Rightarrow& y_a \\in LeftIdentity(f), LeftIdentity(f) \\ne \\varnothing \\ (78) \\Rightarrow& \\forall c \\in S \\exists d \\in S ((d, c, y_a) \\in f) \\ (85) \\Rightarrow& LeftInverse(f) \\ne \\varnothing \\ (84)(86)(14)(63.5) \\Rightarrow& {f \\in SemiGroup(S) \\vert \\phi_1(f), \\phi_2(f)} = LeftGroup(S) = Group(S) \\end{align} $$","title":"Proposition6"},{"location":"Math/Group/#definition-of-equivalence-relation","text":"\\[ \\begin{align} EqRelation(S) =& \\{r \\in P(S \\times S) \\vert \\phi_1(r), \\phi_2(r), \\phi_3(r)\\},\\\\ \\phi_1(r) =& \\forall a \\in S((a, a) \\in R),\\\\ \\phi_2(r) =& \\forall a, b \\in S((a, b) \\in R \\to (b, a) \\in R),\\\\ \\phi_3(r) =& \\forall a, b, c \\in S((a, b) \\in R \\lang (b, c) \\in R \\to (a, c) \\in R). \\end{align} \\] Also define $$ \\begin{align} \\forall r \\in Relation(S) \\forall a \\in S(r(a) = {b \\in S \\vert (a, b) \\in r}). \\end{align} $$","title":"Definition of equivalence relation"},{"location":"Math/Group/#proposition7","text":"\\[ \\begin{align} \\forall r \\in EqRelation(S) \\forall a, b \\in S ((a, b) \\in r \\leftrightarrow r(a) = r(b)). \\end{align} \\] Proof. $$ \\begin{align} (89) \\Rightarrow& b \\in r(b)\\ r(b) = r(a), Axiom Extension \\Rightarrow& b \\in r(a)\\ (92) \\Rightarrow& (a, b) \\in r\\ (92) \\Rightarrow& \\forall c \\in r(a), (a, c) \\in r\\ (90) \\Rightarrow& (c, a) \\in r\\ (98)(96)(91) \\Rightarrow& (c, b) \\in r, c \\in r(b) \\ (99) \\Rightarrow& r(a) \\subset r(b)\\ Similarty \\Rightarrow& r(b) \\subset r(a) \\ (100, 101) \\Rightarrow& r(a) = r(b) \\end{align} $$","title":"Proposition7"},{"location":"Math/Group/#definition-of-congruence-relation","text":"\\[ \\begin{align} \\forall f \\in Monoid(S)\\\\ Congruence(f) = \\{r \\in EqRelation \\vert \\phi(r)\\}, \\\\ \\phi(r) = \\forall a, b, c, d \\in S((a_1, a_2) \\in r \\land (b_1, b_2) \\in r \\to (f(a_1, b_1), f(a_2, b_2))\\in r). \\end{align} \\]","title":"Definition of congruence relation"},{"location":"Math/Group/#theorem1","text":"Denote \\[ \\begin{align} r(S) = \\cup_{a \\in S} \\{r(a)\\} = \\{r(a), r(b), r(c), \\ldots\\}. \\end{align} \\] \\[ \\begin{align} \\forall f \\in Monoid(S) \\forall r \\in Congruence(f) \\\\ \\{f_r \\in P(r(S) \\times r(S) \\times r(S)) \\vert \\forall a, b \\in S((r(a), r(b), r(f(a, b)) \\in f_r)\\} \\subset Monoid(r(S)). \\end{align} \\] Proof. $$ \\begin{align} (93) \\Rightarrow& \\forall a_1, a_2 \\in S (r(a_1) = r(a_2) \\rightarrow (a_1, a_2) \\in r)\\ (93) \\Rightarrow& \\forall b_1, b_2 \\in S (r(b_1) = r(b_2) \\rightarrow (b_1, b_2) \\in r)\\ (109)(110)(105) \\Rightarrow& (f(a_1, b_1), f(a_2, b_2)) \\in r \\ (93) \\Rightarrow& r(f(a_1, b_1)) = r(f(a_2, b_2)) \\ (3)\\Rightarrow& f_r \\in Function(r(S) \\times r(S), r(S)) \\ (108) \\Rightarrow& f_r(f_r(r(a), r(b)), r\u00a9) = f_r(r(f(a, b)), r\u00a9) = r(f(f(a, b), c)) \\ (108) \\Rightarrow& f_r(r(a), f_r(r(b), r\u00a9)) = f_r(r(a), r(f(b, c))) = r(f(a, f(b, c))) \\ (6) \\Rightarrow& f_r(f_r(r(a), r(b)), r\u00a9) = f_r(r(a), f_r(r(b), r\u00a9))\\ (113)(116) \\Rightarrow& f_r \\in SemiGroup(S) \\ (7) \\Rightarrow& \\exists e \\in S \\forall a \\in S (f_r(r(e), r(a)) = r(f(e, a)) = r(a))\\ \\Rightarrow& r(e) \\in LeftIdentity(f_r) \\ (117)(118)(7) \\Rightarrow& f_r \\in LeftMonoid(S) \\ (14) \\Rightarrow& (f(g_L(a), a) = e) \\ \\Rightarrow& f_r(r(g_L(a)), r(a)) = r(f(g_L(a), a)) = r(e) \\in LeftIdentity(f_r)\\ \\Rightarrow& r(g_L(a)) \\in LeftInverse(r(a)) \\ \\Rightarrow& f_r \\in LeftGroup(S) \\end{align} $$","title":"Theorem1"},{"location":"Math/Logic/","text":"Logic \u00b6 \u524d\u8a00 \u00b6 \u4e0b\u9762\u7684\u63a8\u7406\u6709\u5f88\u591a\u9519\u8bef\uff0c\u6211\u51b3\u5b9a\u4f7f\u7528python\u6765\u5e2e\u6211\u68c0\u67e5\u9519\u8bef\u3002 https://github.com/ColorlessBoy/first-order-language An Axiom System for the Propositional Calculus \u00b6 Denote some language form set \\[ \\begin{align} Form_L \\end{align} \\] Definition \\[ \\begin{align} PC(Axiom) = PropositionalCalculus = G(Axiom = Axiom_1 \\cup Axiom_2 \\cup Axiom3, MP),\\\\ Axiom_1 = \\{h_2(a, h_2(b, a)) \\vert a, b \\in Form_L\\},\\\\ Axiom_2 = \\{h_2(h_2(a, h_2(b, c)), h_2(h_2(a, b), h_2(a, c))) \\vert a, b, c \\in Form_L\\},\\\\ Axiom_3 = \\{ h_2(h_2(h_1(a), h_1(b)), h_2(h_2(h_1(a), b), a)) \\vert a, b \\in Form_L \\},\\\\ MP(x, h_2(x, y)) = y,\\quad x, y \\in PC. \\end{align} \\] Definition \\[ \\begin{align} h_{\\land}(a, b) =& h_1(h_2(a, h_1(b))), \\\\ h_{\\lor}(a, b) =& h_2(h_1(a), b), \\\\ h_{\\leftrightarrow}(a, b) =& h_{\\land}(h_2(a, b), h_2(b, a)). \\end{align} \\] Q1: \\[ \\begin{align} \\{h_2(a, a) \\vert a \\in Form_L\\} \\subset PC. \\end{align} \\] Define: \\[ \\begin{align} Axiom_{Q1} = \\{h_2(a, a) \\vert a \\in Form_L\\}. \\end{align} \\] Proof: \\[ \\begin{align} &\\forall a \\in Form_L, h_2(a, a) \\in Form_L,\\\\ &MP(Axiom_1(a, a), MP(Axiom_1(a, h_2(a, a)), Axiom_2(a, h(a, a), a))) \\\\ =& MP(Axiom_1(a, a), MP(Axiom_1(a, h_2(a, a)), h_2(Axiom_1(a, h_2(a, a)), h_2(Axiom_1(a, a), h_2(a, a))))) \\\\ =& MP(Axiom_1(a, a), h_2(Axiom_1(a, a), h_2(a, a)))\\\\ =&h_2(a, a) \\in PC. \\end{align} \\] Q2: \\[ \\begin{align} \\{Target = h_2(h_2(h_1(a), a), a) \\vert a \\in Form_L\\} \\subset PC \\end{align} \\] Proof: \\[ \\begin{align} &\\forall a \\in Form_L, h_1(a) \\in Form_L, h_2(h_1(a), h_1(a)) \\in PC\\\\ &MP(h_2(h_1(a), h_1(a)), Axiom_3(a, a))\\\\ =&MP(h_2(h_1(a), h_1(a)), h_2(h_2(h_1(a), h_1(a)), Target)) \\\\ =& Target \\end{align} \\] Q3: \\[ \\begin{align} h_2(a, c) \\in PC(Axiom \\cup \\{h_2(a, b), h_2(b, c)\\}). \\end{align} \\] Define \\[ \\begin{align} Q3(h_2(a, b), h_2(b, c)) = h_2(a, c), \\forall a, b, c \\in PC(Axiom) \\end{align} \\] Proof: \\[ \\begin{align} &\\forall a, b, c \\in Form_L,\\\\ &MP(h_2(a, b), MP(Axiom_1(a, h_2(b, c)), Axiom_2(a, b, c)))\\\\ =& MP(h_2(a, b), MP( h_2(a, h_2(b, c)), h_2(h_2(a, b), h_2(a, c)) ))\\\\ =& MP(h_2(a, b), h_2( h_2(a, b), h_2(a, c) )) \\\\ =& h_2(a, c) \\end{align} \\] Q4: \\[ \\begin{align} h_2(b, h_2(a, c)) \\in PC(Axiom \\cup\\{h_2(a, h_2(b,c))\\}) \\end{align} \\] Proof. \\[ \\begin{align} &X = Axiom_1(a, b) = h_2(b, h_2(a, b))\\\\ &Y = MP(h_2(a, h_2(b, c)), Axiom_2(a, b, c)) = h_2(h_2(a, b), h_2(a, c))\\\\ &Q3(X, Y) = h_2(b, h_2(a, c)) \\end{align} \\] Q5: \\[ \\begin{align} h_2(h_2(h_1(a), h_1(b)), h_2(b, a)) \\in PC(Axiom) \\end{align} \\] Proof. \\[ \\begin{align} &t0 := h_2(h_1(a), h_1(b))\\\\ &t1 := Axiom_1(b, h_1(a)) = h_2(b, h_2(h_1(a), b))\\\\ &t2 := Axiom_3(a, b) = h_2(t0, h_2(h_2(h_1(a), b), a))\\\\ &t3 := Q4(t2) = h_2(h_2(h_1(a), b), h_2(t0, a)) \\\\ &t4 := Q3(t1, t3) = h_2(b, h_2(t0, a))\\\\ &Q4(t4) = h_1(A, h_2(b, a)) \\end{align} \\] Q6: \\[ \\begin{align} \\forall a \\in Form_L, a \\in PC(Axiom \\cup b) \\Rightarrow h_2(b, a) \\in PC(Axiom). \\end{align} \\] Denote $$ Q6(a\\in PC(Axiom \\cup b)) = h_2(b, a) \\in PC(Axiom). $$ Proof. If \\(a \\in PC(Axiom)\\) , then \\[ \\begin{align} &MP(a, Axiom_1(a, b)) \\\\ =& MP(a, h_2(a, h_2(b, a))) \\\\ =& h_2(b, a) \\in PC(Axiom). \\end{align} \\] If \\(a \\notin PC(Axiom)\\) , then \\[ \\begin{align} a \\in \\cup_{n \\in N}\\{f_n(b)\\}, \\quad f_0(b) = b. \\end{align} \\] Step0: \\[ f_0(b) = b, a = b, Q_1(a) = h(a, a) = h(b, a) \\in PC(Axiom). \\] Stepk: assume \\(\\forall c_{k-1} \\in \\cup_{k-1}\\{f_{k-1}(b)\\}, h_2(b, c_{k-1}) \\in PC(Axiom)\\) , we need proof \\(\\forall c_k \\in \\cup_{k}\\{f_k(b)\\}\\) . \\[ \\begin{align} &Q3(h_2(b, c_{k-1}), Axiom_1(c_{k-1}, c_k))\\\\ =&Q3(h_2(b, c_{k-1}), h_2(c_{k-1}, h_2(c_{k-1}, c_k)))\\\\ =&h_2(b, h_2(c_{k-1}, c_k)) \\in PC(Axiom)\\\\ &MP(h_2(b, h_2(c_{k-1}, c_k)), Axiom_2(b, c_{k-1}, c_k))\\\\ =& h_2(h_2(b, c_{k-1}), h_2(b, c_{k}))\\\\ &MP(h_2(b, c_{k-1}), h_2(h_2(b, c_{k-1}), h_2(b, c_{k})))\\\\ =& h_2(b, c_k) \\in PC(Axiom) \\end{align} \\] Q7: \\[ \\begin{align} \\forall a, b, c \\in Form_L, h_2(a, c) \\in PC(Axiom \\cup \\{h_2(a, h_2(b, c)), b\\}) \\end{align} \\] Proof: \\[ \\begin{align} &MP(b, Q4(h_2(a, h_2(b, c))))\\\\ =& MP(b, h_2(b, h_2(a, c)))\\\\ =& h2(a, c) \\end{align} \\] Q8: \\[ \\begin{align} \\forall a \\in Form_L, h_2(h_1(h_1(a)), a) \\in PC(Axiom). \\end{align} \\] Proof. \\[ \\begin{align} &t = Q7(Q1(h_1(a)), Axiom_3(a, h_1(a)))\\\\ =&Q7(h_2(h_1(a), h_1(a)), h_2(h_2(h_1(a), h_1(h_1(a))), h_2(h_2(h_1(a), h_1(a)), a)))\\\\ =& h_2(h_2(h_1(a), h_1(h_1(a))), a)\\\\ &Q3(Axiom_1(h_1(a), h_1(h_1(a))), t)\\\\ =&Q3(h_2(h_1(h_1(a)), h_2(h_1(h_1(a)), h_1(a))), t) \\\\ =& h_2(h_1(h_1(a)), a) \\end{align} \\]","title":"Logic"},{"location":"Math/Logic/#logic","text":"","title":"Logic"},{"location":"Math/Logic/#_1","text":"\u4e0b\u9762\u7684\u63a8\u7406\u6709\u5f88\u591a\u9519\u8bef\uff0c\u6211\u51b3\u5b9a\u4f7f\u7528python\u6765\u5e2e\u6211\u68c0\u67e5\u9519\u8bef\u3002 https://github.com/ColorlessBoy/first-order-language","title":"\u524d\u8a00"},{"location":"Math/Logic/#an-axiom-system-for-the-propositional-calculus","text":"Denote some language form set \\[ \\begin{align} Form_L \\end{align} \\] Definition \\[ \\begin{align} PC(Axiom) = PropositionalCalculus = G(Axiom = Axiom_1 \\cup Axiom_2 \\cup Axiom3, MP),\\\\ Axiom_1 = \\{h_2(a, h_2(b, a)) \\vert a, b \\in Form_L\\},\\\\ Axiom_2 = \\{h_2(h_2(a, h_2(b, c)), h_2(h_2(a, b), h_2(a, c))) \\vert a, b, c \\in Form_L\\},\\\\ Axiom_3 = \\{ h_2(h_2(h_1(a), h_1(b)), h_2(h_2(h_1(a), b), a)) \\vert a, b \\in Form_L \\},\\\\ MP(x, h_2(x, y)) = y,\\quad x, y \\in PC. \\end{align} \\] Definition \\[ \\begin{align} h_{\\land}(a, b) =& h_1(h_2(a, h_1(b))), \\\\ h_{\\lor}(a, b) =& h_2(h_1(a), b), \\\\ h_{\\leftrightarrow}(a, b) =& h_{\\land}(h_2(a, b), h_2(b, a)). \\end{align} \\] Q1: \\[ \\begin{align} \\{h_2(a, a) \\vert a \\in Form_L\\} \\subset PC. \\end{align} \\] Define: \\[ \\begin{align} Axiom_{Q1} = \\{h_2(a, a) \\vert a \\in Form_L\\}. \\end{align} \\] Proof: \\[ \\begin{align} &\\forall a \\in Form_L, h_2(a, a) \\in Form_L,\\\\ &MP(Axiom_1(a, a), MP(Axiom_1(a, h_2(a, a)), Axiom_2(a, h(a, a), a))) \\\\ =& MP(Axiom_1(a, a), MP(Axiom_1(a, h_2(a, a)), h_2(Axiom_1(a, h_2(a, a)), h_2(Axiom_1(a, a), h_2(a, a))))) \\\\ =& MP(Axiom_1(a, a), h_2(Axiom_1(a, a), h_2(a, a)))\\\\ =&h_2(a, a) \\in PC. \\end{align} \\] Q2: \\[ \\begin{align} \\{Target = h_2(h_2(h_1(a), a), a) \\vert a \\in Form_L\\} \\subset PC \\end{align} \\] Proof: \\[ \\begin{align} &\\forall a \\in Form_L, h_1(a) \\in Form_L, h_2(h_1(a), h_1(a)) \\in PC\\\\ &MP(h_2(h_1(a), h_1(a)), Axiom_3(a, a))\\\\ =&MP(h_2(h_1(a), h_1(a)), h_2(h_2(h_1(a), h_1(a)), Target)) \\\\ =& Target \\end{align} \\] Q3: \\[ \\begin{align} h_2(a, c) \\in PC(Axiom \\cup \\{h_2(a, b), h_2(b, c)\\}). \\end{align} \\] Define \\[ \\begin{align} Q3(h_2(a, b), h_2(b, c)) = h_2(a, c), \\forall a, b, c \\in PC(Axiom) \\end{align} \\] Proof: \\[ \\begin{align} &\\forall a, b, c \\in Form_L,\\\\ &MP(h_2(a, b), MP(Axiom_1(a, h_2(b, c)), Axiom_2(a, b, c)))\\\\ =& MP(h_2(a, b), MP( h_2(a, h_2(b, c)), h_2(h_2(a, b), h_2(a, c)) ))\\\\ =& MP(h_2(a, b), h_2( h_2(a, b), h_2(a, c) )) \\\\ =& h_2(a, c) \\end{align} \\] Q4: \\[ \\begin{align} h_2(b, h_2(a, c)) \\in PC(Axiom \\cup\\{h_2(a, h_2(b,c))\\}) \\end{align} \\] Proof. \\[ \\begin{align} &X = Axiom_1(a, b) = h_2(b, h_2(a, b))\\\\ &Y = MP(h_2(a, h_2(b, c)), Axiom_2(a, b, c)) = h_2(h_2(a, b), h_2(a, c))\\\\ &Q3(X, Y) = h_2(b, h_2(a, c)) \\end{align} \\] Q5: \\[ \\begin{align} h_2(h_2(h_1(a), h_1(b)), h_2(b, a)) \\in PC(Axiom) \\end{align} \\] Proof. \\[ \\begin{align} &t0 := h_2(h_1(a), h_1(b))\\\\ &t1 := Axiom_1(b, h_1(a)) = h_2(b, h_2(h_1(a), b))\\\\ &t2 := Axiom_3(a, b) = h_2(t0, h_2(h_2(h_1(a), b), a))\\\\ &t3 := Q4(t2) = h_2(h_2(h_1(a), b), h_2(t0, a)) \\\\ &t4 := Q3(t1, t3) = h_2(b, h_2(t0, a))\\\\ &Q4(t4) = h_1(A, h_2(b, a)) \\end{align} \\] Q6: \\[ \\begin{align} \\forall a \\in Form_L, a \\in PC(Axiom \\cup b) \\Rightarrow h_2(b, a) \\in PC(Axiom). \\end{align} \\] Denote $$ Q6(a\\in PC(Axiom \\cup b)) = h_2(b, a) \\in PC(Axiom). $$ Proof. If \\(a \\in PC(Axiom)\\) , then \\[ \\begin{align} &MP(a, Axiom_1(a, b)) \\\\ =& MP(a, h_2(a, h_2(b, a))) \\\\ =& h_2(b, a) \\in PC(Axiom). \\end{align} \\] If \\(a \\notin PC(Axiom)\\) , then \\[ \\begin{align} a \\in \\cup_{n \\in N}\\{f_n(b)\\}, \\quad f_0(b) = b. \\end{align} \\] Step0: \\[ f_0(b) = b, a = b, Q_1(a) = h(a, a) = h(b, a) \\in PC(Axiom). \\] Stepk: assume \\(\\forall c_{k-1} \\in \\cup_{k-1}\\{f_{k-1}(b)\\}, h_2(b, c_{k-1}) \\in PC(Axiom)\\) , we need proof \\(\\forall c_k \\in \\cup_{k}\\{f_k(b)\\}\\) . \\[ \\begin{align} &Q3(h_2(b, c_{k-1}), Axiom_1(c_{k-1}, c_k))\\\\ =&Q3(h_2(b, c_{k-1}), h_2(c_{k-1}, h_2(c_{k-1}, c_k)))\\\\ =&h_2(b, h_2(c_{k-1}, c_k)) \\in PC(Axiom)\\\\ &MP(h_2(b, h_2(c_{k-1}, c_k)), Axiom_2(b, c_{k-1}, c_k))\\\\ =& h_2(h_2(b, c_{k-1}), h_2(b, c_{k}))\\\\ &MP(h_2(b, c_{k-1}), h_2(h_2(b, c_{k-1}), h_2(b, c_{k})))\\\\ =& h_2(b, c_k) \\in PC(Axiom) \\end{align} \\] Q7: \\[ \\begin{align} \\forall a, b, c \\in Form_L, h_2(a, c) \\in PC(Axiom \\cup \\{h_2(a, h_2(b, c)), b\\}) \\end{align} \\] Proof: \\[ \\begin{align} &MP(b, Q4(h_2(a, h_2(b, c))))\\\\ =& MP(b, h_2(b, h_2(a, c)))\\\\ =& h2(a, c) \\end{align} \\] Q8: \\[ \\begin{align} \\forall a \\in Form_L, h_2(h_1(h_1(a)), a) \\in PC(Axiom). \\end{align} \\] Proof. \\[ \\begin{align} &t = Q7(Q1(h_1(a)), Axiom_3(a, h_1(a)))\\\\ =&Q7(h_2(h_1(a), h_1(a)), h_2(h_2(h_1(a), h_1(h_1(a))), h_2(h_2(h_1(a), h_1(a)), a)))\\\\ =& h_2(h_2(h_1(a), h_1(h_1(a))), a)\\\\ &Q3(Axiom_1(h_1(a), h_1(h_1(a))), t)\\\\ =&Q3(h_2(h_1(h_1(a)), h_2(h_1(h_1(a)), h_1(a))), t) \\\\ =& h_2(h_1(h_1(a)), a) \\end{align} \\]","title":"An Axiom System for the Propositional Calculus"},{"location":"Math/SetTheory/","text":"Set Theory \u00b6 Axiom of Set Theory \u00b6 Extensionality \u00b6 \\[ \\begin{align} \\forall a \\forall b (\\forall x(x \\in a \\leftrightarrow x\\in b) \\to a = b). \\end{align} \\] Empty Set \u00b6 \\[ \\begin{align} \\exists a \\lnot (\\exists x (x \\in a)) \\end{align} \\] Pairing \u00b6 \\[ \\begin{align} \\forall a \\forall b \\exists c \\forall x((x = a \\land x = b) \\leftrightarrow x \\in c). \\end{align} \\] Power Set \u00b6 \\[ \\begin{align} \\forall a \\exists b \\forall x(x \\in b \\leftrightarrow (\\forall y (y \\in x \\rightarrow y \\in a))) \\end{align} \\] Union \u00b6 \\[ \\begin{align} \\forall a \\exists b \\forall x (x \\in b \\leftrightarrow \\exists y(y \\in a \\land x \\in y)) \\end{align} \\] Denote \\[ \\begin{align} b = \\cup a \\end{align} \\] Infinity Set \u00b6 \\[ \\begin{align} \\exists a (\\varnothing \\in a \\land (\\forall x (x \\in a \\to \\cup\\{x, \\{x\\}\\} \\in a))) \\end{align} \\] Separation \u00b6 \\[ \\begin{align} \\forall p [\\forall a \\exists b \\forall x(x \\in b \\leftrightarrow x \\in a \\land \\phi(x, p))] \\end{align} \\] Replacement \u00b6 \\[ \\begin{align} \\forall p [\\forall m \\forall n_1 \\forall n_2 (\\phi(m, n_1, p) = \\phi(m, n_2, p) \\rightarrow n_1 = n_2)]\\\\ \\rightarrow \\forall a \\exists b \\forall y (y \\in b \\leftrightarrow \\exists x (x \\in a \\land \\phi(x, y, p))). \\end{align} \\] Problem \u00b6 P1 \u00b6 \\[ \\begin{align} \\forall a \\forall b \\forall c \\forall d(\\phi_1(a, b, c, d) \\leftarrow \\phi_2(a, b, c, d)), \\\\ \\phi_1(a, b, c, d) = \\{\\{a\\}, \\{a, b\\}\\} = \\{\\{c\\}, \\{c, d\\}\\},\\\\ \\phi_2(a, b, c, d) = \\leftrightarrow a=c \\land b=d. \\end{align} \\] Proof. \\[ \\begin{align} \\phi_1 \\Rightarrow& (a = c \\rightarrow \\{a\\} = \\{c\\})\\\\ \\phi_1 \\Rightarrow& (b = d \\rightarrow \\{b\\} = \\{d\\})\\\\ \\phi_1 \\Rightarrow& (a = c \\land b=d \\rightarrow \\{a, b\\} = \\{c, d\\})\\\\ \\Rightarrow& (\\{a\\} = \\{c\\} \\land \\{b\\} = \\{d\\} \\land \\{a, b\\} = \\{c, d\\} \\rightarrow \\{\\{a\\}, \\{a, b\\}\\} = \\{\\{c\\}, \\{c, d\\}\\})\\\\ \\Rightarrow& (a=c \\land b = d \\rightarrow\\{\\{a\\}, \\{a, b\\}\\} = \\{\\{c\\}, \\{c, d\\}\\}) \\end{align} \\] Ordinal Number \u00b6 Forall Symbols \u00b6 \\[ \\begin{align} \\forall_X x \\phi = \\forall x (x \\in X \\land \\phi). \\end{align} \\] Function \u00b6 \\[ \\begin{align} Function(X, Y) := \\{f \\in P(X \\times Y) \\vert \\phi_1(f) \\land \\phi_2(f)\\},\\\\ \\phi_1(f) = \\exists_X x \\exists_Y y ((x, y) \\in f),\\\\ \\phi_2(f) = \\forall_X x \\forall_Y y_1 \\forall_Y y_2 ( (x, y_1) \\in f \\land (x, y_2) \\in f \\to y_1 = y_2 ). \\end{align} \\] Surjection \u00b6 \\[ \\begin{align} Surjection(X, Y) := \\{ f \\in Function(X, Y) \\vert \\phi(f) \\}, \\phi(f) = \\forall_Y y \\exist_X x ((x, y) \\in f). \\end{align} \\] Injection \u00b6 \\[ \\begin{align} Injection(X, Y) := \\{ f \\in Function(X, Y) \\vert \\phi(f) \\},\\\\ \\phi(f) = \\forall_X x_1 \\forall_X x_2 ( f(x_1) = f(x_2) \\to x_1 = x_2 ). \\end{align} \\] Inverse \\(f^{-1}\\) \u00b6 \\[ \\begin{align} \\{f^{-1}\\} = Inverse(f) = \\{g \\in P(Y \\times X) \\vert \\forall_X x \\forall_Y y((x, y) \\in f \\to (y, x) \\in g)\\}. \\end{align} \\] Bijection \u00b6 \\[ \\begin{align} Bijection(X, Y) := Injection(X, Y) \\cap Surjection(X, Y). \\end{align} \\] Partial Ordering \u00b6 \\[ \\begin{align} PartialOrdering(S) := \\{ r \\in P(S \\times S) \\vert \\phi_1(r) \\land \\phi_2(r) \\},\\\\ \\phi_1(r) = \\forall_S a ((a, a) \\notin r),\\\\ \\phi_2(r) = \\forall_S a \\forall_S b \\forall_S c ((a, b) \\in r \\land (b, c) \\in r \\rightarrow (a, c) \\in r). \\end{align} \\] Linear Ordering \u00b6 \\[ \\begin{align} LinearOrder(S) := \\{r \\in PartialOrdering(S) \\vert \\phi(r)\\},\\\\ \\phi(r)=\\forall_S a \\forall_S b \\{ (a, b) \\in r \\lor (b, a) \\in r \\lor a = b \\}. \\end{align} \\] {Max, Min, Upper, Lower, Greatest, Least, Sup, Inf} of \\(X \\in P(S)\\) \u00b6 \\[ \\begin{align} Max(r, X) := \\{ a \\in X \\vert \\forall_X b ((a, b) \\notin r) \\}. \\end{align} \\] \\[ \\begin{align} Min(r, X) := \\{ a \\in X \\vert \\forall_X b ((b, a) \\notin r) \\}. \\end{align} \\] \\[ \\begin{align} Upper(r, X) := \\{ a \\in S \\vert \\forall_X b ((b, a) \\in r \\lor a = b) \\}. \\end{align} \\] \\[ \\begin{align} Lower(r, X) := \\{ a \\in S \\vert \\forall_X b ((a, b) \\in r \\lor a = b). \\}. \\end{align} \\] \\[ \\begin{align} Greatest(r, X) := Uppser(r, X) \\cap X. \\end{align} \\] \\[ \\begin{align} Least(r, X) := Lower(r, X) \\cap X. \\end{align} \\] \\[ \\begin{align} Sup(r, X) := Least(r, Upper(r, X)). \\end{align} \\] \\[ \\begin{align} Inf(r, X) := Greatest(r, Lower(r, X)). \\end{align} \\] OrderPreserving \u00b6 \\[ \\begin{align} OrderPreserving(S_1, S_2) := \\{(r_1, r_2, f) \\in \\Phi \\vert \\phi(r_1, r_2, f)\\},\\\\ \\Phi = P(PartialOrder(S_1) \\times PartialOrder(S_2) \\times Function(S_1, S_2)),\\\\ \\phi(r_1, r_2, f) = \\forall_{S_1} a \\forall_{S_2} b ((a, b) \\in r_1 \\rightarrow (f(a), f(b)) \\in r_2). \\end{align} \\] Increasing \u00b6 \\[ \\begin{align} Increasing(S_1, S_2) := OrderPreserving(S_1, S_2) \\cap \\Phi,\\\\ \\Phi = P(LinearOrder(S_1) \\times LinearOrder(S_2) \\times Function(S_1, S_2)). \\end{align} \\] Isomorphism \u00b6 \\[ \\begin{align} Isomorphism(S_1, S_2) := \\{(r_1, r_2, f) \\in \\Phi \\vert \\phi(r_1, r_2, f)\\},\\\\ \\Phi = OrderPreserving(S_1, S_2) \\cap \\\\ P(PartialOrder(S_1) \\times PartialOrder(S_2) \\times Injection(S_1, S_2)),\\\\ \\phi(r_1, r_2, f) = (r_2, r_1, f^{-1}) \\in OrderPreserving(S_2, S_1). \\end{align} \\] Automorphism \u00b6 \\[ \\begin{align} Automorphism(S) = Isomorphism(S, S). \\end{align} \\] WellOrdering \u00b6 \\[ \\begin{align} WellOrdering(S) = \\{ r \\in LinearOrder(S) \\vert \\forall_{P(S)} X (X = \\varnothing \\lor Least(r, X) \\ne \\varnothing) \\}. \\end{align} \\] Lemma1 \u00b6 \\[ \\begin{align} \\forall r_1, r_2 \\in WellOrdering(S) \\forall f \\in Function(S, S)\\\\ ( (r_1, r_2, f) \\in OrderPreserving(S, S) \\to \\forall_S a ((a, f(a)) \\in r_1 \\lor a = f(a)) ). \\end{align} \\] Proof. $$ \\begin{align} W :=& { a \\in S \\vert (f(a), a) \\in r_1 } \\in P(S).\\ (51) \\Rightarrow W =& \\varnothing \\lor Least(r_1, W) \\ne \\varnothing\\ (38) \\Rightarrow W=& \\varnothing \\lor \\exist_W a \\forall_W b ((a, b) \\in r_1 \\lor a = b)\\ (54) \\Rightarrow W=& \\varnothing \\lor \\exist_W a \\forall_W b ((a, b) \\in r_1 \\lor a = b) \\land (f(a), a) \\in r_1\\ =& \\varnothing \\lor \\exist_W a \\forall_W b ((a, b) \\in r_1 \\land (f(a), a) \\in r_1 \\lor a = b \\land (f(a), a) \\in r_1)\\ =& \\varnothing \\lor \\exist_W a ((a, f(a)) \\in r_1 \\land (f(a), a) \\in r_1 \\lor a = f(a) \\land (f(a), a) \\in r_1)\\ =& \\varnothing \\lor \\exist_W a ((a, a) \\in r_1 \\lor (a, a) \\in r_1)\\ (29) W =& \\varnothing. \\end{align} $$ Identity \u00b6 \\[ \\begin{align} Identity(S) = \\{ f \\in Function(S, S) \\vert \\forall_S a ((a, a) \\in f) \\}. \\end{align} \\] Corollary1 \u00b6 \\[ \\begin{align} \\forall r_1, r_2 \\in WellOrdering(S) \\forall (r_1, r_2, f) \\in Automorphism(S) (f = Identity(S)). \\end{align} \\] Proof. \\[ \\begin{align} (53) \\Rightarrow& \\forall (r_1, r_2, f) \\in Automorphism(S) \\phi.\\\\ \\phi :=& \\forall_S a ((a, f(a)) \\in r_1 \\lor a = f(a)) \\land \\forall_S b ((f^{-1}(b), b) \\in r_2 \\lor b = f(b)). \\\\ =& \\forall_S a\\forall_S b((a, f(a))) \\in r_1 \\land b = f(b)) \\lor \\forall_S a\\forall_S b ((f^{-1}(b), b) \\in r_2 \\lor a = f(a)) \\\\ &\\lor \\forall_S a\\forall_S b((a, f(a)) \\in r_1 \\land (b, f^{-1}(b)) \\in r_2) \\lor \\forall_S a \\forall_S b(a = f(a) \\land b = f(b)).\\\\ =& \\forall_S a((a, f(a))) \\in r_1 \\land a = f(a))\\\\ &\\lor \\forall_S a\\forall_S b((a, f(a)) \\in r_1 \\land (b, f^{-1}(b)) \\in r_2)\\\\ &\\lor \\forall_S a \\forall_S b(a = f(a) \\land b = f(b)).\\\\ =&\\forall_S a ((f^{-1}(a), f(f^{-1}(a))) \\in r_1 \\land (f(a), f^{-1}(f(a))) \\in r_2) \\lor \\forall_S a (a = f(a)).\\\\ =& \\forall_S a ((a, f(a)) \\in r_2 \\land (f(a), a) \\in r_2) \\lor \\forall_S a (a = f(a))\\\\ =& \\forall_S a(a = f(a)). \\end{align} \\] Corollary2 \u00b6 \\[ \\begin{align} \\forall r_1 \\in WellOrdering(S_1) \\forall r_2 \\in WellOrdering(S_2)\\\\ \\forall(r_1, r_2, f_1), (r_1, r_2, f_2) \\in Isomorphism(S_1, S_2)(f_1 = f_2). \\end{align} \\] Proof \\[ \\begin{align} (63) \\Rightarrow \\forall_{S_1} a(f^{-1}_2 \\circ f_1 (a) = a) \\Rightarrow \\forall_{S_1} a (f_1(a) = f_2(a)). \\end{align} \\] Initial Segment \u00b6 \\[ \\begin{align} \\forall a \\in S \\forall r \\in WellOrdering(S), InitialSegment(r, a) := \\{b \\in S \\vert (b,a) \\in r\\} \\in P(S). \\end{align} \\] Lemma2 \u00b6 \\[ \\begin{align} \\forall_S a \\forall r_0 \\in WellOrdering(S) ( Isomorphism(S, \\Phi_1) \\cap \\Phi_2 = \\varnothing ),\\\\ \\Phi_1 = InitialSegment(r_0, a),\\\\ \\Phi_2 = \\{r_0\\} \\times PartialOrdering(\\Phi_1) \\times Function(S, \\Phi_1). \\end{align} \\] Proof \\[ \\begin{align} (53) \\Rightarrow& \\forall_S a ((a, f(a)) \\in r_0 \\lor a = f(a))\\\\ \\Rightarrow& \\exist_\\Phi b (b = f(a))\\\\ \\Rightarrow& \\exist_S ((f(a) , a) \\in r_0). (Controdiction.) \\end{align} \\] Theorem1 \u00b6 \\[ \\begin{align} \\forall r_1 \\in WellOrdering(S_1) \\forall r_2 \\in WellOrdering(S_2) ( \\phi_1 \\lor \\phi_2 \\lor \\phi_3 ),\\\\ \\Phi = (\\{r_1\\} \\times \\{r_2\\} \\times Injection(S_1, S_2)),\\\\ \\phi_1 = Isomorphism(S_1, S_2) \\cap_{valid} \\Phi \\ne \\varnothing,\\\\ \\phi_2 = \\exist a \\in S_1 (Isomorphism(InitalSegment(S_1, a), S_2) \\cap_{valid} \\Phi \\ne \\varnothing,\\\\ \\phi_3 = \\exist b \\in S_2 (Isomorphism(S_1, InitalSegment(S_2, b)) \\cap_{valid} \\Phi \\ne \\varnothing,\\\\ \\end{align} \\] Proof. \\[ \\begin{align} r :=& \\{(a, b) \\in S_1 \\times S_2 \\vert \\\\ & Isomorphism(InitialSegment(S_1, a), InitalSegment(S_2, b)) \\cap_{valid} \\Phi \\ne \\varnothing\\}.\\\\ (75) \\Rightarrow& r \\in Function(S_1, S_2) \\lor r = \\varnothing.\\\\ (78) \\Rightarrow& \\forall a_1, a_2 \\in S_1 \\forall b \\in S_2 ((a_1, b) \\in r \\land (a_2, b) \\in r \\to a_1 = a_2)\\\\ \\Rightarrow& r \\in Injection(S_1, S_2) \\lor r = \\varnothing.\\\\ \\end{align} \\] Script Talks \u00b6 SubSet \u00b6 \\[ \\begin{align} h_{subset}(a, b) := h_{forall}(x, h_{imply}(h_{belong}(x, a), h_{belong}(x, b))). \\end{align} \\] EmptySet Axiom \u00b6 \\[ \\begin{align} Axiom_{EmptySet}(a, b) = h_{exist}(a, h_{forall}(b, h_{not}(h_{belong}(b, a)))). \\end{align} \\] \u9700\u8981\u8bc1\u660e \\(h_{subset}(\\varnothing, \\varnothing)\\) \u53ef\u5bfc\u51fa\uff0c\u6216\u8005\u8bf4\u4e3aTrue\uff0c\u5373 \\[ \\begin{align} h_{imply}(h_{forall}(b, h_{not}(h_{belong}(b, a))), h_{subset}(a, a)). \\end{align} \\]","title":"SetTheory"},{"location":"Math/SetTheory/#set-theory","text":"","title":"Set Theory"},{"location":"Math/SetTheory/#axiom-of-set-theory","text":"","title":"Axiom of Set Theory"},{"location":"Math/SetTheory/#extensionality","text":"\\[ \\begin{align} \\forall a \\forall b (\\forall x(x \\in a \\leftrightarrow x\\in b) \\to a = b). \\end{align} \\]","title":"Extensionality"},{"location":"Math/SetTheory/#empty-set","text":"\\[ \\begin{align} \\exists a \\lnot (\\exists x (x \\in a)) \\end{align} \\]","title":"Empty Set"},{"location":"Math/SetTheory/#pairing","text":"\\[ \\begin{align} \\forall a \\forall b \\exists c \\forall x((x = a \\land x = b) \\leftrightarrow x \\in c). \\end{align} \\]","title":"Pairing"},{"location":"Math/SetTheory/#power-set","text":"\\[ \\begin{align} \\forall a \\exists b \\forall x(x \\in b \\leftrightarrow (\\forall y (y \\in x \\rightarrow y \\in a))) \\end{align} \\]","title":"Power Set"},{"location":"Math/SetTheory/#union","text":"\\[ \\begin{align} \\forall a \\exists b \\forall x (x \\in b \\leftrightarrow \\exists y(y \\in a \\land x \\in y)) \\end{align} \\] Denote \\[ \\begin{align} b = \\cup a \\end{align} \\]","title":"Union"},{"location":"Math/SetTheory/#infinity-set","text":"\\[ \\begin{align} \\exists a (\\varnothing \\in a \\land (\\forall x (x \\in a \\to \\cup\\{x, \\{x\\}\\} \\in a))) \\end{align} \\]","title":"Infinity Set"},{"location":"Math/SetTheory/#separation","text":"\\[ \\begin{align} \\forall p [\\forall a \\exists b \\forall x(x \\in b \\leftrightarrow x \\in a \\land \\phi(x, p))] \\end{align} \\]","title":"Separation"},{"location":"Math/SetTheory/#replacement","text":"\\[ \\begin{align} \\forall p [\\forall m \\forall n_1 \\forall n_2 (\\phi(m, n_1, p) = \\phi(m, n_2, p) \\rightarrow n_1 = n_2)]\\\\ \\rightarrow \\forall a \\exists b \\forall y (y \\in b \\leftrightarrow \\exists x (x \\in a \\land \\phi(x, y, p))). \\end{align} \\]","title":"Replacement"},{"location":"Math/SetTheory/#problem","text":"","title":"Problem"},{"location":"Math/SetTheory/#p1","text":"\\[ \\begin{align} \\forall a \\forall b \\forall c \\forall d(\\phi_1(a, b, c, d) \\leftarrow \\phi_2(a, b, c, d)), \\\\ \\phi_1(a, b, c, d) = \\{\\{a\\}, \\{a, b\\}\\} = \\{\\{c\\}, \\{c, d\\}\\},\\\\ \\phi_2(a, b, c, d) = \\leftrightarrow a=c \\land b=d. \\end{align} \\] Proof. \\[ \\begin{align} \\phi_1 \\Rightarrow& (a = c \\rightarrow \\{a\\} = \\{c\\})\\\\ \\phi_1 \\Rightarrow& (b = d \\rightarrow \\{b\\} = \\{d\\})\\\\ \\phi_1 \\Rightarrow& (a = c \\land b=d \\rightarrow \\{a, b\\} = \\{c, d\\})\\\\ \\Rightarrow& (\\{a\\} = \\{c\\} \\land \\{b\\} = \\{d\\} \\land \\{a, b\\} = \\{c, d\\} \\rightarrow \\{\\{a\\}, \\{a, b\\}\\} = \\{\\{c\\}, \\{c, d\\}\\})\\\\ \\Rightarrow& (a=c \\land b = d \\rightarrow\\{\\{a\\}, \\{a, b\\}\\} = \\{\\{c\\}, \\{c, d\\}\\}) \\end{align} \\]","title":"P1"},{"location":"Math/SetTheory/#ordinal-number","text":"","title":"Ordinal Number"},{"location":"Math/SetTheory/#forall-symbols","text":"\\[ \\begin{align} \\forall_X x \\phi = \\forall x (x \\in X \\land \\phi). \\end{align} \\]","title":"Forall Symbols"},{"location":"Math/SetTheory/#function","text":"\\[ \\begin{align} Function(X, Y) := \\{f \\in P(X \\times Y) \\vert \\phi_1(f) \\land \\phi_2(f)\\},\\\\ \\phi_1(f) = \\exists_X x \\exists_Y y ((x, y) \\in f),\\\\ \\phi_2(f) = \\forall_X x \\forall_Y y_1 \\forall_Y y_2 ( (x, y_1) \\in f \\land (x, y_2) \\in f \\to y_1 = y_2 ). \\end{align} \\]","title":"Function"},{"location":"Math/SetTheory/#surjection","text":"\\[ \\begin{align} Surjection(X, Y) := \\{ f \\in Function(X, Y) \\vert \\phi(f) \\}, \\phi(f) = \\forall_Y y \\exist_X x ((x, y) \\in f). \\end{align} \\]","title":"Surjection"},{"location":"Math/SetTheory/#injection","text":"\\[ \\begin{align} Injection(X, Y) := \\{ f \\in Function(X, Y) \\vert \\phi(f) \\},\\\\ \\phi(f) = \\forall_X x_1 \\forall_X x_2 ( f(x_1) = f(x_2) \\to x_1 = x_2 ). \\end{align} \\]","title":"Injection"},{"location":"Math/SetTheory/#inverse-f-1","text":"\\[ \\begin{align} \\{f^{-1}\\} = Inverse(f) = \\{g \\in P(Y \\times X) \\vert \\forall_X x \\forall_Y y((x, y) \\in f \\to (y, x) \\in g)\\}. \\end{align} \\]","title":"Inverse \\(f^{-1}\\)"},{"location":"Math/SetTheory/#bijection","text":"\\[ \\begin{align} Bijection(X, Y) := Injection(X, Y) \\cap Surjection(X, Y). \\end{align} \\]","title":"Bijection"},{"location":"Math/SetTheory/#partial-ordering","text":"\\[ \\begin{align} PartialOrdering(S) := \\{ r \\in P(S \\times S) \\vert \\phi_1(r) \\land \\phi_2(r) \\},\\\\ \\phi_1(r) = \\forall_S a ((a, a) \\notin r),\\\\ \\phi_2(r) = \\forall_S a \\forall_S b \\forall_S c ((a, b) \\in r \\land (b, c) \\in r \\rightarrow (a, c) \\in r). \\end{align} \\]","title":"Partial Ordering"},{"location":"Math/SetTheory/#linear-ordering","text":"\\[ \\begin{align} LinearOrder(S) := \\{r \\in PartialOrdering(S) \\vert \\phi(r)\\},\\\\ \\phi(r)=\\forall_S a \\forall_S b \\{ (a, b) \\in r \\lor (b, a) \\in r \\lor a = b \\}. \\end{align} \\]","title":"Linear Ordering"},{"location":"Math/SetTheory/#max-min-upper-lower-greatest-least-sup-inf-of-x-in-ps","text":"\\[ \\begin{align} Max(r, X) := \\{ a \\in X \\vert \\forall_X b ((a, b) \\notin r) \\}. \\end{align} \\] \\[ \\begin{align} Min(r, X) := \\{ a \\in X \\vert \\forall_X b ((b, a) \\notin r) \\}. \\end{align} \\] \\[ \\begin{align} Upper(r, X) := \\{ a \\in S \\vert \\forall_X b ((b, a) \\in r \\lor a = b) \\}. \\end{align} \\] \\[ \\begin{align} Lower(r, X) := \\{ a \\in S \\vert \\forall_X b ((a, b) \\in r \\lor a = b). \\}. \\end{align} \\] \\[ \\begin{align} Greatest(r, X) := Uppser(r, X) \\cap X. \\end{align} \\] \\[ \\begin{align} Least(r, X) := Lower(r, X) \\cap X. \\end{align} \\] \\[ \\begin{align} Sup(r, X) := Least(r, Upper(r, X)). \\end{align} \\] \\[ \\begin{align} Inf(r, X) := Greatest(r, Lower(r, X)). \\end{align} \\]","title":"{Max, Min, Upper, Lower, Greatest, Least, Sup, Inf} of \\(X \\in P(S)\\)"},{"location":"Math/SetTheory/#orderpreserving","text":"\\[ \\begin{align} OrderPreserving(S_1, S_2) := \\{(r_1, r_2, f) \\in \\Phi \\vert \\phi(r_1, r_2, f)\\},\\\\ \\Phi = P(PartialOrder(S_1) \\times PartialOrder(S_2) \\times Function(S_1, S_2)),\\\\ \\phi(r_1, r_2, f) = \\forall_{S_1} a \\forall_{S_2} b ((a, b) \\in r_1 \\rightarrow (f(a), f(b)) \\in r_2). \\end{align} \\]","title":"OrderPreserving"},{"location":"Math/SetTheory/#increasing","text":"\\[ \\begin{align} Increasing(S_1, S_2) := OrderPreserving(S_1, S_2) \\cap \\Phi,\\\\ \\Phi = P(LinearOrder(S_1) \\times LinearOrder(S_2) \\times Function(S_1, S_2)). \\end{align} \\]","title":"Increasing"},{"location":"Math/SetTheory/#isomorphism","text":"\\[ \\begin{align} Isomorphism(S_1, S_2) := \\{(r_1, r_2, f) \\in \\Phi \\vert \\phi(r_1, r_2, f)\\},\\\\ \\Phi = OrderPreserving(S_1, S_2) \\cap \\\\ P(PartialOrder(S_1) \\times PartialOrder(S_2) \\times Injection(S_1, S_2)),\\\\ \\phi(r_1, r_2, f) = (r_2, r_1, f^{-1}) \\in OrderPreserving(S_2, S_1). \\end{align} \\]","title":"Isomorphism"},{"location":"Math/SetTheory/#automorphism","text":"\\[ \\begin{align} Automorphism(S) = Isomorphism(S, S). \\end{align} \\]","title":"Automorphism"},{"location":"Math/SetTheory/#wellordering","text":"\\[ \\begin{align} WellOrdering(S) = \\{ r \\in LinearOrder(S) \\vert \\forall_{P(S)} X (X = \\varnothing \\lor Least(r, X) \\ne \\varnothing) \\}. \\end{align} \\]","title":"WellOrdering"},{"location":"Math/SetTheory/#lemma1","text":"\\[ \\begin{align} \\forall r_1, r_2 \\in WellOrdering(S) \\forall f \\in Function(S, S)\\\\ ( (r_1, r_2, f) \\in OrderPreserving(S, S) \\to \\forall_S a ((a, f(a)) \\in r_1 \\lor a = f(a)) ). \\end{align} \\] Proof. $$ \\begin{align} W :=& { a \\in S \\vert (f(a), a) \\in r_1 } \\in P(S).\\ (51) \\Rightarrow W =& \\varnothing \\lor Least(r_1, W) \\ne \\varnothing\\ (38) \\Rightarrow W=& \\varnothing \\lor \\exist_W a \\forall_W b ((a, b) \\in r_1 \\lor a = b)\\ (54) \\Rightarrow W=& \\varnothing \\lor \\exist_W a \\forall_W b ((a, b) \\in r_1 \\lor a = b) \\land (f(a), a) \\in r_1\\ =& \\varnothing \\lor \\exist_W a \\forall_W b ((a, b) \\in r_1 \\land (f(a), a) \\in r_1 \\lor a = b \\land (f(a), a) \\in r_1)\\ =& \\varnothing \\lor \\exist_W a ((a, f(a)) \\in r_1 \\land (f(a), a) \\in r_1 \\lor a = f(a) \\land (f(a), a) \\in r_1)\\ =& \\varnothing \\lor \\exist_W a ((a, a) \\in r_1 \\lor (a, a) \\in r_1)\\ (29) W =& \\varnothing. \\end{align} $$","title":"Lemma1"},{"location":"Math/SetTheory/#identity","text":"\\[ \\begin{align} Identity(S) = \\{ f \\in Function(S, S) \\vert \\forall_S a ((a, a) \\in f) \\}. \\end{align} \\]","title":"Identity"},{"location":"Math/SetTheory/#corollary1","text":"\\[ \\begin{align} \\forall r_1, r_2 \\in WellOrdering(S) \\forall (r_1, r_2, f) \\in Automorphism(S) (f = Identity(S)). \\end{align} \\] Proof. \\[ \\begin{align} (53) \\Rightarrow& \\forall (r_1, r_2, f) \\in Automorphism(S) \\phi.\\\\ \\phi :=& \\forall_S a ((a, f(a)) \\in r_1 \\lor a = f(a)) \\land \\forall_S b ((f^{-1}(b), b) \\in r_2 \\lor b = f(b)). \\\\ =& \\forall_S a\\forall_S b((a, f(a))) \\in r_1 \\land b = f(b)) \\lor \\forall_S a\\forall_S b ((f^{-1}(b), b) \\in r_2 \\lor a = f(a)) \\\\ &\\lor \\forall_S a\\forall_S b((a, f(a)) \\in r_1 \\land (b, f^{-1}(b)) \\in r_2) \\lor \\forall_S a \\forall_S b(a = f(a) \\land b = f(b)).\\\\ =& \\forall_S a((a, f(a))) \\in r_1 \\land a = f(a))\\\\ &\\lor \\forall_S a\\forall_S b((a, f(a)) \\in r_1 \\land (b, f^{-1}(b)) \\in r_2)\\\\ &\\lor \\forall_S a \\forall_S b(a = f(a) \\land b = f(b)).\\\\ =&\\forall_S a ((f^{-1}(a), f(f^{-1}(a))) \\in r_1 \\land (f(a), f^{-1}(f(a))) \\in r_2) \\lor \\forall_S a (a = f(a)).\\\\ =& \\forall_S a ((a, f(a)) \\in r_2 \\land (f(a), a) \\in r_2) \\lor \\forall_S a (a = f(a))\\\\ =& \\forall_S a(a = f(a)). \\end{align} \\]","title":"Corollary1"},{"location":"Math/SetTheory/#corollary2","text":"\\[ \\begin{align} \\forall r_1 \\in WellOrdering(S_1) \\forall r_2 \\in WellOrdering(S_2)\\\\ \\forall(r_1, r_2, f_1), (r_1, r_2, f_2) \\in Isomorphism(S_1, S_2)(f_1 = f_2). \\end{align} \\] Proof \\[ \\begin{align} (63) \\Rightarrow \\forall_{S_1} a(f^{-1}_2 \\circ f_1 (a) = a) \\Rightarrow \\forall_{S_1} a (f_1(a) = f_2(a)). \\end{align} \\]","title":"Corollary2"},{"location":"Math/SetTheory/#initial-segment","text":"\\[ \\begin{align} \\forall a \\in S \\forall r \\in WellOrdering(S), InitialSegment(r, a) := \\{b \\in S \\vert (b,a) \\in r\\} \\in P(S). \\end{align} \\]","title":"Initial Segment"},{"location":"Math/SetTheory/#lemma2","text":"\\[ \\begin{align} \\forall_S a \\forall r_0 \\in WellOrdering(S) ( Isomorphism(S, \\Phi_1) \\cap \\Phi_2 = \\varnothing ),\\\\ \\Phi_1 = InitialSegment(r_0, a),\\\\ \\Phi_2 = \\{r_0\\} \\times PartialOrdering(\\Phi_1) \\times Function(S, \\Phi_1). \\end{align} \\] Proof \\[ \\begin{align} (53) \\Rightarrow& \\forall_S a ((a, f(a)) \\in r_0 \\lor a = f(a))\\\\ \\Rightarrow& \\exist_\\Phi b (b = f(a))\\\\ \\Rightarrow& \\exist_S ((f(a) , a) \\in r_0). (Controdiction.) \\end{align} \\]","title":"Lemma2"},{"location":"Math/SetTheory/#theorem1","text":"\\[ \\begin{align} \\forall r_1 \\in WellOrdering(S_1) \\forall r_2 \\in WellOrdering(S_2) ( \\phi_1 \\lor \\phi_2 \\lor \\phi_3 ),\\\\ \\Phi = (\\{r_1\\} \\times \\{r_2\\} \\times Injection(S_1, S_2)),\\\\ \\phi_1 = Isomorphism(S_1, S_2) \\cap_{valid} \\Phi \\ne \\varnothing,\\\\ \\phi_2 = \\exist a \\in S_1 (Isomorphism(InitalSegment(S_1, a), S_2) \\cap_{valid} \\Phi \\ne \\varnothing,\\\\ \\phi_3 = \\exist b \\in S_2 (Isomorphism(S_1, InitalSegment(S_2, b)) \\cap_{valid} \\Phi \\ne \\varnothing,\\\\ \\end{align} \\] Proof. \\[ \\begin{align} r :=& \\{(a, b) \\in S_1 \\times S_2 \\vert \\\\ & Isomorphism(InitialSegment(S_1, a), InitalSegment(S_2, b)) \\cap_{valid} \\Phi \\ne \\varnothing\\}.\\\\ (75) \\Rightarrow& r \\in Function(S_1, S_2) \\lor r = \\varnothing.\\\\ (78) \\Rightarrow& \\forall a_1, a_2 \\in S_1 \\forall b \\in S_2 ((a_1, b) \\in r \\land (a_2, b) \\in r \\to a_1 = a_2)\\\\ \\Rightarrow& r \\in Injection(S_1, S_2) \\lor r = \\varnothing.\\\\ \\end{align} \\]","title":"Theorem1"},{"location":"Math/SetTheory/#script-talks","text":"","title":"Script Talks"},{"location":"Math/SetTheory/#subset","text":"\\[ \\begin{align} h_{subset}(a, b) := h_{forall}(x, h_{imply}(h_{belong}(x, a), h_{belong}(x, b))). \\end{align} \\]","title":"SubSet"},{"location":"Math/SetTheory/#emptyset-axiom","text":"\\[ \\begin{align} Axiom_{EmptySet}(a, b) = h_{exist}(a, h_{forall}(b, h_{not}(h_{belong}(b, a)))). \\end{align} \\] \u9700\u8981\u8bc1\u660e \\(h_{subset}(\\varnothing, \\varnothing)\\) \u53ef\u5bfc\u51fa\uff0c\u6216\u8005\u8bf4\u4e3aTrue\uff0c\u5373 \\[ \\begin{align} h_{imply}(h_{forall}(b, h_{not}(h_{belong}(b, a))), h_{subset}(a, a)). \\end{align} \\]","title":"EmptySet Axiom"},{"location":"RL/basis/01-MarkovChains/","text":"\u9a6c\u5c14\u79d1\u592b\u94fe \u00b6 \u9a6c\u5c14\u53ef\u592b\u94fe\u662f\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u968f\u673a\u8fc7\u7a0b\u4e2d\u7684\u6570\u5b66\u6a21\u578b\u3002 \u5b83\u975e\u5e38\u7b80\u6d01\u3001\u7b26\u5408\u76f4\u89c9\u6027\u4ee5\u53ca\u8db3\u591f\u5f3a\u5927\uff0c\u8ba9\u4eba\u4e00\u5ea6\u89c9\u5f97\u5b83\u53ef\u4ee5\u63cf\u8ff0\u6574\u4e2a\u4e16\u754c\u7684\u4e8b\u4ef6\u3002 \u8fd9\u91cc\u5927\u5bb6\u5e94\u8be5\u80fd\u60f3\u5230\u5f53\u5e74\u7ecf\u5178\u529b\u5b66\u53d1\u5c55\u5230\u9876\u5cf0\u7684\u65f6\u5019\uff0c\u4eba\u4eec\u4e00\u5ea6\u4ee5\u4e3a\uff1a \u53ea\u8981\u5bf9\u73b0\u6709\u4e16\u754c\u5efa\u6a21\u591f\u51c6\uff0c\u5c31\u80fd\u591f\u7cbe\u51c6\u5730\u9884\u6d4b\u672a\u6765\u3002 \u6b63\u5982\u7ecf\u5178\u529b\u5b66\u5730\u5c40\u9650\u6027\uff0c\u9a6c\u5c14\u79d1\u592b\u94fe\u4e5f\u4e0d\u662f\u4e00\u4e2a\u4e07\u80fd\u7684\u968f\u673a\u8fc7\u7a0b\u6a21\u578b\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u4eba\u7c7b\u7684\u5927\u8111\u662f\u600e\u4e48\u5efa\u6a21\u8fd9\u4e2a\u4e16\u754c\u7684\u5462\uff1f \u5982\u679c\u6211\u4eec\u7684\u5927\u8111\u5c31\u662f\u628a\u8fd9\u4e2a\u4e16\u754c\u7b80\u5316\u6210\u9a6c\u5c14\u53ef\u592b\u94fe\u5462\uff1f \u90a3\u4e48\u662f\u4e0d\u662f\u610f\u5473\u7740\u667a\u80fd\u8db3\u591f\u5728\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u5efa\u6a21\u5f97\u4e16\u754c\u4e0a\u4ea7\u751f\uff1f \u8fd9\u4e2a\u5047\u8bbe\u9f13\u52b1\u4e86\u6211\u4eec\u5bf9\u5f3a\u5316\u5b66\u4e60\u7684\u7814\u7a76,\u6211\u76f8\u4fe1\u5f3a\u5316\u5b66\u4e60\u662f\u4eba\u5de5\u667a\u80fd\u7684\u91cd\u8981\u4e00\u73af\u3002 \u5b9a\u4e49 \u00b6 \u6211\u4eec\u76ee\u524d\u53ea\u6d89\u53ca\u79bb\u6563\u7684\u968f\u673a\u8fc7\u7a0b\uff0c\u65f6\u95f4\u88ab\u5206\u5272\u6210\u81ea\u7136\u6570\u5e8f\u5217 \\([0, 1, 2, \\ldots]\\) \uff0c \u6bcf\u4e2a\u65f6\u95f4\u70b9\u6709\u4e00\u4e2a\u968f\u673a\u53d8\u91cf \\(S_t\\) , \u90a3\u4e48\u56e0\u4e3a\u65f6\u95f4\u7ef4\u5ea6\u7684\u7279\u6b8a\u6027\uff0c \u8fd9\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u8fc7\u7a0b \\((S_0, S_1, S_2, \\ldots)\\) \u3002 \u8fd9\u4e2a\u968f\u673a\u8fc7\u7a0b\u7684\u6837\u672c\u7a7a\u95f4\u662f\u4e00\u4e2a\u6982\u7387\u7a7a\u95f4\uff0c\u5373\u6bcf\u4e2a\u6837\u672c\u670d\u4ece\u67d0\u4e2a\u6982\u7387\u5206\u5e03 \\((s_0, s_1, s_2, \\ldots) \\sim p\\) \u3002 \u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u628a\u6bcf\u4e2a\u6837\u672c\u5f20\u6210\u4e00\u4e2a\u7ef4\u5ea6\u975e\u5e38\u9ad8\u7684\u5411\u91cf\uff0c\u9000\u5316\u6210\u67d0\u79cd\u76d1\u7763\u5b66\u4e60\u6216\u8005\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u95ee\u9898\u3002 \u4f46\u662f\uff0c\u5f53\u6211\u4eec\u5148\u9a8c\u6027\u5730\u7ed9\u6570\u636e\u8d4b\u4e88 \u8fc7\u7a0b \u8fd9\u79cd\u5148\u9a8c\u7ed3\u6784\u4fe1\u606f\uff0c\u6211\u4eec\u4e5f\u5c31\u589e\u52a0\u4e86\u66f4\u591a\u7684\u64cd\u4f5c\u7a7a\u95f4\u3002 \u8fc7\u7a0b \u5c31\u662f\u67d0\u79cd\u6982\u7387\u56fe\uff0c\u6982\u7387\u9010\u5c42\u4f20\u9012\uff0c\u5373\u6211\u4eec\u8ba4\u4e3a \\(S_t\\) \u7684\u968f\u673a\u53d8\u91cf\u7531 \\((S_0, S_1, \\ldots, S_{t-1})\\) \u51b3\u5b9a\uff1a \\[ \\tag{1} p(S_t) = p(S_t \\vert S_{t-1} = s_{t-1}\uff0c S_{t-2} = s_{t-2}, \\ldots, S_{0} = s_{0}). \\] \u800c\u9a6c\u5c14\u53ef\u592b\u94fe\u5c31\u662f\u66f4\u8fdb\u4e00\u6b65\u7b80\u5316\u7248\u7684\u968f\u673a\u8fc7\u7a0b\u3002 \u5b9a\u4e49 ( \u9a6c\u5c14\u79d1\u592b\u94fe ). \u79bb\u6563\u968f\u673a\u8fc7\u7a0b\u53eb\u505a\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u8868\u793a\uff1a \\[ \\tag{2} p(S_t \\vert S_{t-1} = s_{t-1}\uff0c S_{t-2} = s_{t-2}, \\ldots, S_{0} = s_{0}) = p(S_t \\vert S_{t-1} = s_{t-1}). \\] \u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u524d\u65f6\u523b\u7684\u968f\u673a\u53d8\u91cf\u53ea\u4e0e\u524d\u4e00\u65f6\u523b\u7684\u968f\u673a\u53d8\u91cf\u6709\u5173\u3002 \u6211\u4eec\u5047\u8bbe \\(S_t\\) \u968f\u673a\u53d8\u91cf\u90fd\u662f\u5728\u96c6\u5408 \\(\\mathcal{S}\\) \u4e0a\uff0c\u90a3\u4e48\u9a6c\u5c14\u53ef\u592b\u94fe\u5c31\u662f\u4e00\u4e2a\u6d4b\u5ea6\u7a7a\u95f4\uff0c \\[ \\tag{3} \\mathcal{MC} = \\{\\Omega = \\{\\tau = (s_0, s_1, \\ldots, s_t, \\ldots) \\vert s_t \\in \\mathcal{S}\\}, \\Delta(\\Omega)\\}, \\] \u5176\u4e2d \\(\\Delta(\\Omega)\\) \u8868\u793a\u5728\u96c6\u5408 \\(\\Omega\\) \u4e0a\u7684\u5206\u5e03\uff0c\u5e76\u4e14 \\(p(\\tau) = p_0(s_0) \\prod^{\\infty}_{t = 0}p(s_{t+1} \\vert s_t)\\) \u3002 \u6240\u4ee5\uff0c\u8868\u793a\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u94fe\u53ef\u4ee5\u7b80\u5316\u4e3a \\[ \\tag{4} \\mathcal{MC} = (\\mathcal{S}, p_0, p). \\] \u5982\u679c \\(\\mathcal{S}\\) \u662f\u53ef\u6570\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u77e9\u9635 \\(\\mathbf{P}\\) : \\[\\begin{equation*} \\tag{5} \\mathbf{P} = \\begin{bmatrix} p(s1 \\vert s1) & p(s2 \\vert s1) & \\cdots & p(sn \\vert s1) & \\cdots \\\\ p(s1 \\vert s2) & p(s2 \\vert s2) & \\cdots & p(sn \\vert s2) & \\cdots \\\\ \\vdots & \\vdots & \\ddots & \\vdots & \\ddots \\\\ p(sn \\vert sn) & p(s2 \\vert sn) & \\cdots & p(sn \\vert sn) & \\cdots \\\\ \\vdots & \\vdots & \\ddots & \\vdots & \\ddots \\end{bmatrix}, \\end{equation*}\\] \u6ce8\u610f \\(\\mathbf{P} \\pmb{1} = \\pmb{1}\\) \u3002 \u7a33\u5b9a\u5206\u5e03(Stationary Distribution) \u00b6 \u5728\u8fd9\u4e00\u8282\uff0c\u6211\u4eec\u5206\u4eab\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u94fe\u4e2d\u7684\u91cd\u8981\u7ed3\u8bba\u3002 \u5b9a\u7406 ( Perron-Frobenius theorem ) If a matrix \\(\\mathbf{A}\\) is irreducible 1 , then \\(\\mathbf{A}\\) has a positive real eigenvalue \\(\\lambda_{\\max}\\) such that all other eigenvalues of \\(\\mathbf{A}\\) satisfy \\(\\vert \\lambda \\vert < \\lambda_{\\max}\\) . Furthermore, \\(\\lambda_{\\max}\\) has algebraic 2 and geometric 3 multiplicity one, and has an eigenvector \\(\\mathbf{x}\\) with \\(\\mathbf{x} \\succ 0\\) . Any nonnegative eigenvector is a multiper of \\(\\mathbf{x}\\) . \u56e0\u4e3a\u72b6\u6001\u8f6c\u79fb\u77e9\u9635 \\(\\mathbf{P} \\mathbf{1} = \\mathbf{1}\\) \u3002 \u5982\u679c\u9a6c\u5c14\u79d1\u592b\u94fe\u662f \\(irreducible\\) \u4ee5\u53ca \\(aperiodical\\) \u7684\uff08\u6ee1\u8db3\u4e0a\u9762\u5b9a\u7406\u7684\u8981\u6c42\uff09\uff0c\u90a3\u4e48 1 \u662f \\(\\mathbf{P}\\) \u7684\u7279\u5f81\u503c\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u8981\u8bc1\u660e\u5b83\u7684\u6700\u5927\u7279\u5f81\u503c\u662f1\u3002 \u9996\u5148\u5b83\u7684\u7279\u5f81\u503c \\(\\lambda\\) \u6ee1\u8db3 \\[ \\mathbf{P} \\mathbf{z} = \\lambda \\mathbf{z}, \\] \u90a3\u4e48 \\[ \\sum^{}_{j} p_{kj} z_j = \\lambda z_k, \\] \u5176\u4e2d \\(z_k\\) \u662f \\(\\mathbf{z}\\) \u4e2d\u7684\u6700\u5927\u5206\u91cf\u3002 \u6240\u4ee5 \\[ \\vert \\lambda z_k \\vert = \\vert \\sum^{}_{j} p_{kj} z_j \\vert \\le \\sum^{}_{j} p_{kj} \\vert z_j \\vert \\le \\sum^{}_{j} p_{kj} \\vert z_k \\vert \\le \\vert z_k \\vert, \\] \u6240\u4ee5 \\(\\vert \\lambda \\vert \\le 1\\) \u3002 \u56e0\u4e3a \\(\\mathbf{P}^T\\) \u7684\u7279\u5f81\u503c\u548c \\(\\mathbf{P}\\) \u76f8\u540c, \u6240\u4ee5 \\(\\mathbf{P}^T\\) \u7684\u6700\u5927\u7279\u5f81\u503c\u662f1, \u5b83\u4e5f\u5b58\u5728\u552f\u4e00\u7684\u7279\u5f81\u503c \\(\\pmb{\\pi}\\) \u6ee1\u8db3 \\(\\mathbf{P}^T \\pmb{\\pi} = \\pmb{\\pi}\\) \u3002 \u6211\u4eec\u79f0 \\(\\mathbf{\\pi}\\) \u662f\u9a6c\u5c14\u53ef\u592b\u94fe\u7684**\u7a33\u5b9a\u5206\u5e03**\u3002\u6211\u4eec\u4e3a\u4ec0\u4e48\u53eb\u5b83\u662f\u7a33\u5b9a\u5206\u5e03\u5462\uff1f \u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f\u7684\u521d\u59cb\u5206\u5e03 \\(\\mathbf{p}_0\\) , \u6211\u4eec\u5b9a\u4e49 \\(\\mathbf{p}_{\\infty} = \\lim_{k \\rightarrow \\infty} (\\mathbf{P}^T)^k \\mathbf{p}_0\\) , \u90a3\u4e48 \\(\\mathbf{p}_{\\infty} = \\mathbf{P}^T \\mathbf{p}_{\\infty}\\) \u3002 \u56e0\u4e3a\u7279\u5f81\u503c\u7684\u552f\u4e00\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(\\mathbf{p}_{\\infty} = \\pmb{\\pi}\\) \u3002 \\(\\mathbf{A}\\) is called irreducible if for any i, j there is \\(k_{ij}\\) such that \\((\\mathbf{A}^k)_{ij} > 0\\) . \u21a9 Algebraic multiplicity is the number of times an eigenvalue appears in a characteristic polynomial of a matrix. \u21a9 Geometric multiplicity is the nullity of \\(\\mathbf{I} - \\lambda \\mathbf{A}\\) . \u21a9","title":"Markov Chains"},{"location":"RL/basis/01-MarkovChains/#_1","text":"\u9a6c\u5c14\u53ef\u592b\u94fe\u662f\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u968f\u673a\u8fc7\u7a0b\u4e2d\u7684\u6570\u5b66\u6a21\u578b\u3002 \u5b83\u975e\u5e38\u7b80\u6d01\u3001\u7b26\u5408\u76f4\u89c9\u6027\u4ee5\u53ca\u8db3\u591f\u5f3a\u5927\uff0c\u8ba9\u4eba\u4e00\u5ea6\u89c9\u5f97\u5b83\u53ef\u4ee5\u63cf\u8ff0\u6574\u4e2a\u4e16\u754c\u7684\u4e8b\u4ef6\u3002 \u8fd9\u91cc\u5927\u5bb6\u5e94\u8be5\u80fd\u60f3\u5230\u5f53\u5e74\u7ecf\u5178\u529b\u5b66\u53d1\u5c55\u5230\u9876\u5cf0\u7684\u65f6\u5019\uff0c\u4eba\u4eec\u4e00\u5ea6\u4ee5\u4e3a\uff1a \u53ea\u8981\u5bf9\u73b0\u6709\u4e16\u754c\u5efa\u6a21\u591f\u51c6\uff0c\u5c31\u80fd\u591f\u7cbe\u51c6\u5730\u9884\u6d4b\u672a\u6765\u3002 \u6b63\u5982\u7ecf\u5178\u529b\u5b66\u5730\u5c40\u9650\u6027\uff0c\u9a6c\u5c14\u79d1\u592b\u94fe\u4e5f\u4e0d\u662f\u4e00\u4e2a\u4e07\u80fd\u7684\u968f\u673a\u8fc7\u7a0b\u6a21\u578b\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u4eba\u7c7b\u7684\u5927\u8111\u662f\u600e\u4e48\u5efa\u6a21\u8fd9\u4e2a\u4e16\u754c\u7684\u5462\uff1f \u5982\u679c\u6211\u4eec\u7684\u5927\u8111\u5c31\u662f\u628a\u8fd9\u4e2a\u4e16\u754c\u7b80\u5316\u6210\u9a6c\u5c14\u53ef\u592b\u94fe\u5462\uff1f \u90a3\u4e48\u662f\u4e0d\u662f\u610f\u5473\u7740\u667a\u80fd\u8db3\u591f\u5728\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u5efa\u6a21\u5f97\u4e16\u754c\u4e0a\u4ea7\u751f\uff1f \u8fd9\u4e2a\u5047\u8bbe\u9f13\u52b1\u4e86\u6211\u4eec\u5bf9\u5f3a\u5316\u5b66\u4e60\u7684\u7814\u7a76,\u6211\u76f8\u4fe1\u5f3a\u5316\u5b66\u4e60\u662f\u4eba\u5de5\u667a\u80fd\u7684\u91cd\u8981\u4e00\u73af\u3002","title":"\u9a6c\u5c14\u79d1\u592b\u94fe"},{"location":"RL/basis/01-MarkovChains/#_2","text":"\u6211\u4eec\u76ee\u524d\u53ea\u6d89\u53ca\u79bb\u6563\u7684\u968f\u673a\u8fc7\u7a0b\uff0c\u65f6\u95f4\u88ab\u5206\u5272\u6210\u81ea\u7136\u6570\u5e8f\u5217 \\([0, 1, 2, \\ldots]\\) \uff0c \u6bcf\u4e2a\u65f6\u95f4\u70b9\u6709\u4e00\u4e2a\u968f\u673a\u53d8\u91cf \\(S_t\\) , \u90a3\u4e48\u56e0\u4e3a\u65f6\u95f4\u7ef4\u5ea6\u7684\u7279\u6b8a\u6027\uff0c \u8fd9\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u8fc7\u7a0b \\((S_0, S_1, S_2, \\ldots)\\) \u3002 \u8fd9\u4e2a\u968f\u673a\u8fc7\u7a0b\u7684\u6837\u672c\u7a7a\u95f4\u662f\u4e00\u4e2a\u6982\u7387\u7a7a\u95f4\uff0c\u5373\u6bcf\u4e2a\u6837\u672c\u670d\u4ece\u67d0\u4e2a\u6982\u7387\u5206\u5e03 \\((s_0, s_1, s_2, \\ldots) \\sim p\\) \u3002 \u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u628a\u6bcf\u4e2a\u6837\u672c\u5f20\u6210\u4e00\u4e2a\u7ef4\u5ea6\u975e\u5e38\u9ad8\u7684\u5411\u91cf\uff0c\u9000\u5316\u6210\u67d0\u79cd\u76d1\u7763\u5b66\u4e60\u6216\u8005\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u95ee\u9898\u3002 \u4f46\u662f\uff0c\u5f53\u6211\u4eec\u5148\u9a8c\u6027\u5730\u7ed9\u6570\u636e\u8d4b\u4e88 \u8fc7\u7a0b \u8fd9\u79cd\u5148\u9a8c\u7ed3\u6784\u4fe1\u606f\uff0c\u6211\u4eec\u4e5f\u5c31\u589e\u52a0\u4e86\u66f4\u591a\u7684\u64cd\u4f5c\u7a7a\u95f4\u3002 \u8fc7\u7a0b \u5c31\u662f\u67d0\u79cd\u6982\u7387\u56fe\uff0c\u6982\u7387\u9010\u5c42\u4f20\u9012\uff0c\u5373\u6211\u4eec\u8ba4\u4e3a \\(S_t\\) \u7684\u968f\u673a\u53d8\u91cf\u7531 \\((S_0, S_1, \\ldots, S_{t-1})\\) \u51b3\u5b9a\uff1a \\[ \\tag{1} p(S_t) = p(S_t \\vert S_{t-1} = s_{t-1}\uff0c S_{t-2} = s_{t-2}, \\ldots, S_{0} = s_{0}). \\] \u800c\u9a6c\u5c14\u53ef\u592b\u94fe\u5c31\u662f\u66f4\u8fdb\u4e00\u6b65\u7b80\u5316\u7248\u7684\u968f\u673a\u8fc7\u7a0b\u3002 \u5b9a\u4e49 ( \u9a6c\u5c14\u79d1\u592b\u94fe ). \u79bb\u6563\u968f\u673a\u8fc7\u7a0b\u53eb\u505a\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u8868\u793a\uff1a \\[ \\tag{2} p(S_t \\vert S_{t-1} = s_{t-1}\uff0c S_{t-2} = s_{t-2}, \\ldots, S_{0} = s_{0}) = p(S_t \\vert S_{t-1} = s_{t-1}). \\] \u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u524d\u65f6\u523b\u7684\u968f\u673a\u53d8\u91cf\u53ea\u4e0e\u524d\u4e00\u65f6\u523b\u7684\u968f\u673a\u53d8\u91cf\u6709\u5173\u3002 \u6211\u4eec\u5047\u8bbe \\(S_t\\) \u968f\u673a\u53d8\u91cf\u90fd\u662f\u5728\u96c6\u5408 \\(\\mathcal{S}\\) \u4e0a\uff0c\u90a3\u4e48\u9a6c\u5c14\u53ef\u592b\u94fe\u5c31\u662f\u4e00\u4e2a\u6d4b\u5ea6\u7a7a\u95f4\uff0c \\[ \\tag{3} \\mathcal{MC} = \\{\\Omega = \\{\\tau = (s_0, s_1, \\ldots, s_t, \\ldots) \\vert s_t \\in \\mathcal{S}\\}, \\Delta(\\Omega)\\}, \\] \u5176\u4e2d \\(\\Delta(\\Omega)\\) \u8868\u793a\u5728\u96c6\u5408 \\(\\Omega\\) \u4e0a\u7684\u5206\u5e03\uff0c\u5e76\u4e14 \\(p(\\tau) = p_0(s_0) \\prod^{\\infty}_{t = 0}p(s_{t+1} \\vert s_t)\\) \u3002 \u6240\u4ee5\uff0c\u8868\u793a\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u94fe\u53ef\u4ee5\u7b80\u5316\u4e3a \\[ \\tag{4} \\mathcal{MC} = (\\mathcal{S}, p_0, p). \\] \u5982\u679c \\(\\mathcal{S}\\) \u662f\u53ef\u6570\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u77e9\u9635 \\(\\mathbf{P}\\) : \\[\\begin{equation*} \\tag{5} \\mathbf{P} = \\begin{bmatrix} p(s1 \\vert s1) & p(s2 \\vert s1) & \\cdots & p(sn \\vert s1) & \\cdots \\\\ p(s1 \\vert s2) & p(s2 \\vert s2) & \\cdots & p(sn \\vert s2) & \\cdots \\\\ \\vdots & \\vdots & \\ddots & \\vdots & \\ddots \\\\ p(sn \\vert sn) & p(s2 \\vert sn) & \\cdots & p(sn \\vert sn) & \\cdots \\\\ \\vdots & \\vdots & \\ddots & \\vdots & \\ddots \\end{bmatrix}, \\end{equation*}\\] \u6ce8\u610f \\(\\mathbf{P} \\pmb{1} = \\pmb{1}\\) \u3002","title":"\u5b9a\u4e49"},{"location":"RL/basis/01-MarkovChains/#stationary-distribution","text":"\u5728\u8fd9\u4e00\u8282\uff0c\u6211\u4eec\u5206\u4eab\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u94fe\u4e2d\u7684\u91cd\u8981\u7ed3\u8bba\u3002 \u5b9a\u7406 ( Perron-Frobenius theorem ) If a matrix \\(\\mathbf{A}\\) is irreducible 1 , then \\(\\mathbf{A}\\) has a positive real eigenvalue \\(\\lambda_{\\max}\\) such that all other eigenvalues of \\(\\mathbf{A}\\) satisfy \\(\\vert \\lambda \\vert < \\lambda_{\\max}\\) . Furthermore, \\(\\lambda_{\\max}\\) has algebraic 2 and geometric 3 multiplicity one, and has an eigenvector \\(\\mathbf{x}\\) with \\(\\mathbf{x} \\succ 0\\) . Any nonnegative eigenvector is a multiper of \\(\\mathbf{x}\\) . \u56e0\u4e3a\u72b6\u6001\u8f6c\u79fb\u77e9\u9635 \\(\\mathbf{P} \\mathbf{1} = \\mathbf{1}\\) \u3002 \u5982\u679c\u9a6c\u5c14\u79d1\u592b\u94fe\u662f \\(irreducible\\) \u4ee5\u53ca \\(aperiodical\\) \u7684\uff08\u6ee1\u8db3\u4e0a\u9762\u5b9a\u7406\u7684\u8981\u6c42\uff09\uff0c\u90a3\u4e48 1 \u662f \\(\\mathbf{P}\\) \u7684\u7279\u5f81\u503c\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u8981\u8bc1\u660e\u5b83\u7684\u6700\u5927\u7279\u5f81\u503c\u662f1\u3002 \u9996\u5148\u5b83\u7684\u7279\u5f81\u503c \\(\\lambda\\) \u6ee1\u8db3 \\[ \\mathbf{P} \\mathbf{z} = \\lambda \\mathbf{z}, \\] \u90a3\u4e48 \\[ \\sum^{}_{j} p_{kj} z_j = \\lambda z_k, \\] \u5176\u4e2d \\(z_k\\) \u662f \\(\\mathbf{z}\\) \u4e2d\u7684\u6700\u5927\u5206\u91cf\u3002 \u6240\u4ee5 \\[ \\vert \\lambda z_k \\vert = \\vert \\sum^{}_{j} p_{kj} z_j \\vert \\le \\sum^{}_{j} p_{kj} \\vert z_j \\vert \\le \\sum^{}_{j} p_{kj} \\vert z_k \\vert \\le \\vert z_k \\vert, \\] \u6240\u4ee5 \\(\\vert \\lambda \\vert \\le 1\\) \u3002 \u56e0\u4e3a \\(\\mathbf{P}^T\\) \u7684\u7279\u5f81\u503c\u548c \\(\\mathbf{P}\\) \u76f8\u540c, \u6240\u4ee5 \\(\\mathbf{P}^T\\) \u7684\u6700\u5927\u7279\u5f81\u503c\u662f1, \u5b83\u4e5f\u5b58\u5728\u552f\u4e00\u7684\u7279\u5f81\u503c \\(\\pmb{\\pi}\\) \u6ee1\u8db3 \\(\\mathbf{P}^T \\pmb{\\pi} = \\pmb{\\pi}\\) \u3002 \u6211\u4eec\u79f0 \\(\\mathbf{\\pi}\\) \u662f\u9a6c\u5c14\u53ef\u592b\u94fe\u7684**\u7a33\u5b9a\u5206\u5e03**\u3002\u6211\u4eec\u4e3a\u4ec0\u4e48\u53eb\u5b83\u662f\u7a33\u5b9a\u5206\u5e03\u5462\uff1f \u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f\u7684\u521d\u59cb\u5206\u5e03 \\(\\mathbf{p}_0\\) , \u6211\u4eec\u5b9a\u4e49 \\(\\mathbf{p}_{\\infty} = \\lim_{k \\rightarrow \\infty} (\\mathbf{P}^T)^k \\mathbf{p}_0\\) , \u90a3\u4e48 \\(\\mathbf{p}_{\\infty} = \\mathbf{P}^T \\mathbf{p}_{\\infty}\\) \u3002 \u56e0\u4e3a\u7279\u5f81\u503c\u7684\u552f\u4e00\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(\\mathbf{p}_{\\infty} = \\pmb{\\pi}\\) \u3002 \\(\\mathbf{A}\\) is called irreducible if for any i, j there is \\(k_{ij}\\) such that \\((\\mathbf{A}^k)_{ij} > 0\\) . \u21a9 Algebraic multiplicity is the number of times an eigenvalue appears in a characteristic polynomial of a matrix. \u21a9 Geometric multiplicity is the nullity of \\(\\mathbf{I} - \\lambda \\mathbf{A}\\) . \u21a9","title":"\u7a33\u5b9a\u5206\u5e03(Stationary Distribution)"},{"location":"RL/basis/02-MDPs/","text":"\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b(Markov Decision Processes) \u00b6 \u9a6c\u5c14\u79d1\u592b\u94fe\u53ea\u662f\u7816\u5934\uff0c\u771f\u6b63\u5f3a\u5927\u7684\u662f\u8fd9\u4e9b\u7816\u5934\u642d\u8d77\u6765\u7684\u6a21\u578b\uff0c\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u3002 \u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u88ab\u7528\u5728\u5f88\u591a\u9886\u57df\uff0c\u5f3a\u5316\u5b66\u4e60\u53ea\u662f\u5176\u4e2d\u4e4b\u4e00\u3002 \u53ef\u4ee5\u8bf4\u5f3a\u5316\u5b66\u4e60\u53ea\u662f\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u95ee\u9898(Markov Decision Problem)\u7684\u4e00\u7cfb\u5217\u6c42\u89e3\u65b9\u6cd5\u7684\u603b\u548c\u3002 \u5b9a\u4e49 \u00b6 \u6211\u4eec\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u3002 \u9996\u5148\u6211\u4eec\u5f15\u5165\u4e24\u4e2a\u96c6\u5408 \u72b6\u6001(state)\u96c6\u5408\uff1a \\(\\mathcal{S} = \\{s1, s2, \\ldots, sn, \\ldots\\}\\) ; \u52a8\u4f5c(action)\u96c6\u5408\uff1a \\(\\mathcal{A} = \\{a1, a2, \\ldots, an, \\ldots\\}\\) . \u9996\u5148\uff0c\u8fd9\u4e24\u4e2a\u96c6\u5408\u7684\u5143\u7d20 \\(s\\) , \\(a\\) \u90fd\u662f\u5411\u91cf\uff0c\u8fd9\u91cc\u6211\u5077\u61d2\uff0c\u6ca1\u6709\u52a0\u7c97\u8868\u793a\u3002 \u6709\u4e86\u8fd9\u4e24\u4e2a\u96c6\u5408\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6570\u5b66\u4e0a\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u7b56\u7565(policy)\u51fd\u6570\uff1a \\[ \\tag{1} \\label{policyfuncion} \\pi:\\mathcal{S} \\rightarrow \\{\\Delta(\\mathcal{A})\\}, \\] \u5176\u4e2d \\(\\Delta(\\mathcal{A})\\) \u8868\u793a\u5728\u96c6\u5408 \\(\\mathcal{A}\\) \u4e0a\u7684\u6982\u7387\u5206\u5e03\u3002 \u56e0\u4e3a\u8fd9\u4e2a\u52a8\u4f5c\u6982\u7387\u5206\u5e03\u53ea\u548c\u5f53\u524d\u7684\u72b6\u6001\u6709\u5173\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b56\u7565\u51fd\u6570\u4e5f\u662f\u975e\u5e38\u7279\u6b8a\u7684\uff0c \u6211\u628a\u5b83\u53eb\u505a\u9a6c\u5c14\u53ef\u592b\u7b56\u7565\u3002 \u5b9a\u4e49 (\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b).\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06**\u7b56\u7565\u51fd\u6570\u7a7a\u95f4**\u6620\u5c04\u5230\u4e00\u4e2a**\u9a6c\u5c14\u79d1\u592b\u94fe**\u3002 \\[ \\tag{2} \\label{MDPs} \\mathcal{MDP}: \\{\\pi\\} \\rightarrow \\{\\mathcal{MC} = \\{\\mathcal{S} \\times \\mathcal{A}, p_0[(s_0, a_0)], p[(s_{t+1}, a_{t+1}) \\vert (s_t, a_t)] \\}\\}. \\] \u5f53\u7136\uff0c\u5728\u4e00\u4e9b\u7b80\u5355\u95ee\u9898\u4e0a\uff0c\u7b56\u7565\u51fd\u6570\u7a7a\u95f4\u548c\u9a6c\u5c14\u79d1\u592b\u94fe\u90fd\u53ef\u4ee5\u5f20\u6210\u5411\u91cf\u7a7a\u95f4\uff0c\u628a\u6a21\u578b\u8f6c\u6362\u4e3a\u666e\u901a\u6570\u5b66\u6a21\u578b\u3002\u4f46\u662f\u5373\u4fbf\u662f\u7b80\u5355\u95ee\u9898\uff0c\u8fd9\u79cd\u505a\u6cd5\u4f9d\u65e7\u628a\u628a\u5f88\u591a\u7ed3\u6784\u4fe1\u606f\u7ed9\u4e22\u6389\u4e86\u3002 \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u5305\u542b\u7684\u9a6c\u5c14\u79d1\u592b\u94fe\u7684\u72b6\u6001\u96c6\u5408\u662f \\(\\mathcal{S} \\times \\mathcal{A}\\) \uff0c\u5b83\u7684\u72b6\u6001\u8f6c\u79fb\u6982\u7387\u6ee1\u8db3\uff1a \\[ \\tag{3} p_\\pi [(s_{t+1}, a_{t+1}) \\vert (s_{t}, a_{t})] = \\pi(a_{t+1} \\vert s_{t+1}) p(s_{t+1} \\vert s_t, a_t). \\] \u5230\u6b64\uff0c\u6211\u4eec\u5176\u5b9e\u5df2\u7ecf\u5b9a\u4e49\u5b8c\u4e86\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u4f46\u662f\u4ece\u5e7f\u4e49\u6765\u770b\uff0c\u6211\u4eec\u53ea\u662f\u8d70\u5b8c\u4e86\u4e00\u534a\u7684\u8def\u7a0b\u3002 \u73b0\u5728\u6211\u4eec\u9700\u8981\u4e00\u4e2a \u76ee\u6807 \uff0c\u6216\u8005\u8bf4\u4e00\u4e2a \u95ee\u9898 \u3002 \u8981\u83b7\u5f97\u4e00\u4e2a\u76ee\u6807\u6216\u8005\u95ee\u9898\uff0c\u6211\u4eec\u9996\u5148\u8981\u8bc4\u4ef7\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u94fe\u7684\u597d\u574f\u3002 \u6709\u4e86\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u597d\u574f\uff0c\u6211\u4eec\u5c31\u80fd\u8bc4\u4ef7\u5bf9\u5e94\u7684\u7b56\u7565\u51fd\u6570\u7684\u597d\u574f\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u83b7\u5f97\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u6c42\u6700\u4f18\u7684\u7b56\u7565\u51fd\u6570\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u8bc4\u4ef7\u6807\u51c6\uff0c\u9a6c\u5c14\u53ef\u592b\u5956\u52b1\u51fd\u6570\uff1a \\[ \\tag{4} \\label{RewardFunction} R(s, a) = \\Delta(\\mathbb{R}), \\] \u8fd9\u91cc\uff0c\u5956\u52b1\u503c\u53ea\u548c\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u5f53\u524d\u72b6\u6001\u6709\u5173\uff0c\u6bcf\u4e2a\u72b6\u6001\u5bf9\u5e94\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u3002 \u901a\u5e38\uff0c\u5728\u5176\u4ed6\u6587\u732e\u4e2d\uff0c\u8fd9\u91cc\u7684\u968f\u673a\u53d8\u91cf\u53ea\u4f1a\u53d6\u5230\u67d0\u4e00\u4e2a\u503c\uff0c\u5e76\u4e14\u8981\u6c42\u6240\u6709\u7684\u503c\u90fd\u6ee1\u8db3\u6709\u4e0a\u754c \\(R_{\\max}\\) \uff0c\u5373\u4ece\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u9000\u5316\u6210\u4e00\u4e2a\u4e00\u7ef4\u7684\u666e\u901a\u53d8\u91cf\u3002 \u6211\u4eec\u8fd9\u91cc\u628a\u5b83\u6cdb\u5316\uff0c\u8981\u6c42\u6240\u6709\u968f\u673a\u53d8\u91cf\u7684\u671f\u671b\u6ee1\u8db3\u6709\u4e0a\u754c \\(R_{\\max}\\) \u3002 \u5956\u52b1\u51fd\u6570\u7684\u542b\u4e49\u662f\uff1a\u5f53\u51fa\u73b0\u72b6\u6001 \\((s, a)\\) \u65f6\uff0c\u5956\u52b1\u51fd\u6570\u7ed9\u4e88\u6211\u4eec\u8fd9\u4e2a\u72b6\u6001\u6b63\u9762\u8bc4\u4ef7\u7684\u7a0b\u5ea6\u3002 \u5956\u52b1\u51fd\u6570\u628a\u9a6c\u5c14\u79d1\u592b\u94fe\u6620\u5c04\u6210\u4e86\u7684\u4e00\u4e2a\u6837\u672c \\[ \\tag{5} \\tau = (s_0, a_0, s_1, a_1, \\ldots, s_t, a_t, \\ldots) \\] \u6620\u5c04\u6210\u4e86\u4e00\u4e2a\u6570\u5217 \\[ \\tag{6} (r_0 \\sim R(s_0, a_0), r_1 \\sim R(s_1, a_1), \\ldots, r_t(s_t, a_t), \\ldots), \\] \u5e76\u4e14\u5b83\u662f\u4e00\u4e2a\u9690\u9a6c\u5c14\u53ef\u592b\u94fe\u3002 \u4f46\u662f\u6211\u4eec\u5982\u4f55\u8bc4\u4ef7\u4e00\u4e2a\u6570\u5217\u662f\u597d\u662f\u574f\uff1f\u65e2\u7136\u8fd9\u65f6\u4e00\u4e2a\u6b63\u9762\u8bc4\u4ef7\u6570\u5217\uff0c\u90a3\u4e48\u4e00\u4e2a\u6700\u76f4\u89c9\u7684\u60f3\u6cd5\u662f\uff1a\u6211\u4eec\u5e0c\u671b\u79ef\u7d2f\u7684\u6b63\u9762\u8bc4\u4ef7\u8d8a\u5927\u8d8a\u597d\u3002 \u6211\u8fd9\u91cc\u76f4\u63a5\u4ecb\u7ecd\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u4e2d\u6700\u5e38\u7528\u7684\u4e00\u4e2a\u79ef\u7d2f\u51fd\u6570(accumulated reward function): \\[ \\tag{7} V_{\\gamma}(r_0, r_1, \\ldots, r_t, \\ldots) = \\lim_{T \\rightarrow \\infty} \\frac{\\sum_{t = 0}^{T-1} \\gamma^t r(s_t, a_t)}{\\sum^{T-1}_{t=0} \\gamma^t}, \\] \u5176\u4e2d \\(\\gamma \\in [0, 1]\\) \u3002\u5f53 \\(\\gamma < 1\\) \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u5f0f\u7b80\u5316\u4e3a \\[ \\tag{8} V_{\\gamma}(r_0, r_1, \\ldots, r_t, \\ldots) = (1 - \\gamma) \\sum^{\\infty}_{t = 0} \\gamma^t r(s_t, a_t). \\] \u81f3\u6b64\uff0c\u6211\u4eec\u6700\u7ec8\u83b7\u5f97\u4e86\u4e00\u4e2a\u7b56\u7565\u51fd\u6570\u7684\u8bc4\u4ef7\u51fd\u6570\uff1a \\[ \\tag{9} \\rho(\\pi) = \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi), r \\sim R} \\left\\{(1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^t r(s_t, a_t)\\right\\}. \\] \u5b9a\u4e49 (\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u95ee\u9898, Markov Decision Problem). \u5bf9\u4e8e\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u6211\u4eec\u9700\u8981\u6c42\u89e3\u5b83\u7684\u6700\u4f18\u7b56\u7565: \\[ \\tag{10} \\pi^* \\in {\\arg\\max}_{\\pi} \\rho(\\pi). \\] \u603b\u7ed3\u4e00\u4e0b\uff0c\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u95ee\u9898\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u5143\u7ec4\u8868\u793a\uff1a \\[ \\tag{11} \\label{MDProblems} \\mathcal{MDP} = \\{\\mathcal{S}, \\mathcal{A}, p_0(s), p(s' \\vert s, a), R(s, a), \\lambda\\}. \\] \u8fd9\u91cc\u8fd8\u8981\u8865\u5145\u4e24\u4e2a\u5728\u5f3a\u5316\u5b66\u4e60\u4e2d\u975e\u5e38\u5e38\u7528\u7684\u51fd\u6570\u3002 \u7b2c\u4e00\u4e2a\u662f \u72b6\u6001\u4ef7\u503c\u51fd\u6570 : \\[ \\tag{12} V_{\\pi}(s) = \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi), r \\sim R} \\left[\\sum^{\\infty}_{t = 0} \\gamma^t r(s_t, a_t) \\big\\vert s_0 = s\\right]. \\] \u5b83\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u9a6c\u5c14\u79d1\u592b\u94fe \\(\\mathcal{MDP}(\\pi)\\) \u4e2d\uff0c\u6837\u672c\u5f00\u5934 \\(s_0 = s\\) \u7684\u5b50\u7a7a\u95f4\uff08\u4f9d\u65e7\u662f\u4e2a\u9a6c\u5c14\u79d1\u592b\u94fe\uff09\u7684\u5956\u52b1\u671f\u671b\u3002 \u7b2c\u4e8c\u4e2a\u662f \u72b6\u6001\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 : \\[ \\tag{13} Q_{\\pi}(s, a) = \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi), r \\sim R} \\left[\\sum^{\\infty}_{t = 0} \\gamma^t r(s_t, a_t) \\big\\vert s_0 = s, a_0 = a\\right]. \\] \u5b83\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u9a6c\u5c14\u79d1\u592b\u94fe \\(\\mathcal{MDP}(\\pi)\\) \u4e2d\uff0c\u6837\u672c\u5f00\u5934 \\((s_0, a_0) = (s, a)\\) \u7684\u5b50\u7a7a\u95f4\uff08\u4f9d\u65e7\u662f\u4e2a\u9a6c\u5c14\u79d1\u592b\u94fe\uff09\u7684\u5956\u52b1\u671f\u671b\u3002 \u8fd9\u91cc\u9700\u8981\u7406\u89e3\u4e00\u4e0b\uff1a \\(p_0\\) \u5728 \\(s\\) \u4e0a\u7684\u6982\u7387\u4e3a0\uff0c\u4f46\u662f\u8fd9\u4e2a\u5b50\u7a7a\u95f4\u4f9d\u65e7\u5b58\u5728\uff1b\u540c\u6837\u7684 \\((s, a)\\) \u5f00\u5934\u7684\u6837\u672c\u5728 \\(\\mathcal{MDP}(\\pi)\\) \u4e2d\u7684\u6982\u7387\u53ef\u80fd\u4e3a0\uff0c\u4f46\u662f\u5bf9\u5e94\u7684\u5b50\u7a7a\u95f4\u4f9d\u65e7\u5b58\u5728\u3002","title":"Markov Decision Processes"},{"location":"RL/basis/02-MDPs/#markov-decision-processes","text":"\u9a6c\u5c14\u79d1\u592b\u94fe\u53ea\u662f\u7816\u5934\uff0c\u771f\u6b63\u5f3a\u5927\u7684\u662f\u8fd9\u4e9b\u7816\u5934\u642d\u8d77\u6765\u7684\u6a21\u578b\uff0c\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u3002 \u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u88ab\u7528\u5728\u5f88\u591a\u9886\u57df\uff0c\u5f3a\u5316\u5b66\u4e60\u53ea\u662f\u5176\u4e2d\u4e4b\u4e00\u3002 \u53ef\u4ee5\u8bf4\u5f3a\u5316\u5b66\u4e60\u53ea\u662f\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u95ee\u9898(Markov Decision Problem)\u7684\u4e00\u7cfb\u5217\u6c42\u89e3\u65b9\u6cd5\u7684\u603b\u548c\u3002","title":"\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b(Markov Decision Processes)"},{"location":"RL/basis/02-MDPs/#_1","text":"\u6211\u4eec\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u3002 \u9996\u5148\u6211\u4eec\u5f15\u5165\u4e24\u4e2a\u96c6\u5408 \u72b6\u6001(state)\u96c6\u5408\uff1a \\(\\mathcal{S} = \\{s1, s2, \\ldots, sn, \\ldots\\}\\) ; \u52a8\u4f5c(action)\u96c6\u5408\uff1a \\(\\mathcal{A} = \\{a1, a2, \\ldots, an, \\ldots\\}\\) . \u9996\u5148\uff0c\u8fd9\u4e24\u4e2a\u96c6\u5408\u7684\u5143\u7d20 \\(s\\) , \\(a\\) \u90fd\u662f\u5411\u91cf\uff0c\u8fd9\u91cc\u6211\u5077\u61d2\uff0c\u6ca1\u6709\u52a0\u7c97\u8868\u793a\u3002 \u6709\u4e86\u8fd9\u4e24\u4e2a\u96c6\u5408\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6570\u5b66\u4e0a\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u7b56\u7565(policy)\u51fd\u6570\uff1a \\[ \\tag{1} \\label{policyfuncion} \\pi:\\mathcal{S} \\rightarrow \\{\\Delta(\\mathcal{A})\\}, \\] \u5176\u4e2d \\(\\Delta(\\mathcal{A})\\) \u8868\u793a\u5728\u96c6\u5408 \\(\\mathcal{A}\\) \u4e0a\u7684\u6982\u7387\u5206\u5e03\u3002 \u56e0\u4e3a\u8fd9\u4e2a\u52a8\u4f5c\u6982\u7387\u5206\u5e03\u53ea\u548c\u5f53\u524d\u7684\u72b6\u6001\u6709\u5173\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b56\u7565\u51fd\u6570\u4e5f\u662f\u975e\u5e38\u7279\u6b8a\u7684\uff0c \u6211\u628a\u5b83\u53eb\u505a\u9a6c\u5c14\u53ef\u592b\u7b56\u7565\u3002 \u5b9a\u4e49 (\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b).\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06**\u7b56\u7565\u51fd\u6570\u7a7a\u95f4**\u6620\u5c04\u5230\u4e00\u4e2a**\u9a6c\u5c14\u79d1\u592b\u94fe**\u3002 \\[ \\tag{2} \\label{MDPs} \\mathcal{MDP}: \\{\\pi\\} \\rightarrow \\{\\mathcal{MC} = \\{\\mathcal{S} \\times \\mathcal{A}, p_0[(s_0, a_0)], p[(s_{t+1}, a_{t+1}) \\vert (s_t, a_t)] \\}\\}. \\] \u5f53\u7136\uff0c\u5728\u4e00\u4e9b\u7b80\u5355\u95ee\u9898\u4e0a\uff0c\u7b56\u7565\u51fd\u6570\u7a7a\u95f4\u548c\u9a6c\u5c14\u79d1\u592b\u94fe\u90fd\u53ef\u4ee5\u5f20\u6210\u5411\u91cf\u7a7a\u95f4\uff0c\u628a\u6a21\u578b\u8f6c\u6362\u4e3a\u666e\u901a\u6570\u5b66\u6a21\u578b\u3002\u4f46\u662f\u5373\u4fbf\u662f\u7b80\u5355\u95ee\u9898\uff0c\u8fd9\u79cd\u505a\u6cd5\u4f9d\u65e7\u628a\u628a\u5f88\u591a\u7ed3\u6784\u4fe1\u606f\u7ed9\u4e22\u6389\u4e86\u3002 \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u5305\u542b\u7684\u9a6c\u5c14\u79d1\u592b\u94fe\u7684\u72b6\u6001\u96c6\u5408\u662f \\(\\mathcal{S} \\times \\mathcal{A}\\) \uff0c\u5b83\u7684\u72b6\u6001\u8f6c\u79fb\u6982\u7387\u6ee1\u8db3\uff1a \\[ \\tag{3} p_\\pi [(s_{t+1}, a_{t+1}) \\vert (s_{t}, a_{t})] = \\pi(a_{t+1} \\vert s_{t+1}) p(s_{t+1} \\vert s_t, a_t). \\] \u5230\u6b64\uff0c\u6211\u4eec\u5176\u5b9e\u5df2\u7ecf\u5b9a\u4e49\u5b8c\u4e86\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u4f46\u662f\u4ece\u5e7f\u4e49\u6765\u770b\uff0c\u6211\u4eec\u53ea\u662f\u8d70\u5b8c\u4e86\u4e00\u534a\u7684\u8def\u7a0b\u3002 \u73b0\u5728\u6211\u4eec\u9700\u8981\u4e00\u4e2a \u76ee\u6807 \uff0c\u6216\u8005\u8bf4\u4e00\u4e2a \u95ee\u9898 \u3002 \u8981\u83b7\u5f97\u4e00\u4e2a\u76ee\u6807\u6216\u8005\u95ee\u9898\uff0c\u6211\u4eec\u9996\u5148\u8981\u8bc4\u4ef7\u4e00\u4e2a\u9a6c\u5c14\u79d1\u592b\u94fe\u7684\u597d\u574f\u3002 \u6709\u4e86\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u597d\u574f\uff0c\u6211\u4eec\u5c31\u80fd\u8bc4\u4ef7\u5bf9\u5e94\u7684\u7b56\u7565\u51fd\u6570\u7684\u597d\u574f\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u83b7\u5f97\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u6c42\u6700\u4f18\u7684\u7b56\u7565\u51fd\u6570\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u8bc4\u4ef7\u6807\u51c6\uff0c\u9a6c\u5c14\u53ef\u592b\u5956\u52b1\u51fd\u6570\uff1a \\[ \\tag{4} \\label{RewardFunction} R(s, a) = \\Delta(\\mathbb{R}), \\] \u8fd9\u91cc\uff0c\u5956\u52b1\u503c\u53ea\u548c\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u5f53\u524d\u72b6\u6001\u6709\u5173\uff0c\u6bcf\u4e2a\u72b6\u6001\u5bf9\u5e94\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u3002 \u901a\u5e38\uff0c\u5728\u5176\u4ed6\u6587\u732e\u4e2d\uff0c\u8fd9\u91cc\u7684\u968f\u673a\u53d8\u91cf\u53ea\u4f1a\u53d6\u5230\u67d0\u4e00\u4e2a\u503c\uff0c\u5e76\u4e14\u8981\u6c42\u6240\u6709\u7684\u503c\u90fd\u6ee1\u8db3\u6709\u4e0a\u754c \\(R_{\\max}\\) \uff0c\u5373\u4ece\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u9000\u5316\u6210\u4e00\u4e2a\u4e00\u7ef4\u7684\u666e\u901a\u53d8\u91cf\u3002 \u6211\u4eec\u8fd9\u91cc\u628a\u5b83\u6cdb\u5316\uff0c\u8981\u6c42\u6240\u6709\u968f\u673a\u53d8\u91cf\u7684\u671f\u671b\u6ee1\u8db3\u6709\u4e0a\u754c \\(R_{\\max}\\) \u3002 \u5956\u52b1\u51fd\u6570\u7684\u542b\u4e49\u662f\uff1a\u5f53\u51fa\u73b0\u72b6\u6001 \\((s, a)\\) \u65f6\uff0c\u5956\u52b1\u51fd\u6570\u7ed9\u4e88\u6211\u4eec\u8fd9\u4e2a\u72b6\u6001\u6b63\u9762\u8bc4\u4ef7\u7684\u7a0b\u5ea6\u3002 \u5956\u52b1\u51fd\u6570\u628a\u9a6c\u5c14\u79d1\u592b\u94fe\u6620\u5c04\u6210\u4e86\u7684\u4e00\u4e2a\u6837\u672c \\[ \\tag{5} \\tau = (s_0, a_0, s_1, a_1, \\ldots, s_t, a_t, \\ldots) \\] \u6620\u5c04\u6210\u4e86\u4e00\u4e2a\u6570\u5217 \\[ \\tag{6} (r_0 \\sim R(s_0, a_0), r_1 \\sim R(s_1, a_1), \\ldots, r_t(s_t, a_t), \\ldots), \\] \u5e76\u4e14\u5b83\u662f\u4e00\u4e2a\u9690\u9a6c\u5c14\u53ef\u592b\u94fe\u3002 \u4f46\u662f\u6211\u4eec\u5982\u4f55\u8bc4\u4ef7\u4e00\u4e2a\u6570\u5217\u662f\u597d\u662f\u574f\uff1f\u65e2\u7136\u8fd9\u65f6\u4e00\u4e2a\u6b63\u9762\u8bc4\u4ef7\u6570\u5217\uff0c\u90a3\u4e48\u4e00\u4e2a\u6700\u76f4\u89c9\u7684\u60f3\u6cd5\u662f\uff1a\u6211\u4eec\u5e0c\u671b\u79ef\u7d2f\u7684\u6b63\u9762\u8bc4\u4ef7\u8d8a\u5927\u8d8a\u597d\u3002 \u6211\u8fd9\u91cc\u76f4\u63a5\u4ecb\u7ecd\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u4e2d\u6700\u5e38\u7528\u7684\u4e00\u4e2a\u79ef\u7d2f\u51fd\u6570(accumulated reward function): \\[ \\tag{7} V_{\\gamma}(r_0, r_1, \\ldots, r_t, \\ldots) = \\lim_{T \\rightarrow \\infty} \\frac{\\sum_{t = 0}^{T-1} \\gamma^t r(s_t, a_t)}{\\sum^{T-1}_{t=0} \\gamma^t}, \\] \u5176\u4e2d \\(\\gamma \\in [0, 1]\\) \u3002\u5f53 \\(\\gamma < 1\\) \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u5f0f\u7b80\u5316\u4e3a \\[ \\tag{8} V_{\\gamma}(r_0, r_1, \\ldots, r_t, \\ldots) = (1 - \\gamma) \\sum^{\\infty}_{t = 0} \\gamma^t r(s_t, a_t). \\] \u81f3\u6b64\uff0c\u6211\u4eec\u6700\u7ec8\u83b7\u5f97\u4e86\u4e00\u4e2a\u7b56\u7565\u51fd\u6570\u7684\u8bc4\u4ef7\u51fd\u6570\uff1a \\[ \\tag{9} \\rho(\\pi) = \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi), r \\sim R} \\left\\{(1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^t r(s_t, a_t)\\right\\}. \\] \u5b9a\u4e49 (\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u95ee\u9898, Markov Decision Problem). \u5bf9\u4e8e\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u6211\u4eec\u9700\u8981\u6c42\u89e3\u5b83\u7684\u6700\u4f18\u7b56\u7565: \\[ \\tag{10} \\pi^* \\in {\\arg\\max}_{\\pi} \\rho(\\pi). \\] \u603b\u7ed3\u4e00\u4e0b\uff0c\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u95ee\u9898\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u5143\u7ec4\u8868\u793a\uff1a \\[ \\tag{11} \\label{MDProblems} \\mathcal{MDP} = \\{\\mathcal{S}, \\mathcal{A}, p_0(s), p(s' \\vert s, a), R(s, a), \\lambda\\}. \\] \u8fd9\u91cc\u8fd8\u8981\u8865\u5145\u4e24\u4e2a\u5728\u5f3a\u5316\u5b66\u4e60\u4e2d\u975e\u5e38\u5e38\u7528\u7684\u51fd\u6570\u3002 \u7b2c\u4e00\u4e2a\u662f \u72b6\u6001\u4ef7\u503c\u51fd\u6570 : \\[ \\tag{12} V_{\\pi}(s) = \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi), r \\sim R} \\left[\\sum^{\\infty}_{t = 0} \\gamma^t r(s_t, a_t) \\big\\vert s_0 = s\\right]. \\] \u5b83\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u9a6c\u5c14\u79d1\u592b\u94fe \\(\\mathcal{MDP}(\\pi)\\) \u4e2d\uff0c\u6837\u672c\u5f00\u5934 \\(s_0 = s\\) \u7684\u5b50\u7a7a\u95f4\uff08\u4f9d\u65e7\u662f\u4e2a\u9a6c\u5c14\u79d1\u592b\u94fe\uff09\u7684\u5956\u52b1\u671f\u671b\u3002 \u7b2c\u4e8c\u4e2a\u662f \u72b6\u6001\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 : \\[ \\tag{13} Q_{\\pi}(s, a) = \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi), r \\sim R} \\left[\\sum^{\\infty}_{t = 0} \\gamma^t r(s_t, a_t) \\big\\vert s_0 = s, a_0 = a\\right]. \\] \u5b83\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u9a6c\u5c14\u79d1\u592b\u94fe \\(\\mathcal{MDP}(\\pi)\\) \u4e2d\uff0c\u6837\u672c\u5f00\u5934 \\((s_0, a_0) = (s, a)\\) \u7684\u5b50\u7a7a\u95f4\uff08\u4f9d\u65e7\u662f\u4e2a\u9a6c\u5c14\u79d1\u592b\u94fe\uff09\u7684\u5956\u52b1\u671f\u671b\u3002 \u8fd9\u91cc\u9700\u8981\u7406\u89e3\u4e00\u4e0b\uff1a \\(p_0\\) \u5728 \\(s\\) \u4e0a\u7684\u6982\u7387\u4e3a0\uff0c\u4f46\u662f\u8fd9\u4e2a\u5b50\u7a7a\u95f4\u4f9d\u65e7\u5b58\u5728\uff1b\u540c\u6837\u7684 \\((s, a)\\) \u5f00\u5934\u7684\u6837\u672c\u5728 \\(\\mathcal{MDP}(\\pi)\\) \u4e2d\u7684\u6982\u7387\u53ef\u80fd\u4e3a0\uff0c\u4f46\u662f\u5bf9\u5e94\u7684\u5b50\u7a7a\u95f4\u4f9d\u65e7\u5b58\u5728\u3002","title":"\u5b9a\u4e49"},{"location":"RL/basis/03-PolicyEvaluation/","text":"Policy Evaluation \u00b6 \u8981\u89e3\u51b3\u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u95ee\u9898\uff0c\u6211\u4eec\u9996\u5148\u8981\u89e3\u51b3\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u7b56\u7565\u51fd\u6570 \\(\\pi\\) , \u90a3\u4e48\u5bf9\u5e94\u7684\u5956\u52b1\u503c \\(\\rho(\\pi)\\) \u662f\u591a\u5c11\u3002 \u6211\u4eec\u628a\u8fd9\u4e2a\u95ee\u9898\u53eb\u505a \u7b56\u7565\u4f30\u8ba1 (Policy Evaluation)\u3002 \u6211\u4eec\u9996\u5148\u6839\u636e \\(Q_\\pi\\) \u7684\u5b9a\u4e49\u53ef\u4ee5\u7b80\u5316 \\(\\rho(\\pi)\\) \u4e3a\uff1a \\[ \\tag{1} \\rho(\\pi) = \\mathbb{E}_{(s, a) \\sim p_0(s) \\pi(a \\vert s)}[Q_\\pi(s, a)]. \\] \u56e0\u6b64\uff0c\u6211\u4eec\u8981\u5bf9\u7b56\u7565\u7684\u597d\u574f\u8fdb\u884c\u4f30\u8ba1\uff0c\u6211\u4eec\u53ef\u4ee5\u8f6c\u800c\u5148\u6c42\u51fa\u51fd\u6570 \\(Q_\\pi(s, a)\\) \u3002 \u6211\u4eec\u5b9a\u4e49 \\(\\bar{r} = \\mathbb{E}_{r \\sim R} [r]\\) \u3002\u63a5\u7740\uff0c\u6211\u4ecb\u7ecd\u51fd\u6570 \\(Q\\) \u7684\u4e00\u4e2a\u7279\u6027\uff1a \\[ \\tag{2} Q_{\\pi} (s, a) = \\bar{r}(s, a) + \\gamma \\int_{s_1, a_1} p(s_1 \\vert s, a) \\pi(a_1 \\vert s_1) Q_{\\pi}(s_1, a_1) \\mathrm{d} s_1 \\mathrm{d} a_1. \\] \u8bc1\u660e \\[\\begin{align*} & Q_\\pi(s, a) \\\\ =& \\bar{r}(s, a) + \\gamma \\int_{s_1, a_1} p(s_1 \\vert s, a) \\pi(a_1 \\vert s_1)\\bar{r}(s_1, a_1) \\mathrm{d} s_1 \\mathrm{d} a_1 \\\\ & + \\gamma^2 \\int_{s_1, a_1}\\int_{s_2, a_2} p(s_1 \\vert s, a) \\pi(a_1 \\vert s_1) \\\\ & \\cdot p(s_2 \\vert s_1, a_1) \\pi(a_2 \\vert s_2) \\bar{r}(s_2, a_2) \\mathrm{d} s_2 \\mathrm{d} a_2 \\mathrm{d} s_1 \\mathrm{d} a_2 \\\\ & \\vdots \\\\ =& \\bar{r}(s, a) + \\gamma \\int_{s_1, a_1} p(s_1 \\vert s, a) \\pi(a_1 \\vert s_1) Q(s_1, a_1) \\mathrm{d} s_1 \\mathrm{d} a_1. \\end{align*}\\] \u6211\u4eec\u5df2\u7ecf\u975e\u5e38\u63a5\u8fd1\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u7684\u91cd\u8981\u7684\u6982\u5ff5 \u8d1d\u5c14\u66fc\u64cd\u4f5c (Bellman Operator) \u548c \u8d1d\u5c14\u66fc\u7b49\u5f0f (Bellman Equation)\u3002 \u5b9a\u4e49 (\u8d1d\u5c14\u66fc\u64cd\u4f5c)\u3002\u5bf9\u4e8e\u4efb\u610f\u7684\u51fd\u6570\uff08\u6216\u8005\u5411\u91cf\uff09 \\(Q \\in \\mathbb{R}^{\\vert \\mathcal{S} \\times \\mathcal{A} \\vert}\\) \uff0c \u6211\u4eec\u53ef\u4ee5\u505a\u5982\u4e0b\u64cd\u4f5c: \\(\\forall (s, a) \\in \\mathcal{S}\\times\\mathcal{A}\\) , \\[ \\tag{3} T_{\\pi} Q (s,a) = \\bar{r}(s, a) + \\gamma \\int_{s', a'} p(s' \\vert s, a) \\pi(a' \\vert s') Q(s', a') \\mathrm{d} s' \\mathrm{d} a'. \\] \u8fd9\u91cc\u7684 \\(T\\) \u662f\u67d0\u79cd\u53d8\u6362\uff0c \\(T_{\\pi}Q\\) \u5bf9\u5e94 \\(Q\\) \u7ecf\u8fc7 \\(T\\) \u53d8\u6362\u540e\u7684\u65b0\u7684\u51fd\u6570\u3002 \u8981\u5f15\u51fa\u8d1d\u5c14\u66fc\u7b49\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e00\u4e2a\u6570\u5b66\u5b9a\u7406Banach\u4e0d\u52a8\u70b9\u5b9a\u7406\u3002 \u5b9a\u7406 (Banach\u4e0d\u52a8\u70b9\u5b9a\u7406)\u3002\u5982\u679c \\(U\\) \u662f\u4e00\u4e2aBanach\u7a7a\u95f4\uff0c\u5e76\u4e14 \\(T:U\\rightarrow U\\) \u662f\u4e00\u4e2a\u6536\u7f29\u6620\u5c04\uff0c\u5b83\u7684\u6536\u7f29\u56e0\u5b50\u662f \\(\\gamma \\in (0, 1)\\) \u3002\u90a3\u4e48 \u5728\u7a7a\u95f4 \\(U\\) \u4e2d\uff0c\u5b58\u5728\u552f\u4e00\u7684\u7684\u4e0d\u52a8\u70b9 \\(\\mathbf{v}^*\\) \u6ee1\u8db3 \\(T\\mathbf{v}^* = \\mathbf{v}^{*}\\) ; \u5728\u7a7a\u95f4 \\(U\\) \u4e2d\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\u70b9 \\(\\mathbf{v}^0\\) , \u4ee5\u53ca\u9012\u63a8\u516c\u5f0f \\(\\mathbf{v}^{n+1} = T\\mathbf{v}^{n}\\) \uff0c\u90a3\u4e48 \\(\\lim_{n \\rightarrow \\infty} \\mathbf{v}^{n} = \\lim_{n \\rightarrow \\infty} T^{n} \\mathbf{v}^0 = \\mathbf{v}^{*}.\\) . \u4e5f\u5c31\u662f\u8bf4\uff0c\u4efb\u610f\u70b9\u7ecf\u8fc7\u591a\u6b21T\u7684\u6536\u7f29\u6620\u5c04\uff0c\u6211\u4eec\u80fd\u591f\u6536\u655b\u5230\u4e0d\u52a8\u70b9 \\(\\mathbf{v}^*\\) . \u8fd9\u91cc\u6536\u7f29\u6620\u5c04\u7684\u610f\u601d\u662f\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\mathbf{v}, \\mathbf{u} \\in U\\) \uff0c\u6ee1\u8db3 \\(\\Vert T\\mathbf{v} - T\\mathbf{u} \\Vert \\le \\gamma \\Vert \\mathbf{v} - \\mathbf{u} \\Vert\\) \u3002 \u8bc1\u660e \u9996\u5148\u8bc1\u660e \\(\\{\\mathbf{v}_n\\}\\) \u662f\u4e00\u4e2a\u67ef\u897f\u5e8f\u5217\uff1a \\[\\begin{align*} \\forall m \\ge 1,\\quad &\\Arrowvert \\mathbf{v}^{n+m} - \\mathbf{v}^n \\Arrowvert\\\\ \\le& \\sum^{m-1}_{k=0} \\Arrowvert \\mathbf{v}^{n+k+1} - \\mathbf{v}^{n+k} \\Arrowvert\\\\ =& \\sum^{m-1}_{k=0} \\Arrowvert T^{n+k} \\mathbf{v} ^1 - T^{n+k} \\mathbf{v}^{0} \\Arrowvert\\\\ \\le& \\sum^{m-1}_{k=0} \\lambda^{n+k} \\Arrowvert \\mathbf{v}^1 - \\mathbf{v}^{0} \\Arrowvert\\\\ =& \\frac{\\lambda^n (1-\\lambda^m) }{(1-\\lambda)} \\Arrowvert \\mathbf{v}^1 - \\mathbf{v}^0 \\Arrowvert. \\end{align*}\\] \u53c8\u56e0\u4e3a\u7a7a\u95f4 \\(U\\) \u662f\u5b8c\u5168\u96c6\uff0c\u6240\u4ee5 \\(\\mathbf{v}^\\infty\\) \u4e5f\u5728\u7a7a\u95f4 \\(U\\) \u4e2d\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u8bc1\u660e \\(\\mathbf{v}^{\\infty}\\) \u662f\u6536\u7f29\u6620\u5c04 \\(T\\) \u7684\u56fa\u5b9a\u70b9\u3002 \\[\\begin{align*} 0 \\le& \\Arrowvert T \\mathbf{v}^\\infty - \\mathbf{v}^\\infty \\Arrowvert \\\\ \\le& \\Arrowvert T \\mathbf{v}^\\infty - \\mathbf{v}^n \\Arrowvert + \\Arrowvert \\mathbf{v}^n - \\mathbf{v}^\\infty \\Arrowvert \\\\ =& \\Arrowvert T\\mathbf{v}^\\infty - T\\mathbf{v}^{n-1} \\Arrowvert + \\Arrowvert \\mathbf{v}^n - \\mathbf{v}^\\infty \\Arrowvert\\\\ \\le& \\lambda \\Arrowvert \\mathbf{v}^\\infty - \\mathbf{v}^{n-1} \\Arrowvert + \\Arrowvert \\mathbf{v}^n - \\mathbf{v}^\\infty \\Arrowvert \\overset{n \\rightarrow \\infty}{\\longrightarrow} 0. \\end{align*}\\] \u6700\u540e\uff0c\u6211\u4eec\u8bc1\u660e\u6536\u7f29\u6620\u5c04\u7684\u4e0d\u52a8\u70b9\u552f\u4e00\u3002\u6211\u4eec\u5047\u8bbe\u6536\u7f29\u6620\u5c04\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u4e0d\u52a8\u70b9 \\(\\mathbf{u}\\) \u548c \\(\\mathbf{v}\\) \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u5f97\uff1a \\[ \\Arrowvert \\mathbf{u}^* - \\mathbf{v}^* \\Arrowvert = \\Arrowvert T\\mathbf{u}^* - T\\mathbf{v}^* \\Arrowvert \\le \\lambda \\Arrowvert \\mathbf{u}^* - \\mathbf{v}^* \\Arrowvert \\Rightarrow \\mathbf{u}^* = \\mathbf{v}^*. \\] \u8fd9\u4e0b\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u4ecb\u7ecd\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u4e2d\u7684\u975e\u5e38\u91cd\u8981\u7684\u7b49\u5f0f\uff0c \u8d1d\u5c14\u66fc\u7b49\u5f0f : \u5b9a\u7406 (\u8d1d\u5c14\u66fc\u7b49\u5f0f)\u3002 \\(Q_\\pi\\) \u662f\u8d1d\u5c14\u66fc\u53d8\u6362\u552f\u4e00\u7684\u4e0d\u52a8\u70b9\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684 \\((s, a)\\) \u6ee1\u8db3 \\[ \\tag{4} Q_\\pi(s, a) = T_{\\pi}Q_{\\pi} (s, a). \\] \u8bc1\u660e \u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bc1\u660e\u8d1d\u5c14\u66fc\u64cd\u4f5c\u662f\u6536\u7f29\u6620\u5c04\u3002 \\[\\begin{align*} &\\sum^{}_{s, a}\\Vert T_{\\pi} Q_1 (s,a) - T_{\\pi} Q_2(s,a) \\Vert \\\\ =& \\gamma \\Big\\Vert \\int_{s_1, a_1} p(s_1 \\vert s, a) \\pi(a_1 \\vert s_1) [Q_1(s_1, a_1) - Q_2(s_1, a_1)]\\mathrm{d} s_1 \\mathrm{d} a_1 \\Big\\Vert. \\end{align*}\\] \u8fd9\u91cc\u5982\u679c\u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u4ece\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u72b6\u6001\u8f6c\u79fb\u77e9\u9635 \\(\\mathbf{P}_\\pi\\) \u7684\u7279\u5f81\u503c\u4e0d\u5927\u4e8e1\u53ef\u5f97 \\[ \\Vert T_{\\pi} \\mathbf{Q}_1 - T_{\\pi} \\mathbf{Q}_2 \\Vert = \\gamma \\Vert \\mathbf{P}^T_{\\pi} (\\mathbf{Q}_1 - \\mathbf{Q}_2 \\Vert \\le \\gamma \\Vert \\mathbf{Q}_1 - \\mathbf{Q}_2 \\Vert. \\] \u6839\u636eBanach\u4e0d\u52a8\u70b9\u7406\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u591f\u9020\u51fa\u4e24\u79cd\u7b97\u6cd5\u6765\u8fdb\u884c\u7b56\u7565\u4f30\u8ba1\uff1a \u8fed\u4ee3\u6cd5\uff1a \\(Q_{t+1}(s, a) = \\alpha Q_{t}(s, a) + (1 - \\alpha) T_\\pi Q_{t} (s, a)\\) , \u8fd9\u91cc\u8981\u6c42 \\(\\alpha < 1\\) ; \u6784\u9020\u635f\u5931\u51fd\u6570: \\(L(Q) = \\Vert Q - TQ \\Vert^2_p\\) \uff0c \u7136\u540e\u4f18\u5316\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u3002(\u8fd9\u91cc\u7684 \\(p\\) \u6cdb\u6307\u8303\u6570\uff0c\u4e0d\u5c40\u9650\u4e8e\u4e8c\u8303\u6570\u3002) \u8fd9\u4e24\u79cd\u65b9\u6cd5\u5728\u4f18\u5316\u9886\u57df\u4e5f\u6709\u975e\u5e38\u6709\u610f\u601d\u7684\u8ba8\u8bba\u3002 Example \u68af\u5ea6\u4e0b\u964d\u6cd5(GD)\u662f\u6700\u57fa\u7840\u7684\u4e00\u4e2a\u4f18\u5316\u7b97\u6cd5\uff0c\u5b83\u7684\u66f4\u65b0\u7b56\u7565\u662f \\[\\begin{equation*} x_{t+1} = x_{t} - \\alpha \\nabla_x f(x). \\end{equation*}\\] \u8fd9\u4e2a\u7b97\u6cd5\u5728\u89e3\u51b3\u4e0b\u9762\u8fd9\u4e2a\u51f8\u4f18\u5316\u95ee\u9898\u975e\u5e38\u6709\u6548 \\[\\begin{equation*} \\min f(x). \\end{equation*}\\] \u6211\u4eec\u53ef\u4ee5\u4ece\u4e0d\u52a8\u70b9\u7684\u89d2\u5ea6\u6765\u7406\u89e3\u8fd9\u4e2a\u7b97\u6cd5\uff1a \\[\\begin{equation*} x_{t+1} = T x_{t}, \\quad GD(x) = x - \\frac{1}{L} \\nabla_x f(x). \\end{equation*}\\] \u5982\u679c \\(f(x)\\) \u662f \\(L\\) -smooth \u7684\u8bdd\uff0c \u6620\u5c04\u51fd\u6570 \\(GD\\) \u662f\u4e00\u4e2a\u975e\u6269\u5f20\u6620\u5c04\u3002 \u90a3\u4e48\u539f\u59cb\u7684\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u5c31\u662f\u4e00\u4e2a\u4e0d\u52a8\u70b9\u8fed\u4ee3\u7b97\u6cd5 \\[\\begin{equation*} x_{t+1} = \\alpha x_t + (1 - \\alpha) GD(x). \\end{equation*}\\] \u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u635f\u5931\u51fd\u6570 \\[\\begin{equation*} L(x) = \\frac{1}{2} \\Vert GD(x) - x \\Vert^2_2 = \\frac{1}{2} \\left\\Vert \\frac{1}{L} \\nabla_x f(x) \\right\\Vert^2_2. \\end{equation*}\\] \u6211\u4eec\u5bf9\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\uff0c\u6211\u4eec\u5957\u5a03\u5f0f\u5730\u83b7\u5f97\u4e86\u4e00\u4e2a\u65b0\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u5b83\u5730\u66f4\u65b0\u89c4\u5219\u662f \\[\\begin{equation*} x_{t+1} = x_t - \\frac{\\alpha}{L} \\nabla^2_{xx} f(x_t) \\nabla_x f(x_t). \\end{equation*}\\] \u4ece\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5728\u4f18\u5316\u9886\u57df\uff0c\u4e0d\u52a8\u70b9\u8fed\u4ee3\u7b97\u6cd5\u975e\u5e38\u6d41\u884c\uff0c\u4f46\u662f\u6784\u9020\u635f\u5931\u51fd\u6570\u7684\u65b9\u6cd5\u770b\u8d77\u6765\u662f\u5728\u5957\u5a03\uff0c\u8fd8\u8981\u8ba1\u7b97\u4e8c\u9636\u68af\u5ea6\uff0c\u589e\u52a0\u4e86\u8ba1\u7b97\u7684\u590d\u6742\u7a0b\u5ea6\u3002 \u4f46\u662f\uff0c\u5728\u5f3a\u5316\u5b66\u4e60\u9886\u57df\uff0c\u6211\u4eec\u4f1a\u770b\u5230\uff0c\u6784\u9020\u635f\u5931\u51fd\u6570\u6cd5\u53d1\u6325\u7740\u975e\u5e38\u91cd\u8981\u7684\u4f5c\u7528\u3002","title":"Policy Evaluation"},{"location":"RL/basis/03-PolicyEvaluation/#policy-evaluation","text":"\u8981\u89e3\u51b3\u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\u95ee\u9898\uff0c\u6211\u4eec\u9996\u5148\u8981\u89e3\u51b3\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u7b56\u7565\u51fd\u6570 \\(\\pi\\) , \u90a3\u4e48\u5bf9\u5e94\u7684\u5956\u52b1\u503c \\(\\rho(\\pi)\\) \u662f\u591a\u5c11\u3002 \u6211\u4eec\u628a\u8fd9\u4e2a\u95ee\u9898\u53eb\u505a \u7b56\u7565\u4f30\u8ba1 (Policy Evaluation)\u3002 \u6211\u4eec\u9996\u5148\u6839\u636e \\(Q_\\pi\\) \u7684\u5b9a\u4e49\u53ef\u4ee5\u7b80\u5316 \\(\\rho(\\pi)\\) \u4e3a\uff1a \\[ \\tag{1} \\rho(\\pi) = \\mathbb{E}_{(s, a) \\sim p_0(s) \\pi(a \\vert s)}[Q_\\pi(s, a)]. \\] \u56e0\u6b64\uff0c\u6211\u4eec\u8981\u5bf9\u7b56\u7565\u7684\u597d\u574f\u8fdb\u884c\u4f30\u8ba1\uff0c\u6211\u4eec\u53ef\u4ee5\u8f6c\u800c\u5148\u6c42\u51fa\u51fd\u6570 \\(Q_\\pi(s, a)\\) \u3002 \u6211\u4eec\u5b9a\u4e49 \\(\\bar{r} = \\mathbb{E}_{r \\sim R} [r]\\) \u3002\u63a5\u7740\uff0c\u6211\u4ecb\u7ecd\u51fd\u6570 \\(Q\\) \u7684\u4e00\u4e2a\u7279\u6027\uff1a \\[ \\tag{2} Q_{\\pi} (s, a) = \\bar{r}(s, a) + \\gamma \\int_{s_1, a_1} p(s_1 \\vert s, a) \\pi(a_1 \\vert s_1) Q_{\\pi}(s_1, a_1) \\mathrm{d} s_1 \\mathrm{d} a_1. \\] \u8bc1\u660e \\[\\begin{align*} & Q_\\pi(s, a) \\\\ =& \\bar{r}(s, a) + \\gamma \\int_{s_1, a_1} p(s_1 \\vert s, a) \\pi(a_1 \\vert s_1)\\bar{r}(s_1, a_1) \\mathrm{d} s_1 \\mathrm{d} a_1 \\\\ & + \\gamma^2 \\int_{s_1, a_1}\\int_{s_2, a_2} p(s_1 \\vert s, a) \\pi(a_1 \\vert s_1) \\\\ & \\cdot p(s_2 \\vert s_1, a_1) \\pi(a_2 \\vert s_2) \\bar{r}(s_2, a_2) \\mathrm{d} s_2 \\mathrm{d} a_2 \\mathrm{d} s_1 \\mathrm{d} a_2 \\\\ & \\vdots \\\\ =& \\bar{r}(s, a) + \\gamma \\int_{s_1, a_1} p(s_1 \\vert s, a) \\pi(a_1 \\vert s_1) Q(s_1, a_1) \\mathrm{d} s_1 \\mathrm{d} a_1. \\end{align*}\\] \u6211\u4eec\u5df2\u7ecf\u975e\u5e38\u63a5\u8fd1\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u7684\u91cd\u8981\u7684\u6982\u5ff5 \u8d1d\u5c14\u66fc\u64cd\u4f5c (Bellman Operator) \u548c \u8d1d\u5c14\u66fc\u7b49\u5f0f (Bellman Equation)\u3002 \u5b9a\u4e49 (\u8d1d\u5c14\u66fc\u64cd\u4f5c)\u3002\u5bf9\u4e8e\u4efb\u610f\u7684\u51fd\u6570\uff08\u6216\u8005\u5411\u91cf\uff09 \\(Q \\in \\mathbb{R}^{\\vert \\mathcal{S} \\times \\mathcal{A} \\vert}\\) \uff0c \u6211\u4eec\u53ef\u4ee5\u505a\u5982\u4e0b\u64cd\u4f5c: \\(\\forall (s, a) \\in \\mathcal{S}\\times\\mathcal{A}\\) , \\[ \\tag{3} T_{\\pi} Q (s,a) = \\bar{r}(s, a) + \\gamma \\int_{s', a'} p(s' \\vert s, a) \\pi(a' \\vert s') Q(s', a') \\mathrm{d} s' \\mathrm{d} a'. \\] \u8fd9\u91cc\u7684 \\(T\\) \u662f\u67d0\u79cd\u53d8\u6362\uff0c \\(T_{\\pi}Q\\) \u5bf9\u5e94 \\(Q\\) \u7ecf\u8fc7 \\(T\\) \u53d8\u6362\u540e\u7684\u65b0\u7684\u51fd\u6570\u3002 \u8981\u5f15\u51fa\u8d1d\u5c14\u66fc\u7b49\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e00\u4e2a\u6570\u5b66\u5b9a\u7406Banach\u4e0d\u52a8\u70b9\u5b9a\u7406\u3002 \u5b9a\u7406 (Banach\u4e0d\u52a8\u70b9\u5b9a\u7406)\u3002\u5982\u679c \\(U\\) \u662f\u4e00\u4e2aBanach\u7a7a\u95f4\uff0c\u5e76\u4e14 \\(T:U\\rightarrow U\\) \u662f\u4e00\u4e2a\u6536\u7f29\u6620\u5c04\uff0c\u5b83\u7684\u6536\u7f29\u56e0\u5b50\u662f \\(\\gamma \\in (0, 1)\\) \u3002\u90a3\u4e48 \u5728\u7a7a\u95f4 \\(U\\) \u4e2d\uff0c\u5b58\u5728\u552f\u4e00\u7684\u7684\u4e0d\u52a8\u70b9 \\(\\mathbf{v}^*\\) \u6ee1\u8db3 \\(T\\mathbf{v}^* = \\mathbf{v}^{*}\\) ; \u5728\u7a7a\u95f4 \\(U\\) \u4e2d\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\u70b9 \\(\\mathbf{v}^0\\) , \u4ee5\u53ca\u9012\u63a8\u516c\u5f0f \\(\\mathbf{v}^{n+1} = T\\mathbf{v}^{n}\\) \uff0c\u90a3\u4e48 \\(\\lim_{n \\rightarrow \\infty} \\mathbf{v}^{n} = \\lim_{n \\rightarrow \\infty} T^{n} \\mathbf{v}^0 = \\mathbf{v}^{*}.\\) . \u4e5f\u5c31\u662f\u8bf4\uff0c\u4efb\u610f\u70b9\u7ecf\u8fc7\u591a\u6b21T\u7684\u6536\u7f29\u6620\u5c04\uff0c\u6211\u4eec\u80fd\u591f\u6536\u655b\u5230\u4e0d\u52a8\u70b9 \\(\\mathbf{v}^*\\) . \u8fd9\u91cc\u6536\u7f29\u6620\u5c04\u7684\u610f\u601d\u662f\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\mathbf{v}, \\mathbf{u} \\in U\\) \uff0c\u6ee1\u8db3 \\(\\Vert T\\mathbf{v} - T\\mathbf{u} \\Vert \\le \\gamma \\Vert \\mathbf{v} - \\mathbf{u} \\Vert\\) \u3002 \u8bc1\u660e \u9996\u5148\u8bc1\u660e \\(\\{\\mathbf{v}_n\\}\\) \u662f\u4e00\u4e2a\u67ef\u897f\u5e8f\u5217\uff1a \\[\\begin{align*} \\forall m \\ge 1,\\quad &\\Arrowvert \\mathbf{v}^{n+m} - \\mathbf{v}^n \\Arrowvert\\\\ \\le& \\sum^{m-1}_{k=0} \\Arrowvert \\mathbf{v}^{n+k+1} - \\mathbf{v}^{n+k} \\Arrowvert\\\\ =& \\sum^{m-1}_{k=0} \\Arrowvert T^{n+k} \\mathbf{v} ^1 - T^{n+k} \\mathbf{v}^{0} \\Arrowvert\\\\ \\le& \\sum^{m-1}_{k=0} \\lambda^{n+k} \\Arrowvert \\mathbf{v}^1 - \\mathbf{v}^{0} \\Arrowvert\\\\ =& \\frac{\\lambda^n (1-\\lambda^m) }{(1-\\lambda)} \\Arrowvert \\mathbf{v}^1 - \\mathbf{v}^0 \\Arrowvert. \\end{align*}\\] \u53c8\u56e0\u4e3a\u7a7a\u95f4 \\(U\\) \u662f\u5b8c\u5168\u96c6\uff0c\u6240\u4ee5 \\(\\mathbf{v}^\\infty\\) \u4e5f\u5728\u7a7a\u95f4 \\(U\\) \u4e2d\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u8bc1\u660e \\(\\mathbf{v}^{\\infty}\\) \u662f\u6536\u7f29\u6620\u5c04 \\(T\\) \u7684\u56fa\u5b9a\u70b9\u3002 \\[\\begin{align*} 0 \\le& \\Arrowvert T \\mathbf{v}^\\infty - \\mathbf{v}^\\infty \\Arrowvert \\\\ \\le& \\Arrowvert T \\mathbf{v}^\\infty - \\mathbf{v}^n \\Arrowvert + \\Arrowvert \\mathbf{v}^n - \\mathbf{v}^\\infty \\Arrowvert \\\\ =& \\Arrowvert T\\mathbf{v}^\\infty - T\\mathbf{v}^{n-1} \\Arrowvert + \\Arrowvert \\mathbf{v}^n - \\mathbf{v}^\\infty \\Arrowvert\\\\ \\le& \\lambda \\Arrowvert \\mathbf{v}^\\infty - \\mathbf{v}^{n-1} \\Arrowvert + \\Arrowvert \\mathbf{v}^n - \\mathbf{v}^\\infty \\Arrowvert \\overset{n \\rightarrow \\infty}{\\longrightarrow} 0. \\end{align*}\\] \u6700\u540e\uff0c\u6211\u4eec\u8bc1\u660e\u6536\u7f29\u6620\u5c04\u7684\u4e0d\u52a8\u70b9\u552f\u4e00\u3002\u6211\u4eec\u5047\u8bbe\u6536\u7f29\u6620\u5c04\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u4e0d\u52a8\u70b9 \\(\\mathbf{u}\\) \u548c \\(\\mathbf{v}\\) \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u5f97\uff1a \\[ \\Arrowvert \\mathbf{u}^* - \\mathbf{v}^* \\Arrowvert = \\Arrowvert T\\mathbf{u}^* - T\\mathbf{v}^* \\Arrowvert \\le \\lambda \\Arrowvert \\mathbf{u}^* - \\mathbf{v}^* \\Arrowvert \\Rightarrow \\mathbf{u}^* = \\mathbf{v}^*. \\] \u8fd9\u4e0b\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u4ecb\u7ecd\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u4e2d\u7684\u975e\u5e38\u91cd\u8981\u7684\u7b49\u5f0f\uff0c \u8d1d\u5c14\u66fc\u7b49\u5f0f : \u5b9a\u7406 (\u8d1d\u5c14\u66fc\u7b49\u5f0f)\u3002 \\(Q_\\pi\\) \u662f\u8d1d\u5c14\u66fc\u53d8\u6362\u552f\u4e00\u7684\u4e0d\u52a8\u70b9\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684 \\((s, a)\\) \u6ee1\u8db3 \\[ \\tag{4} Q_\\pi(s, a) = T_{\\pi}Q_{\\pi} (s, a). \\] \u8bc1\u660e \u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bc1\u660e\u8d1d\u5c14\u66fc\u64cd\u4f5c\u662f\u6536\u7f29\u6620\u5c04\u3002 \\[\\begin{align*} &\\sum^{}_{s, a}\\Vert T_{\\pi} Q_1 (s,a) - T_{\\pi} Q_2(s,a) \\Vert \\\\ =& \\gamma \\Big\\Vert \\int_{s_1, a_1} p(s_1 \\vert s, a) \\pi(a_1 \\vert s_1) [Q_1(s_1, a_1) - Q_2(s_1, a_1)]\\mathrm{d} s_1 \\mathrm{d} a_1 \\Big\\Vert. \\end{align*}\\] \u8fd9\u91cc\u5982\u679c\u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u4ece\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u72b6\u6001\u8f6c\u79fb\u77e9\u9635 \\(\\mathbf{P}_\\pi\\) \u7684\u7279\u5f81\u503c\u4e0d\u5927\u4e8e1\u53ef\u5f97 \\[ \\Vert T_{\\pi} \\mathbf{Q}_1 - T_{\\pi} \\mathbf{Q}_2 \\Vert = \\gamma \\Vert \\mathbf{P}^T_{\\pi} (\\mathbf{Q}_1 - \\mathbf{Q}_2 \\Vert \\le \\gamma \\Vert \\mathbf{Q}_1 - \\mathbf{Q}_2 \\Vert. \\] \u6839\u636eBanach\u4e0d\u52a8\u70b9\u7406\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u591f\u9020\u51fa\u4e24\u79cd\u7b97\u6cd5\u6765\u8fdb\u884c\u7b56\u7565\u4f30\u8ba1\uff1a \u8fed\u4ee3\u6cd5\uff1a \\(Q_{t+1}(s, a) = \\alpha Q_{t}(s, a) + (1 - \\alpha) T_\\pi Q_{t} (s, a)\\) , \u8fd9\u91cc\u8981\u6c42 \\(\\alpha < 1\\) ; \u6784\u9020\u635f\u5931\u51fd\u6570: \\(L(Q) = \\Vert Q - TQ \\Vert^2_p\\) \uff0c \u7136\u540e\u4f18\u5316\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u3002(\u8fd9\u91cc\u7684 \\(p\\) \u6cdb\u6307\u8303\u6570\uff0c\u4e0d\u5c40\u9650\u4e8e\u4e8c\u8303\u6570\u3002) \u8fd9\u4e24\u79cd\u65b9\u6cd5\u5728\u4f18\u5316\u9886\u57df\u4e5f\u6709\u975e\u5e38\u6709\u610f\u601d\u7684\u8ba8\u8bba\u3002 Example \u68af\u5ea6\u4e0b\u964d\u6cd5(GD)\u662f\u6700\u57fa\u7840\u7684\u4e00\u4e2a\u4f18\u5316\u7b97\u6cd5\uff0c\u5b83\u7684\u66f4\u65b0\u7b56\u7565\u662f \\[\\begin{equation*} x_{t+1} = x_{t} - \\alpha \\nabla_x f(x). \\end{equation*}\\] \u8fd9\u4e2a\u7b97\u6cd5\u5728\u89e3\u51b3\u4e0b\u9762\u8fd9\u4e2a\u51f8\u4f18\u5316\u95ee\u9898\u975e\u5e38\u6709\u6548 \\[\\begin{equation*} \\min f(x). \\end{equation*}\\] \u6211\u4eec\u53ef\u4ee5\u4ece\u4e0d\u52a8\u70b9\u7684\u89d2\u5ea6\u6765\u7406\u89e3\u8fd9\u4e2a\u7b97\u6cd5\uff1a \\[\\begin{equation*} x_{t+1} = T x_{t}, \\quad GD(x) = x - \\frac{1}{L} \\nabla_x f(x). \\end{equation*}\\] \u5982\u679c \\(f(x)\\) \u662f \\(L\\) -smooth \u7684\u8bdd\uff0c \u6620\u5c04\u51fd\u6570 \\(GD\\) \u662f\u4e00\u4e2a\u975e\u6269\u5f20\u6620\u5c04\u3002 \u90a3\u4e48\u539f\u59cb\u7684\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u5c31\u662f\u4e00\u4e2a\u4e0d\u52a8\u70b9\u8fed\u4ee3\u7b97\u6cd5 \\[\\begin{equation*} x_{t+1} = \\alpha x_t + (1 - \\alpha) GD(x). \\end{equation*}\\] \u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u635f\u5931\u51fd\u6570 \\[\\begin{equation*} L(x) = \\frac{1}{2} \\Vert GD(x) - x \\Vert^2_2 = \\frac{1}{2} \\left\\Vert \\frac{1}{L} \\nabla_x f(x) \\right\\Vert^2_2. \\end{equation*}\\] \u6211\u4eec\u5bf9\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\uff0c\u6211\u4eec\u5957\u5a03\u5f0f\u5730\u83b7\u5f97\u4e86\u4e00\u4e2a\u65b0\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u5b83\u5730\u66f4\u65b0\u89c4\u5219\u662f \\[\\begin{equation*} x_{t+1} = x_t - \\frac{\\alpha}{L} \\nabla^2_{xx} f(x_t) \\nabla_x f(x_t). \\end{equation*}\\] \u4ece\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5728\u4f18\u5316\u9886\u57df\uff0c\u4e0d\u52a8\u70b9\u8fed\u4ee3\u7b97\u6cd5\u975e\u5e38\u6d41\u884c\uff0c\u4f46\u662f\u6784\u9020\u635f\u5931\u51fd\u6570\u7684\u65b9\u6cd5\u770b\u8d77\u6765\u662f\u5728\u5957\u5a03\uff0c\u8fd8\u8981\u8ba1\u7b97\u4e8c\u9636\u68af\u5ea6\uff0c\u589e\u52a0\u4e86\u8ba1\u7b97\u7684\u590d\u6742\u7a0b\u5ea6\u3002 \u4f46\u662f\uff0c\u5728\u5f3a\u5316\u5b66\u4e60\u9886\u57df\uff0c\u6211\u4eec\u4f1a\u770b\u5230\uff0c\u6784\u9020\u635f\u5931\u51fd\u6570\u6cd5\u53d1\u6325\u7740\u975e\u5e38\u91cd\u8981\u7684\u4f5c\u7528\u3002","title":"Policy Evaluation"},{"location":"RL/basis/04-PolicyImprovement/","text":"Policy Improvement \u00b6 \u6211\u4eec\u4f30\u8ba1\u51fa\u7b56\u7565\u7684\u597d\u574f\u8fd8\u8fdc\u8fdc\u4e0d\u591f\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u4e0d\u65ad\u4f18\u5316\u7b56\u7565\uff0c\u6700\u7ec8\u627e\u5230\u6700\u4f18\u7684\u7b56\u7565\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u8be5\u5f80\u54ea\u4e2a\u65b9\u5411\u6765\u6539\u53d8\u7b56\u7565\uff0c\u624d\u80fd\u4f7f\u7b56\u7565\u8d8a\u6765\u8d8a\u597d\u5462\uff1f \u5f3a\u5316\u5b66\u4e60\u91cc\u5b58\u5728\u4e24\u79cd\u65b9\u6cd5\u6765\u4f18\u5316\u7b56\u7565\uff1a \u628a\u7b56\u7565\u51fd\u6570 \\(\\pi\\) \u7684\u8bc4\u4ef7\u51fd\u6570 \\(\\rho(\\pi)\\) \u770b\u6210\u4e00\u4e2a\u975e\u51f8\u51fd\u6570\uff0c\u6211\u4eec\u901a\u8fc7\u4f18\u5316\u7684\u65b9\u6cd5\u76f4\u63a5\u4f18\u5316\u8fd9\u4e2a\u51fd\u6570\uff1b \u6211\u4eec\u4e0d\u76f4\u63a5\u6c42\u89e3\u6700\u4f18\u7684\u7b56\u7565\u51fd\u6570\uff0c\u6211\u4eec\u8f6c\u800c\u53bb\u6c42\u89e3\u6700\u4f18\u7b56\u7565\u51fd\u6570\u5bf9\u5e94\u7684\u6700\u4f18 \\(Q\\) \u51fd\u6570\u3002 \u4e24\u79cd\u65b9\u6cd5\u5c31\u5206\u6210\u4e86\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u7684\u4e24\u4e2a\u79cd\u7c7b\uff0c\u4e00\u79cd\u662f policy-based \u7684\u7b97\u6cd5\uff0c\u53e6\u4e00\u79cd\u662f value-based \u7684\u7b97\u6cd5\u3002\u5927\u5bb6\u4f1a\u5f88\u5947\u602a\uff1a\u6211\u4eec\u600e\u4e48\u505a\u5230\u76f4\u63a5\u6c42\u89e3\u6700\u4f18\u7b56\u7565\u51fd\u6570\u5bf9\u5e94\u7684\u6700\u4f18 \\(Q\\) \u51fd\u6570\u5462\uff1f\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u9010\u6e10\u89e3\u5f00\u8fd9\u4e2a\u7591\u95ee\u3002 \u9996\u5148\u4ecb\u7ecdMDPs\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u7b97\u5b50 \u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c (Optimal Bellman Operator)\u3002 \u5b9a\u4e49 (\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c)\u3002\u7ed9\u5b9a\u4efb\u610f\u7684\u51fd\u6570\uff08\u6216\u8005\u53eb\u505a\u5411\u91cf\uff09 \\(Q \\in \\mathbb{R}^{\\vert \\mathcal{S} \\times \\mathcal{A} \\vert}\\) , \u6211\u4eec\u53ef\u4ee5\u5bf9\u5b83\u505a\u5982\u4e0b\u64cd\u4f5c\uff1a \\(\\forall (s, a) \\in \\mathcal{S} \\times \\mathcal{A}\\) \uff0c \\[ \\tag{1} T Q (s, a) = \\max_{\\pi} T_{\\pi} Q (s, a) = \\max_{\\pi} \\bar{r}(s, a) + \\int_{s', a'} p(s' \\vert s, a) \\pi(a' \\vert s') Q(s', a') ds' da'. \\] \u5b9a\u7406 \u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u662f\u4e00\u4e2a \\(\\gamma\\) -\u6536\u7f29\u6620\u5c04\u3002 \u8fd9\u91cc\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u662f\u5f88\u4e25\u683c\u7684\u8bc1\u660e\u3002 \u8bc1\u660e \u8bbe \\(\\pi_1 \\in {\\arg\\max}_{\\pi} T_{\\pi} Q_1\\) \u4ee5\u53ca \\(\\pi_2 \\in {\\arg\\max}_{\\pi} T_{\\pi} Q_2\\) \u3002 \\[\\begin{align*} &TQ_1 - TQ_2 \\\\ =& T_{\\pi_1} Q_1 - T_{\\pi_2} Q_2 \\\\ \\preceq& T_{\\pi_1} Q_1 - T_{\\pi_1} Q_2 \\\\ =& \\gamma \\int_{s', a'} p(s' \\vert s, a) \\pi_1(a' \\vert s') [Q_1(s', a') - Q_2(s', a')] ds' da'. \\end{align*}\\] \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(TQ_2 - TQ_1 \\preceq \\gamma \\int_{s', a'} p(s' \\vert s, a) \\pi_2(a' \\vert s') [Q_2(s', a') - Q_1(s', a')] ds' da'.\\) \\[\\begin{align*} &\\Vert TQ_1 - TQ_2 \\Vert\\\\ \\le& \\min\\{\\gamma \\Vert \\int_{s', a'} p(s' \\vert s, a) \\pi_1(a' \\vert s') [Q_1(s', a') - Q_2(s', a')] ds' da' \\Vert, \\\\ &\\gamma \\Vert \\int_{s', a'} p(s' \\vert s, a) \\pi_2(a' \\vert s') [Q_2(s', a') - Q_1(s', a')] ds' da'\\Vert\\} \\\\ \\le& \\gamma \\Vert Q_1 - Q_2 \\Vert. \\end{align*}\\] \u6839\u636eBanach\u4e0d\u52a8\u70b9\u5b9a\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u5b58\u5728\u552f\u4e00\u7684\u4e0d\u52a8\u70b9 \\(Q^*\\) \u6ee1\u8db3\uff1a \\[ \\tag{2} Q^* = T Q^*. \\] \u6211\u4eec\u4e5f\u53eb\u4e0a\u9762\u7684\u7b49\u5f0f\u4e3a \u6700\u4f18\u8d1d\u5c14\u66fc\u7b49\u5f0f (Optimal Bellman Equation)\u3002 \u5b9a\u7406 \u8bbe \\(\\pi^* = {\\arg\\max}_{\\pi} \\rho(\\pi)\\) , \\[ \\tag{3} Q^* = Q_{\\pi^*}. \\] \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8981\u8bc1\u660e\u8fd9\u4e2a\u6211\u8ba4\u4e3a\u662fMDPs\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u5b9a\u7406\u3002\u8fd9\u4e2a\u8bc1\u660e\u975e\u5e38\u5de7\u5999\uff0c\u6362\u53e5\u8bdd\u8bf4\u4e0d\u662f\u90a3\u4e48\u76f4\u89c2\uff0c\u5927\u5bb6\u8981\u6ce8\u610f\u4e86\u3002 \u8bc1\u660e \u6211\u4eec\u7684\u8bc1\u660e\u5206\u4e3a\u4e24\u6b65\uff1a \u5f53 \\(Q \\succeq TQ\\) \u65f6\uff0c \\(Q \\succeq Q_{\\pi^*}\\) ; \u5f53 \\(Q \\preceq TQ\\) \u65f6\uff0c \\(Q \\preceq Q_{\\pi^*}\\) . \u5728\u8bc1\u660e\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u77e9\u9635\u5f62\u5f0f\u7684\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c \\(T \\mathbf{Q} = {\\arg\\max}_{\\pi} \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi} \\mathbf{Q}\\) \u3002 \u9996\u5148\u662f\u7b2c\u4e00\u6b65\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\pi\\) , \u6211\u4eec\u53ef\u5f97\uff1a \\[\\begin{align*} \\mathbf{Q} \\succeq& T(\\mathbf{Q}) \\succeq \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi}\\mathbf{Q} \\\\ \\succeq& \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi} (\\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi}\\mathbf{Q})\\\\ \\vdots& \\\\ \\succeq& \\lim_{K \\rightarrow \\infty} \\sum^{K}_{t=0}(\\gamma \\mathbf{P}^T_{\\pi})^t \\bar{\\mathbf{r}} + (\\gamma \\mathbf{P}^T_{\\pi})^{K+1} \\mathbf{Q} \\\\ =& \\mathbf{Q}_{\\pi}. \\end{align*}\\] \u56e0\u4e3a\u4e0a\u5f0f\u5bf9\u4efb\u610f\u7684 \\(\\pi\\) \u90fd\u6210\u7acb\uff0c\u6240\u4ee5\u4e5f\u5bf9 \\(\\pi^*\\) \u6210\u7acb\uff0c\u5373 \\(Q \\succeq Q_{\\pi^*}\\) \u3002 \u63a5\u7740\u662f\u7b2c\u4e8c\u6b65\uff0c\u6211\u4eec\u8bbe \\(\\pi_Q = {\\arg\\max}_{\\pi} \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi}\\mathbf{Q}\\) \u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u6709\uff1a \\[\\begin{align*} \\mathbf{Q} \\preceq& T(\\mathbf{Q}) = \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi_Q}\\mathbf{Q} \\\\ \\preceq & \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi_Q} (\\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi_Q}\\mathbf{Q})\\\\ \\vdots& \\\\ \\preceq & \\lim_{K \\rightarrow \\infty}\\sum^{K}_{t=0}(\\gamma \\mathbf{P}^T_{\\pi_Q})^t \\bar{\\mathbf{r}} + (\\gamma \\mathbf{P}^T_{\\pi_Q})^{K+1} \\mathbf{Q} = \\mathbf{Q}_{\\pi_Q}\\\\ \\preceq& \\mathbf{Q}_{\\pi^*}. \\end{align*}\\] \u7efc\u5408\u4e0a\u9762\u4e24\u6b65\uff0c\u6211\u4eec\u53ef\u5f97: \u5f53 \\(Q = T(Q)\\) \u65f6\uff0c \\(Q = Q_{\\pi^*}\\) \u3002 \u53c8\u56e0\u4e3a\u53ea\u6709\u70b9 \\(Q^*\\) \u6ee1\u8db3 \\(Q = T(Q)\\) \u6240\u4ee5\u6211\u4eec\u6709 \\(Q^* = Q_{\\pi^*}\\) \u3002 \u81f3\u6b64\uff0c\u6211\u4eec\u5c06\u6c42\u89e3\u6700\u4f18\u7b56\u7565\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u6c42\u89e3\u6700\u4f18\u8d1d\u5c14\u66fc\u7b49\u5f0f\u7684\u95ee\u9898\u3002 \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u6cd5\u6765\u6c42\u89e3\u8fd9\u4e2a\u95ee\u9898\uff1a \u4e0d\u52a8\u70b9\u8fed\u4ee3\u7b97\u6cd5\uff1a \\(Q_{t+1} = (1 - \\alpha) Q_{t} + TQ_{t}\\) ; \u6784\u9020\u635f\u5931\u51fd\u6570\u6cd5\uff1a \\(L(Q) = \\Vert TQ - Q \\Vert^2_2\\) \u3002","title":"Policy Improvement"},{"location":"RL/basis/04-PolicyImprovement/#policy-improvement","text":"\u6211\u4eec\u4f30\u8ba1\u51fa\u7b56\u7565\u7684\u597d\u574f\u8fd8\u8fdc\u8fdc\u4e0d\u591f\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u4e0d\u65ad\u4f18\u5316\u7b56\u7565\uff0c\u6700\u7ec8\u627e\u5230\u6700\u4f18\u7684\u7b56\u7565\u3002 \u4f46\u662f\uff0c\u6211\u4eec\u8be5\u5f80\u54ea\u4e2a\u65b9\u5411\u6765\u6539\u53d8\u7b56\u7565\uff0c\u624d\u80fd\u4f7f\u7b56\u7565\u8d8a\u6765\u8d8a\u597d\u5462\uff1f \u5f3a\u5316\u5b66\u4e60\u91cc\u5b58\u5728\u4e24\u79cd\u65b9\u6cd5\u6765\u4f18\u5316\u7b56\u7565\uff1a \u628a\u7b56\u7565\u51fd\u6570 \\(\\pi\\) \u7684\u8bc4\u4ef7\u51fd\u6570 \\(\\rho(\\pi)\\) \u770b\u6210\u4e00\u4e2a\u975e\u51f8\u51fd\u6570\uff0c\u6211\u4eec\u901a\u8fc7\u4f18\u5316\u7684\u65b9\u6cd5\u76f4\u63a5\u4f18\u5316\u8fd9\u4e2a\u51fd\u6570\uff1b \u6211\u4eec\u4e0d\u76f4\u63a5\u6c42\u89e3\u6700\u4f18\u7684\u7b56\u7565\u51fd\u6570\uff0c\u6211\u4eec\u8f6c\u800c\u53bb\u6c42\u89e3\u6700\u4f18\u7b56\u7565\u51fd\u6570\u5bf9\u5e94\u7684\u6700\u4f18 \\(Q\\) \u51fd\u6570\u3002 \u4e24\u79cd\u65b9\u6cd5\u5c31\u5206\u6210\u4e86\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u7684\u4e24\u4e2a\u79cd\u7c7b\uff0c\u4e00\u79cd\u662f policy-based \u7684\u7b97\u6cd5\uff0c\u53e6\u4e00\u79cd\u662f value-based \u7684\u7b97\u6cd5\u3002\u5927\u5bb6\u4f1a\u5f88\u5947\u602a\uff1a\u6211\u4eec\u600e\u4e48\u505a\u5230\u76f4\u63a5\u6c42\u89e3\u6700\u4f18\u7b56\u7565\u51fd\u6570\u5bf9\u5e94\u7684\u6700\u4f18 \\(Q\\) \u51fd\u6570\u5462\uff1f\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u9010\u6e10\u89e3\u5f00\u8fd9\u4e2a\u7591\u95ee\u3002 \u9996\u5148\u4ecb\u7ecdMDPs\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u7b97\u5b50 \u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c (Optimal Bellman Operator)\u3002 \u5b9a\u4e49 (\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c)\u3002\u7ed9\u5b9a\u4efb\u610f\u7684\u51fd\u6570\uff08\u6216\u8005\u53eb\u505a\u5411\u91cf\uff09 \\(Q \\in \\mathbb{R}^{\\vert \\mathcal{S} \\times \\mathcal{A} \\vert}\\) , \u6211\u4eec\u53ef\u4ee5\u5bf9\u5b83\u505a\u5982\u4e0b\u64cd\u4f5c\uff1a \\(\\forall (s, a) \\in \\mathcal{S} \\times \\mathcal{A}\\) \uff0c \\[ \\tag{1} T Q (s, a) = \\max_{\\pi} T_{\\pi} Q (s, a) = \\max_{\\pi} \\bar{r}(s, a) + \\int_{s', a'} p(s' \\vert s, a) \\pi(a' \\vert s') Q(s', a') ds' da'. \\] \u5b9a\u7406 \u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u662f\u4e00\u4e2a \\(\\gamma\\) -\u6536\u7f29\u6620\u5c04\u3002 \u8fd9\u91cc\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u662f\u5f88\u4e25\u683c\u7684\u8bc1\u660e\u3002 \u8bc1\u660e \u8bbe \\(\\pi_1 \\in {\\arg\\max}_{\\pi} T_{\\pi} Q_1\\) \u4ee5\u53ca \\(\\pi_2 \\in {\\arg\\max}_{\\pi} T_{\\pi} Q_2\\) \u3002 \\[\\begin{align*} &TQ_1 - TQ_2 \\\\ =& T_{\\pi_1} Q_1 - T_{\\pi_2} Q_2 \\\\ \\preceq& T_{\\pi_1} Q_1 - T_{\\pi_1} Q_2 \\\\ =& \\gamma \\int_{s', a'} p(s' \\vert s, a) \\pi_1(a' \\vert s') [Q_1(s', a') - Q_2(s', a')] ds' da'. \\end{align*}\\] \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(TQ_2 - TQ_1 \\preceq \\gamma \\int_{s', a'} p(s' \\vert s, a) \\pi_2(a' \\vert s') [Q_2(s', a') - Q_1(s', a')] ds' da'.\\) \\[\\begin{align*} &\\Vert TQ_1 - TQ_2 \\Vert\\\\ \\le& \\min\\{\\gamma \\Vert \\int_{s', a'} p(s' \\vert s, a) \\pi_1(a' \\vert s') [Q_1(s', a') - Q_2(s', a')] ds' da' \\Vert, \\\\ &\\gamma \\Vert \\int_{s', a'} p(s' \\vert s, a) \\pi_2(a' \\vert s') [Q_2(s', a') - Q_1(s', a')] ds' da'\\Vert\\} \\\\ \\le& \\gamma \\Vert Q_1 - Q_2 \\Vert. \\end{align*}\\] \u6839\u636eBanach\u4e0d\u52a8\u70b9\u5b9a\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u5b58\u5728\u552f\u4e00\u7684\u4e0d\u52a8\u70b9 \\(Q^*\\) \u6ee1\u8db3\uff1a \\[ \\tag{2} Q^* = T Q^*. \\] \u6211\u4eec\u4e5f\u53eb\u4e0a\u9762\u7684\u7b49\u5f0f\u4e3a \u6700\u4f18\u8d1d\u5c14\u66fc\u7b49\u5f0f (Optimal Bellman Equation)\u3002 \u5b9a\u7406 \u8bbe \\(\\pi^* = {\\arg\\max}_{\\pi} \\rho(\\pi)\\) , \\[ \\tag{3} Q^* = Q_{\\pi^*}. \\] \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8981\u8bc1\u660e\u8fd9\u4e2a\u6211\u8ba4\u4e3a\u662fMDPs\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u5b9a\u7406\u3002\u8fd9\u4e2a\u8bc1\u660e\u975e\u5e38\u5de7\u5999\uff0c\u6362\u53e5\u8bdd\u8bf4\u4e0d\u662f\u90a3\u4e48\u76f4\u89c2\uff0c\u5927\u5bb6\u8981\u6ce8\u610f\u4e86\u3002 \u8bc1\u660e \u6211\u4eec\u7684\u8bc1\u660e\u5206\u4e3a\u4e24\u6b65\uff1a \u5f53 \\(Q \\succeq TQ\\) \u65f6\uff0c \\(Q \\succeq Q_{\\pi^*}\\) ; \u5f53 \\(Q \\preceq TQ\\) \u65f6\uff0c \\(Q \\preceq Q_{\\pi^*}\\) . \u5728\u8bc1\u660e\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u77e9\u9635\u5f62\u5f0f\u7684\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c \\(T \\mathbf{Q} = {\\arg\\max}_{\\pi} \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi} \\mathbf{Q}\\) \u3002 \u9996\u5148\u662f\u7b2c\u4e00\u6b65\uff1a\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\pi\\) , \u6211\u4eec\u53ef\u5f97\uff1a \\[\\begin{align*} \\mathbf{Q} \\succeq& T(\\mathbf{Q}) \\succeq \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi}\\mathbf{Q} \\\\ \\succeq& \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi} (\\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi}\\mathbf{Q})\\\\ \\vdots& \\\\ \\succeq& \\lim_{K \\rightarrow \\infty} \\sum^{K}_{t=0}(\\gamma \\mathbf{P}^T_{\\pi})^t \\bar{\\mathbf{r}} + (\\gamma \\mathbf{P}^T_{\\pi})^{K+1} \\mathbf{Q} \\\\ =& \\mathbf{Q}_{\\pi}. \\end{align*}\\] \u56e0\u4e3a\u4e0a\u5f0f\u5bf9\u4efb\u610f\u7684 \\(\\pi\\) \u90fd\u6210\u7acb\uff0c\u6240\u4ee5\u4e5f\u5bf9 \\(\\pi^*\\) \u6210\u7acb\uff0c\u5373 \\(Q \\succeq Q_{\\pi^*}\\) \u3002 \u63a5\u7740\u662f\u7b2c\u4e8c\u6b65\uff0c\u6211\u4eec\u8bbe \\(\\pi_Q = {\\arg\\max}_{\\pi} \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi}\\mathbf{Q}\\) \u3002 \u90a3\u4e48\uff0c\u6211\u4eec\u6709\uff1a \\[\\begin{align*} \\mathbf{Q} \\preceq& T(\\mathbf{Q}) = \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi_Q}\\mathbf{Q} \\\\ \\preceq & \\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi_Q} (\\bar{\\mathbf{r}} + \\gamma \\mathbf{P}^T_{\\pi_Q}\\mathbf{Q})\\\\ \\vdots& \\\\ \\preceq & \\lim_{K \\rightarrow \\infty}\\sum^{K}_{t=0}(\\gamma \\mathbf{P}^T_{\\pi_Q})^t \\bar{\\mathbf{r}} + (\\gamma \\mathbf{P}^T_{\\pi_Q})^{K+1} \\mathbf{Q} = \\mathbf{Q}_{\\pi_Q}\\\\ \\preceq& \\mathbf{Q}_{\\pi^*}. \\end{align*}\\] \u7efc\u5408\u4e0a\u9762\u4e24\u6b65\uff0c\u6211\u4eec\u53ef\u5f97: \u5f53 \\(Q = T(Q)\\) \u65f6\uff0c \\(Q = Q_{\\pi^*}\\) \u3002 \u53c8\u56e0\u4e3a\u53ea\u6709\u70b9 \\(Q^*\\) \u6ee1\u8db3 \\(Q = T(Q)\\) \u6240\u4ee5\u6211\u4eec\u6709 \\(Q^* = Q_{\\pi^*}\\) \u3002 \u81f3\u6b64\uff0c\u6211\u4eec\u5c06\u6c42\u89e3\u6700\u4f18\u7b56\u7565\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u6c42\u89e3\u6700\u4f18\u8d1d\u5c14\u66fc\u7b49\u5f0f\u7684\u95ee\u9898\u3002 \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u6cd5\u6765\u6c42\u89e3\u8fd9\u4e2a\u95ee\u9898\uff1a \u4e0d\u52a8\u70b9\u8fed\u4ee3\u7b97\u6cd5\uff1a \\(Q_{t+1} = (1 - \\alpha) Q_{t} + TQ_{t}\\) ; \u6784\u9020\u635f\u5931\u51fd\u6570\u6cd5\uff1a \\(L(Q) = \\Vert TQ - Q \\Vert^2_2\\) \u3002","title":"Policy Improvement"},{"location":"RL/papers/ACKTRandA2C/","text":"OpenAI Baseline: ACKTR & A2C \u00b6 @inproceedings { mnih2016asynchronous , title = {Asynchronous methods for deep reinforcement learning} , author = {Mnih, Volodymyr and Badia, Adria Puigdomenech and Mirza, Mehdi and Graves, Alex and Lillicrap, Timothy and Harley, Tim and Silver, David and Kavukcuoglu, Koray} , booktitle = {International conference on machine learning} , pages = {1928--1937} , year = {2016} } @inproceedings { wu2017scalable , title = {Scalable trust-region method for deep reinforcement learning using kronecker-factored approximation} , author = {Wu, Yuhuai and Mansimov, Elman and Grosse, Roger B and Liao, Shun and Ba, Jimmy} , booktitle = {Advances in neural information processing systems} , pages = {5279--5288} , year = {2017} } @inproceedings { grosse2016kronecker , title = {A kronecker-factored approximate fisher matrix for convolution layers} , author = {Grosse, Roger and Martens, James} , booktitle = {International Conference on Machine Learning} , pages = {573--582} , year = {2016} } \u8fd9\u662f\u4e00\u7bc7OpenAI\u7684 \u535a\u5ba2 \uff0c\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u6dfb\u52a0\u4e86\u7f6e\u4fe1\u57df\u7684Actor-Critic\u6846\u67b6\u7684\u7b97\u6cd5\u3002\u5b83\u540c\u65f6\u9644\u5e26\u4e86\u4e00\u4e2aAdvantage Actor Critic(A2C)\u7b97\u6cd5\uff0c\u5bf9\u6807DeepMind\u7684Asynchronous Advantage Actor Critic\u7b97\u6cd5\u3002\u5b83\u81ea\u79f0A2C\u7b97\u6cd5\u548cA3C\u7b97\u6cd5\u7684\u8868\u73b0\u5dee\u4e0d\u591a\u3002\uff08\u6211\u4e0d\u7981\u5410\u69fd\uff0c\u5f02\u6b65\u66f4\u65b0\u7b97\u6cd5\u663e\u7136\u6bd4\u540c\u6b65\u66f4\u65b0\u7b97\u6cd5\u7684\u9002\u7528\u8303\u56f4\u66f4\u5e7f\u624d\u5bf9\u3002\uff09\u63a5\u7740\u9605\u8bfb\u672c\u6587\u7684\u7531\u5934\uff0c\u6211\u4eec\u4e00\u6b21\u6027\u641e\u6e05\u695a\u4e09\u4e2a\u7b97\u6cd5\uff1aA3C\u3001A2C\u548cACKTR\u7b97\u6cd5\u3002 Note \u4e0d\u8fc7\u6211\u672c\u4eba\u5bf9\u4f7f\u7528\u968f\u673a\u7b56\u7565\u68af\u5ea6\u6cd5\u6784\u9020\u7684Actor-Critic\u6846\u67b6\u7684\u7b97\u6cd5\u4fdd\u6301\u9119\u89c6\u6001\u5ea6\uff0c\u56e0\u4e3a\u5bf9\u6570\u51fd\u6570\u4f7f\u5f97\u8fd9\u4e2a\u4e24\u73a9\u5bb6\u7684\u7b97\u6cd5\u7684\u7eb3\u4ec0\u5747\u8861\u70b9\u8868\u73b0\u5f97\u5f88\u5947\u602a\u3002\u6211\u6bd4\u8f83\u770b\u597d\u57fa\u4e8e\u6700\u4f18\u8d1d\u5c14\u66fc\u7b49\u5f0f\u6784\u9020\u7684Actor-Critic\u6846\u67b6\u7684\u7b97\u6cd5\uff0c\u56e0\u4e3a\u5b83\u7684\u7eb3\u4ec0\u5747\u8861\u70b9\u5c31\u662f\u6700\u4f18\u7b56\u7565\u3002 A3C \u00b6 \u5728\u8fd9\u7bc7\u8bba\u6587\u91cc\uff0c\u4f5c\u8005\u81ea\u79f0\u63d0\u51fa\u4e86\u4e00\u4e2a\u4e0d\u4f7f\u7528\u7ecf\u9a8c\u6c60\uff08Replay Buffer\uff09\uff0c\u800c\u662f\u901a\u8fc7\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684\u65b9\u5f0f\uff0c\u6765\u4fdd\u8bc1\u6bcf\u6b21\u4f7f\u7528\u7684\u6837\u672c\u7684\u591a\u6837\u6027\uff08\u6211\u662f\u6bd4\u8f83\u5410\u69fd\u8fd9\u79cd\u8bf4\u6cd5\u7684\uff09\u3002\u7b97\u6cd5\u672c\u8eab\u786e\u5b9e\u6ca1\u6709\u4ec0\u4e48\u53ef\u4ee5\u79f0\u9053\u7684\u5730\u65b9\uff0c\u5c31\u662f\u5e76\u884c\u4f18\u5316\u7248\u672c\u7684\u7b56\u7565\u68af\u5ea6\u4f18\u5316\u7b97\u6cd5\uff0c\u5e76\u4e14\u662f\u5f02\u6b65\u66f4\u65b0\u3002 ACKTR \u00b6 \u8fd9\u7bc7\u8bba\u6587\u91cc\uff0c\u4f5c\u8005\u4f7f\u7528\u81ea\u7136\u68af\u5ea6\u6cd5\uff08\u7c7b\u4f3cTRPO\uff09\u6765\u66f4\u65b0\u7b56\u7565\u51fd\u6570\uff0c\u4f46\u662f\u4f7f\u7528\u7684\u662fA3C\u548cA2C\u7684\u7b97\u6cd5\u6846\u67b6\u3002\u4e0eTRPO\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4f7f\u7528\u4e86A Kronecker-factored approximate Fisher matrix for convolutional layers\u4e2d\u7684\u6280\u672f\u6765\u4f30\u8ba1Fisher Matrix\u800c\u4e0d\u662f\u5171\u8f6d\u68af\u5ea6\u6cd5\u3002\u6240\u4ee5\u8fd9\u4e5f\u662f\u4e00\u7bc7\u5e94\u7528\u6587\u800c\u5df2\u3002","title":"ACKTR & A2C"},{"location":"RL/papers/ACKTRandA2C/#openai-baseline-acktr-a2c","text":"@inproceedings { mnih2016asynchronous , title = {Asynchronous methods for deep reinforcement learning} , author = {Mnih, Volodymyr and Badia, Adria Puigdomenech and Mirza, Mehdi and Graves, Alex and Lillicrap, Timothy and Harley, Tim and Silver, David and Kavukcuoglu, Koray} , booktitle = {International conference on machine learning} , pages = {1928--1937} , year = {2016} } @inproceedings { wu2017scalable , title = {Scalable trust-region method for deep reinforcement learning using kronecker-factored approximation} , author = {Wu, Yuhuai and Mansimov, Elman and Grosse, Roger B and Liao, Shun and Ba, Jimmy} , booktitle = {Advances in neural information processing systems} , pages = {5279--5288} , year = {2017} } @inproceedings { grosse2016kronecker , title = {A kronecker-factored approximate fisher matrix for convolution layers} , author = {Grosse, Roger and Martens, James} , booktitle = {International Conference on Machine Learning} , pages = {573--582} , year = {2016} } \u8fd9\u662f\u4e00\u7bc7OpenAI\u7684 \u535a\u5ba2 \uff0c\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u6dfb\u52a0\u4e86\u7f6e\u4fe1\u57df\u7684Actor-Critic\u6846\u67b6\u7684\u7b97\u6cd5\u3002\u5b83\u540c\u65f6\u9644\u5e26\u4e86\u4e00\u4e2aAdvantage Actor Critic(A2C)\u7b97\u6cd5\uff0c\u5bf9\u6807DeepMind\u7684Asynchronous Advantage Actor Critic\u7b97\u6cd5\u3002\u5b83\u81ea\u79f0A2C\u7b97\u6cd5\u548cA3C\u7b97\u6cd5\u7684\u8868\u73b0\u5dee\u4e0d\u591a\u3002\uff08\u6211\u4e0d\u7981\u5410\u69fd\uff0c\u5f02\u6b65\u66f4\u65b0\u7b97\u6cd5\u663e\u7136\u6bd4\u540c\u6b65\u66f4\u65b0\u7b97\u6cd5\u7684\u9002\u7528\u8303\u56f4\u66f4\u5e7f\u624d\u5bf9\u3002\uff09\u63a5\u7740\u9605\u8bfb\u672c\u6587\u7684\u7531\u5934\uff0c\u6211\u4eec\u4e00\u6b21\u6027\u641e\u6e05\u695a\u4e09\u4e2a\u7b97\u6cd5\uff1aA3C\u3001A2C\u548cACKTR\u7b97\u6cd5\u3002 Note \u4e0d\u8fc7\u6211\u672c\u4eba\u5bf9\u4f7f\u7528\u968f\u673a\u7b56\u7565\u68af\u5ea6\u6cd5\u6784\u9020\u7684Actor-Critic\u6846\u67b6\u7684\u7b97\u6cd5\u4fdd\u6301\u9119\u89c6\u6001\u5ea6\uff0c\u56e0\u4e3a\u5bf9\u6570\u51fd\u6570\u4f7f\u5f97\u8fd9\u4e2a\u4e24\u73a9\u5bb6\u7684\u7b97\u6cd5\u7684\u7eb3\u4ec0\u5747\u8861\u70b9\u8868\u73b0\u5f97\u5f88\u5947\u602a\u3002\u6211\u6bd4\u8f83\u770b\u597d\u57fa\u4e8e\u6700\u4f18\u8d1d\u5c14\u66fc\u7b49\u5f0f\u6784\u9020\u7684Actor-Critic\u6846\u67b6\u7684\u7b97\u6cd5\uff0c\u56e0\u4e3a\u5b83\u7684\u7eb3\u4ec0\u5747\u8861\u70b9\u5c31\u662f\u6700\u4f18\u7b56\u7565\u3002","title":"OpenAI Baseline: ACKTR &amp; A2C"},{"location":"RL/papers/ACKTRandA2C/#a3c","text":"\u5728\u8fd9\u7bc7\u8bba\u6587\u91cc\uff0c\u4f5c\u8005\u81ea\u79f0\u63d0\u51fa\u4e86\u4e00\u4e2a\u4e0d\u4f7f\u7528\u7ecf\u9a8c\u6c60\uff08Replay Buffer\uff09\uff0c\u800c\u662f\u901a\u8fc7\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684\u65b9\u5f0f\uff0c\u6765\u4fdd\u8bc1\u6bcf\u6b21\u4f7f\u7528\u7684\u6837\u672c\u7684\u591a\u6837\u6027\uff08\u6211\u662f\u6bd4\u8f83\u5410\u69fd\u8fd9\u79cd\u8bf4\u6cd5\u7684\uff09\u3002\u7b97\u6cd5\u672c\u8eab\u786e\u5b9e\u6ca1\u6709\u4ec0\u4e48\u53ef\u4ee5\u79f0\u9053\u7684\u5730\u65b9\uff0c\u5c31\u662f\u5e76\u884c\u4f18\u5316\u7248\u672c\u7684\u7b56\u7565\u68af\u5ea6\u4f18\u5316\u7b97\u6cd5\uff0c\u5e76\u4e14\u662f\u5f02\u6b65\u66f4\u65b0\u3002","title":"A3C"},{"location":"RL/papers/ACKTRandA2C/#acktr","text":"\u8fd9\u7bc7\u8bba\u6587\u91cc\uff0c\u4f5c\u8005\u4f7f\u7528\u81ea\u7136\u68af\u5ea6\u6cd5\uff08\u7c7b\u4f3cTRPO\uff09\u6765\u66f4\u65b0\u7b56\u7565\u51fd\u6570\uff0c\u4f46\u662f\u4f7f\u7528\u7684\u662fA3C\u548cA2C\u7684\u7b97\u6cd5\u6846\u67b6\u3002\u4e0eTRPO\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4f7f\u7528\u4e86A Kronecker-factored approximate Fisher matrix for convolutional layers\u4e2d\u7684\u6280\u672f\u6765\u4f30\u8ba1Fisher Matrix\u800c\u4e0d\u662f\u5171\u8f6d\u68af\u5ea6\u6cd5\u3002\u6240\u4ee5\u8fd9\u4e5f\u662f\u4e00\u7bc7\u5e94\u7528\u6587\u800c\u5df2\u3002","title":"ACKTR"},{"location":"RL/papers/EquivalenceBetweenPGandSQL/","text":"Equivalence Between Policy Gradient and Soft Q-Learning \u00b6 @article { schulman2017equivalence , title = {Equivalence between policy gradients and soft q-learning} , author = {Schulman, John and Chen, Xi and Abbeel, Pieter} , journal = {arXiv preprint arXiv:1704.06440} , year = {2017} } \u8bba\u6587\u94fe\u63a5 \u8fd9\u7bc7\u6587\u7ae0\u66f4\u50cf\u662fSchulman\u7684\u4e2a\u4eba\u6570\u5b66\u7b14\u8bb0\uff0c\u4ed6\u8fd9\u4e2a\u4eba\u6bd4\u8f83\u504f\u597d\u6570\u5b66\u63a8\u5bfc\u3002\u4f46\u662f\u6570\u5b66\u63a8\u5bfc\u5f88\u5bb9\u6613\u8ba9\u4eba\u9677\u5165\u5176\u4e2d\u3002\u4eba\u4eec\u5f80\u5f80\u6700\u540e\u53d1\u73b0\u5f3a\u5316\u5b66\u4e60\u7684\u6570\u5b66\u5e76\u4e0d\u5b8c\u5907\uff0c\u800c\u5927\u53d7\u6253\u51fb\u3002\u8fd9\u7bc7\u6587\u7ae0\u662f\u6302\u5728Arxiv\u4e0a\u7684\u5c0f\u6587\u7ae0\uff0c\u5c1d\u8bd5\u63ed\u793aPolicy Gradient\u548cSoft Q-Learning\u7684\u5173\u7cfb\uff0c\u7b97\u662f\u6709\u4e00\u5b9a\u7684\u542f\u53d1\u6027\u3002 \u6211\u6309\u7167\u4e2a\u4eba\u7684\u4e60\u60ef\u8fdb\u884c\u4e86\u91cd\u65b0\u7684\u63a8\u5bfc\u3002 \u71b5\u6b63\u5219\u5316\u5f3a\u5316\u5b66\u4e60 \u00b6 \u9996\u5148\uff0c\u539f\u59cb\u7684\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u662f\u4e3a\u4e86\u6c42\u89e3 \\[ \\begin{aligned} \\max_{\\pi} \\rho(\\pi) =& (1 - \\gamma) \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi)} \\bigg[\\sum^{\\infty}_{t=0} \\gamma^t r_t \\bigg] \\\\ =& \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi), a \\sim \\pi(\\cdot \\vert s)} [r(s, a)]. \\end{aligned} \\] \u6700\u76f4\u63a5\u5730\uff0c\u4ece\u6700\u5927\u71b5\u7406\u8bba\u4e2d\u5f97\u5230\u542f\u53d1\uff0c\u71b5\u6b63\u5219\u5316\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u53d8\u6210\u4e86 \\[ \\begin{aligned} \\max_{\\pi} \\rho(\\pi) =& \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi), a \\sim \\pi(\\cdot \\vert s)} [r(s, a)] - \\alpha \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi)}[D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s))] \\\\ =& \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi), a \\sim \\pi(\\cdot \\vert s)} [r(s, a) - \\alpha D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s))] \\\\ =& (1 - \\gamma) \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi)} \\bigg[\\sum^{\\infty}_{t=0} \\gamma^t [r_t - \\alpha D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s))] \\bigg] \\end{aligned} \\] \u9996\u5148\u6211\u4eec\u6765\u7814\u7a76\u4e00\u79cd\u5b9a\u4e49\u65b9\u5f0f \\[ Q_\\pi(s, a) = \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi)} \\bigg[\\sum^{\\infty}_{t=0} \\gamma^t [r_t - \\alpha D_{KL}(\\pi(\\cdot \\vert s_t) \\Vert \\tilde \\pi(\\cdot \\vert s_t)) \\vert s_0 = s, a_0 = a] \\bigg]. \\] \\[ V_\\pi(s) = \\mathbb{E}_{a \\sim \\pi(\\cdot \\vert s)} [Q_\\pi(s, a)]. \\] \\[ \\rho(\\pi) = \\mathbb{E}_{s \\sim p_0, a \\sim \\pi(\\cdot \\vert s)} [Q_\\pi(s, a)]. \\] \u53ef\u89c1\u8fd9\u662f\u4e00\u4e2a\u7275\u4e00\u53d1\u800c\u52a8\u5168\u8eab\u7684\u6539\u53d8\uff0c\u5e76\u4e14\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u4e5f\u56e0\u6b64\u53d8\u5f62\u4e3a(\u77e9\u9635\u5f62\u5f0f\uff0c\u8981\u6c42\u72b6\u6001\u52a8\u4f5c\u90fd\u662f\u6709\u9650\u96c6) \\[ TQ = R - \\alpha D_{KL}(\\pi\\Vert\\tilde \\pi) + \\gamma \\mathbf{P}_{\\pi} Q. \\] \\[ \\begin{aligned} TQ(s, a) =& \\max_{\\pi} R(s, a) - \\alpha D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s))\\\\ &+ \\gamma \\sum_{s'} p(s' \\vert s, a) \\sum_{a'} \\pi(a' \\vert s') Q(s', a'). \\end{aligned} \\] \u5176\u4e2d \\(\\tilde \\pi(a \\vert s)\\) \u901a\u5e38\u662f\u5747\u5300\u5206\u5e03\u3002 \u4e0a\u9762\u8fd9\u79cd\u5b9a\u4e49\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u5f88\u96be\u6c42\u89e3\uff0c\u6240\u4ee5\u4eba\u4eec\u5b9a\u4e49\u4e86\u53e6\u4e00\u5957\u7b26\u53f7\u3002\u8fd9\u5957\u7b26\u53f7\u4f1a\u770b\u8d77\u6765\u7a0d\u5fae\u7ed5\u4e00\u4e9b\uff0c\u4f46\u662f\u5728\u8ba1\u7b97\u4e2d\u80fd\u591f\u63d0\u4f9b\u5f88\u5927\u7684\u65b9\u4fbf\u3002 \\[ Q_\\pi(s, a) = \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi)} \\bigg[r_0 + \\sum^{\\infty}_{t=1} \\gamma^t [r_t - \\alpha D_{KL}(\\pi(\\cdot \\vert s_t) \\Vert \\tilde \\pi(\\cdot \\vert s_t)) \\vert s_0 = s, a_0 = a] \\bigg]. \\] \\[ V_\\pi(s) = \\mathbb{E}_{a \\sim \\pi(\\cdot \\vert s)} [Q_\\pi(s, a)] - \\alpha D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s)). \\] \\[ \\rho(\\pi) = \\mathbb{E}_{s \\sim p_0, a \\sim \\pi(\\cdot \\vert s)}[Q_\\pi(s, a) - \\alpha D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s))]. \\] \u7c7b\u4f3c\u7684\uff0c\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u53d8\u4e3a \\[ TQ = \\max_{\\pi} R + \\gamma \\mathbf{P}_{\\pi} (Q - \\alpha D_{KL}(\\pi \\Vert \\tilde \\pi)). \\] \u6216\u8005\u7b49\u4ef7\u4e3a \\[ \\begin{aligned} TQ(s, a) =& \\max_{\\pi} R(s, a) + \\gamma \\sum_{s'} p(s' \\vert s, a) \\sum_{a'} \\pi(a' \\vert s') \\\\ & [ Q(s', a') - \\alpha(\\ln\\pi(a' \\vert s') - \\ln\\tilde\\pi(a' \\vert s')) ]. \\\\ \\end{aligned} \\] \u53ef\u4ee5\u8bc1\u660e\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u662f\u4e00\u4e2a\u6536\u7f29\u6620\u5c04\uff0c\u5b58\u5728\u4e0d\u52a8\u70b9\u3002\u6211\u4eec\u5b9a\u4e49 \\[ \\pi_Q = \\arg\\max_{\\pi} \\sum_{a} \\pi(a \\vert s) [ Q(s, a) - \\alpha(\\ln\\pi(a \\vert s) - \\ln\\tilde\\pi(a \\vert s)) ]. \\] \u6c42\u89e3\u53ef\u5f97 \\[ \\pi_Q(s, a) = \\frac{\\tilde\\pi(a\\vert s) \\exp{[Q(s, a)/\\alpha]}}{\\sum_{a'} \\tilde\\pi(a' \\vert s) \\exp{[Q(s, a')/\\alpha]}}. \\] \u518d\u5b9a\u4e49 \\[ V_Q(s) = \\alpha \\ln \\bigg\\{\\sum_{a} \\tilde \\pi(a \\vert s) \\exp[Q(s, a; \\theta_Q)/\\alpha]\\bigg\\}. \\] \u90a3\u4e48\u6709\u5173\u7cfb \\[ \\pi_Q(a \\vert s) = \\tilde\\pi(a \\vert s) \\exp\\{[Q(s, a) - V_Q(s)]/\\alpha\\}; \\] \\[ Q(s, a) = V_Q(s) + \\alpha \\ln \\frac{\\pi_Q(a \\vert s)}{\\tilde\\pi(a \\vert s)}; \\] \\[ V_Q(s) = \\sum_{a}\\pi_Q(a \\vert s) Q(s, a) - \\alpha D^Q_{KL}(s), \\] \u5176\u4e2d \\(D^{Q}_{KL}(s) = D_{KL}(\\pi_Q(\\cdot \\vert s) \\Vert \\tilde\\pi(\\cdot \\vert s))\\) ; \\[ TQ = R + \\gamma \\mathbf{P}_{\\pi} V_Q. \\] Soft Q-Learning \u00b6 \u6211\u4eec\u4f7f\u7528 \\(\\theta_Q\\) \u6765\u53c2\u6570\u5316 \\(Q\\) \u51fd\u6570\uff0c\u5199\u4e3a \\(Q(s, a; \\theta_Q)\\) \u3002 \u90a3\u4e48 Soft Q-Learning \u4f7f\u7528\u7684\u635f\u5931\u51fd\u6570\u4e3a \\[ L(\\theta_Q) = \\mathbb{E}_{s\\sim p, a \\sim \\pi(\\cdot \\vert s; \\theta_Q)}\\bigg[\\frac{1}{2} \\Vert Q(s, a; \\theta_Q) - TQ(s, a;\\theta) \\Vert^2\\bigg\\vert_{\\theta=\\theta_Q}\\bigg], \\] \u90a3\u4e48 \\[ \\begin{aligned} & \\nabla_{\\theta_Q} L(\\theta_Q) \\\\ = &\\mathbb{E}_{s\\sim p, a \\sim \\pi(\\cdot \\vert s; \\theta_Q)}\\bigg\\{[Q(s, a; \\theta_Q) - TQ(s, a;\\theta_Q)]\\nabla_{\\theta_Q} Q(s, a; \\theta_Q) \\bigg\\}\\\\ =&\\mathbb{E}_{s\\sim p, a \\sim \\pi(\\cdot \\vert s; \\theta_Q)}\\bigg\\{\\bigg[V(s;\\theta_Q) + \\alpha \\ln \\frac{\\pi(a \\vert s; \\theta_Q)}{\\tilde \\pi(a \\vert s)} - r(s, a) \\\\ & - \\gamma \\sum_{s'} p(s'\\vert s, a) V(s';\\theta_Q) \\bigg] \\nabla_{\\theta_Q} \\bigg[V(s;\\theta_Q) + \\alpha \\ln\\frac{\\pi(a \\vert s; \\theta_Q)}{\\tilde \\pi(a \\vert s)}\\bigg] \\bigg\\}\\\\ =& \\mathbb{E}_{s\\sim p, a \\sim \\pi(\\cdot \\vert s; \\theta_Q)} \\bigg\\{ - \\alpha \\hat Q(s, a; \\theta_Q) \\nabla_{\\theta_Q}\\ln \\pi(a \\vert s; \\theta_Q) \\\\ & + \\nabla_{\\theta_Q} \\frac{1}{2}\\Vert V(s; \\theta_Q) - \\hat V(s; \\theta) \\Vert^2\\vert_{\\theta = \\theta_Q}\\bigg\\}. \\end{aligned} \\] \uff08\u7528\u5230\u4e86 \\(\\sum_a \\nabla_{\\theta} \\pi(a \\vert s; \\theta) = 0\\) \u3002\uff09 \u5176\u4e2d \\[ \\hat Q(s, a;\\theta_Q) = r(s, a) + \\gamma \\sum_{s'}p(s' \\vert s, a) V(s'; \\theta_Q) - \\alpha \\ln\\frac{\\pi(a \\vert s; \\theta_Q)}{\\tilde \\pi(a \\vert s)}. \\] \\[ \\hat V(s; \\theta) = \\sum_{a} \\pi(a \\vert s; \\theta) \\bigg[r(s, a) + \\gamma \\sum_{s'}p(s' \\vert s, a) V(s';\\theta)\\bigg] - \\alpha D_{KL}(s; \\theta). \\] \u5176\u4e2d \\(-\\alpha \\hat Q(s, a; \\theta_Q) \\nabla_{\\theta_Q} \\ln \\pi(s, a; \\theta_Q)\\) \u548c\u7b56\u7565\u68af\u5ea6\u7684\u5f62\u5f0f\u975e\u5e38\u7c7b\u4f3c\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b58\u5728\u7740\u67d0\u79cd\u504f\u5dee\uff0c\u518d\u539f\u8bba\u6587\u4e2d\u5c31\u6ca1\u6709\u518d\u6df1\u5165\u8ba8\u8bba\u4e86\u3002\u6211\u6682\u65f6\u4e5f\u6ca1\u6709\u66f4\u6df1\u5165\u5730\u7814\u7a76\u3002 Note \\(\\hat Q(s, a; \\theta_Q)\\) \u548c\u7b2c\u4e00\u6b21\u5b9a\u4e49\u7684 \\(Q(s, a)\\) \u662f\u7edf\u4e00\u7684\uff0c\u4e0d\u662f\u540e\u9762\u5b9a\u4e49\u7684\u3002\u4e5f\u5c31\u662f\u540e\u9762\u5b9a\u4e49\u7684 \\(Q\\) \u51fd\u6570\u5c11\u4e86\u8d77\u59cb\u9879\u7684\u4ea4\u53c9\u71b5\uff0c\u8fd9\u91cc \\(\\hat Q(s, a)\\) \u8865\u5145\u56de\u6765\u4e86\u3002","title":"Equivalence Between PG and SQL"},{"location":"RL/papers/EquivalenceBetweenPGandSQL/#equivalence-between-policy-gradient-and-soft-q-learning","text":"@article { schulman2017equivalence , title = {Equivalence between policy gradients and soft q-learning} , author = {Schulman, John and Chen, Xi and Abbeel, Pieter} , journal = {arXiv preprint arXiv:1704.06440} , year = {2017} } \u8bba\u6587\u94fe\u63a5 \u8fd9\u7bc7\u6587\u7ae0\u66f4\u50cf\u662fSchulman\u7684\u4e2a\u4eba\u6570\u5b66\u7b14\u8bb0\uff0c\u4ed6\u8fd9\u4e2a\u4eba\u6bd4\u8f83\u504f\u597d\u6570\u5b66\u63a8\u5bfc\u3002\u4f46\u662f\u6570\u5b66\u63a8\u5bfc\u5f88\u5bb9\u6613\u8ba9\u4eba\u9677\u5165\u5176\u4e2d\u3002\u4eba\u4eec\u5f80\u5f80\u6700\u540e\u53d1\u73b0\u5f3a\u5316\u5b66\u4e60\u7684\u6570\u5b66\u5e76\u4e0d\u5b8c\u5907\uff0c\u800c\u5927\u53d7\u6253\u51fb\u3002\u8fd9\u7bc7\u6587\u7ae0\u662f\u6302\u5728Arxiv\u4e0a\u7684\u5c0f\u6587\u7ae0\uff0c\u5c1d\u8bd5\u63ed\u793aPolicy Gradient\u548cSoft Q-Learning\u7684\u5173\u7cfb\uff0c\u7b97\u662f\u6709\u4e00\u5b9a\u7684\u542f\u53d1\u6027\u3002 \u6211\u6309\u7167\u4e2a\u4eba\u7684\u4e60\u60ef\u8fdb\u884c\u4e86\u91cd\u65b0\u7684\u63a8\u5bfc\u3002","title":"Equivalence Between Policy Gradient and Soft Q-Learning"},{"location":"RL/papers/EquivalenceBetweenPGandSQL/#_1","text":"\u9996\u5148\uff0c\u539f\u59cb\u7684\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u662f\u4e3a\u4e86\u6c42\u89e3 \\[ \\begin{aligned} \\max_{\\pi} \\rho(\\pi) =& (1 - \\gamma) \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi)} \\bigg[\\sum^{\\infty}_{t=0} \\gamma^t r_t \\bigg] \\\\ =& \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi), a \\sim \\pi(\\cdot \\vert s)} [r(s, a)]. \\end{aligned} \\] \u6700\u76f4\u63a5\u5730\uff0c\u4ece\u6700\u5927\u71b5\u7406\u8bba\u4e2d\u5f97\u5230\u542f\u53d1\uff0c\u71b5\u6b63\u5219\u5316\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u53d8\u6210\u4e86 \\[ \\begin{aligned} \\max_{\\pi} \\rho(\\pi) =& \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi), a \\sim \\pi(\\cdot \\vert s)} [r(s, a)] - \\alpha \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi)}[D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s))] \\\\ =& \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi), a \\sim \\pi(\\cdot \\vert s)} [r(s, a) - \\alpha D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s))] \\\\ =& (1 - \\gamma) \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi)} \\bigg[\\sum^{\\infty}_{t=0} \\gamma^t [r_t - \\alpha D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s))] \\bigg] \\end{aligned} \\] \u9996\u5148\u6211\u4eec\u6765\u7814\u7a76\u4e00\u79cd\u5b9a\u4e49\u65b9\u5f0f \\[ Q_\\pi(s, a) = \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi)} \\bigg[\\sum^{\\infty}_{t=0} \\gamma^t [r_t - \\alpha D_{KL}(\\pi(\\cdot \\vert s_t) \\Vert \\tilde \\pi(\\cdot \\vert s_t)) \\vert s_0 = s, a_0 = a] \\bigg]. \\] \\[ V_\\pi(s) = \\mathbb{E}_{a \\sim \\pi(\\cdot \\vert s)} [Q_\\pi(s, a)]. \\] \\[ \\rho(\\pi) = \\mathbb{E}_{s \\sim p_0, a \\sim \\pi(\\cdot \\vert s)} [Q_\\pi(s, a)]. \\] \u53ef\u89c1\u8fd9\u662f\u4e00\u4e2a\u7275\u4e00\u53d1\u800c\u52a8\u5168\u8eab\u7684\u6539\u53d8\uff0c\u5e76\u4e14\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u4e5f\u56e0\u6b64\u53d8\u5f62\u4e3a(\u77e9\u9635\u5f62\u5f0f\uff0c\u8981\u6c42\u72b6\u6001\u52a8\u4f5c\u90fd\u662f\u6709\u9650\u96c6) \\[ TQ = R - \\alpha D_{KL}(\\pi\\Vert\\tilde \\pi) + \\gamma \\mathbf{P}_{\\pi} Q. \\] \\[ \\begin{aligned} TQ(s, a) =& \\max_{\\pi} R(s, a) - \\alpha D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s))\\\\ &+ \\gamma \\sum_{s'} p(s' \\vert s, a) \\sum_{a'} \\pi(a' \\vert s') Q(s', a'). \\end{aligned} \\] \u5176\u4e2d \\(\\tilde \\pi(a \\vert s)\\) \u901a\u5e38\u662f\u5747\u5300\u5206\u5e03\u3002 \u4e0a\u9762\u8fd9\u79cd\u5b9a\u4e49\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u5f88\u96be\u6c42\u89e3\uff0c\u6240\u4ee5\u4eba\u4eec\u5b9a\u4e49\u4e86\u53e6\u4e00\u5957\u7b26\u53f7\u3002\u8fd9\u5957\u7b26\u53f7\u4f1a\u770b\u8d77\u6765\u7a0d\u5fae\u7ed5\u4e00\u4e9b\uff0c\u4f46\u662f\u5728\u8ba1\u7b97\u4e2d\u80fd\u591f\u63d0\u4f9b\u5f88\u5927\u7684\u65b9\u4fbf\u3002 \\[ Q_\\pi(s, a) = \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi)} \\bigg[r_0 + \\sum^{\\infty}_{t=1} \\gamma^t [r_t - \\alpha D_{KL}(\\pi(\\cdot \\vert s_t) \\Vert \\tilde \\pi(\\cdot \\vert s_t)) \\vert s_0 = s, a_0 = a] \\bigg]. \\] \\[ V_\\pi(s) = \\mathbb{E}_{a \\sim \\pi(\\cdot \\vert s)} [Q_\\pi(s, a)] - \\alpha D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s)). \\] \\[ \\rho(\\pi) = \\mathbb{E}_{s \\sim p_0, a \\sim \\pi(\\cdot \\vert s)}[Q_\\pi(s, a) - \\alpha D_{KL}(\\pi(\\cdot \\vert s) \\Vert \\tilde \\pi(\\cdot \\vert s))]. \\] \u7c7b\u4f3c\u7684\uff0c\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u53d8\u4e3a \\[ TQ = \\max_{\\pi} R + \\gamma \\mathbf{P}_{\\pi} (Q - \\alpha D_{KL}(\\pi \\Vert \\tilde \\pi)). \\] \u6216\u8005\u7b49\u4ef7\u4e3a \\[ \\begin{aligned} TQ(s, a) =& \\max_{\\pi} R(s, a) + \\gamma \\sum_{s'} p(s' \\vert s, a) \\sum_{a'} \\pi(a' \\vert s') \\\\ & [ Q(s', a') - \\alpha(\\ln\\pi(a' \\vert s') - \\ln\\tilde\\pi(a' \\vert s')) ]. \\\\ \\end{aligned} \\] \u53ef\u4ee5\u8bc1\u660e\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\u662f\u4e00\u4e2a\u6536\u7f29\u6620\u5c04\uff0c\u5b58\u5728\u4e0d\u52a8\u70b9\u3002\u6211\u4eec\u5b9a\u4e49 \\[ \\pi_Q = \\arg\\max_{\\pi} \\sum_{a} \\pi(a \\vert s) [ Q(s, a) - \\alpha(\\ln\\pi(a \\vert s) - \\ln\\tilde\\pi(a \\vert s)) ]. \\] \u6c42\u89e3\u53ef\u5f97 \\[ \\pi_Q(s, a) = \\frac{\\tilde\\pi(a\\vert s) \\exp{[Q(s, a)/\\alpha]}}{\\sum_{a'} \\tilde\\pi(a' \\vert s) \\exp{[Q(s, a')/\\alpha]}}. \\] \u518d\u5b9a\u4e49 \\[ V_Q(s) = \\alpha \\ln \\bigg\\{\\sum_{a} \\tilde \\pi(a \\vert s) \\exp[Q(s, a; \\theta_Q)/\\alpha]\\bigg\\}. \\] \u90a3\u4e48\u6709\u5173\u7cfb \\[ \\pi_Q(a \\vert s) = \\tilde\\pi(a \\vert s) \\exp\\{[Q(s, a) - V_Q(s)]/\\alpha\\}; \\] \\[ Q(s, a) = V_Q(s) + \\alpha \\ln \\frac{\\pi_Q(a \\vert s)}{\\tilde\\pi(a \\vert s)}; \\] \\[ V_Q(s) = \\sum_{a}\\pi_Q(a \\vert s) Q(s, a) - \\alpha D^Q_{KL}(s), \\] \u5176\u4e2d \\(D^{Q}_{KL}(s) = D_{KL}(\\pi_Q(\\cdot \\vert s) \\Vert \\tilde\\pi(\\cdot \\vert s))\\) ; \\[ TQ = R + \\gamma \\mathbf{P}_{\\pi} V_Q. \\]","title":"\u71b5\u6b63\u5219\u5316\u5f3a\u5316\u5b66\u4e60"},{"location":"RL/papers/EquivalenceBetweenPGandSQL/#soft-q-learning","text":"\u6211\u4eec\u4f7f\u7528 \\(\\theta_Q\\) \u6765\u53c2\u6570\u5316 \\(Q\\) \u51fd\u6570\uff0c\u5199\u4e3a \\(Q(s, a; \\theta_Q)\\) \u3002 \u90a3\u4e48 Soft Q-Learning \u4f7f\u7528\u7684\u635f\u5931\u51fd\u6570\u4e3a \\[ L(\\theta_Q) = \\mathbb{E}_{s\\sim p, a \\sim \\pi(\\cdot \\vert s; \\theta_Q)}\\bigg[\\frac{1}{2} \\Vert Q(s, a; \\theta_Q) - TQ(s, a;\\theta) \\Vert^2\\bigg\\vert_{\\theta=\\theta_Q}\\bigg], \\] \u90a3\u4e48 \\[ \\begin{aligned} & \\nabla_{\\theta_Q} L(\\theta_Q) \\\\ = &\\mathbb{E}_{s\\sim p, a \\sim \\pi(\\cdot \\vert s; \\theta_Q)}\\bigg\\{[Q(s, a; \\theta_Q) - TQ(s, a;\\theta_Q)]\\nabla_{\\theta_Q} Q(s, a; \\theta_Q) \\bigg\\}\\\\ =&\\mathbb{E}_{s\\sim p, a \\sim \\pi(\\cdot \\vert s; \\theta_Q)}\\bigg\\{\\bigg[V(s;\\theta_Q) + \\alpha \\ln \\frac{\\pi(a \\vert s; \\theta_Q)}{\\tilde \\pi(a \\vert s)} - r(s, a) \\\\ & - \\gamma \\sum_{s'} p(s'\\vert s, a) V(s';\\theta_Q) \\bigg] \\nabla_{\\theta_Q} \\bigg[V(s;\\theta_Q) + \\alpha \\ln\\frac{\\pi(a \\vert s; \\theta_Q)}{\\tilde \\pi(a \\vert s)}\\bigg] \\bigg\\}\\\\ =& \\mathbb{E}_{s\\sim p, a \\sim \\pi(\\cdot \\vert s; \\theta_Q)} \\bigg\\{ - \\alpha \\hat Q(s, a; \\theta_Q) \\nabla_{\\theta_Q}\\ln \\pi(a \\vert s; \\theta_Q) \\\\ & + \\nabla_{\\theta_Q} \\frac{1}{2}\\Vert V(s; \\theta_Q) - \\hat V(s; \\theta) \\Vert^2\\vert_{\\theta = \\theta_Q}\\bigg\\}. \\end{aligned} \\] \uff08\u7528\u5230\u4e86 \\(\\sum_a \\nabla_{\\theta} \\pi(a \\vert s; \\theta) = 0\\) \u3002\uff09 \u5176\u4e2d \\[ \\hat Q(s, a;\\theta_Q) = r(s, a) + \\gamma \\sum_{s'}p(s' \\vert s, a) V(s'; \\theta_Q) - \\alpha \\ln\\frac{\\pi(a \\vert s; \\theta_Q)}{\\tilde \\pi(a \\vert s)}. \\] \\[ \\hat V(s; \\theta) = \\sum_{a} \\pi(a \\vert s; \\theta) \\bigg[r(s, a) + \\gamma \\sum_{s'}p(s' \\vert s, a) V(s';\\theta)\\bigg] - \\alpha D_{KL}(s; \\theta). \\] \u5176\u4e2d \\(-\\alpha \\hat Q(s, a; \\theta_Q) \\nabla_{\\theta_Q} \\ln \\pi(s, a; \\theta_Q)\\) \u548c\u7b56\u7565\u68af\u5ea6\u7684\u5f62\u5f0f\u975e\u5e38\u7c7b\u4f3c\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b58\u5728\u7740\u67d0\u79cd\u504f\u5dee\uff0c\u518d\u539f\u8bba\u6587\u4e2d\u5c31\u6ca1\u6709\u518d\u6df1\u5165\u8ba8\u8bba\u4e86\u3002\u6211\u6682\u65f6\u4e5f\u6ca1\u6709\u66f4\u6df1\u5165\u5730\u7814\u7a76\u3002 Note \\(\\hat Q(s, a; \\theta_Q)\\) \u548c\u7b2c\u4e00\u6b21\u5b9a\u4e49\u7684 \\(Q(s, a)\\) \u662f\u7edf\u4e00\u7684\uff0c\u4e0d\u662f\u540e\u9762\u5b9a\u4e49\u7684\u3002\u4e5f\u5c31\u662f\u540e\u9762\u5b9a\u4e49\u7684 \\(Q\\) \u51fd\u6570\u5c11\u4e86\u8d77\u59cb\u9879\u7684\u4ea4\u53c9\u71b5\uff0c\u8fd9\u91cc \\(\\hat Q(s, a)\\) \u8865\u5145\u56de\u6765\u4e86\u3002","title":"Soft Q-Learning"},{"location":"RL/papers/GAIL/","text":"Generative Adversarial Imitation Learning \u00b6 @article { ho2016generative , title = {Generative Adversarial Imitation Learning} , author = {Ho, Jonathan and Ermon, Stefano} , pages = {4565--4573} , year = {2016} } \u8bba\u6587\u94fe\u63a5 Abstract \u672c\u6587\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u540d\u7684\u6a21\u4eff\u5b66\u4e60\u7b97\u6cd5GAIL\u3002\u6211\u505a\u8fd9\u7bc7\u8bba\u6587\u7684\u7b14\u8bb0\uff0c\u4e3b\u8981\u662f\u6bd4\u8f83\u770b\u4e2d\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u9006\u5f3a\u5316\u5b66\u4e60\u6570\u5b66\u95ee\u9898\u7684\u63cf\u8ff0\u4e0e\u5206\u6790\u3002\u867d\u7136\u5b83\u672c\u8eab\u7684GAIL\u7b97\u6cd5\u548cGAN\u7b97\u6cd5\u5982\u51fa\u4e00\u8f99\uff0c\u4f46\u662f\u6587\u7ae0\u672c\u8eab\u7684\u5206\u6790\u5bf9\u6211\u7406\u89e3\u9006\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u5e2e\u52a9\u6bd4\u8f83\u5927\u3002 \u5b9a\u4e49\u7b26\u53f7 \u00b6 \u5b9a\u4e49 \uff08 \u9006\u5f3a\u5316\u5b66\u4e60 \uff0c Inverse Reinforcement Learning\uff09 \u8bbe\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u95ee\u9898 \\(\\mathcal{MDP}=\\{\\mathcal{S}, \\mathcal{A}, p_0, p, \\gamma, C\\}\\) \uff08 \\(C\\) \u662f\u635f\u5931\u51fd\u6570\uff09\uff0c\u4ee5\u53ca\u4e13\u5bb6\u7b56\u7565 \\(\\pi_E\\) \uff0c\u90a3\u4e48\u9006\u5f3a\u5316\u5b66\u4e60\u9700\u8981\u6c42\u89e3\u5982\u4e0b\u95ee\u9898\uff1a \\[ \\tag{1}\\label{equ:irl} \\max_{c \\in \\mathcal{C}} \\bigg(\\min_{\\pi \\in \\Pi} \\rho(\\pi)\\bigg) - \\rho(\\pi_E). \\] \u6216\u8005\u6dfb\u52a0\u4e0e\u7b56\u7565\u7684\u71b5\u6709\u5173\u7684\u6b63\u5219\u9879 \\[ \\tag{2}\\label{equ:irl-entropy} \\max_{c \\in \\mathcal{C}} \\bigg(-\\alpha H(\\pi) + \\min_{\\pi \\in \\Pi} \\rho(\\pi) \\bigg) - \\rho(\\pi_E). \\] \u5176\u4e2d \\(H(\\pi) = \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi)}[-\\int_{a}\\pi(a \\vert s) \\ln \\pi(a \\vert s) \\mathrm{d} a ]\\) \u3002 \u6216\u8005\u6dfb\u52a0\u4e0e\u5956\u52b1\u51fd\u6570\u6709\u5173\u7684\u6b63\u5219\u9879 \\[ \\tag{3}\\label{equ:irl-entropy-psi} \\max_{c \\in \\mathcal{C}} -\\psi(c) + \\bigg(-\\alpha H(\\pi) + \\min_{\\pi \\in \\Pi} \\rho(\\pi) \\bigg) - \\rho(\\pi_E). \\] \u5176\u4e2d \\(\\psi(c)\\) \u662f\u5173\u4e8e \\(c\\) \u7684\u51f8\u51fd\u6570\u3002 \u540c\u65f6\uff0c\u6211\u4eec\u5b9a\u4e49\u7b26\u53f7 \\[ \\tag{4} IRL_{\\psi}(\\pi_E) = \\arg\\max_{c \\in \\mathcal{C}} -\\psi(c) + \\bigg(-\\alpha H(\\pi) + \\min_{\\pi \\in \\Pi} \\rho(\\pi) \\bigg) - \\rho(\\pi_E), \\] \u4ee5\u53ca \\[ \\tag{5} RL(c) = \\arg\\min_{\\pi \\in \\Pi} -H(\\pi) + \\mathbb{E}_{\\pi}[c(s, a)]. \\] \u63a8\u5bfc\u9006\u5f3a\u5316\u5b66\u4e60\u7684\u6700\u4f18\u7b56\u7565 \u00b6 \u9996\u5148\u56de\u5fc6\u5f3a\u5316\u5b66\u4e60\u7b56\u7565\u503c\u51fd\u6570\u4e3a \\[ \\begin{aligned} \\rho(\\pi) =& \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi)}\\bigg[(1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^t c(s_t, a_t) \\bigg]\\\\ =& \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi), a \\sim \\pi(\\cdot \\vert s; \\pi)}[c(s, a)]\\\\ =& \\sum_{s, a} p_{\\gamma}(s, a; \\pi) c(s, a). \\end{aligned} \\tag{6} \\] \u5176\u4e2d \\(p_{\\gamma}(s; \\pi) = (1 - \\gamma) \\sum^{\\infty}_{t=0}\\gamma^t p_t(s; \\pi)\\) \uff0c \u4ee5\u53ca \\(p_{\\gamma}(s, a; \\pi) = p_{\\gamma}(s; \\pi) \\pi(a \\vert s)\\) \u3002\u8054\u5408\u5206\u5e03 \\(p_{\\gamma}(s, a; \\pi)\\) \u4e5f\u88ab\u53eb\u505a\u5173\u4e8e \\(\\pi\\) \u7684 occupancy measures \u3002 \u5b9a\u7406 \u8bbe\u4e24\u4e2a\u96c6\u5408 \\[ \\tag{7} \\mathcal{D}_1 = \\{p_{\\gamma}(s, a; \\pi) : \\pi \\in \\Pi\\}, \\] \u4ee5\u53ca \\[ \\tag{8} \\mathcal{D}_2 = \\bigg\\{p(s, a): \\sum_a p(s, a) = (1 - \\gamma) p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') p(s', a')\\bigg\\}. \\] \u90a3\u4e48 \\(\\mathcal{D}_1\\) \u548c \\(\\mathcal{D}_2\\) \u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u53cc\u5c04\u5173\u7cfb\u3002 \u8bc1\u660e \u5bf9\u4e8e\u4efb\u610f\u7684 \\(p_{\\gamma}(s, a; \\pi) \\in \\mathcal{D}_1\\) \u6ee1\u8db3 \\(p_{\\gamma}(s, a; \\pi) \\in \\mathcal{D}_2\\) \uff0c \u5373 \\(\\mathcal{D}_1 \\subseteq \\mathcal{D}_2\\) \u3002\u4efb\u610f \\(p_{\\gamma}(s, a; \\pi) \\in \\mathcal{D}_1\\) \uff0c \u53ef\u4ee5\u88ab\u5e26\u5165 \\(\\mathcal{D}_2\\) \u7684\u6761\u4ef6 \\[ \\begin{aligned} & (1 - \\gamma) p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') p_{\\gamma}(s, a; \\pi) \\\\ =& (1 - \\gamma) p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') (1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^t p_t(s; \\pi) \\\\ =& (1 - \\gamma) p_0(s) + (1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^{t+1} p_{t+1}(s; \\pi) \\\\ =& (1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^{t} p_{t}(s; \\pi). \\end{aligned} \\tag{9} \\] \u63a5\u7740\u8bc1\u660e \\(\\mathcal{D}_2 \\subseteq \\mathcal{D}_1\\) \u3002\u5bf9\u4e8e\u4efb\u610f\u7684 \\(p(s, a) \\in \\mathcal{D}_2\\) \uff0c \u4eba\u4e3a\u5b9a\u4e49\u548c\u5b83\u76f8\u5173\u7684\u5206\u5e03 \\[ p(s) = \\sum_{a} p(s, a), \\tag{10} \\] \u4ee5\u53ca\u7b56\u7565 \\[ \\pi_p(a \\vert s) = \\frac{p(s, a)}{\\sum_{a'} p(s, a')}. \\tag{11} \\] \u90a3\u4e48 \\[ p(s) = (1 - \\gamma)p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') \\pi_p(a' \\vert s') p(s'). \\tag{12} \\] \u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\u53ef\u5f97 \\[ \\mathbf{p}^T = (1 - \\gamma)\\mathbf{p}^T_0 + \\gamma \\mathbf{p}^T \\mathbf{P}^{\\pi_p}. \\tag{13} \\] \u5176\u4e2d \\(\\mathbf{P}^{\\pi_p}_{ij} = \\sum_{a'} p(s_j \\vert s'_i, a') \\pi(a' \\vert s'_i)\\) \u3002\u6c42\u89e3\u53ef\u5f97 \\[ \\mathbf{p}^T = (1 - \\gamma)\\mathbf{p}^T_0 (I - \\gamma \\mathbf{P}^{\\pi_p})^{-1} = (1 - \\gamma) \\mathbf{p}^T_0 \\sum^{\\infty}_{t=0} (\\gamma \\mathbf{P}^{\\pi_p})^{t}. \\tag{13} \\] \u5199\u56de\u5230\u6cdb\u5316\u5f62\u5f0f\u53ef\u5f97 \\[ p(s) = (1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^t p_t(s; \\pi_p) = p_{\\gamma}(s; \\pi_p). \\tag{14} \\] \u6027\u8d28 \\(\\mathcal{D}_2\\) \u662f\u4e00\u4e2a\u51f8\u96c6\u5408\u3002 \u8bc1\u660e \u5bf9\u4e8e\u4efb\u610f\u7684 \\(p_A(s, a) \\in \\mathcal{D}_2\\) \u548c \\(p_B(s, a) \\in \\mathcal{D}_2\\) \uff0c \\[ \\begin{aligned} &\\sum_a [\\lambda p_A(s, a) + (1 - \\lambda) p_B(s, a)] \\\\ =& \\lambda \\bigg[(1 - \\gamma)p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') p_A(s', a')\\bigg] \\\\ & + (1 - \\lambda) \\bigg[(1 - \\gamma)p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') p_B(s', a')\\bigg] \\\\ =& (1 - \\gamma) p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a')[\\lambda p_A(s', a') + (1 - \\lambda)p_B(s', a')]. \\end{aligned} \\] \u6240\u4ee5 \\(\\lambda p_A(s, a) + (1 - \\lambda) p_B(s, a)] \\in \\mathcal{D}_2\\) \u3002\u7efc\u4e0a \\(\\mathcal{D}_2\\) \u662f\u4e00\u4e2a\u51f8\u96c6\u3002 \u5b9a\u7406 \u5982\u679c \\(\\psi(c)\\) \u662f\u4e00\u4e2a\u5173\u4e8e \\(c\\) \u7684\u51f8\u51fd\u6570\uff0c\u5e76\u4e14 \\(\\mathcal{C}\\) \u662f\u4e00\u4e2a\u51f8\u96c6\uff0c\u90a3\u4e48 \\[ \\begin{aligned} RL \\circ IRL_{\\psi}(\\pi_E) =& \\arg\\min_{\\pi\\in\\Pi}\\max_{c \\in \\mathcal{C}} -\\alpha H(\\pi) + \\sum_{s, a}[p_{\\gamma}(s, a;\\pi) - p_{\\gamma}(s, a;\\pi_E)]c(s, a) - \\psi(c)\\\\ =& \\arg\\min_{\\pi\\in\\Pi} -\\alpha H(\\pi) + \\psi^*(p_{\\gamma,\\pi} - p_{\\gamma,\\pi_E}). \\end{aligned} \\tag{15} \\] \u8bc1\u660e \u9996\u5148\u539f\u95ee\u9898\u4e3a \\[ \\begin{aligned} RL \\circ IRL_{\\psi}(\\pi_E) =& \\arg\\min_{\\pi\\in\\Pi}\\max_{c \\in \\mathcal{C}} -\\psi(c) + \\bigg(-\\alpha H(\\pi) + \\min_{\\pi \\in \\Pi} \\rho(\\pi) \\bigg) - \\rho(\\pi_E)\\\\ =& \\arg\\min_{\\pi\\in\\Pi}\\max_{c \\in \\mathcal{C}} \\min_{\\pi \\in \\Pi} -\\alpha H(\\pi) + \\sum_{s, a} [p_{\\gamma}(s, a; \\pi) - p_{\\gamma}(s, a; \\pi_E)]c(s, a) -\\psi(c)\\\\ :=& \\arg\\min_{\\pi\\in\\Pi}\\max_{c \\in \\mathcal{C}} \\min_{\\pi \\in \\Pi} L(c, \\pi). \\end{aligned} \\tag{16} \\] \u6211\u4eec\u5982\u679c\u80fd\u591f\u8bc1\u660e \\[ \\max_{c \\in \\mathcal{C}} \\min_{\\pi \\in \\Pi} L(c, \\pi) = \\min_{\\pi \\in \\Pi} \\max_{c \\in \\mathcal{C}} L(c, \\pi), \\tag{17} \\] \u90a3\u4e48\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u5b9a\u7406\u7684\u8bc1\u660e\u3002 \u7b2c\u4e00\u6b65\u662f\u6784\u9020\u4e00\u4e2a\u7b49\u4ef7\u95ee\u9898 \\[ \\max_{c \\in \\mathcal{C}} \\min_{p \\in \\mathcal{D}_2} L(c, p) = -\\alpha H(p) + \\sum_{s, a} [p(s, a) - p_{\\gamma}(s, a; \\pi_E)]c(s, a) -\\psi(c),\\\\ \\tag{18} \\] \u5176\u4e2d \\[ H(p) = - \\int_{s, a} p(s, a) \\ln \\frac{p(s, a)}{\\sum_{a'} p(s, a')}\\mathrm{d} s \\mathrm{d}a. \\tag{19} \\] \u5df2\u77e5 \\(p(s, a) \\in \\mathcal{D}_2\\) \u662f\u7b56\u7565 \\(\\pi_p(s, a) = p(s, a) / \\sum_{a'}p(s, a')\\) \u7684 occupancy measure \u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e \\(H(p) = H(\\pi_p)\\) \uff0c \\[ \\begin{aligned} H(p) =& - \\int_{s, a} p(s, a) \\ln \\frac{p(s, a)}{\\sum_{a'} p(s, a')}\\mathrm{d} s \\mathrm{d}a \\\\ =& - \\int_{s, a} p_{\\gamma}(s; \\pi_p) \\pi_p(a \\vert s) \\ln \\pi_p(a \\vert s) \\mathrm{d} a \\mathrm{d}s \\\\ =& H(\\pi_p). \\end{aligned} \\] \u6240\u4ee5 \\[ L(c, \\pi_p) = L(c, p). \\tag{20} \\] \u540c\u65f6\u4e5f\u5c31\u5f88\u5bb9\u6613\u5f97\u5230\u7ed3\u8bba \\[ \\max_{c \\in \\mathcal{C}} \\min_{\\pi \\in \\Pi} L(c, \\pi_p) = \\max_{c \\in \\mathcal{C}} \\min_{p \\in \\mathcal{D}_2} L(c, p). \\tag{21} \\] \u6211\u4eec\u63a5\u7740\u8bc1\u660e\u7b2c\u4e8c\u6b65\u5f3a\u5bf9\u5076\u6027\u3002 \\[ \\max_{c \\in \\mathcal{C}} \\min_{p \\in \\mathcal{D}_2} L(c, p) = \\min_{p \\in \\mathcal{D}_2} \\max_{c \\in \\mathcal{C}} L(c, p). \\tag{22} \\] \u6211\u4eec\u5982\u679c\u80fd\u591f\u5f97\u5230 \\(L(c, p)\\) \u5173\u4e8e \\(c\\) \u662f\u4e00\u4e2a\u51f9\u51fd\u6570\uff08concave\uff09\uff0c\u5e76\u4e14\u5173\u4e8e \\(p\\) \u662f\u4e00\u4e2a\u51f8\u51fd\u6570\u5373\u53ef\uff0c\u518d\u7ed3\u5408\u6761\u4ef6 \\(\\mathcal{C}\\) \u548c \\(\\mathcal{D}_2\\) \u90fd\u662f\u51f8\u96c6\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u978d\u70b9\u7684\u6027\u8d28\u5c31\u53ef\u4ee5\u5f97\u5230\u5f3a\u5bf9\u5076\u6027\u3002 \u6240\u9700\u8981\u7684\u6761\u4ef6\u53ea\u5dee\u4e00\u4e2a \\(L(c, p)\\) \u5173\u4e8e \\(p\\) \u662f\u51f8\u51fd\u6570\u7684\u8bc1\u660e\uff0c\u5373\u8bc1\u660e \\(-H(p)\\) \u662f\u4e00\u4e2a\u51f8\u51fd\u6570\uff0c \\[ -H(p) = \\sum_{s, a} p(s, a) \\ln \\frac{p(s, a)}{\\sum_{a'}p(s, a')}. \\tag{23} \\] \u8f85\u52a9\u5b9a\u7406 \\[ \\sum_{i} a_i \\log \\frac{a_i}{b_i} \\ge \\bigg(\\sum_i a_i\\bigg) \\ln \\frac{\\sum_i a_i}{\\sum_i b_i}. \\tag{24} \\] \u8bc1\u660e \u6839\u636eJensen Inequality\uff1a\u8bbe \\(\\alpha_i \\ge 0\\) \uff0c \\(\\sum_i \\alpha_i = 1\\) \u4ee5\u53ca \\(f\\) \u662f\u51f8\u51fd\u6570\uff0c\u90a3\u4e48 \\[ \\sum_i \\alpha_i f(t_i) \\ge f\\bigg(\\sum_i \\alpha_i t_i\\bigg). \\tag{25} \\] \u4ee4 \\(\\alpha_i = \\frac{b_i}{\\sum_j b_j}\\) \uff0c \\(t_i = \\frac{a_i}{b_i}\\) \u4ee5\u53ca \\(f(t) = t \\ln t\\) \u53ef\u5f97 \\[ \\sum_i \\frac{b_i}{\\sum_j b_j} \\frac{a_i}{b_i} \\ln \\frac{a_i}{b_i} \\ge \\sum_{i} \\frac{a_i}{\\sum_j b_j} \\ln \\sum_i \\frac{a_i}{\\sum_j b_j}. \\tag{26} \\] \u5316\u7b80\u53ef\u5f97\u5f15\u7406\u3002 \u6240\u4ee5\u5bf9\u4e8e\u4efb\u610f\u7684 \\(p_A(s, a)\\) \u548c \\(p_B(s, a)\\) \u53ef\u5f97 \\[ \\begin{aligned} &H[\\lambda p_A + (1 - \\lambda)p_B]\\\\ =&[\\lambda p_A(s, a) + (1 - \\lambda) p_B(s, a)] \\ln \\frac{\\lambda p_A(s, a) + (1 - \\lambda)p_B(s, a)}{\\sum_{a'} [\\lambda p_A(s, a') + (1 - \\lambda) p_B(s, a')]} \\\\ \\le& \\lambda p_A(s, a) \\ln \\frac{\\lambda p_A(s, a)}{\\sum_{a'}\\lambda p_A(s, a)} + (1 - \\lambda) p_B(s, a) \\ln \\frac{(1 - \\lambda) p_B(s, a)}{\\sum_{a'} (1 - \\lambda) p_B(s, a)} \\\\ =& \\lambda H(p_A) + (1 - \\lambda) H(p_B). \\end{aligned} \\tag{27} \\] \u518d\u4f7f\u7528\u5bf9\u5076\u7a7a\u95f4\u53ef\u5f97 \\[ \\min_{p \\in \\mathcal{D}_2} \\max_{c \\in \\mathcal{C}} L(c, p) = \\min_{\\pi \\in \\Pi} \\max_{c \\in \\mathcal{C}} L(c, p). \\tag{28} \\] \u7efc\u5408\u4ee5\u4e0a\u4e09\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u5f97\u5230\u5f3a\u5bf9\u5076\u6027\uff0c\u5373\u5b9a\u7406\u7684\u7ed3\u8bba\u3002 \u63a8\u8bba \u5f53 \\(\\psi(c)\\) \u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u5e76\u4e14 \\(\\mathcal{C} = \\mathbb{R}^{\\vert \\mathcal{S} \\times \\mathcal{A}\\vert}\\) \u65f6\uff0c \\(p^* = p_E\\) \u3002 \u8bc1\u660e \u5f53 \\(\\psi(c)\\) \u662f\u4e00\u4e2a\u5e38\u6570\u65f6\uff0c\u6c42\u89e3\u95ee\u9898\u53d8\u6210 \\[ \\min_{p \\in \\mathcal{D}_2}\\max_{c \\in \\mathcal{C}} -\\alpha H(p) + \\sum_{s, a}[p(s, a) - p_{\\gamma}(s, a;\\pi_E)]c(s, a). \\tag{29} \\] \u5b83\u7684\u7b49\u4ef7\u95ee\u9898\u4e3a \\[ \\min_{p \\in \\mathcal{D}_2} -\\alpha H(p),\\quad s.t.\\quad p(s, a) = p_{\\gamma}(s, a;\\pi_E), \\forall (s, a) \\in \\mathcal{S} \\times \\mathcal{A}. \\tag{30} \\] GAIL \u00b6 \u603b\u7ed3\u4e00\u4e0b\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u9006\u5f3a\u5316\u5b66\u4e60\uff08\u6a21\u4eff\u5b66\u4e60\uff0cImitation Learning\uff09\u6240\u9700\u8981\u6c42\u89e3\u7684\u95ee\u9898\u4e3a \\[ \\min_{\\pi \\in \\Pi} \\max_{c \\in \\mathcal{C}} -\\alpha H(\\pi) + \\sum_{s, a}[p_{\\gamma, \\pi}(s, a) - p_{\\gamma, \\pi_E}(s, a)]c(s, a) - \\psi(c). \\tag{31} \\] GAIL\u5c06\u5176\u5b9e\u4f8b\u5316\u4e3a \\[ \\min_{\\pi \\in \\Pi} \\max_{c \\prec \\pmb{0}} -\\alpha H(\\pi) + \\sum_{s, a}[p_{\\gamma, \\pi}(s, a) - p_{\\gamma, \\pi_E}(s, a)]c(s, a) - \\psi_{GA}(c), \\tag{32} \\] \u5176\u4e2d \\[ \\psi_{GA}(c) = \\sum_{s, a} p_{\\gamma, \\pi_E}(s, a)[-c(s, a) - \\log(1 - e^{c(s,a)})]. \\tag{33} \\] \u5e26\u5165 \\(\\psi_{GA}\\) \u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4f18\u5316\u95ee\u9898 \\[ \\min_{\\pi \\in \\Pi} \\max_{c \\prec \\pmb{0}} -\\alpha H(\\pi) + \\sum_{s, a}[p_{\\gamma, \\pi}(s, a) c(s, a) + p_{\\gamma, \\pi_E}(s, a) \\ln(1 - e^{c(s, a)})]. \\tag{34}\\label{equ:gail-problem1} \\] \u5173\u4e8e \\(c\\) \u7684\u4f18\u5316\u95ee\u9898\u7684\u95ed\u89e3\u4e3a \\[ c^*(s, a) = \\ln \\frac{p_{\\gamma}(s, a; \\pi)}{p_{\\gamma}(s, a; \\pi) + p_{\\gamma}(s, a; \\pi_E)}. \\tag{35} \\] \u90a3\u4e48\uff0c\u4f18\u5316\u95ee\u9898(\\ref{equ:gail-problem1})\u5c31\u53d8\u6210\u4e86 \\[ \\begin{aligned} \\min_{\\pi \\in \\Pi} -\\alpha H(\\pi) + \\sum_{s, a}\\bigg[&p_{\\gamma, \\pi}(s, a) \\ln \\frac{p_{\\gamma}(s, a; \\pi)}{p_{\\gamma}(s, a; \\pi) + p_{\\gamma}(s, a; \\pi_E)} \\\\ +& p_{\\gamma, \\pi_E}(s, a) \\ln \\frac{p_{\\gamma}(s, a; \\pi_E)}{p_{\\gamma}(s, a; \\pi) + p_{\\gamma}(s, a; \\pi_E)}\\bigg]. \\end{aligned} \\tag{36} \\] \u8fd9\u4e2a\u4f18\u5316\u95ee\u9898\u672c\u8d28\u4e0a\u662f\u6700\u5c0f\u5316\u5206\u5e03 \\(p_{\\gamma}(s, a;\\pi)\\) \u548c \\(p_{\\gamma}(s, a; \\pi_E)\\) \u7684Jensen-Shannon divergence\u3002\u4e5f\u5c31\u662f \\[ D_{JS}(p_{\\gamma,\\pi} \\Vert p_{\\gamma, \\pi_E}) := D_{KL}(p_{\\gamma,\\pi} \\Vert (p_{\\gamma,\\pi} + p_{\\gamma,\\pi_E})/2) + D_{KL}(p_{\\gamma, \\pi_E} \\Vert (p_{\\gamma, \\pi} + p_{\\gamma, \\pi_E})/2). \\] \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u51fd\u6570 \\(D_w(s, a)\\) \u6765\u95f4\u63a5\u6c42\u89e3 \\(c^*(s, a)\\) \\[ L(w) = \\sum_{s, a}\\bigg[p_{\\gamma, \\pi}(s, a) \\ln D_w(s, a) + p_{\\gamma, \\pi_E}(s, a) \\ln (1 - D_w(s, a))\\bigg]. \\tag{37} \\]","title":"GAIL"},{"location":"RL/papers/GAIL/#generative-adversarial-imitation-learning","text":"@article { ho2016generative , title = {Generative Adversarial Imitation Learning} , author = {Ho, Jonathan and Ermon, Stefano} , pages = {4565--4573} , year = {2016} } \u8bba\u6587\u94fe\u63a5 Abstract \u672c\u6587\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u540d\u7684\u6a21\u4eff\u5b66\u4e60\u7b97\u6cd5GAIL\u3002\u6211\u505a\u8fd9\u7bc7\u8bba\u6587\u7684\u7b14\u8bb0\uff0c\u4e3b\u8981\u662f\u6bd4\u8f83\u770b\u4e2d\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u9006\u5f3a\u5316\u5b66\u4e60\u6570\u5b66\u95ee\u9898\u7684\u63cf\u8ff0\u4e0e\u5206\u6790\u3002\u867d\u7136\u5b83\u672c\u8eab\u7684GAIL\u7b97\u6cd5\u548cGAN\u7b97\u6cd5\u5982\u51fa\u4e00\u8f99\uff0c\u4f46\u662f\u6587\u7ae0\u672c\u8eab\u7684\u5206\u6790\u5bf9\u6211\u7406\u89e3\u9006\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u5e2e\u52a9\u6bd4\u8f83\u5927\u3002","title":"Generative Adversarial Imitation Learning"},{"location":"RL/papers/GAIL/#_1","text":"\u5b9a\u4e49 \uff08 \u9006\u5f3a\u5316\u5b66\u4e60 \uff0c Inverse Reinforcement Learning\uff09 \u8bbe\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u95ee\u9898 \\(\\mathcal{MDP}=\\{\\mathcal{S}, \\mathcal{A}, p_0, p, \\gamma, C\\}\\) \uff08 \\(C\\) \u662f\u635f\u5931\u51fd\u6570\uff09\uff0c\u4ee5\u53ca\u4e13\u5bb6\u7b56\u7565 \\(\\pi_E\\) \uff0c\u90a3\u4e48\u9006\u5f3a\u5316\u5b66\u4e60\u9700\u8981\u6c42\u89e3\u5982\u4e0b\u95ee\u9898\uff1a \\[ \\tag{1}\\label{equ:irl} \\max_{c \\in \\mathcal{C}} \\bigg(\\min_{\\pi \\in \\Pi} \\rho(\\pi)\\bigg) - \\rho(\\pi_E). \\] \u6216\u8005\u6dfb\u52a0\u4e0e\u7b56\u7565\u7684\u71b5\u6709\u5173\u7684\u6b63\u5219\u9879 \\[ \\tag{2}\\label{equ:irl-entropy} \\max_{c \\in \\mathcal{C}} \\bigg(-\\alpha H(\\pi) + \\min_{\\pi \\in \\Pi} \\rho(\\pi) \\bigg) - \\rho(\\pi_E). \\] \u5176\u4e2d \\(H(\\pi) = \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi)}[-\\int_{a}\\pi(a \\vert s) \\ln \\pi(a \\vert s) \\mathrm{d} a ]\\) \u3002 \u6216\u8005\u6dfb\u52a0\u4e0e\u5956\u52b1\u51fd\u6570\u6709\u5173\u7684\u6b63\u5219\u9879 \\[ \\tag{3}\\label{equ:irl-entropy-psi} \\max_{c \\in \\mathcal{C}} -\\psi(c) + \\bigg(-\\alpha H(\\pi) + \\min_{\\pi \\in \\Pi} \\rho(\\pi) \\bigg) - \\rho(\\pi_E). \\] \u5176\u4e2d \\(\\psi(c)\\) \u662f\u5173\u4e8e \\(c\\) \u7684\u51f8\u51fd\u6570\u3002 \u540c\u65f6\uff0c\u6211\u4eec\u5b9a\u4e49\u7b26\u53f7 \\[ \\tag{4} IRL_{\\psi}(\\pi_E) = \\arg\\max_{c \\in \\mathcal{C}} -\\psi(c) + \\bigg(-\\alpha H(\\pi) + \\min_{\\pi \\in \\Pi} \\rho(\\pi) \\bigg) - \\rho(\\pi_E), \\] \u4ee5\u53ca \\[ \\tag{5} RL(c) = \\arg\\min_{\\pi \\in \\Pi} -H(\\pi) + \\mathbb{E}_{\\pi}[c(s, a)]. \\]","title":"\u5b9a\u4e49\u7b26\u53f7"},{"location":"RL/papers/GAIL/#_2","text":"\u9996\u5148\u56de\u5fc6\u5f3a\u5316\u5b66\u4e60\u7b56\u7565\u503c\u51fd\u6570\u4e3a \\[ \\begin{aligned} \\rho(\\pi) =& \\mathbb{E}_{\\tau \\sim \\mathcal{MDP}(\\pi)}\\bigg[(1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^t c(s_t, a_t) \\bigg]\\\\ =& \\mathbb{E}_{s \\sim p_{\\gamma}(\\cdot; \\pi), a \\sim \\pi(\\cdot \\vert s; \\pi)}[c(s, a)]\\\\ =& \\sum_{s, a} p_{\\gamma}(s, a; \\pi) c(s, a). \\end{aligned} \\tag{6} \\] \u5176\u4e2d \\(p_{\\gamma}(s; \\pi) = (1 - \\gamma) \\sum^{\\infty}_{t=0}\\gamma^t p_t(s; \\pi)\\) \uff0c \u4ee5\u53ca \\(p_{\\gamma}(s, a; \\pi) = p_{\\gamma}(s; \\pi) \\pi(a \\vert s)\\) \u3002\u8054\u5408\u5206\u5e03 \\(p_{\\gamma}(s, a; \\pi)\\) \u4e5f\u88ab\u53eb\u505a\u5173\u4e8e \\(\\pi\\) \u7684 occupancy measures \u3002 \u5b9a\u7406 \u8bbe\u4e24\u4e2a\u96c6\u5408 \\[ \\tag{7} \\mathcal{D}_1 = \\{p_{\\gamma}(s, a; \\pi) : \\pi \\in \\Pi\\}, \\] \u4ee5\u53ca \\[ \\tag{8} \\mathcal{D}_2 = \\bigg\\{p(s, a): \\sum_a p(s, a) = (1 - \\gamma) p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') p(s', a')\\bigg\\}. \\] \u90a3\u4e48 \\(\\mathcal{D}_1\\) \u548c \\(\\mathcal{D}_2\\) \u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u53cc\u5c04\u5173\u7cfb\u3002 \u8bc1\u660e \u5bf9\u4e8e\u4efb\u610f\u7684 \\(p_{\\gamma}(s, a; \\pi) \\in \\mathcal{D}_1\\) \u6ee1\u8db3 \\(p_{\\gamma}(s, a; \\pi) \\in \\mathcal{D}_2\\) \uff0c \u5373 \\(\\mathcal{D}_1 \\subseteq \\mathcal{D}_2\\) \u3002\u4efb\u610f \\(p_{\\gamma}(s, a; \\pi) \\in \\mathcal{D}_1\\) \uff0c \u53ef\u4ee5\u88ab\u5e26\u5165 \\(\\mathcal{D}_2\\) \u7684\u6761\u4ef6 \\[ \\begin{aligned} & (1 - \\gamma) p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') p_{\\gamma}(s, a; \\pi) \\\\ =& (1 - \\gamma) p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') (1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^t p_t(s; \\pi) \\\\ =& (1 - \\gamma) p_0(s) + (1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^{t+1} p_{t+1}(s; \\pi) \\\\ =& (1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^{t} p_{t}(s; \\pi). \\end{aligned} \\tag{9} \\] \u63a5\u7740\u8bc1\u660e \\(\\mathcal{D}_2 \\subseteq \\mathcal{D}_1\\) \u3002\u5bf9\u4e8e\u4efb\u610f\u7684 \\(p(s, a) \\in \\mathcal{D}_2\\) \uff0c \u4eba\u4e3a\u5b9a\u4e49\u548c\u5b83\u76f8\u5173\u7684\u5206\u5e03 \\[ p(s) = \\sum_{a} p(s, a), \\tag{10} \\] \u4ee5\u53ca\u7b56\u7565 \\[ \\pi_p(a \\vert s) = \\frac{p(s, a)}{\\sum_{a'} p(s, a')}. \\tag{11} \\] \u90a3\u4e48 \\[ p(s) = (1 - \\gamma)p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') \\pi_p(a' \\vert s') p(s'). \\tag{12} \\] \u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\u53ef\u5f97 \\[ \\mathbf{p}^T = (1 - \\gamma)\\mathbf{p}^T_0 + \\gamma \\mathbf{p}^T \\mathbf{P}^{\\pi_p}. \\tag{13} \\] \u5176\u4e2d \\(\\mathbf{P}^{\\pi_p}_{ij} = \\sum_{a'} p(s_j \\vert s'_i, a') \\pi(a' \\vert s'_i)\\) \u3002\u6c42\u89e3\u53ef\u5f97 \\[ \\mathbf{p}^T = (1 - \\gamma)\\mathbf{p}^T_0 (I - \\gamma \\mathbf{P}^{\\pi_p})^{-1} = (1 - \\gamma) \\mathbf{p}^T_0 \\sum^{\\infty}_{t=0} (\\gamma \\mathbf{P}^{\\pi_p})^{t}. \\tag{13} \\] \u5199\u56de\u5230\u6cdb\u5316\u5f62\u5f0f\u53ef\u5f97 \\[ p(s) = (1 - \\gamma) \\sum^{\\infty}_{t=0} \\gamma^t p_t(s; \\pi_p) = p_{\\gamma}(s; \\pi_p). \\tag{14} \\] \u6027\u8d28 \\(\\mathcal{D}_2\\) \u662f\u4e00\u4e2a\u51f8\u96c6\u5408\u3002 \u8bc1\u660e \u5bf9\u4e8e\u4efb\u610f\u7684 \\(p_A(s, a) \\in \\mathcal{D}_2\\) \u548c \\(p_B(s, a) \\in \\mathcal{D}_2\\) \uff0c \\[ \\begin{aligned} &\\sum_a [\\lambda p_A(s, a) + (1 - \\lambda) p_B(s, a)] \\\\ =& \\lambda \\bigg[(1 - \\gamma)p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') p_A(s', a')\\bigg] \\\\ & + (1 - \\lambda) \\bigg[(1 - \\gamma)p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a') p_B(s', a')\\bigg] \\\\ =& (1 - \\gamma) p_0(s) + \\gamma \\sum_{s', a'} p(s \\vert s', a')[\\lambda p_A(s', a') + (1 - \\lambda)p_B(s', a')]. \\end{aligned} \\] \u6240\u4ee5 \\(\\lambda p_A(s, a) + (1 - \\lambda) p_B(s, a)] \\in \\mathcal{D}_2\\) \u3002\u7efc\u4e0a \\(\\mathcal{D}_2\\) \u662f\u4e00\u4e2a\u51f8\u96c6\u3002 \u5b9a\u7406 \u5982\u679c \\(\\psi(c)\\) \u662f\u4e00\u4e2a\u5173\u4e8e \\(c\\) \u7684\u51f8\u51fd\u6570\uff0c\u5e76\u4e14 \\(\\mathcal{C}\\) \u662f\u4e00\u4e2a\u51f8\u96c6\uff0c\u90a3\u4e48 \\[ \\begin{aligned} RL \\circ IRL_{\\psi}(\\pi_E) =& \\arg\\min_{\\pi\\in\\Pi}\\max_{c \\in \\mathcal{C}} -\\alpha H(\\pi) + \\sum_{s, a}[p_{\\gamma}(s, a;\\pi) - p_{\\gamma}(s, a;\\pi_E)]c(s, a) - \\psi(c)\\\\ =& \\arg\\min_{\\pi\\in\\Pi} -\\alpha H(\\pi) + \\psi^*(p_{\\gamma,\\pi} - p_{\\gamma,\\pi_E}). \\end{aligned} \\tag{15} \\] \u8bc1\u660e \u9996\u5148\u539f\u95ee\u9898\u4e3a \\[ \\begin{aligned} RL \\circ IRL_{\\psi}(\\pi_E) =& \\arg\\min_{\\pi\\in\\Pi}\\max_{c \\in \\mathcal{C}} -\\psi(c) + \\bigg(-\\alpha H(\\pi) + \\min_{\\pi \\in \\Pi} \\rho(\\pi) \\bigg) - \\rho(\\pi_E)\\\\ =& \\arg\\min_{\\pi\\in\\Pi}\\max_{c \\in \\mathcal{C}} \\min_{\\pi \\in \\Pi} -\\alpha H(\\pi) + \\sum_{s, a} [p_{\\gamma}(s, a; \\pi) - p_{\\gamma}(s, a; \\pi_E)]c(s, a) -\\psi(c)\\\\ :=& \\arg\\min_{\\pi\\in\\Pi}\\max_{c \\in \\mathcal{C}} \\min_{\\pi \\in \\Pi} L(c, \\pi). \\end{aligned} \\tag{16} \\] \u6211\u4eec\u5982\u679c\u80fd\u591f\u8bc1\u660e \\[ \\max_{c \\in \\mathcal{C}} \\min_{\\pi \\in \\Pi} L(c, \\pi) = \\min_{\\pi \\in \\Pi} \\max_{c \\in \\mathcal{C}} L(c, \\pi), \\tag{17} \\] \u90a3\u4e48\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u5b9a\u7406\u7684\u8bc1\u660e\u3002 \u7b2c\u4e00\u6b65\u662f\u6784\u9020\u4e00\u4e2a\u7b49\u4ef7\u95ee\u9898 \\[ \\max_{c \\in \\mathcal{C}} \\min_{p \\in \\mathcal{D}_2} L(c, p) = -\\alpha H(p) + \\sum_{s, a} [p(s, a) - p_{\\gamma}(s, a; \\pi_E)]c(s, a) -\\psi(c),\\\\ \\tag{18} \\] \u5176\u4e2d \\[ H(p) = - \\int_{s, a} p(s, a) \\ln \\frac{p(s, a)}{\\sum_{a'} p(s, a')}\\mathrm{d} s \\mathrm{d}a. \\tag{19} \\] \u5df2\u77e5 \\(p(s, a) \\in \\mathcal{D}_2\\) \u662f\u7b56\u7565 \\(\\pi_p(s, a) = p(s, a) / \\sum_{a'}p(s, a')\\) \u7684 occupancy measure \u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e \\(H(p) = H(\\pi_p)\\) \uff0c \\[ \\begin{aligned} H(p) =& - \\int_{s, a} p(s, a) \\ln \\frac{p(s, a)}{\\sum_{a'} p(s, a')}\\mathrm{d} s \\mathrm{d}a \\\\ =& - \\int_{s, a} p_{\\gamma}(s; \\pi_p) \\pi_p(a \\vert s) \\ln \\pi_p(a \\vert s) \\mathrm{d} a \\mathrm{d}s \\\\ =& H(\\pi_p). \\end{aligned} \\] \u6240\u4ee5 \\[ L(c, \\pi_p) = L(c, p). \\tag{20} \\] \u540c\u65f6\u4e5f\u5c31\u5f88\u5bb9\u6613\u5f97\u5230\u7ed3\u8bba \\[ \\max_{c \\in \\mathcal{C}} \\min_{\\pi \\in \\Pi} L(c, \\pi_p) = \\max_{c \\in \\mathcal{C}} \\min_{p \\in \\mathcal{D}_2} L(c, p). \\tag{21} \\] \u6211\u4eec\u63a5\u7740\u8bc1\u660e\u7b2c\u4e8c\u6b65\u5f3a\u5bf9\u5076\u6027\u3002 \\[ \\max_{c \\in \\mathcal{C}} \\min_{p \\in \\mathcal{D}_2} L(c, p) = \\min_{p \\in \\mathcal{D}_2} \\max_{c \\in \\mathcal{C}} L(c, p). \\tag{22} \\] \u6211\u4eec\u5982\u679c\u80fd\u591f\u5f97\u5230 \\(L(c, p)\\) \u5173\u4e8e \\(c\\) \u662f\u4e00\u4e2a\u51f9\u51fd\u6570\uff08concave\uff09\uff0c\u5e76\u4e14\u5173\u4e8e \\(p\\) \u662f\u4e00\u4e2a\u51f8\u51fd\u6570\u5373\u53ef\uff0c\u518d\u7ed3\u5408\u6761\u4ef6 \\(\\mathcal{C}\\) \u548c \\(\\mathcal{D}_2\\) \u90fd\u662f\u51f8\u96c6\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u978d\u70b9\u7684\u6027\u8d28\u5c31\u53ef\u4ee5\u5f97\u5230\u5f3a\u5bf9\u5076\u6027\u3002 \u6240\u9700\u8981\u7684\u6761\u4ef6\u53ea\u5dee\u4e00\u4e2a \\(L(c, p)\\) \u5173\u4e8e \\(p\\) \u662f\u51f8\u51fd\u6570\u7684\u8bc1\u660e\uff0c\u5373\u8bc1\u660e \\(-H(p)\\) \u662f\u4e00\u4e2a\u51f8\u51fd\u6570\uff0c \\[ -H(p) = \\sum_{s, a} p(s, a) \\ln \\frac{p(s, a)}{\\sum_{a'}p(s, a')}. \\tag{23} \\] \u8f85\u52a9\u5b9a\u7406 \\[ \\sum_{i} a_i \\log \\frac{a_i}{b_i} \\ge \\bigg(\\sum_i a_i\\bigg) \\ln \\frac{\\sum_i a_i}{\\sum_i b_i}. \\tag{24} \\] \u8bc1\u660e \u6839\u636eJensen Inequality\uff1a\u8bbe \\(\\alpha_i \\ge 0\\) \uff0c \\(\\sum_i \\alpha_i = 1\\) \u4ee5\u53ca \\(f\\) \u662f\u51f8\u51fd\u6570\uff0c\u90a3\u4e48 \\[ \\sum_i \\alpha_i f(t_i) \\ge f\\bigg(\\sum_i \\alpha_i t_i\\bigg). \\tag{25} \\] \u4ee4 \\(\\alpha_i = \\frac{b_i}{\\sum_j b_j}\\) \uff0c \\(t_i = \\frac{a_i}{b_i}\\) \u4ee5\u53ca \\(f(t) = t \\ln t\\) \u53ef\u5f97 \\[ \\sum_i \\frac{b_i}{\\sum_j b_j} \\frac{a_i}{b_i} \\ln \\frac{a_i}{b_i} \\ge \\sum_{i} \\frac{a_i}{\\sum_j b_j} \\ln \\sum_i \\frac{a_i}{\\sum_j b_j}. \\tag{26} \\] \u5316\u7b80\u53ef\u5f97\u5f15\u7406\u3002 \u6240\u4ee5\u5bf9\u4e8e\u4efb\u610f\u7684 \\(p_A(s, a)\\) \u548c \\(p_B(s, a)\\) \u53ef\u5f97 \\[ \\begin{aligned} &H[\\lambda p_A + (1 - \\lambda)p_B]\\\\ =&[\\lambda p_A(s, a) + (1 - \\lambda) p_B(s, a)] \\ln \\frac{\\lambda p_A(s, a) + (1 - \\lambda)p_B(s, a)}{\\sum_{a'} [\\lambda p_A(s, a') + (1 - \\lambda) p_B(s, a')]} \\\\ \\le& \\lambda p_A(s, a) \\ln \\frac{\\lambda p_A(s, a)}{\\sum_{a'}\\lambda p_A(s, a)} + (1 - \\lambda) p_B(s, a) \\ln \\frac{(1 - \\lambda) p_B(s, a)}{\\sum_{a'} (1 - \\lambda) p_B(s, a)} \\\\ =& \\lambda H(p_A) + (1 - \\lambda) H(p_B). \\end{aligned} \\tag{27} \\] \u518d\u4f7f\u7528\u5bf9\u5076\u7a7a\u95f4\u53ef\u5f97 \\[ \\min_{p \\in \\mathcal{D}_2} \\max_{c \\in \\mathcal{C}} L(c, p) = \\min_{\\pi \\in \\Pi} \\max_{c \\in \\mathcal{C}} L(c, p). \\tag{28} \\] \u7efc\u5408\u4ee5\u4e0a\u4e09\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u5f97\u5230\u5f3a\u5bf9\u5076\u6027\uff0c\u5373\u5b9a\u7406\u7684\u7ed3\u8bba\u3002 \u63a8\u8bba \u5f53 \\(\\psi(c)\\) \u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u5e76\u4e14 \\(\\mathcal{C} = \\mathbb{R}^{\\vert \\mathcal{S} \\times \\mathcal{A}\\vert}\\) \u65f6\uff0c \\(p^* = p_E\\) \u3002 \u8bc1\u660e \u5f53 \\(\\psi(c)\\) \u662f\u4e00\u4e2a\u5e38\u6570\u65f6\uff0c\u6c42\u89e3\u95ee\u9898\u53d8\u6210 \\[ \\min_{p \\in \\mathcal{D}_2}\\max_{c \\in \\mathcal{C}} -\\alpha H(p) + \\sum_{s, a}[p(s, a) - p_{\\gamma}(s, a;\\pi_E)]c(s, a). \\tag{29} \\] \u5b83\u7684\u7b49\u4ef7\u95ee\u9898\u4e3a \\[ \\min_{p \\in \\mathcal{D}_2} -\\alpha H(p),\\quad s.t.\\quad p(s, a) = p_{\\gamma}(s, a;\\pi_E), \\forall (s, a) \\in \\mathcal{S} \\times \\mathcal{A}. \\tag{30} \\]","title":"\u63a8\u5bfc\u9006\u5f3a\u5316\u5b66\u4e60\u7684\u6700\u4f18\u7b56\u7565"},{"location":"RL/papers/GAIL/#gail","text":"\u603b\u7ed3\u4e00\u4e0b\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u9006\u5f3a\u5316\u5b66\u4e60\uff08\u6a21\u4eff\u5b66\u4e60\uff0cImitation Learning\uff09\u6240\u9700\u8981\u6c42\u89e3\u7684\u95ee\u9898\u4e3a \\[ \\min_{\\pi \\in \\Pi} \\max_{c \\in \\mathcal{C}} -\\alpha H(\\pi) + \\sum_{s, a}[p_{\\gamma, \\pi}(s, a) - p_{\\gamma, \\pi_E}(s, a)]c(s, a) - \\psi(c). \\tag{31} \\] GAIL\u5c06\u5176\u5b9e\u4f8b\u5316\u4e3a \\[ \\min_{\\pi \\in \\Pi} \\max_{c \\prec \\pmb{0}} -\\alpha H(\\pi) + \\sum_{s, a}[p_{\\gamma, \\pi}(s, a) - p_{\\gamma, \\pi_E}(s, a)]c(s, a) - \\psi_{GA}(c), \\tag{32} \\] \u5176\u4e2d \\[ \\psi_{GA}(c) = \\sum_{s, a} p_{\\gamma, \\pi_E}(s, a)[-c(s, a) - \\log(1 - e^{c(s,a)})]. \\tag{33} \\] \u5e26\u5165 \\(\\psi_{GA}\\) \u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4f18\u5316\u95ee\u9898 \\[ \\min_{\\pi \\in \\Pi} \\max_{c \\prec \\pmb{0}} -\\alpha H(\\pi) + \\sum_{s, a}[p_{\\gamma, \\pi}(s, a) c(s, a) + p_{\\gamma, \\pi_E}(s, a) \\ln(1 - e^{c(s, a)})]. \\tag{34}\\label{equ:gail-problem1} \\] \u5173\u4e8e \\(c\\) \u7684\u4f18\u5316\u95ee\u9898\u7684\u95ed\u89e3\u4e3a \\[ c^*(s, a) = \\ln \\frac{p_{\\gamma}(s, a; \\pi)}{p_{\\gamma}(s, a; \\pi) + p_{\\gamma}(s, a; \\pi_E)}. \\tag{35} \\] \u90a3\u4e48\uff0c\u4f18\u5316\u95ee\u9898(\\ref{equ:gail-problem1})\u5c31\u53d8\u6210\u4e86 \\[ \\begin{aligned} \\min_{\\pi \\in \\Pi} -\\alpha H(\\pi) + \\sum_{s, a}\\bigg[&p_{\\gamma, \\pi}(s, a) \\ln \\frac{p_{\\gamma}(s, a; \\pi)}{p_{\\gamma}(s, a; \\pi) + p_{\\gamma}(s, a; \\pi_E)} \\\\ +& p_{\\gamma, \\pi_E}(s, a) \\ln \\frac{p_{\\gamma}(s, a; \\pi_E)}{p_{\\gamma}(s, a; \\pi) + p_{\\gamma}(s, a; \\pi_E)}\\bigg]. \\end{aligned} \\tag{36} \\] \u8fd9\u4e2a\u4f18\u5316\u95ee\u9898\u672c\u8d28\u4e0a\u662f\u6700\u5c0f\u5316\u5206\u5e03 \\(p_{\\gamma}(s, a;\\pi)\\) \u548c \\(p_{\\gamma}(s, a; \\pi_E)\\) \u7684Jensen-Shannon divergence\u3002\u4e5f\u5c31\u662f \\[ D_{JS}(p_{\\gamma,\\pi} \\Vert p_{\\gamma, \\pi_E}) := D_{KL}(p_{\\gamma,\\pi} \\Vert (p_{\\gamma,\\pi} + p_{\\gamma,\\pi_E})/2) + D_{KL}(p_{\\gamma, \\pi_E} \\Vert (p_{\\gamma, \\pi} + p_{\\gamma, \\pi_E})/2). \\] \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u51fd\u6570 \\(D_w(s, a)\\) \u6765\u95f4\u63a5\u6c42\u89e3 \\(c^*(s, a)\\) \\[ L(w) = \\sum_{s, a}\\bigg[p_{\\gamma, \\pi}(s, a) \\ln D_w(s, a) + p_{\\gamma, \\pi_E}(s, a) \\ln (1 - D_w(s, a))\\bigg]. \\tag{37} \\]","title":"GAIL"},{"location":"RL/papers/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%91%98%E8%A6%81/","text":"\u5f3a\u5316\u5b66\u4e60\u8bba\u6587\u9605\u8bfb\u7b14\u8bb0 \u00b6 1. Stabilizing Off-Policy Q-Learning via Booststrapping Error Reduction \u00b6 \u8bba\u6587\u94fe\u63a5 \u8fd9\u7bc7\u6587\u7ae0\u9996\u5148\u63d0\u51fa\u4e86\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u95ee\u9898\uff1a\u73b0\u6709\u7684off-policy\u4f9d\u65e7\u662f\u9700\u8981\u4e0d\u65ad\u5730\u548c\u73af\u5883\u4ea4\u4e92\u4ea7\u751f\u65b0\u7684\u6570\u636e\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\u80fd\u591f\u5b8c\u5168\u4f9d\u9760\u5df2\u7ecf\u6709\u7684\u6570\u636e\u96c6\uff0c\u800c\u4e0d\u548c\u73af\u5883\u4ea7\u751f\u4ea4\u4e92\u5462\uff1f\uff08\u5728\u6211\u7684\u7406\u89e3\u91cc\uff0c\u8fd9\u4e2a\u8bbe\u5b9a\u88ab\u79f0\u4e3aoff-line\uff09\u8fd9\u7bc7\u8bba\u6587\u7684\u8d21\u732e\u5c31\u662f\uff1a\u5b83\u8ba4\u4e3a\u73b0\u6709\u7684\u7b97\u6cd5\u5728off-line\u8bbe\u5b9a\u4e0b\u4e0d\u7a33\u5b9a\u6027\u662f\u7531 bootstrapping error \u4ea7\u751f\u7684\uff0c\u6240\u4ee5\u5b83\u4e5f\u63d0\u51fa\u4e86\u4e00\u4e2a\u5206\u6790\u548c\u964d\u4f4ebootstrapping error\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u63d0\u51fa\u4e86\u4e00\u4e2a\u53eb\u505aBEAR\u7b97\u6cd5\uff08bootstrapping error accumulation reduction\uff09\u3002 \u8bba\u6587\u63cf\u8ff0\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u73b0\u8c61\uff1a\u5728off-line\u7684\u8bbe\u5b9a\u4e0b\uff0c\u5373\u4f7f\u4f7f\u7528\u7684\u662f\u4e13\u5bb6\u4ea7\u751f\u7684\u6837\u672c\uff0c\u73b0\u6709\u7684off-policy\u4f9d\u65e7\u65e0\u6cd5\u6536\u655b\u3002\uff08\u6211\u5bf9\u8fd9\u4e2a\u73b0\u8c61\u4fdd\u6301\u6000\u7591\uff0c\u8981\u53c2\u8003\u4e00\u4e0b[7]\uff0c[12]\u548c[13]\u6587\u732e\u6c42\u8bc1\u4e00\u4e0b\u3002\uff09\u597d\u50cf\u539f\u56e0\u975e\u5e38\u7b80\u5355\uff1a\u5c31\u662fQ-Learning\u7b97\u6cd5\u4f1a\u6c42\u89e3\u503c \\(\\max_{a'}Q(s', a')\\) \uff0c\u4f46\u662f \\((s', a')\\) \u53ef\u80fd\u538b\u6839\u5c31\u6ca1\u5728\u6570\u636e\u96c6\u91cc\u51fa\u73b0\u8fc7\uff0c\u5bfc\u81f4\u4e86 \\(Q(s', a')\\) \u7684\u8bef\u5dee\u975e\u5e38\u5927\u3002\u6587\u7ae0\u628a\u8fd9\u7c7b\u52a8\u4f5c\u53eb\u505aOut-of-distribution(OOD) actions\u3002 \u4ee5\u524d\u7684\u7b97\u6cd5BCQ[13]\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u8ba9\u5b66\u5230\u7684\u7b56\u7565\u5c3d\u91cf\u548c\u6837\u672c\u5bf9\u5e94\u7684\u7b56\u7565\u63a5\u8fd1\uff0c\u8fd9\u6837\u5b66\u5230\u7684\u7b56\u7565\u6240\u6267\u884c\u7684\u52a8\u4f5c\u5c31\u4f1a\u5927\u6982\u7387\u5730\u51fa\u73b0\u5728\u6570\u636e\u96c6\u4e2d\uff0c\u4e0d\u4f1a\u51fa\u73b0\u8fc7\u591a\u7684OOD\u52a8\u4f5c\u3002\u4f46\u662f\u8fd9\u5c31\u50cf\u6a21\u4eff\u5b66\u4e60\uff0c\u6216\u8005\u884c\u4e3a\u514b\u9686\u3002\u5982\u679c\u6570\u636e\u96c6\u5bf9\u5e94\u7684\u7b56\u7565\u662f\u5747\u5300\u5206\u5e03\u7b56\u7565\u8fd9\u7c7b\u672c\u8eab\u5c31\u5f88\u5dee\u7684\u7b56\u7565\uff0c\u90a3\u4e48\u5b66\u5230\u7684\u7b56\u7565\u4e5f\u662f\u4e00\u4e2a\u5c31\u6ca1\u6709\u591a\u5c11\u610f\u4e49\u7684\u6b21\u4f18\u89e3\u3002\u6211\u770b\u5230\u8fd9\u91cc\u5c31\u975e\u5e38\u597d\u5947\u4e86\uff0c\u4e0d\u53ef\u80fd\u51ed\u7a7a\u5b66\u5230OOD\u52a8\u4f5c\u7684\u4fe1\u606f\u5440\u3002 \u8bba\u6587\u5176\u5b9e\u5c31\u662f\u6784\u9020\u4e86\u4e00\u4e2a\u53d7\u9650\u7684\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\uff0c\u9650\u5236\u6761\u4ef6\u5c31\u662f\u6837\u672c\u96c6\u6bcf\u4e2a\u72b6\u6001\u7684\u52a8\u4f5c\u5206\u5e03\u548c\u7b56\u7565\u5bf9\u5e94\u72b6\u6001\u7684\u52a8\u4f5c\u5206\u5e03\u8981\u65f6\u523b\u4fdd\u6301\u63a5\u8fd1\uff08MMD\u8ddd\u79bb\u8981\u5c0f\u4e8e\u67d0\u4e2a\u503c\uff09\u3002\u66f4\u65b0\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a \\[ \\pi_{\\phi} := \\max_{\\pi \\in \\Delta_{\\mathcal{S}}} \\mathbb{E}_{s\\sim\\mathcal{D}}\\mathbb{E}_{a \\sim \\pi(\\cdot \\vert s)} \\bigg[ \\min_{j = 1,..,K} \\hat Q_j(s, a) \\bigg] \\quad s.t. \\quad \\mathbb{E}_{s \\sim \\mathcal{D}}[MMD(\\mathcal{D}(s), \\pi(\\cdot \\vert s))] \\le \\epsilon. \\] \u8fd9\u7bc7\u8bba\u6587\u5206\u6790\u4e86\u8fd9\u4e2a\u53d7\u9650\u6700\u6709\u8d1d\u5c14\u66fc\u64cd\u4f5c\u4f1a\u5f15\u8d77\u7684\u8bef\u5dee\uff0c\u6709\u5f88\u5927\u4e00\u90e8\u5206\u7684\u8bc1\u660e\u76f4\u63a5\u8c03\u7528\u4e86\u53e6\u4e00\u7bc7\u6587\u7ae0\u7684\u7ed3\u8bba\uff0c\u5982\u679c\u4ee5\u540e\u6709\u5174\u8da3\u53ef\u4ee5\u518d\u770b\u3002\u73b0\u5728\u6211\u66f4\u611f\u5174\u8da3\u8fd9\u7bc7\u6587\u7ae0\u63d0\u5230\u76842019\u5e74ICML\u63d0\u51fa\u6765\u7684BCQ\u7b97\u6cd5\u3002 @inproceedings { NEURIPS2019_c2073ffa , author = {Kumar, Aviral and Fu, Justin and Soh, Matthew and Tucker, George and Levine, Sergey} , booktitle = {Advances in Neural Information Processing Systems} , editor = {H. Wallach and H. Larochelle and A. Beygelzimer and F. d\\textquotesingle Alch\\'{e}-Buc and E. Fox and R. Garnett} , pages = {11784--11794} , publisher = {Curran Associates, Inc.} , title = {Stabilizing Off-Policy Q-Learning via Bootstrapping Error Reduction} , url = {https://proceedings.neurips.cc/paper/2019/file/c2073ffa77b5357a498057413bb09d3a-Paper.pdf} , volume = {32} , year = {2019} } 2. Off-Policy Deep Reinforcement Learning without Exploration \u00b6 \u8bba\u6587\u94fe\u63a5 \u8fd9\u7bc7\u6587\u7ae0\u4e5f\u662f\u8981\u89e3\u51b3off-line\u7684\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\uff1a\u5982\u4f55\u4ece\u6837\u672c\u96c6\u6765\u5b66\u4e60\u6700\u4f18\u7b56\u7565\uff0c\u800c\u4e0d\u9700\u8981\u4e0e\u73af\u5883\u4ea4\u4e92\u3002\u6a21\u4eff\u5b66\u4e60\uff08Imitation Learning\uff09\u9700\u8981\u6837\u672c\u96c6\u662f\u6839\u636e\u4e13\u5bb6\u7b56\u7565\u4e2d\u91c7\u6837\u83b7\u5f97\u7684\uff0c\u800coff-line\u7684\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u5219\u4e0d\u8981\u6c42\u6837\u672c\u96c6\u5bf9\u5e94\u7684\u7b56\u7565\u7684\u597d\u574f\u3002\u6587\u7ae0\u53d1\u73b0\u4e86\u4e00\u4e2a\u975e\u5e38\u5947\u602a\u7684\u73b0\u8c61\uff1a\u518doff-line\u7684\u8bbe\u5b9a\u4e0b\uff0c\u4f7f\u7528\u73b0\u6709\u7684\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u4f1a\u5b66\u5230\u4e00\u4e2a\u8fdc\u8fdc\u6bd4\u6837\u672c\u96c6\u5bf9\u5e94\u7684\u6267\u884c\u7b56\u7565\uff08behavioral policy\uff09\u5dee\u5f97\u591a\u5f97\u7b56\u7565\u3002 \u6587\u7ae0\u8ba4\u4e3a\u8fd9\u4e2a\u73b0\u8c61\u4e3b\u8981\u662f\u7531\u4e8e\u63a2\u7d22\u8bef\u5dee\uff08extrapolation error\uff09\u4ea7\u751f\u7684\uff1a\u7b97\u6cd5\u8981\u63a2\u7d22\u5230\u6837\u672c\u96c6\u91cc\u5b8c\u5168\u4e0d\u5305\u542b\u7684\u52a8\u4f5c\u7a7a\u95f4\u3002\u7531\u6b64\uff0c\u63d0\u51fa\u4e86\u4e00\u4e2aBatch-Constrained deep Q-learning(BCQ)\u7b97\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5927\u81f4\u4e0a\u5c31\u662f\u9650\u5236\u7b56\u7565\u7684\u52a8\u4f5c\u3002 \u6587\u7ae0\u8bf4\u63a8\u6d4b\u8bef\u5dee\uff08Extrapolation Error\uff09\u6709\u4e09\u4e2a\u6765\u6e90\uff1aAbsent Data\u3001Model Bias\uff08\u7528\u91c7\u6837\u7684\u65b9\u5f0f\u903c\u8fd1\u8d1d\u5c14\u66fc\u64cd\u4f5c\u5bfc\u81f4\u7684\u8bef\u5dee\uff09\u548cTraining Mismatching\uff08\u8fd9\u4e00\u70b9\u6211\u4e0d\u592a\u80fd\u7406\u89e3\uff0c\u5e94\u8be5\u662f\u8bf4\u8bb0\u5fc6\u6c60\u4e2d \\((s,a)\\) \u51fa\u73b0\u5f97\u9891\u7e41\uff0c\u8d1d\u5c14\u66fc\u8bef\u5dee\u5c31\u5c0f\u3002\u4f46\u662f \u6211\u4eec\u66f4\u5e0c\u671b \u5f53\u524d\u6267\u884c\u5f53\u524d\u7b56\u7565\u65f6\u9047\u5230\u7684 \\((s, a)\\) \u8d8a\u9891\u7e41\uff0c\u8d1d\u5c14\u66fc\u8bef\u5dee\u8d8a\u5c0f\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u52a0\u6743\u91cd\u7684\u65b9\u5f0f\u6765\u505a\u4fee\u6b63\uff0c\u4f46\u662f\u6211\u4eec\u6ca1\u529e\u6cd5\u89e3\u51b3\u5f53\u524d\u7b56\u7565\u4f1a\u9891\u7e41\u51fa\u73b0\u7684 \\((s,a)\\) \u5728\u8bb0\u5fc6\u6c60\u91cc\u538b\u6839\u6ca1\u51fa\u73b0\u7684\u60c5\u51b5\u3002\uff09\u3002\u7531\u4e8e\u8fd9\u4e9b\u63a8\u6d4b\u8bef\u5dee\u5bfc\u81f4\u4e86\u5f53\u524d\u7684Off-policy\u7b97\u6cd5\u5728off-line\u8bbe\u5b9a\u4e0b\u65e0\u6cd5\u6536\u655b\u3002 \u672c\u6587\u63d0\u51fa\u7684\u65b9\u6cd5\u53eb\u505aBatch-Constrained\uff0c\u5177\u4f53\u5305\u542b\u4e09\u4e2a\u64cd\u4f5c\uff1a \u6700\u5c0f\u5316\u6240\u9009\u52a8\u4f5c\u4e0e\u6837\u672c\u96c6\u4e2d\u52a8\u4f5c\u7684\u8ddd\u79bb\uff1b \u5c3d\u91cf\u8fdb\u5165\u6837\u672c\u96c6\u4e2d\u51fa\u73b0\u6bd4\u8f83\u9891\u7e41\u7684\u72b6\u6001\uff1b \u6700\u5927\u5316\u503c\u51fd\u6570\u3002 \u5df2\u77e5\u8bb0\u5fc6\u6c60 \\(\\mathcal{D} = \\{(s_i, a_i, r_i, s'_i)\\}\\) \uff0c\u6211\u4eec\u6784\u9020\u96c6\u5408 \\(\\mathcal{B} = \\{(s_i, a_i): (s_i, a_i, \\cdot, \\cdot) \\in \\mathcal{D}\\}\\) \u3002\u90a3\u4e48BCQ\u7b97\u6cd5\u7684\u66f4\u65b0\u516c\u5f0f\u5c31\u662f\u4e00\u4e2aBatch-Constrainted\u8d1d\u5c14\u66fc\u64cd\u4f5c\uff1a \\[ Q(s, a) \\leftarrow(1-\\alpha) Q(s, a)+\\alpha\\left(r+\\gamma \\underset{a^{\\prime} \\operatorname{s.t.}\\left(s^{\\prime}, a^{\\prime}\\right) \\in \\mathcal{B}}{\\max } Q\\left(s^{\\prime}, a^{\\prime}\\right)\\right). \\] \u672c\u6587\u6709\u5b9a\u7406\u8bc1\u660e\uff0cBCQ\u7b97\u6cd5\u81f3\u5c11\u4e0d\u4f1a\u6bd4Behavioral Policy\u5dee\u3002\u5907\u6ce8\uff0cBCQ\u4e2d\u5c06\u96c6\u5408 \\(\\mathcal{B}\\) \u66ff\u6362\u4e3a\u4e86\u4e00\u4e2a\u52a8\u4f5c\u751f\u6210\u5668\uff08\u4f7f\u7528Conditional VAE\uff09\u6765\u786e\u4fdd\u751f\u6210\u51fa\u6765\u7684\u52a8\u4f5c\u548c \\(\\mathcal{B}\\) \u6bd4\u8f83\u63a5\u8fd1\uff0c\u4ee5\u6b64\u6765\u589e\u52a0\u5c0f\u6837\u672c\u65f6\u7684\u6cdb\u5316\u6027\u3002 @inproceedings { fujimoto2019off , title = {Off-policy deep reinforcement learning without exploration} , author = {Fujimoto, Scott and Meger, David and Precup, Doina} , booktitle = {International Conference on Machine Learning} , pages = {2052--2062} , year = {2019} }","title":"\u8bba\u6587\u9605\u8bfb\u6458\u8981"},{"location":"RL/papers/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%91%98%E8%A6%81/#_1","text":"","title":"\u5f3a\u5316\u5b66\u4e60\u8bba\u6587\u9605\u8bfb\u7b14\u8bb0"},{"location":"RL/papers/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%91%98%E8%A6%81/#1-stabilizing-off-policy-q-learning-via-booststrapping-error-reduction","text":"\u8bba\u6587\u94fe\u63a5 \u8fd9\u7bc7\u6587\u7ae0\u9996\u5148\u63d0\u51fa\u4e86\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u95ee\u9898\uff1a\u73b0\u6709\u7684off-policy\u4f9d\u65e7\u662f\u9700\u8981\u4e0d\u65ad\u5730\u548c\u73af\u5883\u4ea4\u4e92\u4ea7\u751f\u65b0\u7684\u6570\u636e\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\u80fd\u591f\u5b8c\u5168\u4f9d\u9760\u5df2\u7ecf\u6709\u7684\u6570\u636e\u96c6\uff0c\u800c\u4e0d\u548c\u73af\u5883\u4ea7\u751f\u4ea4\u4e92\u5462\uff1f\uff08\u5728\u6211\u7684\u7406\u89e3\u91cc\uff0c\u8fd9\u4e2a\u8bbe\u5b9a\u88ab\u79f0\u4e3aoff-line\uff09\u8fd9\u7bc7\u8bba\u6587\u7684\u8d21\u732e\u5c31\u662f\uff1a\u5b83\u8ba4\u4e3a\u73b0\u6709\u7684\u7b97\u6cd5\u5728off-line\u8bbe\u5b9a\u4e0b\u4e0d\u7a33\u5b9a\u6027\u662f\u7531 bootstrapping error \u4ea7\u751f\u7684\uff0c\u6240\u4ee5\u5b83\u4e5f\u63d0\u51fa\u4e86\u4e00\u4e2a\u5206\u6790\u548c\u964d\u4f4ebootstrapping error\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u63d0\u51fa\u4e86\u4e00\u4e2a\u53eb\u505aBEAR\u7b97\u6cd5\uff08bootstrapping error accumulation reduction\uff09\u3002 \u8bba\u6587\u63cf\u8ff0\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u73b0\u8c61\uff1a\u5728off-line\u7684\u8bbe\u5b9a\u4e0b\uff0c\u5373\u4f7f\u4f7f\u7528\u7684\u662f\u4e13\u5bb6\u4ea7\u751f\u7684\u6837\u672c\uff0c\u73b0\u6709\u7684off-policy\u4f9d\u65e7\u65e0\u6cd5\u6536\u655b\u3002\uff08\u6211\u5bf9\u8fd9\u4e2a\u73b0\u8c61\u4fdd\u6301\u6000\u7591\uff0c\u8981\u53c2\u8003\u4e00\u4e0b[7]\uff0c[12]\u548c[13]\u6587\u732e\u6c42\u8bc1\u4e00\u4e0b\u3002\uff09\u597d\u50cf\u539f\u56e0\u975e\u5e38\u7b80\u5355\uff1a\u5c31\u662fQ-Learning\u7b97\u6cd5\u4f1a\u6c42\u89e3\u503c \\(\\max_{a'}Q(s', a')\\) \uff0c\u4f46\u662f \\((s', a')\\) \u53ef\u80fd\u538b\u6839\u5c31\u6ca1\u5728\u6570\u636e\u96c6\u91cc\u51fa\u73b0\u8fc7\uff0c\u5bfc\u81f4\u4e86 \\(Q(s', a')\\) \u7684\u8bef\u5dee\u975e\u5e38\u5927\u3002\u6587\u7ae0\u628a\u8fd9\u7c7b\u52a8\u4f5c\u53eb\u505aOut-of-distribution(OOD) actions\u3002 \u4ee5\u524d\u7684\u7b97\u6cd5BCQ[13]\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u8ba9\u5b66\u5230\u7684\u7b56\u7565\u5c3d\u91cf\u548c\u6837\u672c\u5bf9\u5e94\u7684\u7b56\u7565\u63a5\u8fd1\uff0c\u8fd9\u6837\u5b66\u5230\u7684\u7b56\u7565\u6240\u6267\u884c\u7684\u52a8\u4f5c\u5c31\u4f1a\u5927\u6982\u7387\u5730\u51fa\u73b0\u5728\u6570\u636e\u96c6\u4e2d\uff0c\u4e0d\u4f1a\u51fa\u73b0\u8fc7\u591a\u7684OOD\u52a8\u4f5c\u3002\u4f46\u662f\u8fd9\u5c31\u50cf\u6a21\u4eff\u5b66\u4e60\uff0c\u6216\u8005\u884c\u4e3a\u514b\u9686\u3002\u5982\u679c\u6570\u636e\u96c6\u5bf9\u5e94\u7684\u7b56\u7565\u662f\u5747\u5300\u5206\u5e03\u7b56\u7565\u8fd9\u7c7b\u672c\u8eab\u5c31\u5f88\u5dee\u7684\u7b56\u7565\uff0c\u90a3\u4e48\u5b66\u5230\u7684\u7b56\u7565\u4e5f\u662f\u4e00\u4e2a\u5c31\u6ca1\u6709\u591a\u5c11\u610f\u4e49\u7684\u6b21\u4f18\u89e3\u3002\u6211\u770b\u5230\u8fd9\u91cc\u5c31\u975e\u5e38\u597d\u5947\u4e86\uff0c\u4e0d\u53ef\u80fd\u51ed\u7a7a\u5b66\u5230OOD\u52a8\u4f5c\u7684\u4fe1\u606f\u5440\u3002 \u8bba\u6587\u5176\u5b9e\u5c31\u662f\u6784\u9020\u4e86\u4e00\u4e2a\u53d7\u9650\u7684\u6700\u4f18\u8d1d\u5c14\u66fc\u64cd\u4f5c\uff0c\u9650\u5236\u6761\u4ef6\u5c31\u662f\u6837\u672c\u96c6\u6bcf\u4e2a\u72b6\u6001\u7684\u52a8\u4f5c\u5206\u5e03\u548c\u7b56\u7565\u5bf9\u5e94\u72b6\u6001\u7684\u52a8\u4f5c\u5206\u5e03\u8981\u65f6\u523b\u4fdd\u6301\u63a5\u8fd1\uff08MMD\u8ddd\u79bb\u8981\u5c0f\u4e8e\u67d0\u4e2a\u503c\uff09\u3002\u66f4\u65b0\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a \\[ \\pi_{\\phi} := \\max_{\\pi \\in \\Delta_{\\mathcal{S}}} \\mathbb{E}_{s\\sim\\mathcal{D}}\\mathbb{E}_{a \\sim \\pi(\\cdot \\vert s)} \\bigg[ \\min_{j = 1,..,K} \\hat Q_j(s, a) \\bigg] \\quad s.t. \\quad \\mathbb{E}_{s \\sim \\mathcal{D}}[MMD(\\mathcal{D}(s), \\pi(\\cdot \\vert s))] \\le \\epsilon. \\] \u8fd9\u7bc7\u8bba\u6587\u5206\u6790\u4e86\u8fd9\u4e2a\u53d7\u9650\u6700\u6709\u8d1d\u5c14\u66fc\u64cd\u4f5c\u4f1a\u5f15\u8d77\u7684\u8bef\u5dee\uff0c\u6709\u5f88\u5927\u4e00\u90e8\u5206\u7684\u8bc1\u660e\u76f4\u63a5\u8c03\u7528\u4e86\u53e6\u4e00\u7bc7\u6587\u7ae0\u7684\u7ed3\u8bba\uff0c\u5982\u679c\u4ee5\u540e\u6709\u5174\u8da3\u53ef\u4ee5\u518d\u770b\u3002\u73b0\u5728\u6211\u66f4\u611f\u5174\u8da3\u8fd9\u7bc7\u6587\u7ae0\u63d0\u5230\u76842019\u5e74ICML\u63d0\u51fa\u6765\u7684BCQ\u7b97\u6cd5\u3002 @inproceedings { NEURIPS2019_c2073ffa , author = {Kumar, Aviral and Fu, Justin and Soh, Matthew and Tucker, George and Levine, Sergey} , booktitle = {Advances in Neural Information Processing Systems} , editor = {H. Wallach and H. Larochelle and A. Beygelzimer and F. d\\textquotesingle Alch\\'{e}-Buc and E. Fox and R. Garnett} , pages = {11784--11794} , publisher = {Curran Associates, Inc.} , title = {Stabilizing Off-Policy Q-Learning via Bootstrapping Error Reduction} , url = {https://proceedings.neurips.cc/paper/2019/file/c2073ffa77b5357a498057413bb09d3a-Paper.pdf} , volume = {32} , year = {2019} }","title":"1. Stabilizing Off-Policy Q-Learning via Booststrapping Error Reduction"},{"location":"RL/papers/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%91%98%E8%A6%81/#2-off-policy-deep-reinforcement-learning-without-exploration","text":"\u8bba\u6587\u94fe\u63a5 \u8fd9\u7bc7\u6587\u7ae0\u4e5f\u662f\u8981\u89e3\u51b3off-line\u7684\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\uff1a\u5982\u4f55\u4ece\u6837\u672c\u96c6\u6765\u5b66\u4e60\u6700\u4f18\u7b56\u7565\uff0c\u800c\u4e0d\u9700\u8981\u4e0e\u73af\u5883\u4ea4\u4e92\u3002\u6a21\u4eff\u5b66\u4e60\uff08Imitation Learning\uff09\u9700\u8981\u6837\u672c\u96c6\u662f\u6839\u636e\u4e13\u5bb6\u7b56\u7565\u4e2d\u91c7\u6837\u83b7\u5f97\u7684\uff0c\u800coff-line\u7684\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u5219\u4e0d\u8981\u6c42\u6837\u672c\u96c6\u5bf9\u5e94\u7684\u7b56\u7565\u7684\u597d\u574f\u3002\u6587\u7ae0\u53d1\u73b0\u4e86\u4e00\u4e2a\u975e\u5e38\u5947\u602a\u7684\u73b0\u8c61\uff1a\u518doff-line\u7684\u8bbe\u5b9a\u4e0b\uff0c\u4f7f\u7528\u73b0\u6709\u7684\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u4f1a\u5b66\u5230\u4e00\u4e2a\u8fdc\u8fdc\u6bd4\u6837\u672c\u96c6\u5bf9\u5e94\u7684\u6267\u884c\u7b56\u7565\uff08behavioral policy\uff09\u5dee\u5f97\u591a\u5f97\u7b56\u7565\u3002 \u6587\u7ae0\u8ba4\u4e3a\u8fd9\u4e2a\u73b0\u8c61\u4e3b\u8981\u662f\u7531\u4e8e\u63a2\u7d22\u8bef\u5dee\uff08extrapolation error\uff09\u4ea7\u751f\u7684\uff1a\u7b97\u6cd5\u8981\u63a2\u7d22\u5230\u6837\u672c\u96c6\u91cc\u5b8c\u5168\u4e0d\u5305\u542b\u7684\u52a8\u4f5c\u7a7a\u95f4\u3002\u7531\u6b64\uff0c\u63d0\u51fa\u4e86\u4e00\u4e2aBatch-Constrained deep Q-learning(BCQ)\u7b97\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5927\u81f4\u4e0a\u5c31\u662f\u9650\u5236\u7b56\u7565\u7684\u52a8\u4f5c\u3002 \u6587\u7ae0\u8bf4\u63a8\u6d4b\u8bef\u5dee\uff08Extrapolation Error\uff09\u6709\u4e09\u4e2a\u6765\u6e90\uff1aAbsent Data\u3001Model Bias\uff08\u7528\u91c7\u6837\u7684\u65b9\u5f0f\u903c\u8fd1\u8d1d\u5c14\u66fc\u64cd\u4f5c\u5bfc\u81f4\u7684\u8bef\u5dee\uff09\u548cTraining Mismatching\uff08\u8fd9\u4e00\u70b9\u6211\u4e0d\u592a\u80fd\u7406\u89e3\uff0c\u5e94\u8be5\u662f\u8bf4\u8bb0\u5fc6\u6c60\u4e2d \\((s,a)\\) \u51fa\u73b0\u5f97\u9891\u7e41\uff0c\u8d1d\u5c14\u66fc\u8bef\u5dee\u5c31\u5c0f\u3002\u4f46\u662f \u6211\u4eec\u66f4\u5e0c\u671b \u5f53\u524d\u6267\u884c\u5f53\u524d\u7b56\u7565\u65f6\u9047\u5230\u7684 \\((s, a)\\) \u8d8a\u9891\u7e41\uff0c\u8d1d\u5c14\u66fc\u8bef\u5dee\u8d8a\u5c0f\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u52a0\u6743\u91cd\u7684\u65b9\u5f0f\u6765\u505a\u4fee\u6b63\uff0c\u4f46\u662f\u6211\u4eec\u6ca1\u529e\u6cd5\u89e3\u51b3\u5f53\u524d\u7b56\u7565\u4f1a\u9891\u7e41\u51fa\u73b0\u7684 \\((s,a)\\) \u5728\u8bb0\u5fc6\u6c60\u91cc\u538b\u6839\u6ca1\u51fa\u73b0\u7684\u60c5\u51b5\u3002\uff09\u3002\u7531\u4e8e\u8fd9\u4e9b\u63a8\u6d4b\u8bef\u5dee\u5bfc\u81f4\u4e86\u5f53\u524d\u7684Off-policy\u7b97\u6cd5\u5728off-line\u8bbe\u5b9a\u4e0b\u65e0\u6cd5\u6536\u655b\u3002 \u672c\u6587\u63d0\u51fa\u7684\u65b9\u6cd5\u53eb\u505aBatch-Constrained\uff0c\u5177\u4f53\u5305\u542b\u4e09\u4e2a\u64cd\u4f5c\uff1a \u6700\u5c0f\u5316\u6240\u9009\u52a8\u4f5c\u4e0e\u6837\u672c\u96c6\u4e2d\u52a8\u4f5c\u7684\u8ddd\u79bb\uff1b \u5c3d\u91cf\u8fdb\u5165\u6837\u672c\u96c6\u4e2d\u51fa\u73b0\u6bd4\u8f83\u9891\u7e41\u7684\u72b6\u6001\uff1b \u6700\u5927\u5316\u503c\u51fd\u6570\u3002 \u5df2\u77e5\u8bb0\u5fc6\u6c60 \\(\\mathcal{D} = \\{(s_i, a_i, r_i, s'_i)\\}\\) \uff0c\u6211\u4eec\u6784\u9020\u96c6\u5408 \\(\\mathcal{B} = \\{(s_i, a_i): (s_i, a_i, \\cdot, \\cdot) \\in \\mathcal{D}\\}\\) \u3002\u90a3\u4e48BCQ\u7b97\u6cd5\u7684\u66f4\u65b0\u516c\u5f0f\u5c31\u662f\u4e00\u4e2aBatch-Constrainted\u8d1d\u5c14\u66fc\u64cd\u4f5c\uff1a \\[ Q(s, a) \\leftarrow(1-\\alpha) Q(s, a)+\\alpha\\left(r+\\gamma \\underset{a^{\\prime} \\operatorname{s.t.}\\left(s^{\\prime}, a^{\\prime}\\right) \\in \\mathcal{B}}{\\max } Q\\left(s^{\\prime}, a^{\\prime}\\right)\\right). \\] \u672c\u6587\u6709\u5b9a\u7406\u8bc1\u660e\uff0cBCQ\u7b97\u6cd5\u81f3\u5c11\u4e0d\u4f1a\u6bd4Behavioral Policy\u5dee\u3002\u5907\u6ce8\uff0cBCQ\u4e2d\u5c06\u96c6\u5408 \\(\\mathcal{B}\\) \u66ff\u6362\u4e3a\u4e86\u4e00\u4e2a\u52a8\u4f5c\u751f\u6210\u5668\uff08\u4f7f\u7528Conditional VAE\uff09\u6765\u786e\u4fdd\u751f\u6210\u51fa\u6765\u7684\u52a8\u4f5c\u548c \\(\\mathcal{B}\\) \u6bd4\u8f83\u63a5\u8fd1\uff0c\u4ee5\u6b64\u6765\u589e\u52a0\u5c0f\u6837\u672c\u65f6\u7684\u6cdb\u5316\u6027\u3002 @inproceedings { fujimoto2019off , title = {Off-policy deep reinforcement learning without exploration} , author = {Fujimoto, Scott and Meger, David and Precup, Doina} , booktitle = {International Conference on Machine Learning} , pages = {2052--2062} , year = {2019} }","title":"2. Off-Policy Deep Reinforcement Learning without Exploration"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-docker/","text":"\u5b50\u5f39\u7b14\u8bb0-Docker \u00b6 \u521b\u5efa\u955c\u50cf \u00b6 docker build -t xv6-labs-2020 . \u89e3\u51b3tzdata\u5361\u6b7b\u7684\u95ee\u9898 \u00b6 \u5728 Dockfile \u4e2d\u8bbe\u7f6e\u5148\u8fd0\u884c\uff1a RUN export DEBIAN_FRONTEND = noninteractive \\ && apt-get update \\ && apt-get install -y tzdata \\ && ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\ && dpkg-reconfigure --frontend noninteractive tzdata \u8fd0\u884c\u955c\u50cf \u00b6 docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make qemu-gdb\" \u5728\u5df2\u7ecf\u8fd0\u884c\u7684\u955c\u50cf\u4e2d\u521b\u5efa\u65b0\u7684\u7ec8\u7aef\u6267\u884c\u65b0\u7684\u547d\u4ee4 \u00b6 docker exec -it xv6-labs-2020 /bin/bash -c \"gdb-multiarch --command .gdbinit\"","title":"docker"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-docker/#-docker","text":"","title":"\u5b50\u5f39\u7b14\u8bb0-Docker"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-docker/#_1","text":"docker build -t xv6-labs-2020 .","title":"\u521b\u5efa\u955c\u50cf"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-docker/#tzdata","text":"\u5728 Dockfile \u4e2d\u8bbe\u7f6e\u5148\u8fd0\u884c\uff1a RUN export DEBIAN_FRONTEND = noninteractive \\ && apt-get update \\ && apt-get install -y tzdata \\ && ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\ && dpkg-reconfigure --frontend noninteractive tzdata","title":"\u89e3\u51b3tzdata\u5361\u6b7b\u7684\u95ee\u9898"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-docker/#_2","text":"docker run -it --name \"xv6-labs-2020\" \\ -w /xv6-labs-2020 -v \" $( shell pwd ) :/xv6-labs-2020\" \\ penglingwei/xv6-labs-2020:latest \\ /bin/bash -c \"make qemu-gdb\"","title":"\u8fd0\u884c\u955c\u50cf"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-docker/#_3","text":"docker exec -it xv6-labs-2020 /bin/bash -c \"gdb-multiarch --command .gdbinit\"","title":"\u5728\u5df2\u7ecf\u8fd0\u884c\u7684\u955c\u50cf\u4e2d\u521b\u5efa\u65b0\u7684\u7ec8\u7aef\u6267\u884c\u65b0\u7684\u547d\u4ee4"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-gdb/","text":"\u5b50\u5f39\u7b14\u8bb0-GDB \u00b6 \u542f\u52a8\u65f6\u5bfc\u5165\u914d\u7f6e\u6587\u4ef6 \u00b6 gdb --command <file-path> \u5206\u5c4f \u00b6 layout \uff1a\u7528\u4e8e\u5206\u5272\u7a97\u53e3\uff0c\u53ef\u4ee5\u4e00\u8fb9\u67e5\u770b\u4ee3\u7801\uff0c\u4e00\u8fb9\u6d4b\u8bd5\u3002\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\u7528\u6cd5\uff1a layout src \uff1a\u663e\u793a\u6e90\u4ee3\u7801\u7a97\u53e3 layout asm \uff1a\u663e\u793a\u6c47\u7f16\u7a97\u53e3 layout regs \uff1a\u663e\u793a\u6e90\u4ee3\u7801/\u6c47\u7f16\u548c\u5bc4\u5b58\u5668\u7a97\u53e3 layout split \uff1a\u663e\u793a\u6e90\u4ee3\u7801\u548c\u6c47\u7f16\u7a97\u53e3 layout next \uff1a\u663e\u793a\u4e0b\u4e00\u4e2alayout layout prev \uff1a\u663e\u793a\u4e0a\u4e00\u4e2alayout Ctrl + L \uff1a\u5237\u65b0\u7a97\u53e3 Ctrl + x \uff1a\u518d\u63091\uff1a\u5355\u7a97\u53e3\u6a21\u5f0f\uff0c\u663e\u793a\u4e00\u4e2a\u7a97\u53e3 Ctrl + x \uff1a\u518d\u63092\uff1a\u53cc\u7a97\u53e3\u6a21\u5f0f\uff0c\u663e\u793a\u4e24\u4e2a\u7a97\u53e3 ctrl+x ctrl+a \uff1a\u56de\u5230\u4f20\u7edf\u6a21\u5f0f 16\u8fdb\u5236\u6253\u5370 \u00b6 ( gdb ) p/x variable_name","title":"gdb"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-gdb/#-gdb","text":"","title":"\u5b50\u5f39\u7b14\u8bb0-GDB"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-gdb/#_1","text":"gdb --command <file-path>","title":"\u542f\u52a8\u65f6\u5bfc\u5165\u914d\u7f6e\u6587\u4ef6"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-gdb/#_2","text":"layout \uff1a\u7528\u4e8e\u5206\u5272\u7a97\u53e3\uff0c\u53ef\u4ee5\u4e00\u8fb9\u67e5\u770b\u4ee3\u7801\uff0c\u4e00\u8fb9\u6d4b\u8bd5\u3002\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\u7528\u6cd5\uff1a layout src \uff1a\u663e\u793a\u6e90\u4ee3\u7801\u7a97\u53e3 layout asm \uff1a\u663e\u793a\u6c47\u7f16\u7a97\u53e3 layout regs \uff1a\u663e\u793a\u6e90\u4ee3\u7801/\u6c47\u7f16\u548c\u5bc4\u5b58\u5668\u7a97\u53e3 layout split \uff1a\u663e\u793a\u6e90\u4ee3\u7801\u548c\u6c47\u7f16\u7a97\u53e3 layout next \uff1a\u663e\u793a\u4e0b\u4e00\u4e2alayout layout prev \uff1a\u663e\u793a\u4e0a\u4e00\u4e2alayout Ctrl + L \uff1a\u5237\u65b0\u7a97\u53e3 Ctrl + x \uff1a\u518d\u63091\uff1a\u5355\u7a97\u53e3\u6a21\u5f0f\uff0c\u663e\u793a\u4e00\u4e2a\u7a97\u53e3 Ctrl + x \uff1a\u518d\u63092\uff1a\u53cc\u7a97\u53e3\u6a21\u5f0f\uff0c\u663e\u793a\u4e24\u4e2a\u7a97\u53e3 ctrl+x ctrl+a \uff1a\u56de\u5230\u4f20\u7edf\u6a21\u5f0f","title":"\u5206\u5c4f"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-gdb/#16","text":"( gdb ) p/x variable_name","title":"16\u8fdb\u5236\u6253\u5370"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-git/","text":"\u5b50\u5f39\u7b14\u8bb0-Git \u00b6 git clone --recursive \u90e8\u5206\u5931\u8d25 \u00b6 \u5f53 git clone --recursive \u90e8\u5206\u5931\u8d25\u540e\u8be5\u600e\u4e48\u529e\u5462\uff1f \u53ef\u4ee5\u8fdb\u5165\u9879\u76ee\u6587\u4ef6\u5939\u540e\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u68c0\u67e5\u5e76\u4e0b\u8f7d\u5b50\u6a21\u5757\uff1a git submodule update --init --recursive --progress","title":"git"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-git/#-git","text":"","title":"\u5b50\u5f39\u7b14\u8bb0-Git"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-git/#git-clone-recursive","text":"\u5f53 git clone --recursive \u90e8\u5206\u5931\u8d25\u540e\u8be5\u600e\u4e48\u529e\u5462\uff1f \u53ef\u4ee5\u8fdb\u5165\u9879\u76ee\u6587\u4ef6\u5939\u540e\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u68c0\u67e5\u5e76\u4e0b\u8f7d\u5b50\u6a21\u5757\uff1a git submodule update --init --recursive --progress","title":"git clone --recursive\u90e8\u5206\u5931\u8d25"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-makefile/","text":"\u5b50\u5f39\u7b14\u8bb0-Makefile \u00b6 \u83b7\u53d6Makefile\u6240\u5728\u6587\u4ef6\u5939 \u00b6 $( shell pwd )","title":"makefile"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-makefile/#-makefile","text":"","title":"\u5b50\u5f39\u7b14\u8bb0-Makefile"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-makefile/#makefile","text":"$( shell pwd )","title":"\u83b7\u53d6Makefile\u6240\u5728\u6587\u4ef6\u5939"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-shell/","text":"\u5b50\u5f39\u7b14\u8bb0-Shell \u00b6 \u547d\u4ee4\u524d\u4fee\u9970\u7b26 \u00b6 @ : \u4f7f\u547d\u4ee4\u5728\u88ab\u6267\u884c\u524d\u4e0d\u88ab\u56de\u663e\uff1b - : \u4f7f\u4efb\u4f55\u547d\u4ee4\u884c\u7684\u4efb\u4f55\u975e\u96f6\u9000\u51fa\u72b6\u6001\u90fd\u88ab\u5ffd\u7565\uff1b + : \u4f7f\u547d\u4ee4\u884c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a -n\u3001-q \u6216 -t \u9009\u9879\u6765\u6267\u884c\u3002 \u4e0e makefile \u7684\u8054\u52a8\uff1a makefile \u4e2d\u547d\u4ee4\u884c\u524d\u9762\u52a0\u4e0a\u51cf\u53f7: \u5ffd\u7565\u5f53\u524d\u6b64\u884c\u547d\u4ee4\u6267\u884c\u65f6\u5019\u6240\u9047\u5230\u7684\u9519\u8bef\uff1b makefile \u4e2d\u547d\u4ee4\u884c\u524d\u9762\u52a0\u4e0a @ : \u5728make\u6267\u884c\u65f6\u5019\uff0c\u8f93\u51fa\u7684\u4fe1\u606f\u4e2d\uff0c\u4e0d\u8981\u663e\u793a\u6b64\u884c\u547d\u4ee4\uff1b makefile \u4e2d\u547d\u4ee4\u884c\u524d\u9762\u52a0\u4e0a + : \u8fd8\u4e0d\u662f\u5f88\u4e86\u89e3\u3002","title":"shell"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-shell/#-shell","text":"","title":"\u5b50\u5f39\u7b14\u8bb0-Shell"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-shell/#_1","text":"@ : \u4f7f\u547d\u4ee4\u5728\u88ab\u6267\u884c\u524d\u4e0d\u88ab\u56de\u663e\uff1b - : \u4f7f\u4efb\u4f55\u547d\u4ee4\u884c\u7684\u4efb\u4f55\u975e\u96f6\u9000\u51fa\u72b6\u6001\u90fd\u88ab\u5ffd\u7565\uff1b + : \u4f7f\u547d\u4ee4\u884c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a -n\u3001-q \u6216 -t \u9009\u9879\u6765\u6267\u884c\u3002 \u4e0e makefile \u7684\u8054\u52a8\uff1a makefile \u4e2d\u547d\u4ee4\u884c\u524d\u9762\u52a0\u4e0a\u51cf\u53f7: \u5ffd\u7565\u5f53\u524d\u6b64\u884c\u547d\u4ee4\u6267\u884c\u65f6\u5019\u6240\u9047\u5230\u7684\u9519\u8bef\uff1b makefile \u4e2d\u547d\u4ee4\u884c\u524d\u9762\u52a0\u4e0a @ : \u5728make\u6267\u884c\u65f6\u5019\uff0c\u8f93\u51fa\u7684\u4fe1\u606f\u4e2d\uff0c\u4e0d\u8981\u663e\u793a\u6b64\u884c\u547d\u4ee4\uff1b makefile \u4e2d\u547d\u4ee4\u884c\u524d\u9762\u52a0\u4e0a + : \u8fd8\u4e0d\u662f\u5f88\u4e86\u89e3\u3002","title":"\u547d\u4ee4\u524d\u4fee\u9970\u7b26"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/","text":"\u5b50\u5f39\u7b14\u8bb0-Ubuntu \u00b6 \u4f7f\u7528\u5b98\u65b9\u7f51\u7ad9\u7684\u811a\u672c\u6765\u5b89\u88c5Nvidia\u3001Cuda\u548cCudnn\uff08\u9488\u5bf9Ubuntu 18.04\u5b89\u88c5CUDA11.2\uff09 \u00b6 \u7981\u7528 nouveau \u9a71\u52a8\uff1a\u5728\u6587\u4ef6 /etc/modprobe.d/blacklist.conf \u4e2d\u6dfb\u52a0 blacklist nouveau options nouveau modeset=0 \u7136\u540e\u6267\u884c\u547d\u4ee4 sudo update-initramfs -u \u91cd\u542f\u540e\u6267\u884c\u5982\u4e0b\u64cd\u4f5c\uff0c\u5982\u679c\u6ca1\u6709\u8f93\u51fa\uff0c\u5219\u8bf4\u660e\u6210\u529f\u3002 lsmod | grep nouveau \u5378\u8f7d\u65e7\u7684\u9a71\u52a8\u548c CUDA \uff0c\u5177\u4f53\u8def\u5f84\u5404\u4e2a\u673a\u5668\u4e0d\u540c\u3002 sudo apt-get remove --purge nvidia* sudo /usr/local/cuda-10.0/bin/uninstall_cuda_10.0.pl sudo rm -rf /usr/local/cuda-10.0/ sudo apt-get autoremove \u5b89\u88c5\u9a71\u52a8\u548cCUDA\u3002 \u5b98\u7f51 \u4e0b\u8f7d cuda \u672c\u5730\u5b89\u88c5\u5305\u3002\uff08\u7f51\u7edc\u8981\u597d\uff0c\u7535\u8111\u5185\u5b58\u8981\u8db3\u591f\u5927\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u63d0\u524d\u5b89\u88c5\u9a71\u52a8\u3002\uff09 wget https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.27.04_linux.run sudo sh cuda_11.2.0_460.27.04_linux.run \u5b89\u88c5\u7684\u65f6\u5019\uff0c\u5185\u5bb9\u5168\u9009\u3002\u5b89\u88c5\u5b8c\u6210\u540e\u9700\u8981\u6dfb\u52a0CUDA\u5730\u5740\u5230\u8def\u5f84\u4e2d\uff0c\u5177\u4f53\u4fee\u6539 .bashrc \u6587\u4ef6\uff1a \u53e6\u5916\uff0c\u5728VSCODE\u4e2d\u7684Terminal\u4e2d\u5b89\u88c5\u4f1a\u56e0\u4e3aBUG\u800c\u65e0\u6cd5\u5b89\u88c5\uff0c\u4e0d\u8981\u5728VSCODE\u4e2d\u5b89\u88c5\u3002 export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.2/lib64 export PATH=$PATH:/usr/local/cuda-11.2/bin \u6d4b\u8bd5 CUDA \u662f\u5426\u5b89\u88c5\u6210\u529f\u3002\u6b63\u5e38\u60c5\u51b5\u4e0b\u8f93\u51fa Result = PASS \u3002 cd /usr/local/cuda-11.2/samples/1_Utilities/deviceQuery sudo make ./deviceQuery \u5b89\u88c5 CUDNN \u3002 \u5b98\u7f51 \u4e0b\u8f7d\u4e09\u4e2a deb \u5305\u3002(\u9700\u8981\u767b\u9646) cuDNN Runtime Library for Ubuntu20.04 x86_64 ( Deb ) cuDNN Developer Library for Ubuntu20.04 x86_64 ( Deb ) cuDNN Code Samples and User Guide for Ubuntu20.04 x86_64 ( Deb ) \u4f7f\u7528 sudo dpkg -i libcudnn8-** \u6765\u5b89\u88c5\u8fd9\u4e09\u4e2a\u5305\u3002 \u6d4b\u8bd5 CUDNN \u3002\u7ed3\u679c\u5e94\u8be5\u8f93\u51fa Test passed! \u3002 cd /usr/src/cudnn_samples_v8/mnistCUDNN sudo make clean && sudo make ./mnistCUDNN \u7f16\u8bd1\u6709\u53ef\u80fd\u62a5\u9519\uff0c\u7f3a\u5c11\u67d0\u4e9b\u6587\u4ef6\uff0c\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u5b89\u88c5 sudo apt-get install libfreeimage3 libfreeimage-dev \u4f7f\u7528Ubuntu\u7684\u8f6f\u4ef6\u6e90\u6765\u5b89\u88c5Nvidia\u9a71\u52a8 \u00b6 \u8fd9\u79cd\u65b9\u6cd5\u5b89\u88c5\u7684\u9a71\u52a8\u81ea\u5e26 CUDA \u548c CUDNN \uff0c\u4f7f\u7528 Pytorch \u81ea\u5e26\u7684\u5b89\u88c5\u6559\u7a0b\u76f4\u63a5\u652f\u6301\u4e86 CUDA \u548c CUDNN \u3002\u6211\u4e0d\u6e05\u695a\u5177\u4f53\u7684\u5dee\u522b\u3002 \u6dfb\u52a0\u6e90 sudo add-apt-repository ppa:graphics-drivers/ppa ; \u66f4\u65b0\u8f6f\u4ef6\u5e93 sudo apt update \uff1b \u67e5\u627e\u53ef\u9009\u7684\u9a71\u52a8 sudo ubuntu-drivers devices ; \u5b89\u88c5\u9a71\u52a8 sudo apt install nvidia-xxx \u3002 \u5b89\u88c5\u5e76\u5f00\u542fSSH \u00b6 \u5b89\u88c5 sudo apt-get install openssh-server \uff1b \u5f00\u542f\u81ea\u52a8\u542f\u52a8 sudo systemctl enable ssh \uff1b \u542f\u52a8 sudo systemctl start ssh \u3002 youtube-dl \u00b6 \u5b89\u88c5\uff1a pip install youtube-dl \u3002 \u4f7f\u7528\u8303\u4f8b\uff1a youtube-dl -R \"infinite\" --write-auto-sub --sub-lang en --embed-subs -o <FILENAME> -f bestvideo+bestaudio --merge-output-format mp4 <URL> \u5176\u4e2d -R \u8868\u793a\u7f51\u7edc\u5c1d\u8bd5\u6b21\u6570\uff1b -*sub* \u8868\u793a\u5b57\u5e55\u76f8\u5173\u8bbe\u5b9a\uff1b -o \u8868\u793a\u8f93\u51fa\u6587\u4ef6\u540d\u5b57\uff1b -f \u4e0b\u8f7d\u7684\u6587\u4ef6\u97f3\u89c6\u9891\u5206\u8fa8\u7387\u3002 \u4ee5YouTube\u4e3a\u4f8b\uff0c\u4e0d\u662f\u6240\u6709\u7684\u89c6\u9891\u6d41\u90fd\u6709\u97f3\u9891\uff0c\u4f8b\u59821080p\u4ee5\u4e0a\u7684\u89c6\u9891\u5c31\u6ca1\u6709\u97f3\u9891\uff0c\u6240\u4ee5 bestvideo+bestaudio \u662f\u6700\u65b9\u4fbf\u7684\u9009\u62e9\u3002\u97f3\u89c6\u9891\u6587\u4ef6\u683c\u5f0f\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u4f7f\u7528 --merge-output \u6765\u5408\u5e76\u4e24\u4e2a\u6587\u4ef6\u3002 ffmpeg \u00b6 \u6211\u6700\u8fd1\u4e0b\u8f7d\u4e86\u51b0\u8840\u66b4\u7684\u7b2c\u56db\u5b63\uff0c\u53d1\u73b0\u53ea\u6709\u82f1\u6587\u5b57\u5e55\u3002\u6240\u4ee5\u6211\u53c8\u5728\u4eba\u4eba\u89c6\u9891\u4e0a\u4e0b\u8f7d\u4e86\u4e00\u4efd\u5bf9\u5e94\u7684\u5b57\u5e55\u3002 \u540e\u6765\u6211\u5e0c\u671b\u5c06\u5b57\u5e55\u6587\u4ef6\u6dfb\u52a0\u5230\u89c6\u9891\u6587\u4ef6\u7684\u4e2d\u3002\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a\u6279\u91cf\u6dfb\u52a0\u7684\u547d\u4ee4\uff0c\u5b66\u5230\u4e86\u4e0d\u5c11\u4e1c\u897f\uff0c\u6240\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u3002 ls | grep mkv | sed \"s/.mkv//g\" \\ | xargs -i ffmpeg -i {} .mkv -i {} .ChsEngA.ass \\ -map 0 :0 -map 0 :1 -map 0 :s -map 1 \\ -c:a copy -c:v copy -c:s:0 copy -c:s:1 copy \\ -metadata:s:s:1 title = \"\u7b80\u4f53\u4e2d\u6587\" \\ ./output/ {} .mkv \u524d\u9762\u4e09\u4e2a\u547d\u4ee4 ls \u3001 grep \u548c sed \u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u540d\u5b57\uff0c\u7136\u540e\u4f20\u7ed9\u547d\u4ee4 ffmpeg \u3002 ffmpeg \u547d\u4ee4\u63a5\u53d7\u4e24\u4e2a\u6587\u4ef6\uff08 -i \uff09\uff0c\u7136\u540e\u786e\u5b9a\u56db\u4e2a\u6d41\uff08 -map \uff09\uff0c\u63a5\u7740\u56db\u4e2a\u6d41\u90fd\u4f7f\u7528\u590d\u5236\u7684\u64cd\u4f5c\uff08 -c \uff09\uff0c\u7136\u540e\u7ed9\u65b0\u6dfb\u52a0\u7684\u5b57\u5e55\u6d41\u6dfb\u52a0\u62ac\u5934\u540d\u5b57\uff08 -metadata \uff09\uff0c\u6700\u540e\u6307\u5b9a\u8f93\u51fa\u4f4d\u7f6e\u3002 \u5b57\u5e55\u8f6c\u7801 \u00b6 \u4e0b\u8f7d\u4e0b\u6765\u7684\u5b57\u5e55\u7f16\u7801\u4e3a ANSI \uff0c\u5728Linux\u4e2d\u6253\u5f00\u4e71\u7801\uff0c\u9700\u8981\u8f6c\u6210 UTF-8 \u7684\u7f16\u7801\u3002\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u3002 iconv -f gbk -t utf8 <FILENAME> -o <OUTPUT-FILENAME> \u56e0\u4e3a ANSI \u6307\u7684\u662f\u548c\u7cfb\u7edf\u5b57\u4f53\u4fdd\u6301\u4e00\u81f4\u3002\u800c\u6211\u4e0b\u8f7d\u7684\u662f\u4e2d\u6587\u5b57\u5e55\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u7684\u7f16\u7801\u5e94\u8be5\u662f gbk \u3002 CMake\u7248\u672c\u592a\u4f4e \u00b6 \u5728\u7f16\u8bd1 Katago \u7684\u65f6\u5019\u9047\u5230\u4e86CMake\u7248\u672c\u592a\u4f4e\u5bfc\u81f4\u7f16\u8bd1\u4e0d\u6210\u529f\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u9644\u4e00\u4e2a\u5b89\u88c5\u7b26\u5408\u7248\u672c\u7684CMake\u7684\u6307\u4ee4\u3002 wget https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2-Linux-x86_64.tar.gz tar zxvf cmake-3.16.2-Linux-x86_64.tar.gz sudo mv cmake-3.16.2-Linux-x86_64 /opt/cmake-3.16.2 sudo ln -sf /opt/cmake-3.16.2/bin/* /usr/bin/ sudo reboot cmake --version \u521b\u5efa\u7528\u6237\u5e76\u52a0\u5165sudo\u7ec4 \u00b6 adduser <USERNAME> adduser <USERNAME> <GROUPNAME,such as: sudo> \u6279\u91cf\u7ed3\u675f\u8fdb\u7a0b \u00b6 ps -aux | grep python | grep -v grep | cut -c 9 -15 | xargs kill -15 pip\u6362\u6d59\u5927\u6e90 \u00b6 pip install -i https://mirrors.zju.edu.cn/pypi/web/simple pip -U pip config set global.index-url https://mirrors.zju.edu.cn/pypi/web/simple mujoco-py \u9700\u8981\u9884\u5148\u5b89\u88c5\u7684\u5305 \u00b6 sudo apt install libosmesa6-dev libgl1-mesa-glx libglfw3 libglew-dev patchelf sudo ln -s /usr/lib/x86_64-linux-gnu/libGL.so.1 /usr/lib/x86_64-linux-gnu/libGL.so \u4fee\u6539bashrc\u6587\u4ef6 export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/lab304/.mujoco/mjpro150/bin export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/lab304/.mujoco/mujoco200/bin # GLEW initialization error: Missing GL version # If you can't find libGLEW.so and libGL.so, you should install libglew-dev. export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libGLEW.so:/usr/lib/x86_64-linux-gnu/libGL.so spinningup \u9700\u8981\u9884\u5148\u5b89\u88c5\u7684\u5305 \u00b6 sudo apt-get update && sudo apt-get install libopenmpi-dev","title":"ubuntu"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#-ubuntu","text":"","title":"\u5b50\u5f39\u7b14\u8bb0-Ubuntu"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#nvidiacudacudnnubuntu-1804cuda112","text":"\u7981\u7528 nouveau \u9a71\u52a8\uff1a\u5728\u6587\u4ef6 /etc/modprobe.d/blacklist.conf \u4e2d\u6dfb\u52a0 blacklist nouveau options nouveau modeset=0 \u7136\u540e\u6267\u884c\u547d\u4ee4 sudo update-initramfs -u \u91cd\u542f\u540e\u6267\u884c\u5982\u4e0b\u64cd\u4f5c\uff0c\u5982\u679c\u6ca1\u6709\u8f93\u51fa\uff0c\u5219\u8bf4\u660e\u6210\u529f\u3002 lsmod | grep nouveau \u5378\u8f7d\u65e7\u7684\u9a71\u52a8\u548c CUDA \uff0c\u5177\u4f53\u8def\u5f84\u5404\u4e2a\u673a\u5668\u4e0d\u540c\u3002 sudo apt-get remove --purge nvidia* sudo /usr/local/cuda-10.0/bin/uninstall_cuda_10.0.pl sudo rm -rf /usr/local/cuda-10.0/ sudo apt-get autoremove \u5b89\u88c5\u9a71\u52a8\u548cCUDA\u3002 \u5b98\u7f51 \u4e0b\u8f7d cuda \u672c\u5730\u5b89\u88c5\u5305\u3002\uff08\u7f51\u7edc\u8981\u597d\uff0c\u7535\u8111\u5185\u5b58\u8981\u8db3\u591f\u5927\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u63d0\u524d\u5b89\u88c5\u9a71\u52a8\u3002\uff09 wget https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.27.04_linux.run sudo sh cuda_11.2.0_460.27.04_linux.run \u5b89\u88c5\u7684\u65f6\u5019\uff0c\u5185\u5bb9\u5168\u9009\u3002\u5b89\u88c5\u5b8c\u6210\u540e\u9700\u8981\u6dfb\u52a0CUDA\u5730\u5740\u5230\u8def\u5f84\u4e2d\uff0c\u5177\u4f53\u4fee\u6539 .bashrc \u6587\u4ef6\uff1a \u53e6\u5916\uff0c\u5728VSCODE\u4e2d\u7684Terminal\u4e2d\u5b89\u88c5\u4f1a\u56e0\u4e3aBUG\u800c\u65e0\u6cd5\u5b89\u88c5\uff0c\u4e0d\u8981\u5728VSCODE\u4e2d\u5b89\u88c5\u3002 export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.2/lib64 export PATH=$PATH:/usr/local/cuda-11.2/bin \u6d4b\u8bd5 CUDA \u662f\u5426\u5b89\u88c5\u6210\u529f\u3002\u6b63\u5e38\u60c5\u51b5\u4e0b\u8f93\u51fa Result = PASS \u3002 cd /usr/local/cuda-11.2/samples/1_Utilities/deviceQuery sudo make ./deviceQuery \u5b89\u88c5 CUDNN \u3002 \u5b98\u7f51 \u4e0b\u8f7d\u4e09\u4e2a deb \u5305\u3002(\u9700\u8981\u767b\u9646) cuDNN Runtime Library for Ubuntu20.04 x86_64 ( Deb ) cuDNN Developer Library for Ubuntu20.04 x86_64 ( Deb ) cuDNN Code Samples and User Guide for Ubuntu20.04 x86_64 ( Deb ) \u4f7f\u7528 sudo dpkg -i libcudnn8-** \u6765\u5b89\u88c5\u8fd9\u4e09\u4e2a\u5305\u3002 \u6d4b\u8bd5 CUDNN \u3002\u7ed3\u679c\u5e94\u8be5\u8f93\u51fa Test passed! \u3002 cd /usr/src/cudnn_samples_v8/mnistCUDNN sudo make clean && sudo make ./mnistCUDNN \u7f16\u8bd1\u6709\u53ef\u80fd\u62a5\u9519\uff0c\u7f3a\u5c11\u67d0\u4e9b\u6587\u4ef6\uff0c\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u5b89\u88c5 sudo apt-get install libfreeimage3 libfreeimage-dev","title":"\u4f7f\u7528\u5b98\u65b9\u7f51\u7ad9\u7684\u811a\u672c\u6765\u5b89\u88c5Nvidia\u3001Cuda\u548cCudnn\uff08\u9488\u5bf9Ubuntu 18.04\u5b89\u88c5CUDA11.2\uff09"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#ubuntunvidia","text":"\u8fd9\u79cd\u65b9\u6cd5\u5b89\u88c5\u7684\u9a71\u52a8\u81ea\u5e26 CUDA \u548c CUDNN \uff0c\u4f7f\u7528 Pytorch \u81ea\u5e26\u7684\u5b89\u88c5\u6559\u7a0b\u76f4\u63a5\u652f\u6301\u4e86 CUDA \u548c CUDNN \u3002\u6211\u4e0d\u6e05\u695a\u5177\u4f53\u7684\u5dee\u522b\u3002 \u6dfb\u52a0\u6e90 sudo add-apt-repository ppa:graphics-drivers/ppa ; \u66f4\u65b0\u8f6f\u4ef6\u5e93 sudo apt update \uff1b \u67e5\u627e\u53ef\u9009\u7684\u9a71\u52a8 sudo ubuntu-drivers devices ; \u5b89\u88c5\u9a71\u52a8 sudo apt install nvidia-xxx \u3002","title":"\u4f7f\u7528Ubuntu\u7684\u8f6f\u4ef6\u6e90\u6765\u5b89\u88c5Nvidia\u9a71\u52a8"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#ssh","text":"\u5b89\u88c5 sudo apt-get install openssh-server \uff1b \u5f00\u542f\u81ea\u52a8\u542f\u52a8 sudo systemctl enable ssh \uff1b \u542f\u52a8 sudo systemctl start ssh \u3002","title":"\u5b89\u88c5\u5e76\u5f00\u542fSSH"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#youtube-dl","text":"\u5b89\u88c5\uff1a pip install youtube-dl \u3002 \u4f7f\u7528\u8303\u4f8b\uff1a youtube-dl -R \"infinite\" --write-auto-sub --sub-lang en --embed-subs -o <FILENAME> -f bestvideo+bestaudio --merge-output-format mp4 <URL> \u5176\u4e2d -R \u8868\u793a\u7f51\u7edc\u5c1d\u8bd5\u6b21\u6570\uff1b -*sub* \u8868\u793a\u5b57\u5e55\u76f8\u5173\u8bbe\u5b9a\uff1b -o \u8868\u793a\u8f93\u51fa\u6587\u4ef6\u540d\u5b57\uff1b -f \u4e0b\u8f7d\u7684\u6587\u4ef6\u97f3\u89c6\u9891\u5206\u8fa8\u7387\u3002 \u4ee5YouTube\u4e3a\u4f8b\uff0c\u4e0d\u662f\u6240\u6709\u7684\u89c6\u9891\u6d41\u90fd\u6709\u97f3\u9891\uff0c\u4f8b\u59821080p\u4ee5\u4e0a\u7684\u89c6\u9891\u5c31\u6ca1\u6709\u97f3\u9891\uff0c\u6240\u4ee5 bestvideo+bestaudio \u662f\u6700\u65b9\u4fbf\u7684\u9009\u62e9\u3002\u97f3\u89c6\u9891\u6587\u4ef6\u683c\u5f0f\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u4f7f\u7528 --merge-output \u6765\u5408\u5e76\u4e24\u4e2a\u6587\u4ef6\u3002","title":"youtube-dl"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#ffmpeg","text":"\u6211\u6700\u8fd1\u4e0b\u8f7d\u4e86\u51b0\u8840\u66b4\u7684\u7b2c\u56db\u5b63\uff0c\u53d1\u73b0\u53ea\u6709\u82f1\u6587\u5b57\u5e55\u3002\u6240\u4ee5\u6211\u53c8\u5728\u4eba\u4eba\u89c6\u9891\u4e0a\u4e0b\u8f7d\u4e86\u4e00\u4efd\u5bf9\u5e94\u7684\u5b57\u5e55\u3002 \u540e\u6765\u6211\u5e0c\u671b\u5c06\u5b57\u5e55\u6587\u4ef6\u6dfb\u52a0\u5230\u89c6\u9891\u6587\u4ef6\u7684\u4e2d\u3002\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a\u6279\u91cf\u6dfb\u52a0\u7684\u547d\u4ee4\uff0c\u5b66\u5230\u4e86\u4e0d\u5c11\u4e1c\u897f\uff0c\u6240\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u3002 ls | grep mkv | sed \"s/.mkv//g\" \\ | xargs -i ffmpeg -i {} .mkv -i {} .ChsEngA.ass \\ -map 0 :0 -map 0 :1 -map 0 :s -map 1 \\ -c:a copy -c:v copy -c:s:0 copy -c:s:1 copy \\ -metadata:s:s:1 title = \"\u7b80\u4f53\u4e2d\u6587\" \\ ./output/ {} .mkv \u524d\u9762\u4e09\u4e2a\u547d\u4ee4 ls \u3001 grep \u548c sed \u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u540d\u5b57\uff0c\u7136\u540e\u4f20\u7ed9\u547d\u4ee4 ffmpeg \u3002 ffmpeg \u547d\u4ee4\u63a5\u53d7\u4e24\u4e2a\u6587\u4ef6\uff08 -i \uff09\uff0c\u7136\u540e\u786e\u5b9a\u56db\u4e2a\u6d41\uff08 -map \uff09\uff0c\u63a5\u7740\u56db\u4e2a\u6d41\u90fd\u4f7f\u7528\u590d\u5236\u7684\u64cd\u4f5c\uff08 -c \uff09\uff0c\u7136\u540e\u7ed9\u65b0\u6dfb\u52a0\u7684\u5b57\u5e55\u6d41\u6dfb\u52a0\u62ac\u5934\u540d\u5b57\uff08 -metadata \uff09\uff0c\u6700\u540e\u6307\u5b9a\u8f93\u51fa\u4f4d\u7f6e\u3002","title":"ffmpeg"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#_1","text":"\u4e0b\u8f7d\u4e0b\u6765\u7684\u5b57\u5e55\u7f16\u7801\u4e3a ANSI \uff0c\u5728Linux\u4e2d\u6253\u5f00\u4e71\u7801\uff0c\u9700\u8981\u8f6c\u6210 UTF-8 \u7684\u7f16\u7801\u3002\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u3002 iconv -f gbk -t utf8 <FILENAME> -o <OUTPUT-FILENAME> \u56e0\u4e3a ANSI \u6307\u7684\u662f\u548c\u7cfb\u7edf\u5b57\u4f53\u4fdd\u6301\u4e00\u81f4\u3002\u800c\u6211\u4e0b\u8f7d\u7684\u662f\u4e2d\u6587\u5b57\u5e55\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u7684\u7f16\u7801\u5e94\u8be5\u662f gbk \u3002","title":"\u5b57\u5e55\u8f6c\u7801"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#cmake","text":"\u5728\u7f16\u8bd1 Katago \u7684\u65f6\u5019\u9047\u5230\u4e86CMake\u7248\u672c\u592a\u4f4e\u5bfc\u81f4\u7f16\u8bd1\u4e0d\u6210\u529f\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u9644\u4e00\u4e2a\u5b89\u88c5\u7b26\u5408\u7248\u672c\u7684CMake\u7684\u6307\u4ee4\u3002 wget https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2-Linux-x86_64.tar.gz tar zxvf cmake-3.16.2-Linux-x86_64.tar.gz sudo mv cmake-3.16.2-Linux-x86_64 /opt/cmake-3.16.2 sudo ln -sf /opt/cmake-3.16.2/bin/* /usr/bin/ sudo reboot cmake --version","title":"CMake\u7248\u672c\u592a\u4f4e"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#sudo","text":"adduser <USERNAME> adduser <USERNAME> <GROUPNAME,such as: sudo>","title":"\u521b\u5efa\u7528\u6237\u5e76\u52a0\u5165sudo\u7ec4"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#_2","text":"ps -aux | grep python | grep -v grep | cut -c 9 -15 | xargs kill -15","title":"\u6279\u91cf\u7ed3\u675f\u8fdb\u7a0b"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#pip","text":"pip install -i https://mirrors.zju.edu.cn/pypi/web/simple pip -U pip config set global.index-url https://mirrors.zju.edu.cn/pypi/web/simple","title":"pip\u6362\u6d59\u5927\u6e90"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#mujoco-py","text":"sudo apt install libosmesa6-dev libgl1-mesa-glx libglfw3 libglew-dev patchelf sudo ln -s /usr/lib/x86_64-linux-gnu/libGL.so.1 /usr/lib/x86_64-linux-gnu/libGL.so \u4fee\u6539bashrc\u6587\u4ef6 export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/lab304/.mujoco/mjpro150/bin export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/lab304/.mujoco/mujoco200/bin # GLEW initialization error: Missing GL version # If you can't find libGLEW.so and libGL.so, you should install libglew-dev. export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libGLEW.so:/usr/lib/x86_64-linux-gnu/libGL.so","title":"mujoco-py \u9700\u8981\u9884\u5148\u5b89\u88c5\u7684\u5305"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-ubuntu/#spinningup","text":"sudo apt-get update && sudo apt-get install libopenmpi-dev","title":"spinningup \u9700\u8981\u9884\u5148\u5b89\u88c5\u7684\u5305"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-vscode/","text":"\u5b50\u5f39\u7b14\u8bb0-Vscode \u00b6 vscode\u5bf9markdown\u6587\u4ef6\u8fdb\u884c\u81ea\u52a8\u6362\u884c \u00b6 vscode\u8bbe\u7f6e\u5b8c\u81ea\u52a8\u6362\u884c\u540e\uff0cmarkdown\u6587\u4ef6\u6ca1\u529e\u6cd5\u81ea\u52a8\u6362\u884c\u3002\u8fd9\u4e2a\u95ee\u9898\u641e\u4e86\u6211\u5f88\u4e45\uff0c\u4e2d\u6587\u641c\u7d22\u4e0d\u51fa\u7ed3\u679c\uff0c\u6700\u540e\u8fd8\u662f\u4ecegoogle\u641c\u7d22\u51fa\u6765\u89e3\u51b3\u529e\u6cd5\u3002 \u5bf9markdown\u6587\u4ef6\u9700\u8981\u4e13\u95e8\u7684\u914d\u7f6e\uff1a { // ... \"[markdown]\" : { \"editor.wordWrap\" : \"wordWrapColumn\" , \"editor.wordWrapColumn\" : 80 , } // ... } C++\u5934\u6587\u4ef6 \u00b6 \u4f7f\u7528 g++ \u67e5\u770b\u76f8\u5173\u5934\u6587\u4ef6\u7684\u4f4d\u7f6e\uff1a g++ -v -E -x c++ - \u4e00\u822c\u4f1a\u6709\u8fd9\u4e9b\u5934\u6587\u4ef6 /usr/include/c++/9 /usr/include/x86_64-linux-gnu/c++/9 /usr/include/c++/9/backward /usr/lib/gcc/x86_64-linux-gnu/9/include /usr/local/include /usr/include/x86_64-linux-gnu /usr/include \u7528 vscode \u6253\u5f00\u9879\u76ee\u6587\u4ef6\u5939\uff0c\u5feb\u6377\u952e ctrl+shift+p \u641c\u7d22 C/C++ \u76f8\u5173\u7684 JSON \u5c5e\u6027\u6587\u4ef6\uff0c\u628a\u4e0a\u9762\u627e\u5230\u7684\u5934\u6587\u4ef6\u8def\u5f84\u6dfb\u52a0\u5230\u5c5e\u6027\u6587\u4ef6\u4e2d\u3002 { \"configurations\" : [ { \"name\" : \"Linux\" , \"includePath\" : [ \"${workspaceFolder}/**\" , \"/usr/include/c++/9\" , \"/usr/include/x86_64-linux-gnu/c++/9\" , \"/usr/include/c++/9/backward\" , \"/usr/lib/gcc/x86_64-linux-gnu/9/include\" , \"/usr/local/include\" , \"/usr/include/x86_64-linux-gnu\" , \"/usr/include\" ], \"defines\" : [], \"cStandard\" : \"gnu11\" , \"cppStandard\" : \"c++17\" , \"intelliSenseMode\" : \"linux-gcc-x64\" } ], \"version\" : 4 }","title":"vscode"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-vscode/#-vscode","text":"","title":"\u5b50\u5f39\u7b14\u8bb0-Vscode"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-vscode/#vscodemarkdown","text":"vscode\u8bbe\u7f6e\u5b8c\u81ea\u52a8\u6362\u884c\u540e\uff0cmarkdown\u6587\u4ef6\u6ca1\u529e\u6cd5\u81ea\u52a8\u6362\u884c\u3002\u8fd9\u4e2a\u95ee\u9898\u641e\u4e86\u6211\u5f88\u4e45\uff0c\u4e2d\u6587\u641c\u7d22\u4e0d\u51fa\u7ed3\u679c\uff0c\u6700\u540e\u8fd8\u662f\u4ecegoogle\u641c\u7d22\u51fa\u6765\u89e3\u51b3\u529e\u6cd5\u3002 \u5bf9markdown\u6587\u4ef6\u9700\u8981\u4e13\u95e8\u7684\u914d\u7f6e\uff1a { // ... \"[markdown]\" : { \"editor.wordWrap\" : \"wordWrapColumn\" , \"editor.wordWrapColumn\" : 80 , } // ... }","title":"vscode\u5bf9markdown\u6587\u4ef6\u8fdb\u884c\u81ea\u52a8\u6362\u884c"},{"location":"%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0-vscode/#c","text":"\u4f7f\u7528 g++ \u67e5\u770b\u76f8\u5173\u5934\u6587\u4ef6\u7684\u4f4d\u7f6e\uff1a g++ -v -E -x c++ - \u4e00\u822c\u4f1a\u6709\u8fd9\u4e9b\u5934\u6587\u4ef6 /usr/include/c++/9 /usr/include/x86_64-linux-gnu/c++/9 /usr/include/c++/9/backward /usr/lib/gcc/x86_64-linux-gnu/9/include /usr/local/include /usr/include/x86_64-linux-gnu /usr/include \u7528 vscode \u6253\u5f00\u9879\u76ee\u6587\u4ef6\u5939\uff0c\u5feb\u6377\u952e ctrl+shift+p \u641c\u7d22 C/C++ \u76f8\u5173\u7684 JSON \u5c5e\u6027\u6587\u4ef6\uff0c\u628a\u4e0a\u9762\u627e\u5230\u7684\u5934\u6587\u4ef6\u8def\u5f84\u6dfb\u52a0\u5230\u5c5e\u6027\u6587\u4ef6\u4e2d\u3002 { \"configurations\" : [ { \"name\" : \"Linux\" , \"includePath\" : [ \"${workspaceFolder}/**\" , \"/usr/include/c++/9\" , \"/usr/include/x86_64-linux-gnu/c++/9\" , \"/usr/include/c++/9/backward\" , \"/usr/lib/gcc/x86_64-linux-gnu/9/include\" , \"/usr/local/include\" , \"/usr/include/x86_64-linux-gnu\" , \"/usr/include\" ], \"defines\" : [], \"cStandard\" : \"gnu11\" , \"cppStandard\" : \"c++17\" , \"intelliSenseMode\" : \"linux-gcc-x64\" } ], \"version\" : 4 }","title":"C++\u5934\u6587\u4ef6"}]}